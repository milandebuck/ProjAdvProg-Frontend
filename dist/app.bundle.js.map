{"version":3,"sources":["webpack:///app.bundle.js","webpack:///./~/@angular/http/bundles/http.umd.js","webpack:///./~/@angular/router/bundles/router.umd.js","webpack:///./src/components/loading-indicator/loading-indicator.ts","webpack:///./src/services/cookie.service.ts","webpack:///./src/services/user.service.ts","webpack:///./src/services/extract.service.ts","webpack:///./src/components/styles/app.component.css","webpack:///./src/GlobalEventsManager.ts","webpack:///./src/components/class.component.ts","webpack:///./src/services/index.ts","webpack:///./~/@angular/forms/bundles/forms.umd.js","webpack:///./src/components/styles/login.component.css","webpack:///./src/components/dashboard.componet.ts","webpack:///./src/components/exercise.component.ts","webpack:///./src/components/livesearch/livesearch.component.ts","webpack:///./src/components/login.component.ts","webpack:///./src/components/register.componet.ts","webpack:///./src/services/class.service.ts","webpack:///./src/services/entry.service.ts","webpack:///./src/services/logged-in.guard.ts","webpack:///./src/services/score.service.ts","webpack:///./src/services/search.service.ts","webpack:///./~/@angular/compiler/bundles/compiler.umd.js","webpack:///./~/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js","webpack:///./~/ng2-charts/components/charts/charts.js","webpack:///./~/ng2-charts/ng2-charts.js","webpack:///./src/components/livesearch/css/livesearch.component.css","webpack:///./src/components/livesearch/html/livesearch.component.html","webpack:///./src/components/loading-indicator/css/loading-indicator.css","webpack:///./src/components/loading-indicator/html/loading-indicator.html","webpack:///./src/components/styles/class.component.css","webpack:///./src/components/styles/dashboard.component.css","webpack:///./src/components/styles/exercise.component.css","webpack:///./src/components/templates/app.component.html","webpack:///./src/components/templates/class.component.html","webpack:///./src/components/templates/dashboard.component.html","webpack:///./src/components/templates/exercise.component.html","webpack:///./src/components/templates/login.component.html","webpack:///./src/components/templates/nav.component.html","webpack:///./src/components/templates/register.component.html","webpack:///./src/app.module.ts","webpack:///./src/app.routes.ts","webpack:///./src/bootstrap.ts","webpack:///./src/components/app.component.ts","webpack:///./src/components/index.ts","webpack:///./src/components/loading-indicator/index.ts","webpack:///./src/components/nav.component.ts","webpack:///./src/components/rxjs-operators.ts"],"names":["webpackJsonp","0","module","exports","__webpack_require__","16","global","factory","this","_angular_core","rxjs_Observable","_angular_platformBrowser","normalizeMethodName","method","toUpperCase","RequestMethod","Get","Post","Put","Delete","Options","Head","Patch","Error","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","view","Uint16Array","length","i","strLen","charCodeAt","buffer","paramParser","rawParams","map","Map","params","split","forEach","param","eqIdx","indexOf","_a","slice","key","val","list","get","push","set","standardEncoding","v","encodeURIComponent","replace","_getJsonpConnections","w","window","_jsonpConnections","JSONP_HOME","httpRequest","backend","request","createConnection","response","mergeOptions","defaultOpts","providedOpts","url","newOptions","merge","RequestOptions","search","headers","body","withCredentials","responseType","_createDefaultCookieXSRFStrategy","CookieXSRFStrategy","httpFactory","xhrBackend","requestOptions","Http","jsonpFactory","jsonpBackend","Jsonp","BrowserXhr","prototype","build","XMLHttpRequest","decorators","type","Injectable","ctorParameters","ReadyState","ResponseType","ContentType","ResponseContentType","Headers","_this","_headers","_normalizedNames","values","name","value","append","Object","keys","Array","isArray","delete","fromResponseHeaderString","headersString","line","index","name_1","trim","getAll","lcName","toLowerCase","fn","has","from","join","mayBeSetNormalizedName","toJSON","serialized","apply","entries","__extends$1","__extends","d","b","__","constructor","p","hasOwnProperty","create","ResponseOptions","_b","status","statusText","options","BaseResponseOptions","_super","call","Default","ConnectionBackend","Connection","XSRFStrategy","isSuccess","QueryEncoder","encodeKey","k","encodeValue","URLSearchParams","queryEncoder","paramsMap","clone","appendAll","storedParam","setAll","searchParams","replaceAll","toString","paramsList","Body","json","_body","JSON","parse","ArrayBuffer","text","String","fromCharCode","stringify","arrayBuffer","blob","Blob","__extends$2","Response","responseOptions","ok","_nextRequestId","BrowserJsonp","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","connections","removeConnection","send","appendChild","cleanup","parentNode","removeChild","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","JSONPConnection_","req","_dom","baseResponseOptions","_finished","TypeError","Observable","responseObserver","readyState","Loading","_id","callback","lastIndexOf","substring","script","_script","onLoad","event","Cancelled","Done","responseOptions_1","error","_responseData","next","complete","onError","message","addEventListener","removeEventListener","finished","data","JSONPBackend","arguments","JSONPBackend_","_browserJSONP","_baseResponseOptions","XSSI_PREFIX","XHRConnection","browserXHR","_xhr","open","responseText","err","setDetectedContentType","setRequestHeader","Json","Text","getBody","abort","contentType","NONE","FORM","TEXT","BLOB","_cookieName","_headerName","configureRequest","xsrfToken","__platform_browser_private__","getDOM","getCookie","XHRBackend","_browserXHR","_xsrfStrategy","__extends$3","BaseRequestOptions","__extends$5","Request","prefix","detectContentType","FORM_DATA","detectContentTypeFromBody","FormData","Blob$1","ArrayBuffer$1","ARRAY_BUFFER","noop","__extends$4","_backend","_defaultOptions","responseObservable","post","put","patch","head","defaultOptions","HttpModule","NgModule","args","providers","provide","useFactory","deps","useClass","JsonpModule","17","_angular_common","rxjs_BehaviorSubject","rxjs_Subject","rxjs_observable_from","rxjs_observable_of","rxjs_operator_concatMap","rxjs_operator_every","rxjs_operator_first","rxjs_operator_map","rxjs_operator_mergeMap","rxjs_operator_reduce","rxjs_operator_catch","rxjs_operator_concatAll","rxjs_util_EmptyError","rxjs_observable_fromPromise","l","rxjs_operator_mergeAll","rxjs_operator_filter","defaultUrlMatcher","segments","segmentGroup","route","path","parts","posParams","consumed","currentIndex","current","isPosParam","startsWith","pathMatch","hasChildren","shallowEqualArrays","a","shallowEqual","k1","k2","flatten","target","j","last","m1","m2","m","attr","prop","waitForMap","obj","waitFor","res","PRIMARY_OUTLET","_","concatted$","concatAll","of","last$","andObservables","observables","merged$","mergeAll","every","result","wrapIntoObservable","Promise","fromPromise","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","c","children","containsSegmentGroupHelper","containeePaths","equalSegments","parameters","mapChildrenIntoArray","segment","child","childOutlet","concat","serializePaths","serializePath","serializeSegment","primary","children_1","encode","s","decode","decodeURIComponent","serializeParams","pairs","first","second","serializeQueryParams","strs","Pair","matchSegments","str","SEGMENT_RE","lastIndex","match","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","obs","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","redirectTo","canLoadFails","NavigationCancelingError","applyRedirects","injector","configLoader","urlSerializer","urlTree","config","ApplyRedirects","runGuards","canLoad","guard","matched","consumedSegments","lastChild","positionalParamSegments","matcher","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","_i","routes_1","r","emptyPathRedirect","getOutlet$1","primarySegmentGroup","routes_2","filter","undefined","outlet","validateConfig","validateNode","component","loadChildren","exp","findNode","expected","cc","findPath","collected","cloned","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","pathToRoot","pathFromRoot","inhertingStartingFrom","parent_1","routeConfig","reduce","curr","resolve","_resolvedData","setRouterStateSnapshot","state","_routerState","serializeNode","advanceActivatedRoute","_futureSnapshot","equalParamsAndUrlSegments","createRouterState","prevState","createNode","_root","equalRouteSnapshots","createOrReuseChildren","createActivatedRoute","_routeConfig","createUrlTree","commands","tree","normalizedCommands","normalizeCommands","validateCommands","navigateToRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","n","isAbsolute","isMatrixParams","outlets","command","segmentPath","oldSegmentGroup","newSegmentGroup","replaceSegment","oldSegment","newSegment","outletName","normalizedChange","NormalizedNavigationCommands","numberOfDoubleDots","_loop_1","r_1","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","parent","getPath","getOutlets","startIndex","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_1","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChldren","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","_loadedConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","routeWithSameOutletName","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","getOutlet$2","primarySegment","getData","getResolve","defaultErrorHandler","parentLoadedConfig","closestLoadedConfig","nodeChildrenAsMap","getOutlet","outletMap","_outlets","componentName","toBool","provideLocationStrategy","platformLocationStrategy","baseHref","useHash","HashLocationStrategy","PathLocationStrategy","provideForRootGuard","router","provideRoutes","ANALYZE_FOR_ENTRY_COMPONENTS","multi","useValue","ROUTES","setupRouter","ref","location","loader","compiler","opts","urlHandlingStrategy","Router","errorHandler","enableTracing","dom_1","events","subscribe","e","logGroup","log","logGroupEnd","rootRoute","routerState","initialRouterNavigation","preloader","bootstrappedComponentRef","components","resetRootComponentType","componentTypes","setUpPreloading","initialNavigation","setUpLocationChangeListener","provideRouterInitializer","ROUTER_INITIALIZER","ApplicationRef","RouterPreloader","ROUTER_CONFIGURATION","APP_BOOTSTRAP_LISTENER","useExisting","stack","OpaqueToken","LoadedRouterConfig","factoryResolver","injectorFactory","RouterConfigLoader","load","parentInjector","loadModuleFactory","componentFactoryResolver","offlineMode_1","Compiler","mergeMap","t","compileModuleAsync","DefaultUrlSerializer","serialize","defineProperty","enumerable","configurable","UrlSerializer","UrlParser","parseRootSegment","parseQueryParams","parseFragment","query","encodeURI","remaining","peekStartsWith","capture","parseChildren","parseSegments","parseParens","matrixParams","parseMatrixParams","parseQueryParam","decodeURI","parseParam","valueMatch","allowPrimary","substr","allowRedirects","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","_catch","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","EmptyError","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","rawSegmentGroup","consumedSegments_1","rawSlicedSegments_1","childConfig$","routerConfig","childInjector","childConfig","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","splice","Tree","firstChild","siblings","futureSnapshot","urlSegment","lastPathIndex","_resolve","processSegmentGroup","freeze","rootNode","routeState","inheriteParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","snapshot_1","rawSlicedSegments","RouterOutletMap","registerOutlet","removeOutlet","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","newUrlPart","wholeUrl","NavigationStart","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","navigations","routerEvents","Subject","navigationId","navigated","resetConfig","currentUrlTree","rawUrlTree","currentRouterState","processNavigations","navigateByUrl","replaceUrl","locationSubscription","Zone","wrap","change","setTimeout","scheduleNavigation","skipLocationChange","serializeUrl","ngOnDestroy","dispose","unsubscribe","relativeTo","preserveQueryParams","preserveFragment","q","f","extras","navigate","removeEmptyProps","parseUrl","isActive","concatMap","nav","executeScheduledNavigation","promise","catch","rawUrl","prevRawUrl","reject","rej","prevUrl","urlTransition","then","runNavigate","shouldPreventPushState","shouldReplaceUrl","precreatedState","go","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","navigationIsSuccessful","preactivationTraverse$","PreActivation","traverse","preactivationCheckGuards","checkGuards","shouldActivate","preactivationResolveData$","resolveData","routerState$","storedState","storedUrl","isCurrentPathEqualTo","replaceState","ActivateRoutes","activate","resetUrlToCurrentUrlTree","ee","CanActivate","CanDeactivate","future","checks","parentOutletMap","futureRoot","currRoot","traverseChildRoutes","checks$","runningChecks$","runCanActivateChild","runCanActivate","s2","runCanDeactivate","runResolve","futureNode","currNode","futurePath","prevChildren","traverseRoutes","deactiveRouteAndItsChildren","isActivated","canActivate","observable","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","canDeactivate","canDeactivate$","resolveNode","resolvedData","resolver","token","futureState","currState","deactivateChildRoutes","activateChildRoutes","deactivateRoutes","activateRoutes","placeComponentIntoOutlet","resolved","locationInjector","ComponentFactoryResolver","locationFactoryResolver","ReflectiveInjector","childOutletMap","deactivate","RouterLink","locationStrategy","onClick","Directive","selector","LocationStrategy","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","href","prepareExternalUrl","routerLinkOptions","HostBinding","RouterLinkActive","element","renderer","classes","routerLinkActiveOptions","update","hasActiveLink","ngAfterContentInit","links","linksWithHrefs","setElementClass","nativeElement","isLinkActive","link","some","exportAs","ElementRef","Renderer","ContentChildren","descendants","routerLinkActive","RouterOutlet","activateEvents","EventEmitter","deactivateEvents","instance","_activatedRoute","destroy","emit","activatedRoute","resolveComponentFactory","inj","fromResolvedProviders","createComponent","changeDetectorRef","detectChanges","ViewContainerRef","Attribute","Output","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","moduleLoader","preloadingStrategy","processRoutes","preloadConfig","loaded","NgModuleFactoryLoader","Injector","ROUTER_DIRECTIVES","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","Optional","SystemJsNgModuleLoader","RouterModule","forRoot","ngModule","SkipSelf","PlatformLocation","Inject","APP_BASE_HREF","forChild","declarations","__router_private__","19","__decorate","desc","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadata","core_1","LoadingIndicator","Component","template","style","LoadingPage","loading","standby","ready","20","CookieService","setCookie","Date","setTime","getTime","cookie","toUTCString","cname","ca","charAt","deleteCookie","21","http_1","cookie_service_1","UserService","http","cookieService","loggedIn","login","username","password","console","localStorage","setItem","register","confirmpass","logout","isLoggedIn","setLoggedIn","29","Observable_1","ExtractService","extractData","handleError","errMsg","throw","30","40","GlobalEventsManager","showNavBar","55","loading_indicator_1","services_1","ClassComponent","classService","getItem","teacher","ngOnInit","checkifTeacher","getClasses","viewDetails","getStudents","students","detail","getTests","tests","addStudent","student","contains","newstudents","addStudents","addGroup","createClass","styles","ClassService","56","__export","58","rxjs_operator_toPromise","isPresent","isBlank","looseIdentical","isNaN","isJsObject","o","isPrimitive","isEmptyInputValue","_convertToPromise","isPromise","toPromise","_executeValidators","control","validators","_executeAsyncValidators","_mergeErrors","arrayOfErrors","errors","StringMapWrapper","normalizeValidator","validator","validate","normalizeAsyncValidator","unimplemented","_buildValueString","_extractId","valueString","_buildValueString$1","_extractId$1","controlPath","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","writeValue","registerOnChange","newValue","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","registerOnTouched","markAsTouched","emitModelEvent","setDisabledState","registerOnDisabledChange","isDisabled","_rawValidators","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","setUpFormContainer","messageEnd","composeValidators","composeAsyncValidators","isPropertyUpdated","viewModel","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","DefaultValueAccessor","_find","delimiter","FormGroup","controls","FormArray","at","toObservable","coerceToValidator","coerceToAsyncValidator","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","AbstractControlDirective","valid","invalid","pending","pristine","dirty","touched","untouched","disabled","enabled","statusChanges","valueChanges","reset","hasError","errorCode","getError","ControlContainer","_c","equals","ListWrapper","removeAll","items","remove","el","flat","item","flatItem","__core_private__","NG_VALIDATORS","NG_ASYNC_VALIDATORS","required","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","nullValidator","regex","regexStr","RegExp","requiredPattern","actualValue","presentValidators","promises","all","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","forwardRef","CheckboxControlValueAccessor","_renderer","_elementRef","onChange","onTouched","setElementProperty","host","(change)","(blur)","DEFAULT_VALUE_ACCESSOR","normalizedValue","(input)","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","parseFloat","NgControl","_parent","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","add","accessor","select","_isSameGroup","fireUncheck","controlPair","_control","_registry","_injector","_checkName","_state","_fn","formControlName","_throwNameError","RANGE_VALUE_ACCESSOR","RangeValueAccessor","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_optionMap","_idCounter","_getOptionId","_getOptionValue","_registerOption","NgSelectOption","_element","_select","_setElementValue","Host","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","ids","opt","_setSelected","selected","selectedOptions","_value","NgSelectMultipleOption","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","AbstractControlStatus","cd","_cd","ngControlStatusHost","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","NgControlStatus","Self","NgControlStatusGroup","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","__extends$6","VALID","INVALID","PENDING","DISABLED","AbstractControl","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","disable","emitEvent","_updateValue","_updateAncestors","changeFn","enable","setParent","_setInitialStatus","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_cancelExistingSubscription","_asyncValidationSubscription","setErrors","_updateControlsErrors","x","_initObservables","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","FormControl","_onChange","_applyFormState","emitViewToModelChange","patchValue","condition","cb","_setUpControls","registerControl","addControl","removeControl","setControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","_reduceValue","initValue","_registerControl","insert","removeAt","formDirectiveProvider","NgForm","resolvedPromise","asyncValidators","_submitted","ngSubmit","form","_findContainer","getControl","updateModel","onSubmit","$event","onReset","resetForm","pop","(submit)","(reset)","outputs","Examples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","__extends$8","modelGroupProvider","NgModelGroup","__extends$7","formControlBinding","NgModel","resolvedPromise$1","_registered","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","warn","__extends$9","formControlBinding$1","FormControlDirective","_isControlChanged","__extends$11","formDirectiveProvider$1","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","async","__extends$12","formGroupNameProvider","formArrayNameProvider","__extends$10","controlNameBinding","FormControlName","_added","REQUIRED_VALIDATOR","RequiredValidator","_required","[attr.required]","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","_validator","parseInt","[attr.minlength]","MAX_LENGTH_VALIDATOR","MaxLengthValidator","[attr.maxlength]","PATTERN_VALIDATOR","PatternValidator","[attr.pattern]","FormBuilder","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","InternalFormsSharedModule","FormsModule","ReactiveFormsModule","59","98","score_service_1","user_service_1","router_1","DashboardComponent","scoreService","userService","labels","ChartType","ChartLegend","graphdata","getScores","processData","startNew","max","title","translations","completed","total","totalscore","score","avarage","Math","round","label","ScoreService","99","entry_service_1","ExerciseComponent","entryService","languages","lenght","count","setup","startExercise","amount","language","curlangs","getEntries","entry","translation","curEntry","answer","getScore","startNewTest","goBack","EntryService","100","forms_1","search_service_1","LiveSearch","searchService","term","selectEvent","debounceTime","SearchService","101","GlobalEventsManager_1","LoginComponent","eventEmitter","LoggedIn","email","preventDefault","102","RegisterComponent","userStatus","103","extract_service_1","extractService","104","answers","105","LoggedInGuard","user","106","107","108","templateVisitAll","visitor","asts","context","visit","ast","astResult","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","isStrictStringMap","getPrototypeOf","STRING_MAP_PROTO","overriddenName","newLineIndex","escapeRegExp","assertArrayOfStrings","identifier","isDevMode","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","newCharacterToken","Token","TokenType","Character","newIdentifierToken","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","Number","newErrorToken","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","_createInterpolateRegExp","start","end","visitAll","splitNsName","elementName","colonIndex","getNsPrefix","fullName","mergeNsAndName","localName","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","ParseSourceFile","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","offset","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","lastDstToken","dstTokens","TokenType$1","sourceSpan","lastOnStack","digestMessage","sha1","serializeNodes","meaning","serializerVisitor","utf8","utf8Encode","words32","stringToWords32","len","h0","h1","h2","h3","h4","rol32","fk","temp","add32","_d","_e","words32ToString","hex","b_1","encoded","codePoint","decodeSurrogatePairs","low","high","getHtmlTagDefinition","tagName","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","mergeTranslations","_isOpeningComment","Comment","_isClosingComment","_getI18nAttr","attrs","find","_I18N_ATTR","_splitMeaningAndDesc","i18n","pipeIndex","getXmlTagDefinition","_TAG_DEFINITION","extractPlaceholders","messageBundle","messageMap","getMessageMap","placeholders","msgId","extractPlaceholderToIds","placeholderToIds","placeholderToMsgIds","_visitor","_escapeXml","_ESCAPED_CHARS","getCtypeForTag","tag","dashCaseToCamelCase","DASH_CASE_REGEXP","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","sanitizeIdentifier","visitValue","visitArray","visitStringMap","visitPrimitive","visitOther","createHostComponentMeta","compMeta","CssSelector","getMatchingElementTemplate","CompileDirectiveMetadata","CompileTypeMetadata","reference","moduleUrl","isHost","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styleUrls","ngContentSelectors","animations","changeDetection","ChangeDetectionStrategy","inputs","isComponent","viewProviders","queries","viewQueries","removeIdentifierDuplicates","_normalizeArray","isStaticSymbol","assetUrl","pkg","resolveIdentifier","CompileIdentifierMetadata","reflector","runtime","identifierToken","CompileTokenMetadata","resolveIdentifierToken","resolveEnumIdentifier","enumType","resolvedEnum","resolveEnum","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","expression","Element","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","CompileProviderMetadata","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","lifecycleHooks","_normalizeProviders","targetErrors","targetProviders","normalizeProvider","ProviderError","_resolveProvidersFromDirectives","providersByToken","directive","dirProvider","_resolveProviders","ProviderAstType","directivesWithComponentFirst","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","_getViewQueries","_addQueryToTokenMap","_getContentQueries","contentQueries","selectors","isStyleUrlResolvable","schemeMatch","_urlWithSchemaRe","extractStyleUrls","baseUrl","cssText","foundUrls","modifiedCssText","_cssImportRe","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","securityContext","SecurityContext","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT_ELEMENT","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","splitClasses","classAttrValue","createElementCssSelector","matchableAttrs","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","removeSummaryDuplicates","unimplemented$1","replaceVarInExpression","varName","transformer","_ReplaceVariableTransformer","visitExpression","findReadVarNames","stmts","finder","_VariableFinder","visitAllStatements","varNames","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","ExternalType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","not","expr","NotExpr","FunctionExpr","literal","LiteralExpr","_compareToAnimationStateExpr","animationState","emptyStateLiteral","EMPTY_ANIMATION_STATE","ANY_STATE","_isEndStateAnimateStep","step","AnimationStepAst","duration","keyframes","styles1","_getStylesArray","styles2","createDiTokenExpression","identifierIsInstance","instantiate","TypeModifier","Const","createInlineArray","Identifiers","EMPTY_INLINE_ARRAY","log2","ceil","identifierSpec","inlineArrays","InlineArrayDynamic","createPureProxy","argCount","pureProxyProp","builder","fields","ClassField","pureProxyId","pureProxies","ctorStmts","THIS_EXPR","callFn","toStmt","createEnumExpression","enumValue","enumName","createCheckBindingField","bindingId","fieldExpr","createBindFieldExpr","StmtModifier","Private","UNINITIALIZED","CheckBindingField","createCheckBindingStmt","evalResult","throwOnChangeVar","actions","checkBinding","currValExpr","forceUpdate","or","IfStmt","convertPropertyBinding","nameResolver","implicitReceiver","createCurrValueExpr","DefaultNameResolver","_AstToIrVisitor","VAL_UNWRAPPER_VAR","outputExpr","_Mode","Expression","temporaryCount","temporaryDeclaration","needsValueUnwrapper","initValueUnwrapperStmt","callMethod","toDeclStmt","Final","ConvertPropertyBindingResult","convertActionBinding","action","actionStmts","flattenStatements","Statement","prependTemporaryDecls","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","DYNAMIC_TYPE","notIdentical","ConvertActionBindingResult","createSharedBindingVariablesIfNeeded","unwrapperStmts","readVars","ValueUnwrapper","temporaryName","temporaryNumber","DeclareVarStmt","NULL_EXPR","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","arg","output","createCachedLiteralArray","EMPTY_ARRAY","proxyExpr","proxyParams","proxyReturnEntries","paramName","FnParam","ReturnStatement","ArrayType","createCachedLiteralMap","EMPTY_MAP","MapType","stmt","ExpressionStatement","writeToRenderer","boundProp","renderElement","renderValue","logBindingUpdate","securityContextExpression","updateStmts","sanitizedValue","PropertyBindingType","Property","setBindingDebugInfo","conditional","Class","Style","strValue","unit","plus","Animation","needsRuntimeSecurityContext","ctx","triggerAnimation","componentView","eventListener","lastRenderValue","detachStmts","animationName","animationFnExpr","emptyStateValue","unitializedValue","animationTransitionVar","registerStmts","BuiltinMethod","Bind","BoundEventAst","calcFullName","createClassStmt","parentArgs","superCtorStmts","SUPER_EXPR","concatClassBuilderParts","builders","ctor","ClassMethod","ctorParams","ClassStmt","getters","methods","modifiers","addNgDoCheckMethod","changedVar","CHANGED_FIELD_NAME","lifecycleStmts","genChanges","onChangesStmts","CONTEXT_FIELD_NAME","CHANGES_FIELD_NAME","compilerConfig","setBindingDebugInfoForChanges","VIEW_VAR","RENDER_EL_VAR","RESET_CHANGES_STMT","identical","ngDoCheck","THROW_ON_CHANGE_VAR","AppView","BOOL_TYPE","addCheckInputMethod","field","onChangeStatements","CURR_VALUE_VAR","SimpleChange","methodBody","FORCE_UPDATE_VAR","addCheckHostMethod","hostProps","methodParams","COMPONENT_VIEW_VAR","hostProp","hostPropIdx","securityContextExpr","checkBindingStmts","isAnimation","EVENT_HANDLER_FIELD_NAME","addHandleEventMethod","hostListeners","resultVar","hostListener","eventIdx","handler","trueStmts","and","EVENT_NAME_VAR","STRING_TYPE","EventHandlerVars","addSubscribeMethod","dirMeta","emitterPropName","emitterIdx","eventName","subscriptionFieldName","SubscribeObservable","destroyStmts","parseHostBindings","exprParser","schemaRegistry","parser","BindingParser","sourceFileName","sourceFile","ParseSourceSpan","ParseLocation","parsedHostProps","createDirectiveHostPropertyAsts","toSummary","parsedHostListeners","createDirectiveHostEventAsts","ParseResult","reportParseErrors","parseErrors","warnings","level","ParseErrorLevel","WARNING","FATAL","_console","convertValueToOutputAst","_ValueOutputAstTransformer","getPropertyInView","property","callingView","definedView","viewProp","currView","declarationElement","_ReplaceViewTransformer","injectFromViewParentInjector","optional","viewExpr","viewType","ViewType","HOST","getViewClassName","embeddedTemplateIndex","getHandleEventMethodName","elementIndex","createQueryValues","viewValues","ViewQueryValues","mapNestedViews","viewContainer","expressions","adjustedExpressions","classType","createQueryList","directiveInstance","propertyName","compileView","QueryList","createMethod","addStmt","addQueryToTokenMap","meta","createInjectInternalCondition","nodeIndex","childNodeCount","providerExpr","indexCondition","lowerEquals","InjectMethodVars","requestNodeIndex","createProviderProperty","providerValueExpressions","isMulti","isEager","compileElement","resolvedProviderValueExpr","internalField","getter","CompileMethod","resetDebugInfo","sourceAst","ClassGetter","finish","_findPipeMeta","pipeMeta","pipeMetas","localPipeMeta","getViewType","EMBEDDED","COMPONENT","bindOutputs","boundEvents","bindToRenderer","usedEvents","collectEvents","size","subscribeToRenderEvents","subscribeToDirectiveEvents","generateHandleEventMethod","dirAst","hostEvents","eventAndTargetExprs","phase","disposableVar","disposables","subscribeToRenderElement","renderNode","handleEventExpr","FUNCTION_TYPE","usedEventNames","dirWrapper","directiveWrapperInstance","addStmts","DirectiveWrapperExpressions","hostProperties","hasComponentHostListener","markPathToRootStart","compViewExpr","handleEventStmts","eventNameVar","dirIdx","handleEvent","renderEvent","renderEventIdx","componentContext","handleEventMethodName","bindDirectiveAfterContentLifecycleCallbacks","directiveMeta","afterContentLifecycleCallbacksMethod","LifecycleHooks","AfterContentInit","STATE_IS_NEVER_CHECKED","AfterContentChecked","bindDirectiveAfterViewLifecycleCallbacks","afterViewLifecycleCallbacksMethod","AfterViewInit","AfterViewChecked","bindDirectiveWrapperLifecycleCallbacks","directiveWrapperIntance","destroyMethod","detachMethod","ngOnDetach","bindInjectableDestroyLifecycleCallbacks","providerInstance","onDestroyMethod","OnDestroy","bindPipeDestroyLifecycleCallbacks","pipeInstance","bindRenderText","boundText","compileNode","valueField","detectChangesRenderPropertiesMethod","DetectChangesVars","throwOnChange","bindRenderInputs","boundProps","hasEvents","bindingField","compileMethod","genConfig","animationBindingsMethod","bindDirectiveHostProps","directiveAst","runtimeSecurityCtxExprs","checkHost","bindDirectiveInputs","dirIndex","detectChangesInInputsMethod","inputIdx","directiveName","isOnPushComp","isDefaultChangeDetectionStrategy","directiveDetectChangesExpr","directiveDetectChangesStmt","bindView","parsedTemplate","ViewBinderVisitor","pipes","pipe","buildView","targetDependencies","builderVisitor","ViewBuilderVisitor","parentEl","isNull","lastRenderNode","getOrCreateLastRenderNode","nestedViewCount","finishView","targetStatements","afterNodes","createViewTopLevelStmts","CompileElement","hasEmbeddedView","embeddedView","_getOuterContainerOrSelf","_isNgContainer","_getOuterContainerParentOrSelf","NG_CONTAINER_TAG","_mergeHtmlAndDirectiveAttrs","declaredHtmlAttrs","mapResult","hostAttributes","prevValue","mergeAttributeValue","arrResult","_readHtmlAttrs","htmlAttrs","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","nodeDebugInfosVar","genDebugInfo","viewIndex","createStaticNodeDebugInfo","StaticNodeDebugInfo","renderCompTypeVar","templateUrlInfo","createRenderComponentType","ViewEncapsulationEnum","fromValue","fnExp","RenderComponentType","viewClass","createViewClass","providerTokens","componentToken","varTokenEntries","getProviderTokens","referenceTokens","viewConstructorArgs","ViewConstructorVars","viewUtils","ViewUtils","parentView","parentIndex","NUMBER_TYPE","parentElement","superConstructorArgs","ViewTypeEnum","ChangeDetectorStatusEnum","getChangeDetectionMode","ViewContainer","viewMethods","rootSelectorVar","generateCreateMethod","ComponentRef","notFoundResult","addReturnValuefNotEmpty","injectorGetMethod","generateDetectChangesMethod","dirtyParentQueriesMethod","generateDestroyMethod","generateVisitRootNodesMethod","generateVisitProjectableNodesMethod","generateCreateEmbeddedViewsMethod","superClass","DebugAppView","getContextType","viewContainers","viewChildren","viewChild","parentRenderNodeExpr","parentRenderNodeStmts","ViewProperties","parentRenderNodeVar","renderTypes","resultExpr","hostEl","ComponentRef_","getComponent","allNodesExpr","isEmpty","updateContentQueriesMethod","updateViewQueriesMethod","afterContentStmts","afterViewStmts","varStmts","changed","ChangeDetectorStatus","CheckAlways","CheckOnce","cbVar","ctxVar","generateVisitNodesStmts","rootNodes","nodeIndexVar","ngContentIndexVar","contentNodesByNgContentIndex","projectedNodes","ngContentIndex","CompileViewRootNodeType","Node","NgContent","isRootElement","classExpr","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","messages","filePath","loadNgModuleDirectives","transitiveModule","directiveLoaders","ngModuleMetas","moduleMetasByRef","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","filePaths","ngModuleMeta","srcFileUrl","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","_resolveViewStatements","compileResult","dependencies","dep","ViewClassDependency","vfd","placeholder","_ngfactoryModuleUrl","comp","ComponentFactoryDependency","cfd","_componentFactoryName","DirectiveWrapperDependency","dwd","_resolveStyleStatements","fileSuffix","valuePlaceholder","_stylesModuleUrl","isShimmed","dirUrl","urlWithSuffix","_splitTypescriptSuffix","stylesheetUrl","shim","suffix","_assertComponent","endsWith","lastDot","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getUnloadedNgModuleMetadata","transitiveModules","modules","modMeta","isDirective","isPipe","_parseAnimationDeclarationStates","stateMetadata","schema","normalizedStyles","_normalizeStyleMetadata","defStyles","AnimationStylesAst","states","stateNameExpr","AnimationStateDeclarationAst","_parseAnimationStateTransition","transitionStateMetadata","stateStyles","StylesCollection","transitionExprs","transitionStates","stateChangeExpr","_parseAnimationTransitionExpr","_normalizeAnimationEntry","steps","animation","_normalizeStyleSteps","animationAst","_parseTransitionAnimation","_fillAnimationAstStartingKeyframes","stepsAst","AnimationWithStepsAst","AnimationSequenceAst","AnimationStateTransitionAst","_parseAnimationAlias","alias","AnimationParseError","eventStr","fromState","separator","toState","AnimationStateTransitionExpression","isFullAnyStateExpr","CompileAnimationSequenceMetadata","permitStateReferences","styleEntry","_resolveStylesFromState","stylesObj_1","normalizedStylesObj_1","normalizedProp","normalizeAnimationStyleProperty","normalizedOutput","normalizeAnimationStyleValue","normalizationError","_normalizeStyleStepEntry","CompileAnimationGroupMetadata","_mergeAnimationStyles","stylesList","newItem","lastItem","CompileAnimationWithStepsMetadata","combinedStyles","newSteps","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","animateStyleValue","CompileAnimationKeyframesSequenceMetadata","innerSteps","stateName","normalizedStateName","stylesEntry","_parseAnimationKeyframes","keyframeSequence","currentTime","collectedStyles","totalEntries","totalOffsets","limit","margin","rawKeyframes","doSortKeyframes","lastOffset","styleMetadata","keyframeStyles","_TERMINAL_KEYFRAME","firstKeyframe","_INITIAL_KEYFRAME","firstKeyframeStyles","lastKeyframe","lastKeyframeStyles","FILL_STYLE_FLAG","AnimationKeyframeAst","playTime","startingTime","previousStyles_1","maxDuration_1","steps_1","isGroup_1","time","insertAtTime","innerAst","startingStyles","innerStep","astDuration","AnimationGroupAst","timings","_parseTimeExpression","styleData","styleAst","keyframe","delay","easing","startTime","endKeyframe","startKeyframe","_createStartKeyframeFromEndKeyframe","matches","_AnimationTimings","durationMatch","durationUnit","_ONE_SECOND","floor","delayMatch","delayUnit","delayVal","easingVal","endTime","resultEntry","nextEntry","resultIndex","indexOfAtOrBeforeTime","getByIndex","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","_ASSET_SCHEME","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","up","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","baseParts","isDirectiveMetadata","hasLifecycleHook","hook","getHookName","OnInit","DoCheck","OnChanges","_isNgModuleMetadata","_isPipeMetadata","Pipe","getTransitiveExportedModules","targetModules","visitedModules","exportedModules","getTransitiveImportedModules","nestedModules","importedModules","flattenArray","resolveForwardRef","dedupeArray","flattenAndDedupeArray","isValidType","Type","staticTypeModuleUrl","componentModuleUrl","cmpMetadata","moduleId","scheme","MODULE_SUFFIX","importUri","convertToCompileValue","targetIdentifiers","_CompileValueConverter","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","_debugModuleUrl","EmitterVisitorContext","createRoot","visitStatement","Type$1","visitType","toSource","interpretStatements","stmtsWithReturn","_ExecutionContext","StatementInterpreter","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","vars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","instanceCtx","paramNames","writable","ctorParamNames","constructorMethod","_declareFn","evalExpression","sourceUrl","fnBody","fnArgNames","fnArgValues","argName","Function","bind","jitStatements","JitEmitterVisitor","getArgs","stripComments","_commentRe","extractSourceMappingUrl","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","assertComponent","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","_initReflector","reflectionCapabilities","ReflectionCapabilities","_mergeOptions","optionsArr","useDebug","_lastDefined","useJit","defaultEncapsulation","_mergeArrays","TextAst","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","ElementAst","references","hasViewContainer","endSourceSpan","visitElement","EmbeddedTemplateAst","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","templateName","visitDirectiveProperty","DirectiveAst","visitDirective","NgContentAst","visitNgContent","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","NumberWrapper","parseIntAutoRadix","isNumeric","InterpolationConfig","fromArray","markers","ParserError","errLocation","ctxLocation","ParseSpan","AST","span","Quote","uninterpretedExpression","visitQuote","EmptyExpr","ImplicitReceiver","visitImplicitReceiver","Chain","visitChain","Conditional","trueExp","falseExp","visitConditional","PropertyRead","receiver","visitPropertyRead","PropertyWrite","visitPropertyWrite","SafePropertyRead","visitSafePropertyRead","KeyedRead","visitKeyedRead","KeyedWrite","visitKeyedWrite","BindingPipe","visitPipe","LiteralPrimitive","visitLiteralPrimitive","LiteralArray","visitLiteralArray","LiteralMap","visitLiteralMap","Interpolation","strings","visitInterpolation","Binary","operation","left","right","visitBinary","PrefixNot","visitPrefixNot","MethodCall","visitMethodCall","SafeMethodCall","visitSafeMethodCall","FunctionCall","visitFunctionCall","ASTWithSource","TemplateBinding","keyIsVar","RecursiveAstVisitor","KEYWORDS","Lexer","tokens","scanToken","numValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","quote","marker","unescapedCode","position","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","Parser","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","exprs","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","name_2","locationText","skip","file","col","details","TagContentType","ParseError","msg","ctxStart","contextStr","ctxEnd","ctxLen","ctxLines","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sum","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_VisitorMode","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","ESCAPABLE_RAW_TEXT","RAW_TEXT","COMMENT_START","textToken","COMMENT_END","CDATA_START","CDATA_END","DOC_TYPE","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","TAG_CLOSE","TAG_OPEN_START","ATTR_NAME","prefixAndName","ATTR_VALUE","quoteChar","valueStart","TAG_OPEN_END_VOID","TAG_OPEN_END","EXPANSION_FORM_START","_readUntil","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","_isTextEnd","nbTokens","TreeError","ParseTreeResult","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","_rootNodes","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","isClosedByChild","_getParentElementSkippingContainers","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","stackIndex","closedByParent","valueToken","implicitNamespacePrefix","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","HtmlTagDefinition","closedByChildren","requiredParents","PARSABLE_DATA","_f","currentParent","lcParent","area","embed","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","rb","rt","rtc","rp","optgroup","option","pre","listing","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","strAttrs","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToIds","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","BoundPropertyType","_implicitTags","_implicitAttrs","_init","Extract","_inI18nBlock","_messages","Merge","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","childNodes","wasInI18nNode","wasInImplicitNode","_inImplicitNode","i18nAttr","isImplicit","isTopLevelImplicit","visited","isTranslatable","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","meaningAndDesc","attributes","i18nAttributeMeanings","translatedAttributes","directChildren","significantChildren","MessageBundle","_htmlParser","_messageMap","updateFromTemplate","html","htmlParserResult","i18nParserResult","write","serializer","XmlTagDefinition","XmlParser","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_SOURCE_LANG","_PLACEHOLDER_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","Xliff","_WriteVisitor","transUnits","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","_LoadVisitor","_isInIcu","ctype","startTagPh","closeTagPh","_messageNodes","_translatedMessages","_msgId","_target","_placeholders","_addError","idAttr","expansion","expansionCase","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$1","_EXEMPLE_TAG","_DOCTYPE","Xmb","_Visitor$2","startEx","closeEx","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$2","Xtb","_Visitor$3","_bundleDepth","_translationDepth","nameAttr","TranslationBundle","I18NHtmlParser","_translationsFormat","parseResult","_createSerializer","translationBundle","format","_SELECTOR_REGEXP","classNames","results","_addResult","cssSel","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","ValueTransformer","arr","SyncAsyncResult","syncResult","asyncResult","HOST_REG_EXP","CompileMetadataWithIdentifier","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","CompileAnimationStateTransitionMetadata","CompileAnimationMetadata","CompileDiDependencyMetadata","isSelf","isSkipSelf","isOptional","isValue","CompileFactoryMetadata","diDeps","CompileQueryMetadata","read","CompileStylesheetMetadata","externalStylesheets","interpolation","isSummary","anim","entryComponents","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","schemas","toInjectorSummary","toDirectiveSummary","TransitiveCompileNgModuleMetadata","directivesSet","pipesSet","ProviderMeta","LIFECYCLE_HOOKS_VALUES","ReflectorReader","CodegenComponentFactoryResolver","NgModuleInjector","registerModuleFactory","view_utils","DebugContext","devModeEqual","TemplateRef_","Console","Reflector","NoOpAnimationPlayer","AnimationSequencePlayer","AnimationGroupPlayer","AnimationKeyframe","AnimationStyles","DEFAULT_STATE","EMPTY_STATE","prepareFinalAnimationStyles","balanceAnimationKeyframes","clearStyles","collectAndResolveStyles","renderStyles","ComponentStillLoadingError","AnimationTransition","APP_VIEW_MODULE_URL","VIEW_UTILS_MODULE_URL","CD_MODULE_URL","ANIMATION_STYLE_UTIL_ASSET_URL","ChangeDetectorRef","TemplateRef","ComponentFactory","NgModuleFactory","RegisterModuleFactoryFn","inlineInterpolate","interpolate","castByValue","createRenderElement","selectOrCreateRenderHostElement","pureProxy1","pureProxy2","pureProxy3","pureProxy4","pureProxy5","pureProxy6","pureProxy7","pureProxy8","pureProxy9","pureProxy10","LOCALE_ID","TRANSLATIONS_FORMAT","InlineArray","InlineArray2","InlineArray4","InlineArray8","InlineArray16","HtmlParser","expanded","ProviderViewContext","ProviderElementContext","viewContext","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_attrs","attrAst","directivesMeta","_allProviders","_contentQueries","queriedTokens","_addQueryReadsTo","refAst","_getOrCreateLocalProvider","afterElement","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","queryReadTokens","_getQueriesFor","queryReadToken","currentEl","distance","requestingProviderType","Builtin","transformedProviderAst","transformedProviders","transformedDeps","transformedUseValue","transformedUseExisting","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleTypes","moduleMeta","ngModuleType","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundProperty","LITERAL_ATTR","ANIMATION","_exprParser","_schemaRegistry","_targetErrors","pipesByName","boundProps_1","parsePropertyBinding","createElementPropertyAst","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","DEFAULT","isHostBinding","elementSelector","bindingType","boundPropertyName","securityContexts","partValue","getMappedPropName","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","validateAttribute","validateProperty","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ELEMENT","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_TRANSFORMS","TemplateParseError","TemplateParseResult","templateAst","TemplateParser","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","transform","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","preparsedElement","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","lcElName","isTemplateElement","hasBinding","_parseAttr","templateBindingsSource","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","_findComponentDirectives","componentDirectiveAst","_validateElementAnimationInputOutputs","componentTemplate","templateCssSelector","templateDirectiveMetas","templateDirectiveAsts","templateElementProps","templateProviderContext","triggerLookup","animationInputs","found","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","props","elementSourceSpan","targetReferences","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","boundDirectivePropsIndex","_findComponentDirectiveNames","componentTypeNames","elName","hasElement","allDirectiveEvents","hasProperty","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","CompilerConfig","DefaultRenderTypes","Emulated","_genDebugInfo","_logBindingUpdate","RenderTypes","renderText","renderComment","BuiltinTypeName","hasModifier","BinaryOperator","BuiltinType","visitBuiltintType","visitExternalType","visitArrayType","valueType","visitMapType","Dynamic","Bool","Int","NULL_TYPE","Null","BuiltinVar","ReadPropExpr","ReadKeyExpr","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","trueCase","falseCase","ConditionalExpr","rhs","BinaryOperatorExpr","Equals","notEquals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","multiply","Multiply","modulo","Modulo","And","Or","lower","Lower","LowerEquals","bigger","Bigger","biggerEquals","BiggerEquals","TYPED_NULL_EXPR","CastExpr","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","visitInvokeMethodExpr","visitInvokeFunctionExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","visitConditionalExpr","visitNotExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","This","Super","CatchError","CatchStack","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","visitDeclareClassStmt","visitIfStmt","TryCatchStmt","CommentStmt","visitCommentStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","ExpressionTransformer","visitAllExpressions","RecursiveExpressionVisitor","_varName","_newValue","__extends$13","AnimationAst","AnimationStateAst","AnimationEntryAst","stateDeclarations","stateTransitions","visitAnimationEntry","visitAnimationStateDeclaration","stateChanges","visitAnimationStateTransition","visitAnimationStep","visitAnimationStyles","visitAnimationKeyframe","visitAnimationGroup","visitAnimationSequence","AnimationEntryCompileResult","AnimationCompiler","compile","factoryNamePrefix","parsedAnimations","factoryName","_AnimationBuilder","_ANIMATION_FACTORY_ELEMENT_VAR","_ANIMATION_DEFAULT_STATE_VAR","_ANIMATION_FACTORY_VIEW_VAR","_ANIMATION_FACTORY_VIEW_CONTEXT","_ANIMATION_FACTORY_RENDERER_VAR","_ANIMATION_CURRENT_STATE_VAR","_ANIMATION_NEXT_STATE_VAR","_ANIMATION_PLAYER_VAR","_ANIMATION_TIME_VAR","_ANIMATION_START_STATE_STYLES_VAR","_ANIMATION_END_STATE_STYLES_VAR","_ANIMATION_COLLECTED_STYLES","_PREVIOUS_ANIMATION_PLAYERS","_EMPTY_MAP","_EMPTY_ARRAY","_fnVarName","_statesMapVarName","_statesMapVar","stylesArr","isExpectingFirstStyleStep","endStateAnimateStep","_visitEndStateAnimation","startingStylesExpr","keyframeExpressions","keyframeEntry","_callAnimateMethod","keyframesExpr","previousStylesValue","isExpectingFirstAnimateStep","totalTransitionTime","playerExprs","flatStyles","stateMap","registerState","lastStep","stateChangePreconditions","stateChange","animationPlayerExpr","reducedStateChangesPrecondition","precondition","animationStmt","totalTimeStmt","def","RENDER_STYLES_FN","transAst","_AnimationBuilderContext","fnStatement","fnVariable","lookupMap","variableValue","styleMap_1","compiledStatesMapStmt","_AnimationBuilderStateMap","_states","existingEntry","_builder","_nameResolver","_implicitReceiver","_valueUnwrapper","isAction","_nodeMap","_resultMap","_currentTemporary","callPipe","literalArr$$","literalMap$$","_getLocal","getLocal","leftMostSafe","leftMostSafeNode","convertSafeAccess","varExpr","temporary","guardedExpression","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","DirectiveWrapperCompileResult","dirWrapperClassVar","DirectiveWrapperCompiler","dirWrapperClassName","hostParseResult","DirectiveWrapperBuilder","inputFieldName","classStmt","dirLifecycleHooks","dirDepParamNames","depsExpr","runtimeSecurityContexts","renderEl","needsSubscribe","eventFlags","eventUsed","_DebugState","NULL_DEBUG_STATE","_view","_newState","_currState","_bodyStatements","_debugEnabled","_updateDebugContextIfNeeded","_updateDebugContext","newState","sourceLocation","resetDebugInfoExpr","__extends$15","_viewExpr","_isThis","CompileQuery","queryList","ownerDirectiveExpression","_values","addValue","currentView","elPath","queryListForDirtyExpr","newViewValues","_isStatic","afterChildren","targetStaticMethod","targetDynamicMethod","valueExpr","__extends$14","CompileNode","_directives","_resolvedProvidersArray","_targetDependencies","instances","_queryCount","_queries","elementRef","_createViewContainer","_createComponentFactoryResolver","createNull","fieldName","parentNodeIndex","statement","entryComponent","createComponentFactoryResolverExpr","setComponentView","setEmbeddedView","createTemplateRefExpr","beforeChildren","_resolvedProviders","isDirectiveWrapper","directiveWrapperIdentifier","this_1","queryMeta","_addQuery","queriesWithReads","queriesForProvider","_QueryWithRead","varValue","locals","varToken","queryWithRead","providerChildNodeCount","addContentNode","nodeExpr","CompilePipe","_purePipeProxyCount","pipeCount","diDep","compView","purePipes","_call","purePipeProxyInstance","pipeInstanceSeenFromPureProxy","CompileViewRootNode","CompileView","templateVariableBindings","literalArrayCount","literalMapCount","directiveInstance_1","queryIndex","_nodeIndex","providerAst","eventTargetAndNames","IMPLICIT_TEMPLATE_VAR","_isRootNode","_addRootNodeAndProject","projectedNode","_getParentRenderNode","Native","_visitText","createRenderNode","parentRenderNode","createRenderNodeExpr","debugContextExpr","nestedComponentIdentifier","varAst","ViewCompileResult","viewClassVar","ViewCompiler","_genConfig","compileComponent","compiledAnimations","SourceModule","OfflineCompiler","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_dirWrapperCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_animationParser","_animationCompiler","clearCache","compileModules","staticSymbols","sourceModules","_compileSrcFile","exportedVars","outputSourceModules","_compileModule","directiveType","_compileDirectiveWrapper","dirType","getDirectiveMetadata","stylesCompileResults","compiledStyleSheet","_codgenStyles","_compileComponentFactory","_compileComponent","componentStylesheet","srcModule","_codegenSourceModule","getNgModuleMetadata","appCompileResult","ngModuleFactoryVar","dirCompileResult","hostMeta","hostViewFactoryVar","compFactoryVar","directiveIdentifiers","componentStyles","parseComponent","getDirectiveSummary","getPipeSummary","stylesExpr","stylesVar","viewResult","stylesCompileResult","emitStatements","StylesCollectionEntry","tuple","insertionIndex","__extends$16","AnimationEntryParseResult","AnimationParser","_schema","animationTriggerNames","parseEntry","triggerName","errorMessage_1","transitions","stateDeclarationAsts","stateTransitionAsts","transDef","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","pathSegements","DirectiveNormalizer","_resourceLoader","_urlResolver","_config","_resourceLoaderCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizedTemplateAsync","normalizedTemplateSync","normalizeTemplateSync","componentType","normalizeTemplateAsync","normalizedTemplate","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","templateMeta","_loadMissingExternalStylesheets","loadedStylesheets","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","DirectiveResolver","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","bindingPropertyName","hostBinding","hostPropertyName","startWith","Query","_merge","_extractPublicName","mergedInputs","inputNames_1","inputDef","publicName","mergedOutputs","outputNames_1","outputDef","mergedHost","mergedQueries","NgModuleResolver","isNgModule","PipeResolver","metas","annotation","__extends$17","CompileMetadataResolver","_ngModuleResolver","_directiveResolver","_pipeResolver","_directiveNormalizer","_directiveCache","_directiveSummaryCache","_pipeCache","_pipeSummaryCache","_ngModuleCache","_ngModuleOfTypes","_anonymousTypes","_anonymousTypeIndex","sanitizeTokenName","getAnimationEntryMetadata","defs","_getAnimationStateMetadata","AnimationStateDeclarationMetadata","_getAnimationStyleMetadata","AnimationStateTransitionMetadata","_getAnimationMetadata","AnimationStyleMetadata","AnimationKeyframesSequenceMetadata","AnimationAnimateMetadata","animateData","AnimationWithStepsMetadata","AnimationGroupMetadata","_loadDirectiveMetadata","isSync","nonNormalizedMetadata","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","templateMeta_1","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getIdentifierMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","dirSummary","moduleType","_loadNgModuleSummary","_loadNgModuleMetadata","loadNgModuleMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_addTypeToModule","_loadPipeMetadata","exportedId","bootstrap","oldModule","transitiveExportedModules","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","dependenciesMetadata","paramEntry","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","compileProvider","tokenMeta","_getEntryComponentsFromProvider","getProviderMetadata","providersInfo","soFar","seenProvider","seenProviderIdx","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","_getQueryMetadata","_queryVarBindings","ComponentFactoryDependency$1","NgModuleCompileResult","NgModuleCompiler","bootstrapComponentFactories","entryComponentFactories","_InjectorBuilder","providerParser","addProvider","injectorClass","ngModuleFactoryStmt","registerFactoryStmt","_ngModuleMeta","_entryComponentFactories","_bootstrapComponentFactories","_tokens","_instances","_createStmts","_destroyStmts","_getProviderValue","_createProviderProperty","getMethodStmts","InjectMethodVars$1","InjectorProps","componentFactory","injClassName","getterStmts","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","_EmittedLine","indent","_exportedVars","_indent","_classes","_lines","isExportedVar","println","lastPart","print","lineIsEmpty","_currentLine","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","lines","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","useNewLine","visitAllObjects","__extends$18","TypeScriptEmitter","_importGenerator","srcParts","importsWithPrefixes","importedModuleUrl","getImportPath","_moduleUrl","defaultType","_visitIdentifier","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","ConcatArray","members","ReturnValue","debugAst","currCtx","__proto__","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","fnExpr","__extends$20","AbstractJsEmitterVisitor","currentClass","__extends$19","_evalArgNames","_evalArgValues","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","before","colon","after","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","StylesCompileResult","CompiledStylesheet","StyleCompiler","_shadowCss","_compileStyles","stylesheetMeta","compiledStylesheet","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","RuntimeCompiler","_directiveWrapperCompiler","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","compileModuleSync","_compileModuleAndComponents","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadingPromise","_loadModules","createResult","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","loadingPromises","localModuleMeta","ngModuleFactory","moduleMeta_1","ModuleBoundCompiler","_assertComponentKnown","proxyComponentFactory","allComponentFactories","moduleByDirective","templates","localModuleSummary","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","compType","CompiledTemplate","_assertDirectiveWrapper","directiveWrapperClass","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","depTemplate","proxyViewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","self","_delegate","_ngModule","HTML","URL","RESOURCE_URL","__extends$21","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","DomElementSchemaRegistry","encodedType","strType","strProperties","properties","typeNames","superName","superType","schemaMetas","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","_NO_RESOURCE_LOADER","COMPILER_PROVIDERS","TRANSLATIONS","RuntimeCompilerFactory","createCompiler","mergedOptions","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory","PLATFORM_INITIALIZER","_ASSET_URL_RE","ImportGenerator","parseAssetUrl","AssetUrl","packageName","firstLevelDir","modulePath","allowNonMatching","109","_angular_compiler","globalScope","INTERNAL_BROWSER_PLATFORM_PROVIDERS","ResourceLoaderImpl","onload","onerror","INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","WorkerGlobalScope","_global","assert","CachedResourceLoader","_cache","$templateCache","__platform_browser_dynamic_private__","RESOURCE_CACHE_PROVIDER","platformBrowserDynamic","111","rgba","colour","getRandomInt","min","random","formatLineColor","colors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","formatBarColor","hoverBackgroundColor","hoverBorderColor","formatPieColors","color","formatPolarAreaColors","getRandomColor","generateColor","BaseChartDirective","defaultColors","generateColors","colorsArr","getColors","chartType","chartClick","chartHover","initFlag","getContext","cvs","datasets","refresh","chart","getDatasets","getChartBuilder","assign","legend","display","hover","onHover","active","Chart","elm","newElm","ChartsModule","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","391","platform_browser_1","ng2_charts_1","components_1","app_routes_1","class_component_1","livesearch_component_1","class_service_1","AppModule","AppComponent","NavComponent","BrowserModule","392","login_component_1","logged_in_guard_1","exercise_component_1","register_componet_1","dashboard_componet_1","393","platform_browser_dynamic_1","app_module_1","bootstrapModule","394","395","396","397","showMenu","removeItem","398"],"mappings":"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1vF,EAAA01D,gBAAA+8F,cACA,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AAUA,GAAAC,IAAA3yJ,WAAAgI,WAAA,SAAAC,EAAAC,GAEA,QAAAC,KAAqBnI,KAAAoI,YAAAH,EADrB,OAAAI,KAAAH,KAAAI,eAAAD,KAAAJ,EAAAI,GAAAH,EAAAG,GAEAJ,GAAA5C,UAAA,OAAA6C,EAAA1B,OAAA+B,OAAAL,IAAAC,EAAA9C,UAAA6C,EAAA7C,UAAA,GAAA8C,KAEAyqJ,GAAA,UACAC,GAAA,SACAC,GAAA,SACAC,GAAA,SAuDAC,IACA,4NACA,69BACA,4oCACA,mMACA,ilBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,iJACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,mEACA,+BACA,8BACA,6BACA,yHACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,qBACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BAC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","file":"app.bundle.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(393);\n\n\n/***/ },\n\n/***/ 16:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.2.4\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(5), __webpack_require__(1), __webpack_require__(22)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/Observable', '@angular/platform-browser'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.http = global.ng.http || {}),global.ng.core,global.Rx,global.ng.platformBrowser));\n\t}(this, function (exports,_angular_core,rxjs_Observable,_angular_platformBrowser) { 'use strict';\n\t\n\t    /**\n\t     * A backend for http that uses the `XMLHttpRequest` browser API.\n\t     *\n\t     * Take care not to evaluate this in non-browser contexts.\n\t     *\n\t     * @experimental\n\t     */\n\t    var BrowserXhr = (function () {\n\t        function BrowserXhr() {\n\t        }\n\t        BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n\t        BrowserXhr.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        BrowserXhr.ctorParameters = [];\n\t        return BrowserXhr;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Supported http methods.\n\t     * @experimental\n\t     */\n\t    exports.RequestMethod;\n\t    (function (RequestMethod) {\n\t        RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n\t        RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n\t        RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n\t        RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n\t        RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n\t        RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n\t        RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n\t    })(exports.RequestMethod || (exports.RequestMethod = {}));\n\t    /**\n\t     * All possible states in which a connection can be, based on\n\t     * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n\t     * additional \"CANCELLED\" state.\n\t     * @experimental\n\t     */\n\t    exports.ReadyState;\n\t    (function (ReadyState) {\n\t        ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n\t        ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n\t        ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n\t        ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n\t        ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n\t        ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n\t    })(exports.ReadyState || (exports.ReadyState = {}));\n\t    /**\n\t     * Acceptable response types to be associated with a {@link Response}, based on\n\t     * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n\t     * @experimental\n\t     */\n\t    exports.ResponseType;\n\t    (function (ResponseType) {\n\t        ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n\t        ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n\t        ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n\t        ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n\t        ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n\t    })(exports.ResponseType || (exports.ResponseType = {}));\n\t    /**\n\t     * Supported content type to be automatically associated with a {@link Request}.\n\t     * @experimental\n\t     */\n\t    var ContentType;\n\t    (function (ContentType) {\n\t        ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n\t        ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n\t        ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n\t        ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n\t        ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n\t        ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n\t        ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n\t    })(ContentType || (ContentType = {}));\n\t    /**\n\t     * Define which buffer to use to store the response\n\t     * @experimental\n\t     */\n\t    exports.ResponseContentType;\n\t    (function (ResponseContentType) {\n\t        ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n\t        ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n\t        ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n\t        ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n\t    })(exports.ResponseContentType || (exports.ResponseContentType = {}));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n\t     * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n\t     *\n\t     * The only known difference between this `Headers` implementation and the spec is the\n\t     * lack of an `entries` method.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * import {Headers} from '@angular/http';\n\t     *\n\t     * var firstHeaders = new Headers();\n\t     * firstHeaders.append('Content-Type', 'image/jpeg');\n\t     * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n\t     *\n\t     * // Create headers from Plain Old JavaScript Object\n\t     * var secondHeaders = new Headers({\n\t     *   'X-My-Custom-Header': 'Angular'\n\t     * });\n\t     * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n\t     *\n\t     * var thirdHeaders = new Headers(secondHeaders);\n\t     * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var Headers = (function () {\n\t        // TODO(vicb): any -> string|string[]\n\t        function Headers(headers) {\n\t            var _this = this;\n\t            /** @internal header names are lower case */\n\t            this._headers = new Map();\n\t            /** @internal map lower case names to actual names */\n\t            this._normalizedNames = new Map();\n\t            if (!headers) {\n\t                return;\n\t            }\n\t            if (headers instanceof Headers) {\n\t                headers.forEach(function (values, name) {\n\t                    values.forEach(function (value) { return _this.append(name, value); });\n\t                });\n\t                return;\n\t            }\n\t            Object.keys(headers).forEach(function (name) {\n\t                var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n\t                _this.delete(name);\n\t                values.forEach(function (value) { return _this.append(name, value); });\n\t            });\n\t        }\n\t        /**\n\t         * Returns a new Headers instance from the given DOMString of Response Headers\n\t         */\n\t        Headers.fromResponseHeaderString = function (headersString) {\n\t            var headers = new Headers();\n\t            headersString.split('\\n').forEach(function (line) {\n\t                var index = line.indexOf(':');\n\t                if (index > 0) {\n\t                    var name_1 = line.slice(0, index);\n\t                    var value = line.slice(index + 1).trim();\n\t                    headers.set(name_1, value);\n\t                }\n\t            });\n\t            return headers;\n\t        };\n\t        /**\n\t         * Appends a header to existing list of header values for a given header name.\n\t         */\n\t        Headers.prototype.append = function (name, value) {\n\t            var values = this.getAll(name);\n\t            if (values === null) {\n\t                this.set(name, value);\n\t            }\n\t            else {\n\t                values.push(value);\n\t            }\n\t        };\n\t        /**\n\t         * Deletes all header values for the given name.\n\t         */\n\t        Headers.prototype.delete = function (name) {\n\t            var lcName = name.toLowerCase();\n\t            this._normalizedNames.delete(lcName);\n\t            this._headers.delete(lcName);\n\t        };\n\t        Headers.prototype.forEach = function (fn) {\n\t            var _this = this;\n\t            this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n\t        };\n\t        /**\n\t         * Returns first header that matches given name.\n\t         */\n\t        Headers.prototype.get = function (name) {\n\t            var values = this.getAll(name);\n\t            if (values === null) {\n\t                return null;\n\t            }\n\t            return values.length > 0 ? values[0] : null;\n\t        };\n\t        /**\n\t         * Checks for existence of header by given name.\n\t         */\n\t        Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n\t        /**\n\t         * Returns the names of the headers\n\t         */\n\t        Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n\t        /**\n\t         * Sets or overrides header value for given name.\n\t         */\n\t        Headers.prototype.set = function (name, value) {\n\t            if (Array.isArray(value)) {\n\t                if (value.length) {\n\t                    this._headers.set(name.toLowerCase(), [value.join(',')]);\n\t                }\n\t            }\n\t            else {\n\t                this._headers.set(name.toLowerCase(), [value]);\n\t            }\n\t            this.mayBeSetNormalizedName(name);\n\t        };\n\t        /**\n\t         * Returns values of all headers.\n\t         */\n\t        Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n\t        /**\n\t         * Returns string of all headers.\n\t         */\n\t        // TODO(vicb): returns {[name: string]: string[]}\n\t        Headers.prototype.toJSON = function () {\n\t            var _this = this;\n\t            var serialized = {};\n\t            this._headers.forEach(function (values, name) {\n\t                var split = [];\n\t                values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n\t                serialized[_this._normalizedNames.get(name)] = split;\n\t            });\n\t            return serialized;\n\t        };\n\t        /**\n\t         * Returns list of header values for a given name.\n\t         */\n\t        Headers.prototype.getAll = function (name) {\n\t            return this.has(name) ? this._headers.get(name.toLowerCase()) : null;\n\t        };\n\t        /**\n\t         * This method is not implemented.\n\t         */\n\t        Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n\t        Headers.prototype.mayBeSetNormalizedName = function (name) {\n\t            var lcName = name.toLowerCase();\n\t            if (!this._normalizedNames.has(lcName)) {\n\t                this._normalizedNames.set(lcName, name);\n\t            }\n\t        };\n\t        return Headers;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Creates a response options object to be optionally provided when instantiating a\n\t     * {@link Response}.\n\t     *\n\t     * This class is based on the `ResponseInit` description in the [Fetch\n\t     * Spec](https://fetch.spec.whatwg.org/#responseinit).\n\t     *\n\t     * All values are null by default. Typical defaults can be found in the\n\t     * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n\t     *\n\t     * This class may be used in tests to build {@link Response Responses} for\n\t     * mock responses (see {@link MockBackend}).\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n\t     *\n\t     * ```typescript\n\t     * import {ResponseOptions, Response} from '@angular/http';\n\t     *\n\t     * var options = new ResponseOptions({\n\t     *   body: '{\"name\":\"Jeff\"}'\n\t     * });\n\t     * var res = new Response(options);\n\t     *\n\t     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var ResponseOptions = (function () {\n\t        function ResponseOptions(_a) {\n\t            var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n\t            this.body = body != null ? body : null;\n\t            this.status = status != null ? status : null;\n\t            this.headers = headers != null ? headers : null;\n\t            this.statusText = statusText != null ? statusText : null;\n\t            this.type = type != null ? type : null;\n\t            this.url = url != null ? url : null;\n\t        }\n\t        /**\n\t         * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n\t         * override\n\t         * existing values. This method will not change the values of the instance on which it is being\n\t         * called.\n\t         *\n\t         * This may be useful when sharing a base `ResponseOptions` object inside tests,\n\t         * where certain properties may change from test to test.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n\t         *\n\t         * ```typescript\n\t         * import {ResponseOptions, Response} from '@angular/http';\n\t         *\n\t         * var options = new ResponseOptions({\n\t         *   body: {name: 'Jeff'}\n\t         * });\n\t         * var res = new Response(options.merge({\n\t         *   url: 'https://google.com'\n\t         * }));\n\t         * console.log('options.url:', options.url); // null\n\t         * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n\t         * console.log('res.url:', res.url); // https://google.com\n\t         * ```\n\t         */\n\t        ResponseOptions.prototype.merge = function (options) {\n\t            return new ResponseOptions({\n\t                body: options && options.body != null ? options.body : this.body,\n\t                status: options && options.status != null ? options.status : this.status,\n\t                headers: options && options.headers != null ? options.headers : this.headers,\n\t                statusText: options && options.statusText != null ? options.statusText : this.statusText,\n\t                type: options && options.type != null ? options.type : this.type,\n\t                url: options && options.url != null ? options.url : this.url,\n\t            });\n\t        };\n\t        return ResponseOptions;\n\t    }());\n\t    /**\n\t     * Subclass of {@link ResponseOptions}, with default values.\n\t     *\n\t     * Default values:\n\t     *  * status: 200\n\t     *  * headers: empty {@link Headers} object\n\t     *\n\t     * This class could be extended and bound to the {@link ResponseOptions} class\n\t     * when configuring an {@link Injector}, in order to override the default options\n\t     * used by {@link Http} to create {@link Response Responses}.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n\t     *\n\t     * ```typescript\n\t     * import {provide} from '@angular/core';\n\t     * import {bootstrap} from '@angular/platform-browser/browser';\n\t     * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n\t     * '@angular/http';\n\t     * import {App} from './myapp';\n\t     *\n\t     * class MyOptions extends BaseResponseOptions {\n\t     *   headers:Headers = new Headers({network: 'github'});\n\t     * }\n\t     *\n\t     * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n\t     * ```\n\t     *\n\t     * The options could also be extended when manually creating a {@link Response}\n\t     * object.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n\t     *\n\t     * ```\n\t     * import {BaseResponseOptions, Response} from '@angular/http';\n\t     *\n\t     * var options = new BaseResponseOptions();\n\t     * var res = new Response(options.merge({\n\t     *   body: 'Angular',\n\t     *   headers: new Headers({framework: 'angular'})\n\t     * }));\n\t     * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n\t     * console.log('res.text():', res.text()); // Angular;\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var BaseResponseOptions = (function (_super) {\n\t        __extends$1(BaseResponseOptions, _super);\n\t        function BaseResponseOptions() {\n\t            _super.call(this, { status: 200, statusText: 'Ok', type: exports.ResponseType.Default, headers: new Headers() });\n\t        }\n\t        BaseResponseOptions.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        BaseResponseOptions.ctorParameters = [];\n\t        return BaseResponseOptions;\n\t    }(ResponseOptions));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Abstract class from which real backends are derived.\n\t     *\n\t     * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n\t     * {@link Request}.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ConnectionBackend = (function () {\n\t        function ConnectionBackend() {\n\t        }\n\t        return ConnectionBackend;\n\t    }());\n\t    /**\n\t     * Abstract class from which real connections are derived.\n\t     *\n\t     * @experimental\n\t     */\n\t    var Connection = (function () {\n\t        function Connection() {\n\t        }\n\t        return Connection;\n\t    }());\n\t    /**\n\t     * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n\t     *\n\t     * @experimental\n\t     */\n\t    var XSRFStrategy = (function () {\n\t        function XSRFStrategy() {\n\t        }\n\t        return XSRFStrategy;\n\t    }());\n\t\n\t    function normalizeMethodName(method) {\n\t        if (typeof method !== 'string')\n\t            return method;\n\t        switch (method.toUpperCase()) {\n\t            case 'GET':\n\t                return exports.RequestMethod.Get;\n\t            case 'POST':\n\t                return exports.RequestMethod.Post;\n\t            case 'PUT':\n\t                return exports.RequestMethod.Put;\n\t            case 'DELETE':\n\t                return exports.RequestMethod.Delete;\n\t            case 'OPTIONS':\n\t                return exports.RequestMethod.Options;\n\t            case 'HEAD':\n\t                return exports.RequestMethod.Head;\n\t            case 'PATCH':\n\t                return exports.RequestMethod.Patch;\n\t        }\n\t        throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n\t    }\n\t    var isSuccess = function (status) { return (status >= 200 && status < 300); };\n\t    function getResponseURL(xhr) {\n\t        if ('responseURL' in xhr) {\n\t            return xhr.responseURL;\n\t        }\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t            return xhr.getResponseHeader('X-Request-URL');\n\t        }\n\t        return;\n\t    }\n\t    function stringToArrayBuffer(input) {\n\t        var view = new Uint16Array(input.length);\n\t        for (var i = 0, strLen = input.length; i < strLen; i++) {\n\t            view[i] = input.charCodeAt(i);\n\t        }\n\t        return view.buffer;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    function paramParser(rawParams) {\n\t        if (rawParams === void 0) { rawParams = ''; }\n\t        var map = new Map();\n\t        if (rawParams.length > 0) {\n\t            var params = rawParams.split('&');\n\t            params.forEach(function (param) {\n\t                var eqIdx = param.indexOf('=');\n\t                var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n\t                var list = map.get(key) || [];\n\t                list.push(val);\n\t                map.set(key, list);\n\t            });\n\t        }\n\t        return map;\n\t    }\n\t    /**\n\t     * @experimental\n\t     **/\n\t    var QueryEncoder = (function () {\n\t        function QueryEncoder() {\n\t        }\n\t        QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n\t        QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n\t        return QueryEncoder;\n\t    }());\n\t    function standardEncoding(v) {\n\t        return encodeURIComponent(v)\n\t            .replace(/%40/gi, '@')\n\t            .replace(/%3A/gi, ':')\n\t            .replace(/%24/gi, '$')\n\t            .replace(/%2C/gi, ',')\n\t            .replace(/%3B/gi, ';')\n\t            .replace(/%2B/gi, '+')\n\t            .replace(/%3D/gi, '=')\n\t            .replace(/%3F/gi, '?')\n\t            .replace(/%2F/gi, '/');\n\t    }\n\t    /**\n\t     * Map-like representation of url search parameters, based on\n\t     * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n\t     * with several extensions for merging URLSearchParams objects:\n\t     *   - setAll()\n\t     *   - appendAll()\n\t     *   - replaceAll()\n\t     *\n\t     * This class accepts an optional second parameter of ${@link QueryEncoder},\n\t     * which is used to serialize parameters before making a request. By default,\n\t     * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n\t     * and then un-encodes certain characters that are allowed to be part of the query\n\t     * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n\t     *\n\t     * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n\t     *\n\t     * If the set of allowed query characters is not acceptable for a particular backend,\n\t     * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n\t     *\n\t     * ```\n\t     * import {URLSearchParams, QueryEncoder} from '@angular/http';\n\t     * class MyQueryEncoder extends QueryEncoder {\n\t     *   encodeKey(k: string): string {\n\t     *     return myEncodingFunction(k);\n\t     *   }\n\t     *\n\t     *   encodeValue(v: string): string {\n\t     *     return myEncodingFunction(v);\n\t     *   }\n\t     * }\n\t     *\n\t     * let params = new URLSearchParams('', new MyQueryEncoder());\n\t     * ```\n\t     * @experimental\n\t     */\n\t    var URLSearchParams = (function () {\n\t        function URLSearchParams(rawParams, queryEncoder) {\n\t            if (rawParams === void 0) { rawParams = ''; }\n\t            if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n\t            this.rawParams = rawParams;\n\t            this.queryEncoder = queryEncoder;\n\t            this.paramsMap = paramParser(rawParams);\n\t        }\n\t        URLSearchParams.prototype.clone = function () {\n\t            var clone = new URLSearchParams('', this.queryEncoder);\n\t            clone.appendAll(this);\n\t            return clone;\n\t        };\n\t        URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n\t        URLSearchParams.prototype.get = function (param) {\n\t            var storedParam = this.paramsMap.get(param);\n\t            return Array.isArray(storedParam) ? storedParam[0] : null;\n\t        };\n\t        URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n\t        URLSearchParams.prototype.set = function (param, val) {\n\t            if (val === void 0 || val === null) {\n\t                this.delete(param);\n\t                return;\n\t            }\n\t            var list = this.paramsMap.get(param) || [];\n\t            list.length = 0;\n\t            list.push(val);\n\t            this.paramsMap.set(param, list);\n\t        };\n\t        // A merge operation\n\t        // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n\t        //\n\t        // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n\t        //\n\t        // TODO(@caitp): document this better\n\t        URLSearchParams.prototype.setAll = function (searchParams) {\n\t            var _this = this;\n\t            searchParams.paramsMap.forEach(function (value, param) {\n\t                var list = _this.paramsMap.get(param) || [];\n\t                list.length = 0;\n\t                list.push(value[0]);\n\t                _this.paramsMap.set(param, list);\n\t            });\n\t        };\n\t        URLSearchParams.prototype.append = function (param, val) {\n\t            if (val === void 0 || val === null)\n\t                return;\n\t            var list = this.paramsMap.get(param) || [];\n\t            list.push(val);\n\t            this.paramsMap.set(param, list);\n\t        };\n\t        // A merge operation\n\t        // For each name-values pair in `searchParams`, perform `append(name, value)`\n\t        // for each value in `values`.\n\t        //\n\t        // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n\t        //\n\t        // TODO(@caitp): document this better\n\t        URLSearchParams.prototype.appendAll = function (searchParams) {\n\t            var _this = this;\n\t            searchParams.paramsMap.forEach(function (value, param) {\n\t                var list = _this.paramsMap.get(param) || [];\n\t                for (var i = 0; i < value.length; ++i) {\n\t                    list.push(value[i]);\n\t                }\n\t                _this.paramsMap.set(param, list);\n\t            });\n\t        };\n\t        // A merge operation\n\t        // For each name-values pair in `searchParams`, perform `delete(name)`,\n\t        // followed by `set(name, values)`\n\t        //\n\t        // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n\t        //\n\t        // TODO(@caitp): document this better\n\t        URLSearchParams.prototype.replaceAll = function (searchParams) {\n\t            var _this = this;\n\t            searchParams.paramsMap.forEach(function (value, param) {\n\t                var list = _this.paramsMap.get(param) || [];\n\t                list.length = 0;\n\t                for (var i = 0; i < value.length; ++i) {\n\t                    list.push(value[i]);\n\t                }\n\t                _this.paramsMap.set(param, list);\n\t            });\n\t        };\n\t        URLSearchParams.prototype.toString = function () {\n\t            var _this = this;\n\t            var paramsList = [];\n\t            this.paramsMap.forEach(function (values, k) {\n\t                values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n\t            });\n\t            return paramsList.join('&');\n\t        };\n\t        URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n\t        return URLSearchParams;\n\t    }());\n\t\n\t    /**\n\t     * HTTP request body used by both {@link Request} and {@link Response}\n\t     * https://fetch.spec.whatwg.org/#body\n\t     */\n\t    var Body = (function () {\n\t        function Body() {\n\t        }\n\t        /**\n\t         * Attempts to return body as parsed `JSON` object, or raises an exception.\n\t         */\n\t        Body.prototype.json = function () {\n\t            if (typeof this._body === 'string') {\n\t                return JSON.parse(this._body);\n\t            }\n\t            if (this._body instanceof ArrayBuffer) {\n\t                return JSON.parse(this.text());\n\t            }\n\t            return this._body;\n\t        };\n\t        /**\n\t         * Returns the body as a string, presuming `toString()` can be called on the response body.\n\t         */\n\t        Body.prototype.text = function () {\n\t            if (this._body instanceof URLSearchParams) {\n\t                return this._body.toString();\n\t            }\n\t            if (this._body instanceof ArrayBuffer) {\n\t                return String.fromCharCode.apply(null, new Uint16Array(this._body));\n\t            }\n\t            if (this._body === null) {\n\t                return '';\n\t            }\n\t            if (typeof this._body === 'object') {\n\t                return JSON.stringify(this._body, null, 2);\n\t            }\n\t            return this._body.toString();\n\t        };\n\t        /**\n\t         * Return the body as an ArrayBuffer\n\t         */\n\t        Body.prototype.arrayBuffer = function () {\n\t            if (this._body instanceof ArrayBuffer) {\n\t                return this._body;\n\t            }\n\t            return stringToArrayBuffer(this.text());\n\t        };\n\t        /**\n\t          * Returns the request's body as a Blob, assuming that body exists.\n\t          */\n\t        Body.prototype.blob = function () {\n\t            if (this._body instanceof Blob) {\n\t                return this._body;\n\t            }\n\t            if (this._body instanceof ArrayBuffer) {\n\t                return new Blob([this._body]);\n\t            }\n\t            throw new Error('The request body isn\\'t either a blob or an array buffer');\n\t        };\n\t        return Body;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Creates `Response` instances from provided values.\n\t     *\n\t     * Though this object isn't\n\t     * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n\t     * add data to a view.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n\t     * ```\n\t     *\n\t     * The Response's interface is inspired by the Response constructor defined in the [Fetch\n\t     * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n\t     * can be accessed many times. There are other differences in the implementation, but this is the\n\t     * most significant.\n\t     *\n\t     * @experimental\n\t     */\n\t    var Response = (function (_super) {\n\t        __extends$2(Response, _super);\n\t        function Response(responseOptions) {\n\t            _super.call(this);\n\t            this._body = responseOptions.body;\n\t            this.status = responseOptions.status;\n\t            this.ok = (this.status >= 200 && this.status <= 299);\n\t            this.statusText = responseOptions.statusText;\n\t            this.headers = responseOptions.headers;\n\t            this.type = responseOptions.type;\n\t            this.url = responseOptions.url;\n\t        }\n\t        Response.prototype.toString = function () {\n\t            return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n\t        };\n\t        return Response;\n\t    }(Body));\n\t\n\t    var _nextRequestId = 0;\n\t    var JSONP_HOME = '__ng_jsonp__';\n\t    var _jsonpConnections = null;\n\t    function _getJsonpConnections() {\n\t        var w = typeof window == 'object' ? window : {};\n\t        if (_jsonpConnections === null) {\n\t            _jsonpConnections = w[JSONP_HOME] = {};\n\t        }\n\t        return _jsonpConnections;\n\t    }\n\t    // Make sure not to evaluate this in a non-browser environment!\n\t    var BrowserJsonp = (function () {\n\t        function BrowserJsonp() {\n\t        }\n\t        // Construct a <script> element with the specified URL\n\t        BrowserJsonp.prototype.build = function (url) {\n\t            var node = document.createElement('script');\n\t            node.src = url;\n\t            return node;\n\t        };\n\t        BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n\t        BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n\t        BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n\t            var connections = _getJsonpConnections();\n\t            connections[id] = connection;\n\t        };\n\t        BrowserJsonp.prototype.removeConnection = function (id) {\n\t            var connections = _getJsonpConnections();\n\t            connections[id] = null;\n\t        };\n\t        // Attach the <script> element to the DOM\n\t        BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n\t        // Remove <script> element from the DOM\n\t        BrowserJsonp.prototype.cleanup = function (node) {\n\t            if (node.parentNode) {\n\t                node.parentNode.removeChild((node));\n\t            }\n\t        };\n\t        BrowserJsonp.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        BrowserJsonp.ctorParameters = [];\n\t        return BrowserJsonp;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n\t    var JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n\t    /**\n\t     * Abstract base class for an in-flight JSONP request.\n\t     *\n\t     * @experimental\n\t     */\n\t    var JSONPConnection = (function () {\n\t        function JSONPConnection() {\n\t        }\n\t        return JSONPConnection;\n\t    }());\n\t    var JSONPConnection_ = (function (_super) {\n\t        __extends(JSONPConnection_, _super);\n\t        function JSONPConnection_(req, _dom, baseResponseOptions) {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._dom = _dom;\n\t            this.baseResponseOptions = baseResponseOptions;\n\t            this._finished = false;\n\t            if (req.method !== exports.RequestMethod.Get) {\n\t                throw new TypeError(JSONP_ERR_WRONG_METHOD);\n\t            }\n\t            this.request = req;\n\t            this.response = new rxjs_Observable.Observable(function (responseObserver) {\n\t                _this.readyState = exports.ReadyState.Loading;\n\t                var id = _this._id = _dom.nextRequestID();\n\t                _dom.exposeConnection(id, _this);\n\t                // Workaround Dart\n\t                // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n\t                var callback = _dom.requestCallback(_this._id);\n\t                var url = req.url;\n\t                if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n\t                    url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n\t                }\n\t                else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n\t                    url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n\t                }\n\t                var script = _this._script = _dom.build(url);\n\t                var onLoad = function (event) {\n\t                    if (_this.readyState === exports.ReadyState.Cancelled)\n\t                        return;\n\t                    _this.readyState = exports.ReadyState.Done;\n\t                    _dom.cleanup(script);\n\t                    if (!_this._finished) {\n\t                        var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: exports.ResponseType.Error, url: url });\n\t                        if (baseResponseOptions) {\n\t                            responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n\t                        }\n\t                        responseObserver.error(new Response(responseOptions_1));\n\t                        return;\n\t                    }\n\t                    var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n\t                    if (_this.baseResponseOptions) {\n\t                        responseOptions = _this.baseResponseOptions.merge(responseOptions);\n\t                    }\n\t                    responseObserver.next(new Response(responseOptions));\n\t                    responseObserver.complete();\n\t                };\n\t                var onError = function (error) {\n\t                    if (_this.readyState === exports.ReadyState.Cancelled)\n\t                        return;\n\t                    _this.readyState = exports.ReadyState.Done;\n\t                    _dom.cleanup(script);\n\t                    var responseOptions = new ResponseOptions({ body: error.message, type: exports.ResponseType.Error });\n\t                    if (baseResponseOptions) {\n\t                        responseOptions = baseResponseOptions.merge(responseOptions);\n\t                    }\n\t                    responseObserver.error(new Response(responseOptions));\n\t                };\n\t                script.addEventListener('load', onLoad);\n\t                script.addEventListener('error', onError);\n\t                _dom.send(script);\n\t                return function () {\n\t                    _this.readyState = exports.ReadyState.Cancelled;\n\t                    script.removeEventListener('load', onLoad);\n\t                    script.removeEventListener('error', onError);\n\t                    _this._dom.cleanup(script);\n\t                };\n\t            });\n\t        }\n\t        JSONPConnection_.prototype.finished = function (data) {\n\t            // Don't leak connections\n\t            this._finished = true;\n\t            this._dom.removeConnection(this._id);\n\t            if (this.readyState === exports.ReadyState.Cancelled)\n\t                return;\n\t            this._responseData = data;\n\t        };\n\t        return JSONPConnection_;\n\t    }(JSONPConnection));\n\t    /**\n\t     * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n\t     *\n\t     * @experimental\n\t     */\n\t    var JSONPBackend = (function (_super) {\n\t        __extends(JSONPBackend, _super);\n\t        function JSONPBackend() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        return JSONPBackend;\n\t    }(ConnectionBackend));\n\t    var JSONPBackend_ = (function (_super) {\n\t        __extends(JSONPBackend_, _super);\n\t        function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n\t            _super.call(this);\n\t            this._browserJSONP = _browserJSONP;\n\t            this._baseResponseOptions = _baseResponseOptions;\n\t        }\n\t        JSONPBackend_.prototype.createConnection = function (request) {\n\t            return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n\t        };\n\t        JSONPBackend_.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        JSONPBackend_.ctorParameters = [\n\t            { type: BrowserJsonp, },\n\t            { type: ResponseOptions, },\n\t        ];\n\t        return JSONPBackend_;\n\t    }(JSONPBackend));\n\t\n\t    var XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\t    /**\n\t     * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n\t     * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n\t     * request.\n\t     *\n\t     * This class would typically not be created or interacted with directly inside applications, though\n\t     * the {@link MockConnection} may be interacted with in tests.\n\t     *\n\t     * @experimental\n\t     */\n\t    var XHRConnection = (function () {\n\t        function XHRConnection(req, browserXHR, baseResponseOptions) {\n\t            var _this = this;\n\t            this.request = req;\n\t            this.response = new rxjs_Observable.Observable(function (responseObserver) {\n\t                var _xhr = browserXHR.build();\n\t                _xhr.open(exports.RequestMethod[req.method].toUpperCase(), req.url);\n\t                if (req.withCredentials != null) {\n\t                    _xhr.withCredentials = req.withCredentials;\n\t                }\n\t                // load event handler\n\t                var onLoad = function () {\n\t                    // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n\t                    var status = _xhr.status === 1223 ? 204 : _xhr.status;\n\t                    var body = null;\n\t                    // HTTP 204 means no content\n\t                    if (status !== 204) {\n\t                        // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n\t                        // response/responseType properties were introduced in ResourceLoader Level2 spec\n\t                        // (supported by IE10)\n\t                        body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n\t                        // Implicitly strip a potential XSSI prefix.\n\t                        if (typeof body === 'string') {\n\t                            body = body.replace(XSSI_PREFIX, '');\n\t                        }\n\t                    }\n\t                    // fix status code when it is 0 (0 status is undocumented).\n\t                    // Occurs when accessing file resources or on Android 4.1 stock browser\n\t                    // while retrieving files from application cache.\n\t                    if (status === 0) {\n\t                        status = body ? 200 : 0;\n\t                    }\n\t                    var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n\t                    // IE 9 does not provide the way to get URL of response\n\t                    var url = getResponseURL(_xhr) || req.url;\n\t                    var statusText = _xhr.statusText || 'OK';\n\t                    var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n\t                    if (baseResponseOptions != null) {\n\t                        responseOptions = baseResponseOptions.merge(responseOptions);\n\t                    }\n\t                    var response = new Response(responseOptions);\n\t                    response.ok = isSuccess(status);\n\t                    if (response.ok) {\n\t                        responseObserver.next(response);\n\t                        // TODO(gdi2290): defer complete if array buffer until done\n\t                        responseObserver.complete();\n\t                        return;\n\t                    }\n\t                    responseObserver.error(response);\n\t                };\n\t                // error event handler\n\t                var onError = function (err) {\n\t                    var responseOptions = new ResponseOptions({\n\t                        body: err,\n\t                        type: exports.ResponseType.Error,\n\t                        status: _xhr.status,\n\t                        statusText: _xhr.statusText,\n\t                    });\n\t                    if (baseResponseOptions != null) {\n\t                        responseOptions = baseResponseOptions.merge(responseOptions);\n\t                    }\n\t                    responseObserver.error(new Response(responseOptions));\n\t                };\n\t                _this.setDetectedContentType(req, _xhr);\n\t                if (req.headers != null) {\n\t                    req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n\t                }\n\t                // Select the correct buffer type to store the response\n\t                if (req.responseType != null && _xhr.responseType != null) {\n\t                    switch (req.responseType) {\n\t                        case exports.ResponseContentType.ArrayBuffer:\n\t                            _xhr.responseType = 'arraybuffer';\n\t                            break;\n\t                        case exports.ResponseContentType.Json:\n\t                            _xhr.responseType = 'json';\n\t                            break;\n\t                        case exports.ResponseContentType.Text:\n\t                            _xhr.responseType = 'text';\n\t                            break;\n\t                        case exports.ResponseContentType.Blob:\n\t                            _xhr.responseType = 'blob';\n\t                            break;\n\t                        default:\n\t                            throw new Error('The selected responseType is not supported');\n\t                    }\n\t                }\n\t                _xhr.addEventListener('load', onLoad);\n\t                _xhr.addEventListener('error', onError);\n\t                _xhr.send(_this.request.getBody());\n\t                return function () {\n\t                    _xhr.removeEventListener('load', onLoad);\n\t                    _xhr.removeEventListener('error', onError);\n\t                    _xhr.abort();\n\t                };\n\t            });\n\t        }\n\t        XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n\t            // Skip if a custom Content-Type header is provided\n\t            if (req.headers != null && req.headers.get('Content-Type') != null) {\n\t                return;\n\t            }\n\t            // Set the detected content type\n\t            switch (req.contentType) {\n\t                case ContentType.NONE:\n\t                    break;\n\t                case ContentType.JSON:\n\t                    _xhr.setRequestHeader('content-type', 'application/json');\n\t                    break;\n\t                case ContentType.FORM:\n\t                    _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\t                    break;\n\t                case ContentType.TEXT:\n\t                    _xhr.setRequestHeader('content-type', 'text/plain');\n\t                    break;\n\t                case ContentType.BLOB:\n\t                    var blob = req.blob();\n\t                    if (blob.type) {\n\t                        _xhr.setRequestHeader('content-type', blob.type);\n\t                    }\n\t                    break;\n\t            }\n\t        };\n\t        return XHRConnection;\n\t    }());\n\t    /**\n\t     * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n\t     * using a cookie. See {@link https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)}\n\t     * for more information on XSRF.\n\t     *\n\t     * Applications can configure custom cookie and header names by binding an instance of this class\n\t     * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n\t     * details.\n\t     *\n\t     * @experimental\n\t     */\n\t    var CookieXSRFStrategy = (function () {\n\t        function CookieXSRFStrategy(_cookieName, _headerName) {\n\t            if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n\t            if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n\t            this._cookieName = _cookieName;\n\t            this._headerName = _headerName;\n\t        }\n\t        CookieXSRFStrategy.prototype.configureRequest = function (req) {\n\t            var xsrfToken = _angular_platformBrowser.__platform_browser_private__.getDOM().getCookie(this._cookieName);\n\t            if (xsrfToken) {\n\t                req.headers.set(this._headerName, xsrfToken);\n\t            }\n\t        };\n\t        return CookieXSRFStrategy;\n\t    }());\n\t    /**\n\t     * Creates {@link XHRConnection} instances.\n\t     *\n\t     * This class would typically not be used by end users, but could be\n\t     * overridden if a different backend implementation should be used,\n\t     * such as in a node backend.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n\t     * @Component({\n\t     *   viewProviders: [\n\t     *     HTTP_PROVIDERS,\n\t     *     {provide: Http, useFactory: (backend, options) => {\n\t     *       return new Http(backend, options);\n\t     *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n\t     * })\n\t     * class MyComponent {\n\t     *   constructor(http:Http) {\n\t     *     http.request('people.json').subscribe(res => this.people = res.json());\n\t     *   }\n\t     * }\n\t     * ```\n\t     * @experimental\n\t     */\n\t    var XHRBackend = (function () {\n\t        function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n\t            this._browserXHR = _browserXHR;\n\t            this._baseResponseOptions = _baseResponseOptions;\n\t            this._xsrfStrategy = _xsrfStrategy;\n\t        }\n\t        XHRBackend.prototype.createConnection = function (request) {\n\t            this._xsrfStrategy.configureRequest(request);\n\t            return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n\t        };\n\t        XHRBackend.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        XHRBackend.ctorParameters = [\n\t            { type: BrowserXhr, },\n\t            { type: ResponseOptions, },\n\t            { type: XSRFStrategy, },\n\t        ];\n\t        return XHRBackend;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Creates a request options object to be optionally provided when instantiating a\n\t     * {@link Request}.\n\t     *\n\t     * This class is based on the `RequestInit` description in the [Fetch\n\t     * Spec](https://fetch.spec.whatwg.org/#requestinit).\n\t     *\n\t     * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n\t     * class, which sub-classes `RequestOptions`.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n\t     *\n\t     * ```typescript\n\t     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n\t     *\n\t     * var options = new RequestOptions({\n\t     *   method: RequestMethod.Post,\n\t     *   url: 'https://google.com'\n\t     * });\n\t     * var req = new Request(options);\n\t     * console.log('req.method:', RequestMethod[req.method]); // Post\n\t     * console.log('options.url:', options.url); // https://google.com\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var RequestOptions = (function () {\n\t        function RequestOptions(_a) {\n\t            var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, withCredentials = _b.withCredentials, responseType = _b.responseType;\n\t            this.method = method != null ? normalizeMethodName(method) : null;\n\t            this.headers = headers != null ? headers : null;\n\t            this.body = body != null ? body : null;\n\t            this.url = url != null ? url : null;\n\t            this.search =\n\t                search != null ? (typeof search === 'string' ? new URLSearchParams(search) : search) : null;\n\t            this.withCredentials = withCredentials != null ? withCredentials : null;\n\t            this.responseType = responseType != null ? responseType : null;\n\t        }\n\t        /**\n\t         * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n\t         * existing values. This method will not change the values of the instance on which it is being\n\t         * called.\n\t         *\n\t         * Note that `headers` and `search` will override existing values completely if present in\n\t         * the `options` object. If these values should be merged, it should be done prior to calling\n\t         * `merge` on the `RequestOptions` instance.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n\t         *\n\t         * ```typescript\n\t         * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n\t         *\n\t         * var options = new RequestOptions({\n\t         *   method: RequestMethod.Post\n\t         * });\n\t         * var req = new Request(options.merge({\n\t         *   url: 'https://google.com'\n\t         * }));\n\t         * console.log('req.method:', RequestMethod[req.method]); // Post\n\t         * console.log('options.url:', options.url); // null\n\t         * console.log('req.url:', req.url); // https://google.com\n\t         * ```\n\t         */\n\t        RequestOptions.prototype.merge = function (options) {\n\t            return new RequestOptions({\n\t                method: options && options.method != null ? options.method : this.method,\n\t                headers: options && options.headers != null ? options.headers : this.headers,\n\t                body: options && options.body != null ? options.body : this.body,\n\t                url: options && options.url != null ? options.url : this.url,\n\t                search: options && options.search != null ?\n\t                    (typeof options.search === 'string' ? new URLSearchParams(options.search) :\n\t                        options.search.clone()) :\n\t                    this.search,\n\t                withCredentials: options && options.withCredentials != null ? options.withCredentials :\n\t                    this.withCredentials,\n\t                responseType: options && options.responseType != null ? options.responseType :\n\t                    this.responseType\n\t            });\n\t        };\n\t        return RequestOptions;\n\t    }());\n\t    /**\n\t     * Subclass of {@link RequestOptions}, with default values.\n\t     *\n\t     * Default values:\n\t     *  * method: {@link RequestMethod RequestMethod.Get}\n\t     *  * headers: empty {@link Headers} object\n\t     *\n\t     * This class could be extended and bound to the {@link RequestOptions} class\n\t     * when configuring an {@link Injector}, in order to override the default options\n\t     * used by {@link Http} to create and send {@link Request Requests}.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))\n\t     *\n\t     * ```typescript\n\t     * import {provide} from '@angular/core';\n\t     * import {bootstrap} from '@angular/platform-browser/browser';\n\t     * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '@angular/http';\n\t     * import {App} from './myapp';\n\t     *\n\t     * class MyOptions extends BaseRequestOptions {\n\t     *   search: string = 'coreTeam=true';\n\t     * }\n\t     *\n\t     * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);\n\t     * ```\n\t     *\n\t     * The options could also be extended when manually creating a {@link Request}\n\t     * object.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))\n\t     *\n\t     * ```\n\t     * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n\t     *\n\t     * var options = new BaseRequestOptions();\n\t     * var req = new Request(options.merge({\n\t     *   method: RequestMethod.Post,\n\t     *   url: 'https://google.com'\n\t     * }));\n\t     * console.log('req.method:', RequestMethod[req.method]); // Post\n\t     * console.log('options.url:', options.url); // null\n\t     * console.log('req.url:', req.url); // https://google.com\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var BaseRequestOptions = (function (_super) {\n\t        __extends$3(BaseRequestOptions, _super);\n\t        function BaseRequestOptions() {\n\t            _super.call(this, { method: exports.RequestMethod.Get, headers: new Headers() });\n\t        }\n\t        BaseRequestOptions.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        BaseRequestOptions.ctorParameters = [];\n\t        return BaseRequestOptions;\n\t    }(RequestOptions));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    // TODO(jeffbcross): properly implement body accessors\n\t    /**\n\t     * Creates `Request` instances from provided values.\n\t     *\n\t     * The Request's interface is inspired by the Request constructor defined in the [Fetch\n\t     * Spec](https://fetch.spec.whatwg.org/#request-class),\n\t     * but is considered a static value whose body can be accessed many times. There are other\n\t     * differences in the implementation, but this is the most significant.\n\t     *\n\t     * `Request` instances are typically created by higher-level classes, like {@link Http} and\n\t     * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n\t     * One such example is when creating services that wrap higher-level services, like {@link Http},\n\t     * where it may be useful to generate a `Request` with arbitrary headers and search params.\n\t     *\n\t     * ```typescript\n\t     * import {Injectable, Injector} from '@angular/core';\n\t     * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n\t     *\n\t     * @Injectable()\n\t     * class AutoAuthenticator {\n\t     *   constructor(public http:Http) {}\n\t     *   request(url:string) {\n\t     *     return this.http.request(new Request({\n\t     *       method: RequestMethod.Get,\n\t     *       url: url,\n\t     *       search: 'password=123'\n\t     *     }));\n\t     *   }\n\t     * }\n\t     *\n\t     * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n\t     * var authenticator = injector.get(AutoAuthenticator);\n\t     * authenticator.request('people.json').subscribe(res => {\n\t     *   //URL should have included '?password=123'\n\t     *   console.log('people', res.json());\n\t     * });\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var Request = (function (_super) {\n\t        __extends$5(Request, _super);\n\t        function Request(requestOptions) {\n\t            _super.call(this);\n\t            // TODO: assert that url is present\n\t            var url = requestOptions.url;\n\t            this.url = requestOptions.url;\n\t            if (requestOptions.search) {\n\t                var search = requestOptions.search.toString();\n\t                if (search.length > 0) {\n\t                    var prefix = '?';\n\t                    if (this.url.indexOf('?') != -1) {\n\t                        prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n\t                    }\n\t                    // TODO: just delete search-query-looking string in url?\n\t                    this.url = url + prefix + search;\n\t                }\n\t            }\n\t            this._body = requestOptions.body;\n\t            this.method = normalizeMethodName(requestOptions.method);\n\t            // TODO(jeffbcross): implement behavior\n\t            // Defaults to 'omit', consistent with browser\n\t            this.headers = new Headers(requestOptions.headers);\n\t            this.contentType = this.detectContentType();\n\t            this.withCredentials = requestOptions.withCredentials;\n\t            this.responseType = requestOptions.responseType;\n\t        }\n\t        /**\n\t         * Returns the content type enum based on header options.\n\t         */\n\t        Request.prototype.detectContentType = function () {\n\t            switch (this.headers.get('content-type')) {\n\t                case 'application/json':\n\t                    return ContentType.JSON;\n\t                case 'application/x-www-form-urlencoded':\n\t                    return ContentType.FORM;\n\t                case 'multipart/form-data':\n\t                    return ContentType.FORM_DATA;\n\t                case 'text/plain':\n\t                case 'text/html':\n\t                    return ContentType.TEXT;\n\t                case 'application/octet-stream':\n\t                    return ContentType.BLOB;\n\t                default:\n\t                    return this.detectContentTypeFromBody();\n\t            }\n\t        };\n\t        /**\n\t         * Returns the content type of request's body based on its type.\n\t         */\n\t        Request.prototype.detectContentTypeFromBody = function () {\n\t            if (this._body == null) {\n\t                return ContentType.NONE;\n\t            }\n\t            else if (this._body instanceof URLSearchParams) {\n\t                return ContentType.FORM;\n\t            }\n\t            else if (this._body instanceof FormData) {\n\t                return ContentType.FORM_DATA;\n\t            }\n\t            else if (this._body instanceof Blob$1) {\n\t                return ContentType.BLOB;\n\t            }\n\t            else if (this._body instanceof ArrayBuffer$1) {\n\t                return ContentType.ARRAY_BUFFER;\n\t            }\n\t            else if (this._body && typeof this._body == 'object') {\n\t                return ContentType.JSON;\n\t            }\n\t            else {\n\t                return ContentType.TEXT;\n\t            }\n\t        };\n\t        /**\n\t         * Returns the request's body according to its type. If body is undefined, return\n\t         * null.\n\t         */\n\t        Request.prototype.getBody = function () {\n\t            switch (this.contentType) {\n\t                case ContentType.JSON:\n\t                    return this.text();\n\t                case ContentType.FORM:\n\t                    return this.text();\n\t                case ContentType.FORM_DATA:\n\t                    return this._body;\n\t                case ContentType.TEXT:\n\t                    return this.text();\n\t                case ContentType.BLOB:\n\t                    return this.blob();\n\t                case ContentType.ARRAY_BUFFER:\n\t                    return this.arrayBuffer();\n\t                default:\n\t                    return null;\n\t            }\n\t        };\n\t        return Request;\n\t    }(Body));\n\t    var noop = function () { };\n\t    var w = typeof window == 'object' ? window : noop;\n\t    var FormData = w['FormData'] || noop;\n\t    var Blob$1 = w['Blob'] || noop;\n\t    var ArrayBuffer$1 = w['ArrayBuffer'] || noop;\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function httpRequest(backend, request) {\n\t        return backend.createConnection(request).response;\n\t    }\n\t    function mergeOptions(defaultOpts, providedOpts, method, url) {\n\t        var newOptions = defaultOpts;\n\t        if (providedOpts) {\n\t            // Hack so Dart can used named parameters\n\t            return newOptions.merge(new RequestOptions({\n\t                method: providedOpts.method || method,\n\t                url: providedOpts.url || url,\n\t                search: providedOpts.search,\n\t                headers: providedOpts.headers,\n\t                body: providedOpts.body,\n\t                withCredentials: providedOpts.withCredentials,\n\t                responseType: providedOpts.responseType\n\t            }));\n\t        }\n\t        return newOptions.merge(new RequestOptions({ method: method, url: url }));\n\t    }\n\t    /**\n\t     * Performs http requests using `XMLHttpRequest` as the default backend.\n\t     *\n\t     * `Http` is available as an injectable class, with methods to perform http requests. Calling\n\t     * `request` returns an `Observable` which will emit a single {@link Response} when a\n\t     * response is received.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * import {Http, HTTP_PROVIDERS} from '@angular/http';\n\t     * import 'rxjs/add/operator/map'\n\t     * @Component({\n\t     *   selector: 'http-app',\n\t     *   viewProviders: [HTTP_PROVIDERS],\n\t     *   templateUrl: 'people.html'\n\t     * })\n\t     * class PeopleComponent {\n\t     *   constructor(http: Http) {\n\t     *     http.get('people.json')\n\t     *       // Call map on the response observable to get the parsed people object\n\t     *       .map(res => res.json())\n\t     *       // Subscribe to the observable to get the parsed people object and attach it to the\n\t     *       // component\n\t     *       .subscribe(people => this.people = people);\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n\t     * ```\n\t     *\n\t     * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n\t     * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n\t     * the {@link XHRBackend} provider, as in the following example:\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * import {BaseRequestOptions, Http} from '@angular/http';\n\t     * import {MockBackend} from '@angular/http/testing';\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   BaseRequestOptions,\n\t     *   MockBackend,\n\t     *   {provide: Http, useFactory:\n\t     *       function(backend, defaultOptions) {\n\t     *         return new Http(backend, defaultOptions);\n\t     *       },\n\t     *       deps: [MockBackend, BaseRequestOptions]}\n\t     * ]);\n\t     * var http = injector.get(Http);\n\t     * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var Http = (function () {\n\t        function Http(_backend, _defaultOptions) {\n\t            this._backend = _backend;\n\t            this._defaultOptions = _defaultOptions;\n\t        }\n\t        /**\n\t         * Performs any type of http request. First argument is required, and can either be a url or\n\t         * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n\t         * object can be provided as the 2nd argument. The options object will be merged with the values\n\t         * of {@link BaseRequestOptions} before performing the request.\n\t         */\n\t        Http.prototype.request = function (url, options) {\n\t            var responseObservable;\n\t            if (typeof url === 'string') {\n\t                responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url)));\n\t            }\n\t            else if (url instanceof Request) {\n\t                responseObservable = httpRequest(this._backend, url);\n\t            }\n\t            else {\n\t                throw new Error('First argument must be a url string or Request instance.');\n\t            }\n\t            return responseObservable;\n\t        };\n\t        /**\n\t         * Performs a request with `get` http method.\n\t         */\n\t        Http.prototype.get = function (url, options) {\n\t            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url)));\n\t        };\n\t        /**\n\t         * Performs a request with `post` http method.\n\t         */\n\t        Http.prototype.post = function (url, body, options) {\n\t            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Post, url)));\n\t        };\n\t        /**\n\t         * Performs a request with `put` http method.\n\t         */\n\t        Http.prototype.put = function (url, body, options) {\n\t            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Put, url)));\n\t        };\n\t        /**\n\t         * Performs a request with `delete` http method.\n\t         */\n\t        Http.prototype.delete = function (url, options) {\n\t            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Delete, url)));\n\t        };\n\t        /**\n\t         * Performs a request with `patch` http method.\n\t         */\n\t        Http.prototype.patch = function (url, body, options) {\n\t            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Patch, url)));\n\t        };\n\t        /**\n\t         * Performs a request with `head` http method.\n\t         */\n\t        Http.prototype.head = function (url, options) {\n\t            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Head, url)));\n\t        };\n\t        /**\n\t         * Performs a request with `options` http method.\n\t         */\n\t        Http.prototype.options = function (url, options) {\n\t            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Options, url)));\n\t        };\n\t        Http.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Http.ctorParameters = [\n\t            { type: ConnectionBackend, },\n\t            { type: RequestOptions, },\n\t        ];\n\t        return Http;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var Jsonp = (function (_super) {\n\t        __extends$4(Jsonp, _super);\n\t        function Jsonp(backend, defaultOptions) {\n\t            _super.call(this, backend, defaultOptions);\n\t        }\n\t        /**\n\t         * Performs any type of http request. First argument is required, and can either be a url or\n\t         * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n\t         * object can be provided as the 2nd argument. The options object will be merged with the values\n\t         * of {@link BaseRequestOptions} before performing the request.\n\t         *\n\t         * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n\t         * supported by all current browsers. Because JSONP creates a `<script>` element with\n\t         * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n\t         * source could expose your application to XSS risks. Data exposed by JSONP may also be\n\t         * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n\t         * future security issues (e.g. content sniffing).  For more detail, see the\n\t         * [Security Guide](http://g.co/ng/security).\n\t         */\n\t        Jsonp.prototype.request = function (url, options) {\n\t            var responseObservable;\n\t            if (typeof url === 'string') {\n\t                url =\n\t                    new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url));\n\t            }\n\t            if (url instanceof Request) {\n\t                if (url.method !== exports.RequestMethod.Get) {\n\t                    throw new Error('JSONP requests must use GET request method.');\n\t                }\n\t                responseObservable = httpRequest(this._backend, url);\n\t            }\n\t            else {\n\t                throw new Error('First argument must be a url string or Request instance.');\n\t            }\n\t            return responseObservable;\n\t        };\n\t        Jsonp.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Jsonp.ctorParameters = [\n\t            { type: ConnectionBackend, },\n\t            { type: RequestOptions, },\n\t        ];\n\t        return Jsonp;\n\t    }(Http));\n\t\n\t    function _createDefaultCookieXSRFStrategy() {\n\t        return new CookieXSRFStrategy();\n\t    }\n\t    function httpFactory(xhrBackend, requestOptions) {\n\t        return new Http(xhrBackend, requestOptions);\n\t    }\n\t    function jsonpFactory(jsonpBackend, requestOptions) {\n\t        return new Jsonp(jsonpBackend, requestOptions);\n\t    }\n\t    /**\n\t     * The module that includes http's providers\n\t     *\n\t     * @experimental\n\t     */\n\t    var HttpModule = (function () {\n\t        function HttpModule() {\n\t        }\n\t        HttpModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        providers: [\n\t                            // TODO(pascal): use factory type annotations once supported in DI\n\t                            // issue: https://github.com/angular/angular/issues/3183\n\t                            { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n\t                            BrowserXhr,\n\t                            { provide: RequestOptions, useClass: BaseRequestOptions },\n\t                            { provide: ResponseOptions, useClass: BaseResponseOptions },\n\t                            XHRBackend,\n\t                            { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n\t                        ],\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        HttpModule.ctorParameters = [];\n\t        return HttpModule;\n\t    }());\n\t    /**\n\t     * The module that includes jsonp's providers\n\t     *\n\t     * @experimental\n\t     */\n\t    var JsonpModule = (function () {\n\t        function JsonpModule() {\n\t        }\n\t        JsonpModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        providers: [\n\t                            // TODO(pascal): use factory type annotations once supported in DI\n\t                            // issue: https://github.com/angular/angular/issues/3183\n\t                            { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n\t                            BrowserJsonp,\n\t                            { provide: RequestOptions, useClass: BaseRequestOptions },\n\t                            { provide: ResponseOptions, useClass: BaseResponseOptions },\n\t                            { provide: JSONPBackend, useClass: JSONPBackend_ },\n\t                        ],\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        JsonpModule.ctorParameters = [];\n\t        return JsonpModule;\n\t    }());\n\t\n\t    exports.BrowserXhr = BrowserXhr;\n\t    exports.JSONPBackend = JSONPBackend;\n\t    exports.JSONPConnection = JSONPConnection;\n\t    exports.CookieXSRFStrategy = CookieXSRFStrategy;\n\t    exports.XHRBackend = XHRBackend;\n\t    exports.XHRConnection = XHRConnection;\n\t    exports.BaseRequestOptions = BaseRequestOptions;\n\t    exports.RequestOptions = RequestOptions;\n\t    exports.BaseResponseOptions = BaseResponseOptions;\n\t    exports.ResponseOptions = ResponseOptions;\n\t    exports.Headers = Headers;\n\t    exports.Http = Http;\n\t    exports.Jsonp = Jsonp;\n\t    exports.HttpModule = HttpModule;\n\t    exports.JsonpModule = JsonpModule;\n\t    exports.Connection = Connection;\n\t    exports.ConnectionBackend = ConnectionBackend;\n\t    exports.XSRFStrategy = XSRFStrategy;\n\t    exports.Request = Request;\n\t    exports.Response = Response;\n\t    exports.QueryEncoder = QueryEncoder;\n\t    exports.URLSearchParams = URLSearchParams;\n\t\n\t}));\n\n/***/ },\n\n/***/ 17:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v3.2.4\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(57), __webpack_require__(5), __webpack_require__(42), __webpack_require__(6), __webpack_require__(71), __webpack_require__(72), __webpack_require__(75), __webpack_require__(78), __webpack_require__(80), __webpack_require__(33), __webpack_require__(49), __webpack_require__(34), __webpack_require__(1), __webpack_require__(73), __webpack_require__(74), __webpack_require__(28), __webpack_require__(45), __webpack_require__(81), __webpack_require__(24), __webpack_require__(22), __webpack_require__(48)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core', 'rxjs/BehaviorSubject', 'rxjs/Subject', 'rxjs/observable/from', 'rxjs/observable/of', 'rxjs/operator/concatMap', 'rxjs/operator/every', 'rxjs/operator/first', 'rxjs/operator/map', 'rxjs/operator/mergeMap', 'rxjs/operator/reduce', 'rxjs/Observable', 'rxjs/operator/catch', 'rxjs/operator/concatAll', 'rxjs/util/EmptyError', 'rxjs/observable/fromPromise', 'rxjs/operator/last', 'rxjs/operator/mergeAll', '@angular/platform-browser', 'rxjs/operator/filter'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.router = global.ng.router || {}),global.ng.common,global.ng.core,global.Rx,global.Rx,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.platformBrowser,global.Rx.Observable.prototype));\n\t}(this, function (exports,_angular_common,_angular_core,rxjs_BehaviorSubject,rxjs_Subject,rxjs_observable_from,rxjs_observable_of,rxjs_operator_concatMap,rxjs_operator_every,rxjs_operator_first,rxjs_operator_map,rxjs_operator_mergeMap,rxjs_operator_reduce,rxjs_Observable,rxjs_operator_catch,rxjs_operator_concatAll,rxjs_util_EmptyError,rxjs_observable_fromPromise,l,rxjs_operator_mergeAll,_angular_platformBrowser,rxjs_operator_filter) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @whatItDoes Name of the primary outlet.\n\t     *\n\t     * @stable\n\t     */\n\t    var PRIMARY_OUTLET = 'primary';\n\t    var NavigationCancelingError = (function (_super) {\n\t        __extends(NavigationCancelingError, _super);\n\t        function NavigationCancelingError(message) {\n\t            _super.call(this, message);\n\t            this.message = message;\n\t            this.stack = (new Error(message)).stack;\n\t        }\n\t        NavigationCancelingError.prototype.toString = function () { return this.message; };\n\t        return NavigationCancelingError;\n\t    }(Error));\n\t    function defaultUrlMatcher(segments, segmentGroup, route) {\n\t        var path = route.path;\n\t        var parts = path.split('/');\n\t        var posParams = {};\n\t        var consumed = [];\n\t        var currentIndex = 0;\n\t        for (var i = 0; i < parts.length; ++i) {\n\t            if (currentIndex >= segments.length)\n\t                return null;\n\t            var current = segments[currentIndex];\n\t            var p = parts[i];\n\t            var isPosParam = p.startsWith(':');\n\t            if (!isPosParam && p !== current.path)\n\t                return null;\n\t            if (isPosParam) {\n\t                posParams[p.substring(1)] = current;\n\t            }\n\t            consumed.push(current);\n\t            currentIndex++;\n\t        }\n\t        if (route.pathMatch === 'full' &&\n\t            (segmentGroup.hasChildren() || currentIndex < segments.length)) {\n\t            return null;\n\t        }\n\t        else {\n\t            return { consumed: consumed, posParams: posParams };\n\t        }\n\t    }\n\t\n\t    function shallowEqualArrays(a, b) {\n\t        if (a.length !== b.length)\n\t            return false;\n\t        for (var i = 0; i < a.length; ++i) {\n\t            if (!shallowEqual(a[i], b[i]))\n\t                return false;\n\t        }\n\t        return true;\n\t    }\n\t    function shallowEqual(a, b) {\n\t        var k1 = Object.keys(a);\n\t        var k2 = Object.keys(b);\n\t        if (k1.length != k2.length) {\n\t            return false;\n\t        }\n\t        var key;\n\t        for (var i = 0; i < k1.length; i++) {\n\t            key = k1[i];\n\t            if (a[key] !== b[key]) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t    function flatten(a) {\n\t        var target = [];\n\t        for (var i = 0; i < a.length; ++i) {\n\t            for (var j = 0; j < a[i].length; ++j) {\n\t                target.push(a[i][j]);\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t    function last(a) {\n\t        return a.length > 0 ? a[a.length - 1] : null;\n\t    }\n\t    function merge(m1, m2) {\n\t        var m = {};\n\t        for (var attr in m1) {\n\t            if (m1.hasOwnProperty(attr)) {\n\t                m[attr] = m1[attr];\n\t            }\n\t        }\n\t        for (var attr in m2) {\n\t            if (m2.hasOwnProperty(attr)) {\n\t                m[attr] = m2[attr];\n\t            }\n\t        }\n\t        return m;\n\t    }\n\t    function forEach(map, callback) {\n\t        for (var prop in map) {\n\t            if (map.hasOwnProperty(prop)) {\n\t                callback(map[prop], prop);\n\t            }\n\t        }\n\t    }\n\t    function waitForMap(obj, fn) {\n\t        var waitFor = [];\n\t        var res = {};\n\t        forEach(obj, function (a, k) {\n\t            if (k === PRIMARY_OUTLET) {\n\t                waitFor.push(rxjs_operator_map.map.call(fn(k, a), function (_) {\n\t                    res[k] = _;\n\t                    return _;\n\t                }));\n\t            }\n\t        });\n\t        forEach(obj, function (a, k) {\n\t            if (k !== PRIMARY_OUTLET) {\n\t                waitFor.push(rxjs_operator_map.map.call(fn(k, a), function (_) {\n\t                    res[k] = _;\n\t                    return _;\n\t                }));\n\t            }\n\t        });\n\t        if (waitFor.length > 0) {\n\t            var concatted$ = rxjs_operator_concatAll.concatAll.call(rxjs_observable_of.of.apply(void 0, waitFor));\n\t            var last$ = l.last.call(concatted$);\n\t            return rxjs_operator_map.map.call(last$, function () { return res; });\n\t        }\n\t        else {\n\t            return rxjs_observable_of.of(res);\n\t        }\n\t    }\n\t    function andObservables(observables) {\n\t        var merged$ = rxjs_operator_mergeAll.mergeAll.call(observables);\n\t        return rxjs_operator_every.every.call(merged$, function (result) { return result === true; });\n\t    }\n\t    function wrapIntoObservable(value) {\n\t        if (value instanceof rxjs_Observable.Observable) {\n\t            return value;\n\t        }\n\t        else if (value instanceof Promise) {\n\t            return rxjs_observable_fromPromise.fromPromise(value);\n\t        }\n\t        else {\n\t            return rxjs_observable_of.of(value);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @experimental\n\t     */\n\t    var ROUTES = new _angular_core.OpaqueToken('ROUTES');\n\t    var LoadedRouterConfig = (function () {\n\t        function LoadedRouterConfig(routes, injector, factoryResolver, injectorFactory) {\n\t            this.routes = routes;\n\t            this.injector = injector;\n\t            this.factoryResolver = factoryResolver;\n\t            this.injectorFactory = injectorFactory;\n\t        }\n\t        return LoadedRouterConfig;\n\t    }());\n\t    var RouterConfigLoader = (function () {\n\t        function RouterConfigLoader(loader, compiler) {\n\t            this.loader = loader;\n\t            this.compiler = compiler;\n\t        }\n\t        RouterConfigLoader.prototype.load = function (parentInjector, loadChildren) {\n\t            return rxjs_operator_map.map.call(this.loadModuleFactory(loadChildren), function (r) {\n\t                var ref = r.create(parentInjector);\n\t                var injectorFactory = function (parent) { return r.create(parent).injector; };\n\t                return new LoadedRouterConfig(flatten(ref.injector.get(ROUTES)), ref.injector, ref.componentFactoryResolver, injectorFactory);\n\t            });\n\t        };\n\t        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n\t            var _this = this;\n\t            if (typeof loadChildren === 'string') {\n\t                return rxjs_observable_fromPromise.fromPromise(this.loader.load(loadChildren));\n\t            }\n\t            else {\n\t                var offlineMode_1 = this.compiler instanceof _angular_core.Compiler;\n\t                return rxjs_operator_mergeMap.mergeMap.call(wrapIntoObservable(loadChildren()), function (t) { return offlineMode_1 ? rxjs_observable_of.of(t) : rxjs_observable_fromPromise.fromPromise(_this.compiler.compileModuleAsync(t)); });\n\t            }\n\t        };\n\t        return RouterConfigLoader;\n\t    }());\n\t\n\t    function createEmptyUrlTree() {\n\t        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n\t    }\n\t    function containsTree(container, containee, exact) {\n\t        if (exact) {\n\t            return equalQueryParams(container.queryParams, containee.queryParams) &&\n\t                equalSegmentGroups(container.root, containee.root);\n\t        }\n\t        else {\n\t            return containsQueryParams(container.queryParams, containee.queryParams) &&\n\t                containsSegmentGroup(container.root, containee.root);\n\t        }\n\t    }\n\t    function equalQueryParams(container, containee) {\n\t        return shallowEqual(container, containee);\n\t    }\n\t    function equalSegmentGroups(container, containee) {\n\t        if (!equalPath(container.segments, containee.segments))\n\t            return false;\n\t        if (container.numberOfChildren !== containee.numberOfChildren)\n\t            return false;\n\t        for (var c in containee.children) {\n\t            if (!container.children[c])\n\t                return false;\n\t            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n\t                return false;\n\t        }\n\t        return true;\n\t    }\n\t    function containsQueryParams(container, containee) {\n\t        return Object.keys(containee) <= Object.keys(container) &&\n\t            Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n\t    }\n\t    function containsSegmentGroup(container, containee) {\n\t        return containsSegmentGroupHelper(container, containee, containee.segments);\n\t    }\n\t    function containsSegmentGroupHelper(container, containee, containeePaths) {\n\t        if (container.segments.length > containeePaths.length) {\n\t            var current = container.segments.slice(0, containeePaths.length);\n\t            if (!equalPath(current, containeePaths))\n\t                return false;\n\t            if (containee.hasChildren())\n\t                return false;\n\t            return true;\n\t        }\n\t        else if (container.segments.length === containeePaths.length) {\n\t            if (!equalPath(container.segments, containeePaths))\n\t                return false;\n\t            for (var c in containee.children) {\n\t                if (!container.children[c])\n\t                    return false;\n\t                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n\t                    return false;\n\t            }\n\t            return true;\n\t        }\n\t        else {\n\t            var current = containeePaths.slice(0, container.segments.length);\n\t            var next = containeePaths.slice(container.segments.length);\n\t            if (!equalPath(container.segments, current))\n\t                return false;\n\t            if (!container.children[PRIMARY_OUTLET])\n\t                return false;\n\t            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n\t        }\n\t    }\n\t    /**\n\t     * @whatItDoes Represents the parsed URL.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * @Component({templateUrl:'template.html'})\n\t     * class MyComponent {\n\t     *   constructor(router: Router) {\n\t     *     const tree: UrlTree =\n\t     * router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n\t     *     const f = tree.fragment; // return 'fragment'\n\t     *     const q = tree.queryParams; // returns {debug: 'true'}\n\t     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n\t     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n\t     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n\t     *     g.children['support'].segments; // return 1 segment 'help'\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n\t     * serialized tree.\n\t     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n\t     *\n\t     * @stable\n\t     */\n\t    var UrlTree = (function () {\n\t        /**\n\t         * @internal\n\t         */\n\t        function UrlTree(\n\t            /**\n\t            * The root segment group of the URL tree.\n\t             */\n\t            root, \n\t            /**\n\t             * The query params of the URL.\n\t             */\n\t            queryParams, \n\t            /**\n\t             * The fragment of the URL.\n\t             */\n\t            fragment) {\n\t            this.root = root;\n\t            this.queryParams = queryParams;\n\t            this.fragment = fragment;\n\t        }\n\t        /**\n\t         * @docsNotRequired\n\t         */\n\t        UrlTree.prototype.toString = function () { return new DefaultUrlSerializer().serialize(this); };\n\t        return UrlTree;\n\t    }());\n\t    /**\n\t     * @whatItDoes Represents the parsed URL segment.\n\t     *\n\t     * See {@link UrlTree} for more information.\n\t     *\n\t     * @stable\n\t     */\n\t    var UrlSegmentGroup = (function () {\n\t        function UrlSegmentGroup(\n\t            /**\n\t             * The URL segments of this group. See {@link UrlSegment} for more information.\n\t             */\n\t            segments, \n\t            /**\n\t             * The list of children of this group.\n\t             */\n\t            children) {\n\t            var _this = this;\n\t            this.segments = segments;\n\t            this.children = children;\n\t            /**\n\t             * The parent node in the url tree.\n\t             */\n\t            this.parent = null;\n\t            forEach(children, function (v, k) { return v.parent = _this; });\n\t        }\n\t        /**\n\t         * Return true if the segment has child segments\n\t         */\n\t        UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n\t        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n\t            /**\n\t             * Returns the number of child sements.\n\t             */\n\t            get: function () { return Object.keys(this.children).length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @docsNotRequired\n\t         */\n\t        UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n\t        return UrlSegmentGroup;\n\t    }());\n\t    /**\n\t     * @whatItDoes Represents a single URL segment.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * @Component({templateUrl:'template.html'})\n\t     * class MyComponent {\n\t     *   constructor(router: Router) {\n\t     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n\t     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n\t     *     const s: UrlSegment[] = g.segments;\n\t     *     s[0].path; // returns 'team'\n\t     *     s[0].parameters; // returns {id: 33}\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * A UrlSegment is a part of a URL between the two slashes. It contains a path and\n\t     * the matrix parameters associated with the segment.\n\t     *\n\t     * @stable\n\t     */\n\t    var UrlSegment = (function () {\n\t        function UrlSegment(\n\t            /**\n\t             * The path part of a URL segment.\n\t             */\n\t            path, \n\t            /**\n\t             * The matrix parameters associated with a segment.\n\t             */\n\t            parameters) {\n\t            this.path = path;\n\t            this.parameters = parameters;\n\t        }\n\t        /**\n\t         * @docsNotRequired\n\t         */\n\t        UrlSegment.prototype.toString = function () { return serializePath(this); };\n\t        return UrlSegment;\n\t    }());\n\t    function equalSegments(a, b) {\n\t        if (a.length !== b.length)\n\t            return false;\n\t        for (var i = 0; i < a.length; ++i) {\n\t            if (a[i].path !== b[i].path)\n\t                return false;\n\t            if (!shallowEqual(a[i].parameters, b[i].parameters))\n\t                return false;\n\t        }\n\t        return true;\n\t    }\n\t    function equalPath(a, b) {\n\t        if (a.length !== b.length)\n\t            return false;\n\t        for (var i = 0; i < a.length; ++i) {\n\t            if (a[i].path !== b[i].path)\n\t                return false;\n\t        }\n\t        return true;\n\t    }\n\t    function mapChildrenIntoArray(segment, fn) {\n\t        var res = [];\n\t        forEach(segment.children, function (child, childOutlet) {\n\t            if (childOutlet === PRIMARY_OUTLET) {\n\t                res = res.concat(fn(child, childOutlet));\n\t            }\n\t        });\n\t        forEach(segment.children, function (child, childOutlet) {\n\t            if (childOutlet !== PRIMARY_OUTLET) {\n\t                res = res.concat(fn(child, childOutlet));\n\t            }\n\t        });\n\t        return res;\n\t    }\n\t    /**\n\t     * @whatItDoes Serializes and deserializes a URL string into a URL tree.\n\t     *\n\t     * @description The url serialization strategy is customizable. You can\n\t     * make all URLs case insensitive by providing a custom UrlSerializer.\n\t     *\n\t     * See {@link DefaultUrlSerializer} for an example of a URL serializer.\n\t     *\n\t     * @stable\n\t     */\n\t    var UrlSerializer = (function () {\n\t        function UrlSerializer() {\n\t        }\n\t        return UrlSerializer;\n\t    }());\n\t    /**\n\t     * @whatItDoes A default implementation of the {@link UrlSerializer}.\n\t     *\n\t     * @description\n\t     *\n\t     * Example URLs:\n\t     *\n\t     * ```\n\t     * /inbox/33(popup:compose)\n\t     * /inbox/33;open=true/messages/44\n\t     * ```\n\t     *\n\t     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n\t     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n\t     * specify route specific parameters.\n\t     *\n\t     * @stable\n\t     */\n\t    var DefaultUrlSerializer = (function () {\n\t        function DefaultUrlSerializer() {\n\t        }\n\t        /**\n\t         * Parse a url into a {@link UrlTree}.\n\t         */\n\t        DefaultUrlSerializer.prototype.parse = function (url) {\n\t            var p = new UrlParser(url);\n\t            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n\t        };\n\t        /**\n\t         * Converts a {@link UrlTree} into a url.\n\t         */\n\t        DefaultUrlSerializer.prototype.serialize = function (tree) {\n\t            var segment = \"/\" + serializeSegment(tree.root, true);\n\t            var query = serializeQueryParams(tree.queryParams);\n\t            var fragment = tree.fragment !== null && tree.fragment !== undefined ? \"#\" + encodeURI(tree.fragment) : '';\n\t            return \"\" + segment + query + fragment;\n\t        };\n\t        return DefaultUrlSerializer;\n\t    }());\n\t    function serializePaths(segment) {\n\t        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n\t    }\n\t    function serializeSegment(segment, root) {\n\t        if (segment.hasChildren() && root) {\n\t            var primary = segment.children[PRIMARY_OUTLET] ?\n\t                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n\t                '';\n\t            var children_1 = [];\n\t            forEach(segment.children, function (v, k) {\n\t                if (k !== PRIMARY_OUTLET) {\n\t                    children_1.push(k + \":\" + serializeSegment(v, false));\n\t                }\n\t            });\n\t            if (children_1.length > 0) {\n\t                return primary + \"(\" + children_1.join('//') + \")\";\n\t            }\n\t            else {\n\t                return \"\" + primary;\n\t            }\n\t        }\n\t        else if (segment.hasChildren() && !root) {\n\t            var children = mapChildrenIntoArray(segment, function (v, k) {\n\t                if (k === PRIMARY_OUTLET) {\n\t                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n\t                }\n\t                else {\n\t                    return [(k + \":\" + serializeSegment(v, false))];\n\t                }\n\t            });\n\t            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n\t        }\n\t        else {\n\t            return serializePaths(segment);\n\t        }\n\t    }\n\t    function encode(s) {\n\t        return encodeURIComponent(s);\n\t    }\n\t    function decode(s) {\n\t        return decodeURIComponent(s);\n\t    }\n\t    function serializePath(path) {\n\t        return \"\" + encode(path.path) + serializeParams(path.parameters);\n\t    }\n\t    function serializeParams(params) {\n\t        return pairs(params).map(function (p) { return (\";\" + encode(p.first) + \"=\" + encode(p.second)); }).join('');\n\t    }\n\t    function serializeQueryParams(params) {\n\t        var strs = pairs(params).map(function (p) { return (encode(p.first) + \"=\" + encode(p.second)); });\n\t        return strs.length > 0 ? \"?\" + strs.join(\"&\") : '';\n\t    }\n\t    var Pair = (function () {\n\t        function Pair(first, second) {\n\t            this.first = first;\n\t            this.second = second;\n\t        }\n\t        return Pair;\n\t    }());\n\t    function pairs(obj) {\n\t        var res = [];\n\t        for (var prop in obj) {\n\t            if (obj.hasOwnProperty(prop)) {\n\t                res.push(new Pair(prop, obj[prop]));\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    var SEGMENT_RE = /^[^\\/\\(\\)\\?;=&#]+/;\n\t    function matchSegments(str) {\n\t        SEGMENT_RE.lastIndex = 0;\n\t        var match = str.match(SEGMENT_RE);\n\t        return match ? match[0] : '';\n\t    }\n\t    var QUERY_PARAM_RE = /^[^=\\?&#]+/;\n\t    function matchQueryParams(str) {\n\t        QUERY_PARAM_RE.lastIndex = 0;\n\t        var match = str.match(SEGMENT_RE);\n\t        return match ? match[0] : '';\n\t    }\n\t    var QUERY_PARAM_VALUE_RE = /^[^\\?&#]+/;\n\t    function matchUrlQueryParamValue(str) {\n\t        QUERY_PARAM_VALUE_RE.lastIndex = 0;\n\t        var match = str.match(QUERY_PARAM_VALUE_RE);\n\t        return match ? match[0] : '';\n\t    }\n\t    var UrlParser = (function () {\n\t        function UrlParser(url) {\n\t            this.url = url;\n\t            this.remaining = url;\n\t        }\n\t        UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n\t        UrlParser.prototype.capture = function (str) {\n\t            if (!this.remaining.startsWith(str)) {\n\t                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n\t            }\n\t            this.remaining = this.remaining.substring(str.length);\n\t        };\n\t        UrlParser.prototype.parseRootSegment = function () {\n\t            if (this.remaining.startsWith('/')) {\n\t                this.capture('/');\n\t            }\n\t            if (this.remaining === '' || this.remaining.startsWith('?') || this.remaining.startsWith('#')) {\n\t                return new UrlSegmentGroup([], {});\n\t            }\n\t            else {\n\t                return new UrlSegmentGroup([], this.parseChildren());\n\t            }\n\t        };\n\t        UrlParser.prototype.parseChildren = function () {\n\t            if (this.remaining.length == 0) {\n\t                return {};\n\t            }\n\t            if (this.peekStartsWith('/')) {\n\t                this.capture('/');\n\t            }\n\t            var paths = [];\n\t            if (!this.peekStartsWith('(')) {\n\t                paths.push(this.parseSegments());\n\t            }\n\t            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n\t                this.capture('/');\n\t                paths.push(this.parseSegments());\n\t            }\n\t            var children = {};\n\t            if (this.peekStartsWith('/(')) {\n\t                this.capture('/');\n\t                children = this.parseParens(true);\n\t            }\n\t            var res = {};\n\t            if (this.peekStartsWith('(')) {\n\t                res = this.parseParens(false);\n\t            }\n\t            if (paths.length > 0 || Object.keys(children).length > 0) {\n\t                res[PRIMARY_OUTLET] = new UrlSegmentGroup(paths, children);\n\t            }\n\t            return res;\n\t        };\n\t        UrlParser.prototype.parseSegments = function () {\n\t            var path = matchSegments(this.remaining);\n\t            if (path === '' && this.peekStartsWith(';')) {\n\t                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n\t            }\n\t            this.capture(path);\n\t            var matrixParams = {};\n\t            if (this.peekStartsWith(';')) {\n\t                matrixParams = this.parseMatrixParams();\n\t            }\n\t            return new UrlSegment(decode(path), matrixParams);\n\t        };\n\t        UrlParser.prototype.parseQueryParams = function () {\n\t            var params = {};\n\t            if (this.peekStartsWith('?')) {\n\t                this.capture('?');\n\t                this.parseQueryParam(params);\n\t                while (this.remaining.length > 0 && this.peekStartsWith('&')) {\n\t                    this.capture('&');\n\t                    this.parseQueryParam(params);\n\t                }\n\t            }\n\t            return params;\n\t        };\n\t        UrlParser.prototype.parseFragment = function () {\n\t            if (this.peekStartsWith('#')) {\n\t                return decodeURI(this.remaining.substring(1));\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        };\n\t        UrlParser.prototype.parseMatrixParams = function () {\n\t            var params = {};\n\t            while (this.remaining.length > 0 && this.peekStartsWith(';')) {\n\t                this.capture(';');\n\t                this.parseParam(params);\n\t            }\n\t            return params;\n\t        };\n\t        UrlParser.prototype.parseParam = function (params) {\n\t            var key = matchSegments(this.remaining);\n\t            if (!key) {\n\t                return;\n\t            }\n\t            this.capture(key);\n\t            var value = '';\n\t            if (this.peekStartsWith('=')) {\n\t                this.capture('=');\n\t                var valueMatch = matchSegments(this.remaining);\n\t                if (valueMatch) {\n\t                    value = valueMatch;\n\t                    this.capture(value);\n\t                }\n\t            }\n\t            params[decode(key)] = decode(value);\n\t        };\n\t        UrlParser.prototype.parseQueryParam = function (params) {\n\t            var key = matchQueryParams(this.remaining);\n\t            if (!key) {\n\t                return;\n\t            }\n\t            this.capture(key);\n\t            var value = '';\n\t            if (this.peekStartsWith('=')) {\n\t                this.capture('=');\n\t                var valueMatch = matchUrlQueryParamValue(this.remaining);\n\t                if (valueMatch) {\n\t                    value = valueMatch;\n\t                    this.capture(value);\n\t                }\n\t            }\n\t            params[decode(key)] = decode(value);\n\t        };\n\t        UrlParser.prototype.parseParens = function (allowPrimary) {\n\t            var segments = {};\n\t            this.capture('(');\n\t            while (!this.peekStartsWith(')') && this.remaining.length > 0) {\n\t                var path = matchSegments(this.remaining);\n\t                var next = this.remaining[path.length];\n\t                // if is is not one of these characters, then the segment was unescaped\n\t                // or the group was not closed\n\t                if (next !== '/' && next !== ')' && next !== ';') {\n\t                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n\t                }\n\t                var outletName = void 0;\n\t                if (path.indexOf(':') > -1) {\n\t                    outletName = path.substr(0, path.indexOf(':'));\n\t                    this.capture(outletName);\n\t                    this.capture(':');\n\t                }\n\t                else if (allowPrimary) {\n\t                    outletName = PRIMARY_OUTLET;\n\t                }\n\t                var children = this.parseChildren();\n\t                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n\t                    new UrlSegmentGroup([], children);\n\t                if (this.peekStartsWith('//')) {\n\t                    this.capture('//');\n\t                }\n\t            }\n\t            this.capture(')');\n\t            return segments;\n\t        };\n\t        return UrlParser;\n\t    }());\n\t\n\t    var NoMatch = (function () {\n\t        function NoMatch(segmentGroup) {\n\t            if (segmentGroup === void 0) { segmentGroup = null; }\n\t            this.segmentGroup = segmentGroup;\n\t        }\n\t        return NoMatch;\n\t    }());\n\t    var AbsoluteRedirect = (function () {\n\t        function AbsoluteRedirect(urlTree) {\n\t            this.urlTree = urlTree;\n\t        }\n\t        return AbsoluteRedirect;\n\t    }());\n\t    function noMatch(segmentGroup) {\n\t        return new rxjs_Observable.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n\t    }\n\t    function absoluteRedirect(newTree) {\n\t        return new rxjs_Observable.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n\t    }\n\t    function namedOutletsRedirect(redirectTo) {\n\t        return new rxjs_Observable.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n\t    }\n\t    function canLoadFails(route) {\n\t        return new rxjs_Observable.Observable(function (obs) { return obs.error(new NavigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n\t    }\n\t    function applyRedirects(injector, configLoader, urlSerializer, urlTree, config) {\n\t        return new ApplyRedirects(injector, configLoader, urlSerializer, urlTree, config).apply();\n\t    }\n\t    var ApplyRedirects = (function () {\n\t        function ApplyRedirects(injector, configLoader, urlSerializer, urlTree, config) {\n\t            this.injector = injector;\n\t            this.configLoader = configLoader;\n\t            this.urlSerializer = urlSerializer;\n\t            this.urlTree = urlTree;\n\t            this.config = config;\n\t            this.allowRedirects = true;\n\t        }\n\t        ApplyRedirects.prototype.apply = function () {\n\t            var _this = this;\n\t            var expanded$ = this.expandSegmentGroup(this.injector, this.config, this.urlTree.root, PRIMARY_OUTLET);\n\t            var urlTrees$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); });\n\t            return rxjs_operator_catch._catch.call(urlTrees$, function (e) {\n\t                if (e instanceof AbsoluteRedirect) {\n\t                    // after an absolute redirect we do not apply any more redirects!\n\t                    _this.allowRedirects = false;\n\t                    // we need to run matching, so we can fetch all lazy-loaded modules\n\t                    return _this.match(e.urlTree);\n\t                }\n\t                else if (e instanceof NoMatch) {\n\t                    throw _this.noMatchError(e);\n\t                }\n\t                else {\n\t                    throw e;\n\t                }\n\t            });\n\t        };\n\t        ApplyRedirects.prototype.match = function (tree) {\n\t            var _this = this;\n\t            var expanded$ = this.expandSegmentGroup(this.injector, this.config, tree.root, PRIMARY_OUTLET);\n\t            var mapped$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n\t                return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n\t            });\n\t            return rxjs_operator_catch._catch.call(mapped$, function (e) {\n\t                if (e instanceof NoMatch) {\n\t                    throw _this.noMatchError(e);\n\t                }\n\t                else {\n\t                    throw e;\n\t                }\n\t            });\n\t        };\n\t        ApplyRedirects.prototype.noMatchError = function (e) {\n\t            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n\t        };\n\t        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n\t            var root = rootCandidate.segments.length > 0 ?\n\t                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n\t                rootCandidate;\n\t            return new UrlTree(root, queryParams, fragment);\n\t            var _a;\n\t        };\n\t        ApplyRedirects.prototype.expandSegmentGroup = function (injector, routes, segmentGroup, outlet) {\n\t            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n\t                return rxjs_operator_map.map.call(this.expandChildren(injector, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n\t            }\n\t            else {\n\t                return this.expandSegment(injector, segmentGroup, routes, segmentGroup.segments, outlet, true);\n\t            }\n\t        };\n\t        ApplyRedirects.prototype.expandChildren = function (injector, routes, segmentGroup) {\n\t            var _this = this;\n\t            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(injector, routes, child, childOutlet); });\n\t        };\n\t        ApplyRedirects.prototype.expandSegment = function (injector, segmentGroup, routes, segments, outlet, allowRedirects) {\n\t            var _this = this;\n\t            var routes$ = rxjs_observable_of.of.apply(void 0, routes);\n\t            var processedRoutes$ = rxjs_operator_map.map.call(routes$, function (r) {\n\t                var expanded$ = _this.expandSegmentAgainstRoute(injector, segmentGroup, routes, r, segments, outlet, allowRedirects);\n\t                return rxjs_operator_catch._catch.call(expanded$, function (e) {\n\t                    if (e instanceof NoMatch)\n\t                        return rxjs_observable_of.of(null);\n\t                    else\n\t                        throw e;\n\t                });\n\t            });\n\t            var concattedProcessedRoutes$ = rxjs_operator_concatAll.concatAll.call(processedRoutes$);\n\t            var first$ = rxjs_operator_first.first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n\t            return rxjs_operator_catch._catch.call(first$, function (e, _) {\n\t                if (e instanceof rxjs_util_EmptyError.EmptyError) {\n\t                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n\t                        return rxjs_observable_of.of(new UrlSegmentGroup([], {}));\n\t                    }\n\t                    else {\n\t                        throw new NoMatch(segmentGroup);\n\t                    }\n\t                }\n\t                else {\n\t                    throw e;\n\t                }\n\t            });\n\t        };\n\t        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n\t            return segments.length === 0 && !segmentGroup.children[outlet];\n\t        };\n\t        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (injector, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n\t            if (getOutlet$1(route) !== outlet)\n\t                return noMatch(segmentGroup);\n\t            if (route.redirectTo !== undefined && !(allowRedirects && this.allowRedirects))\n\t                return noMatch(segmentGroup);\n\t            if (route.redirectTo === undefined) {\n\t                return this.matchSegmentAgainstRoute(injector, segmentGroup, route, paths);\n\t            }\n\t            else {\n\t                return this.expandSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, paths, outlet);\n\t            }\n\t        };\n\t        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (injector, segmentGroup, routes, route, segments, outlet) {\n\t            if (route.path === '**') {\n\t                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(injector, routes, route, outlet);\n\t            }\n\t            else {\n\t                return this.expandRegularSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, segments, outlet);\n\t            }\n\t        };\n\t        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (injector, routes, route, outlet) {\n\t            var _this = this;\n\t            var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n\t            if (route.redirectTo.startsWith('/')) {\n\t                return absoluteRedirect(newTree);\n\t            }\n\t            else {\n\t                return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n\t                    var group = new UrlSegmentGroup(newSegments, {});\n\t                    return _this.expandSegment(injector, group, routes, newSegments, outlet, false);\n\t                });\n\t            }\n\t        };\n\t        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (injector, segmentGroup, routes, route, segments, outlet) {\n\t            var _this = this;\n\t            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n\t            if (!matched)\n\t                return noMatch(segmentGroup);\n\t            var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n\t            if (route.redirectTo.startsWith('/')) {\n\t                return absoluteRedirect(newTree);\n\t            }\n\t            else {\n\t                return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n\t                    return _this.expandSegment(injector, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n\t                });\n\t            }\n\t        };\n\t        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (injector, rawSegmentGroup, route, segments) {\n\t            var _this = this;\n\t            if (route.path === '**') {\n\t                if (route.loadChildren) {\n\t                    return rxjs_operator_map.map.call(this.configLoader.load(injector, route.loadChildren), function (r) {\n\t                        route._loadedConfig = r;\n\t                        return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n\t                    });\n\t                }\n\t                else {\n\t                    return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n\t                }\n\t            }\n\t            else {\n\t                var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments_1 = _a.consumedSegments, lastChild = _a.lastChild;\n\t                if (!matched)\n\t                    return noMatch(rawSegmentGroup);\n\t                var rawSlicedSegments_1 = segments.slice(lastChild);\n\t                var childConfig$ = this.getChildConfig(injector, route);\n\t                return rxjs_operator_mergeMap.mergeMap.call(childConfig$, function (routerConfig) {\n\t                    var childInjector = routerConfig.injector;\n\t                    var childConfig = routerConfig.routes;\n\t                    var _a = split(rawSegmentGroup, consumedSegments_1, rawSlicedSegments_1, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n\t                    if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n\t                        var expanded$ = _this.expandChildren(childInjector, childConfig, segmentGroup);\n\t                        return rxjs_operator_map.map.call(expanded$, function (children) { return new UrlSegmentGroup(consumedSegments_1, children); });\n\t                    }\n\t                    else if (childConfig.length === 0 && slicedSegments.length === 0) {\n\t                        return rxjs_observable_of.of(new UrlSegmentGroup(consumedSegments_1, {}));\n\t                    }\n\t                    else {\n\t                        var expanded$ = _this.expandSegment(childInjector, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n\t                        return rxjs_operator_map.map.call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments_1.concat(cs.segments), cs.children); });\n\t                    }\n\t                });\n\t            }\n\t        };\n\t        ApplyRedirects.prototype.getChildConfig = function (injector, route) {\n\t            var _this = this;\n\t            if (route.children) {\n\t                return rxjs_observable_of.of(new LoadedRouterConfig(route.children, injector, null, null));\n\t            }\n\t            else if (route.loadChildren) {\n\t                return rxjs_operator_mergeMap.mergeMap.call(runGuards(injector, route), function (shouldLoad) {\n\t                    if (shouldLoad) {\n\t                        if (route._loadedConfig) {\n\t                            return rxjs_observable_of.of(route._loadedConfig);\n\t                        }\n\t                        else {\n\t                            return rxjs_operator_map.map.call(_this.configLoader.load(injector, route.loadChildren), function (r) {\n\t                                route._loadedConfig = r;\n\t                                return r;\n\t                            });\n\t                        }\n\t                    }\n\t                    else {\n\t                        return canLoadFails(route);\n\t                    }\n\t                });\n\t            }\n\t            else {\n\t                return rxjs_observable_of.of(new LoadedRouterConfig([], injector, null, null));\n\t            }\n\t        };\n\t        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n\t            var res = [];\n\t            var c = urlTree.root;\n\t            while (true) {\n\t                res = res.concat(c.segments);\n\t                if (c.numberOfChildren === 0) {\n\t                    return rxjs_observable_of.of(res);\n\t                }\n\t                else if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n\t                    return namedOutletsRedirect(route.redirectTo);\n\t                }\n\t                else {\n\t                    c = c.children[PRIMARY_OUTLET];\n\t                }\n\t            }\n\t        };\n\t        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n\t            var t = this.urlSerializer.parse(redirectTo);\n\t            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n\t        };\n\t        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n\t            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n\t            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n\t        };\n\t        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n\t            var res = {};\n\t            forEach(redirectToParams, function (v, k) {\n\t                if (v.startsWith(':')) {\n\t                    res[k] = actualParams[v.substring(1)];\n\t                }\n\t                else {\n\t                    res[k] = v;\n\t                }\n\t            });\n\t            return res;\n\t        };\n\t        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n\t            var _this = this;\n\t            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n\t            var children = {};\n\t            forEach(group.children, function (child, name) {\n\t                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n\t            });\n\t            return new UrlSegmentGroup(updatedSegments, children);\n\t        };\n\t        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n\t            var _this = this;\n\t            return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n\t                _this.findOrReturn(s, actualSegments); });\n\t        };\n\t        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n\t            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n\t            if (!pos)\n\t                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n\t            return pos;\n\t        };\n\t        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n\t            var idx = 0;\n\t            for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n\t                var s = actualSegments_1[_i];\n\t                if (s.path === redirectToUrlSegment.path) {\n\t                    actualSegments.splice(idx);\n\t                    return s;\n\t                }\n\t                idx++;\n\t            }\n\t            return redirectToUrlSegment;\n\t        };\n\t        return ApplyRedirects;\n\t    }());\n\t    function runGuards(injector, route) {\n\t        var canLoad = route.canLoad;\n\t        if (!canLoad || canLoad.length === 0)\n\t            return rxjs_observable_of.of(true);\n\t        var obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canLoad), function (c) {\n\t            var guard = injector.get(c);\n\t            if (guard.canLoad) {\n\t                return wrapIntoObservable(guard.canLoad(route));\n\t            }\n\t            else {\n\t                return wrapIntoObservable(guard(route));\n\t            }\n\t        });\n\t        return andObservables(obs);\n\t    }\n\t    function match(segmentGroup, route, segments) {\n\t        var noMatch = { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n\t        if (route.path === '') {\n\t            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n\t                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n\t            }\n\t            else {\n\t                return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n\t            }\n\t        }\n\t        var matcher = route.matcher || defaultUrlMatcher;\n\t        var res = matcher(segments, segmentGroup, route);\n\t        if (!res)\n\t            return noMatch;\n\t        return {\n\t            matched: true,\n\t            consumedSegments: res.consumed,\n\t            lastChild: res.consumed.length,\n\t            positionalParamSegments: res.posParams\n\t        };\n\t    }\n\t    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n\t        if (slicedSegments.length > 0 &&\n\t            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n\t            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n\t            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n\t        }\n\t        else if (slicedSegments.length === 0 &&\n\t            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n\t            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n\t            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n\t        }\n\t        else {\n\t            return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n\t        }\n\t    }\n\t    function mergeTrivialChildren(s) {\n\t        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n\t            var c = s.children[PRIMARY_OUTLET];\n\t            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n\t        }\n\t        else {\n\t            return s;\n\t        }\n\t    }\n\t    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n\t        var res = {};\n\t        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n\t            var r = routes_1[_i];\n\t            if (emptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n\t                res[getOutlet$1(r)] = new UrlSegmentGroup([], {});\n\t            }\n\t        }\n\t        return merge(children, res);\n\t    }\n\t    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n\t        var res = {};\n\t        res[PRIMARY_OUTLET] = primarySegmentGroup;\n\t        for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n\t            var r = routes_2[_i];\n\t            if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n\t                res[getOutlet$1(r)] = new UrlSegmentGroup([], {});\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n\t        return routes\n\t            .filter(function (r) { return emptyPathRedirect(segmentGroup, slicedSegments, r) &&\n\t            getOutlet$1(r) !== PRIMARY_OUTLET; })\n\t            .length > 0;\n\t    }\n\t    function containsEmptyPathRedirects(segmentGroup, slicedSegments, routes) {\n\t        return routes.filter(function (r) { return emptyPathRedirect(segmentGroup, slicedSegments, r); }).length > 0;\n\t    }\n\t    function emptyPathRedirect(segmentGroup, slicedSegments, r) {\n\t        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full')\n\t            return false;\n\t        return r.path === '' && r.redirectTo !== undefined;\n\t    }\n\t    function getOutlet$1(route) {\n\t        return route.outlet ? route.outlet : PRIMARY_OUTLET;\n\t    }\n\t\n\t    function validateConfig(config) {\n\t        // forEach doesn't iterate undefined values\n\t        for (var i = 0; i < config.length; i++) {\n\t            validateNode(config[i]);\n\t        }\n\t    }\n\t    function validateNode(route) {\n\t        if (!route) {\n\t            throw new Error(\"\\n      Invalid route configuration: Encountered undefined route.\\n      The reason might be an extra comma.\\n       \\n      Example: \\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n\t        }\n\t        if (Array.isArray(route)) {\n\t            throw new Error(\"Invalid route configuration: Array cannot be specified\");\n\t        }\n\t        if (route.component === undefined && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n\t            throw new Error(\"Invalid route configuration of route '\" + route.path + \"': a componentless route cannot have a named outlet set\");\n\t        }\n\t        if (!!route.redirectTo && !!route.children) {\n\t            throw new Error(\"Invalid configuration of route '\" + route.path + \"': redirectTo and children cannot be used together\");\n\t        }\n\t        if (!!route.redirectTo && !!route.loadChildren) {\n\t            throw new Error(\"Invalid configuration of route '\" + route.path + \"': redirectTo and loadChildren cannot be used together\");\n\t        }\n\t        if (!!route.children && !!route.loadChildren) {\n\t            throw new Error(\"Invalid configuration of route '\" + route.path + \"': children and loadChildren cannot be used together\");\n\t        }\n\t        if (!!route.redirectTo && !!route.component) {\n\t            throw new Error(\"Invalid configuration of route '\" + route.path + \"': redirectTo and component cannot be used together\");\n\t        }\n\t        if (!!route.path && !!route.matcher) {\n\t            throw new Error(\"Invalid configuration of route '\" + route.path + \"': path and matcher cannot be used together\");\n\t        }\n\t        if (route.redirectTo === undefined && !route.component && !route.children &&\n\t            !route.loadChildren) {\n\t            throw new Error(\"Invalid configuration of route '\" + route.path + \"': one of the following must be provided (component or redirectTo or children or loadChildren)\");\n\t        }\n\t        if (route.path === undefined) {\n\t            throw new Error(\"Invalid route configuration: routes must have path specified\");\n\t        }\n\t        if (route.path.startsWith('/')) {\n\t            throw new Error(\"Invalid route configuration of route '\" + route.path + \"': path cannot start with a slash\");\n\t        }\n\t        if (route.path === '' && route.redirectTo !== undefined && route.pathMatch === undefined) {\n\t            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n\t            throw new Error(\"Invalid route configuration of route '{path: \\\"\" + route.path + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n\t        }\n\t        if (route.pathMatch !== undefined && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n\t            throw new Error(\"Invalid configuration of route '\" + route.path + \"': pathMatch can only be set to 'prefix' or 'full'\");\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var Tree = (function () {\n\t        function Tree(root) {\n\t            this._root = root;\n\t        }\n\t        Object.defineProperty(Tree.prototype, \"root\", {\n\t            get: function () { return this._root.value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @internal\n\t         */\n\t        Tree.prototype.parent = function (t) {\n\t            var p = this.pathFromRoot(t);\n\t            return p.length > 1 ? p[p.length - 2] : null;\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        Tree.prototype.children = function (t) {\n\t            var n = findNode(t, this._root);\n\t            return n ? n.children.map(function (t) { return t.value; }) : [];\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        Tree.prototype.firstChild = function (t) {\n\t            var n = findNode(t, this._root);\n\t            return n && n.children.length > 0 ? n.children[0].value : null;\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        Tree.prototype.siblings = function (t) {\n\t            var p = findPath(t, this._root, []);\n\t            if (p.length < 2)\n\t                return [];\n\t            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n\t            return c.filter(function (cc) { return cc !== t; });\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root, []).map(function (s) { return s.value; }); };\n\t        return Tree;\n\t    }());\n\t    function findNode(expected, c) {\n\t        if (expected === c.value)\n\t            return c;\n\t        for (var _i = 0, _a = c.children; _i < _a.length; _i++) {\n\t            var cc = _a[_i];\n\t            var r = findNode(expected, cc);\n\t            if (r)\n\t                return r;\n\t        }\n\t        return null;\n\t    }\n\t    function findPath(expected, c, collected) {\n\t        collected.push(c);\n\t        if (expected === c.value)\n\t            return collected;\n\t        for (var _i = 0, _a = c.children; _i < _a.length; _i++) {\n\t            var cc = _a[_i];\n\t            var cloned = collected.slice(0);\n\t            var r = findPath(expected, cc, cloned);\n\t            if (r.length > 0)\n\t                return r;\n\t        }\n\t        return [];\n\t    }\n\t    var TreeNode = (function () {\n\t        function TreeNode(value, children) {\n\t            this.value = value;\n\t            this.children = children;\n\t        }\n\t        TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n\t        return TreeNode;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @whatItDoes Represents the state of the router.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * @Component({templateUrl:'template.html'})\n\t     * class MyComponent {\n\t     *   constructor(router: Router) {\n\t     *     const state: RouterState = router.routerState;\n\t     *     const root: ActivatedRoute = state.root;\n\t     *     const child = root.firstChild;\n\t     *     const id: Observable<string> = child.params.map(p => p.id);\n\t     *     //...\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @description\n\t     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n\t     * segments,\n\t     * the extracted parameters, and the resolved data.\n\t     *\n\t     * See {@link ActivatedRoute} for more information.\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterState = (function (_super) {\n\t        __extends$1(RouterState, _super);\n\t        /**\n\t         * @internal\n\t         */\n\t        function RouterState(root, \n\t            /**\n\t             * The current snapshot of the router state.\n\t             */\n\t            snapshot) {\n\t            _super.call(this, root);\n\t            this.snapshot = snapshot;\n\t            setRouterStateSnapshot(this, root);\n\t        }\n\t        RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n\t        return RouterState;\n\t    }(Tree));\n\t    function createEmptyState(urlTree, rootComponent) {\n\t        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n\t        var emptyUrl = new rxjs_BehaviorSubject.BehaviorSubject([new UrlSegment('', {})]);\n\t        var emptyParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n\t        var emptyData = new rxjs_BehaviorSubject.BehaviorSubject({});\n\t        var emptyQueryParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n\t        var fragment = new rxjs_BehaviorSubject.BehaviorSubject('');\n\t        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n\t        activated.snapshot = snapshot.root;\n\t        return new RouterState(new TreeNode(activated, []), snapshot);\n\t    }\n\t    function createEmptyStateSnapshot(urlTree, rootComponent) {\n\t        var emptyParams = {};\n\t        var emptyData = {};\n\t        var emptyQueryParams = {};\n\t        var fragment = '';\n\t        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n\t        return new RouterStateSnapshot('', new TreeNode(activated, []));\n\t    }\n\t    /**\n\t     * @whatItDoes Contains the information about a route associated with a component loaded in an\n\t     * outlet.\n\t     * ActivatedRoute can also be used to traverse the router state tree.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * @Component({templateUrl:'./my-component.html'})\n\t     * class MyComponent {\n\t     *   constructor(route: ActivatedRoute) {\n\t     *     const id: Observable<string> = route.params.map(p => p.id);\n\t     *     const url: Observable<string> = route.url.map(s => s.join(''));\n\t     *     const user = route.data.map(d => d.user); //includes `data` and `resolve`\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var ActivatedRoute = (function () {\n\t        /**\n\t         * @internal\n\t         */\n\t        function ActivatedRoute(\n\t            /**\n\t             *  The URL segments matched by this route. The observable will emit a new value when\n\t             *  the array of segments changes.\n\t             */\n\t            url, \n\t            /**\n\t             * The matrix parameters scoped to this route. The observable will emit a new value when\n\t             * the set of the parameters changes.\n\t             */\n\t            params, \n\t            /**\n\t             * The query parameters shared by all the routes. The observable will emit a new value when\n\t             * the set of the parameters changes.\n\t             */\n\t            queryParams, \n\t            /**\n\t             * The URL fragment shared by all the routes. The observable will emit a new value when\n\t             * the URL fragment changes.\n\t             */\n\t            fragment, \n\t            /**\n\t             * The static and resolved data of this route. The observable will emit a new value when\n\t             * any of the resolvers returns a new object.\n\t             */\n\t            data, \n\t            /**\n\t             * The outlet name of the route. It's a constant.\n\t             */\n\t            outlet, \n\t            /**\n\t             * The component of the route. It's a constant.\n\t             */\n\t            component, // TODO: vsavkin: remove |string\n\t            futureSnapshot) {\n\t            this.url = url;\n\t            this.params = params;\n\t            this.queryParams = queryParams;\n\t            this.fragment = fragment;\n\t            this.data = data;\n\t            this.outlet = outlet;\n\t            this.component = component;\n\t            this._futureSnapshot = futureSnapshot;\n\t        }\n\t        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n\t            /**\n\t             * The configuration used to match this route.\n\t             */\n\t            get: function () { return this._futureSnapshot.routeConfig; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n\t            /**\n\t             * The root of the router state.\n\t             */\n\t            get: function () { return this._routerState.root; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n\t            /**\n\t             * The parent of this route in the router state tree.\n\t             */\n\t            get: function () { return this._routerState.parent(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n\t            /**\n\t             * The first child of this route in the router state tree.\n\t             */\n\t            get: function () { return this._routerState.firstChild(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n\t            /**\n\t             * The children of this route in the router state tree.\n\t             */\n\t            get: function () { return this._routerState.children(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n\t            /**\n\t             * The path from the root of the router state tree to this route.\n\t             */\n\t            get: function () { return this._routerState.pathFromRoot(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @docsNotRequired\n\t         */\n\t        ActivatedRoute.prototype.toString = function () {\n\t            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n\t        };\n\t        return ActivatedRoute;\n\t    }());\n\t    /**\n\t     * @internal\n\t     */\n\t    function inheritedParamsDataResolve(route) {\n\t        var pathToRoot = route.pathFromRoot;\n\t        var inhertingStartingFrom = pathToRoot.length - 1;\n\t        while (inhertingStartingFrom >= 1) {\n\t            var current = pathToRoot[inhertingStartingFrom];\n\t            var parent_1 = pathToRoot[inhertingStartingFrom - 1];\n\t            // current route is an empty path => inherits its parent's params and data\n\t            if (current.routeConfig && current.routeConfig.path === '') {\n\t                inhertingStartingFrom--;\n\t            }\n\t            else if (!parent_1.component) {\n\t                inhertingStartingFrom--;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n\t            var params = merge(res.params, curr.params);\n\t            var data = merge(res.data, curr.data);\n\t            var resolve = merge(res.resolve, curr._resolvedData);\n\t            return { params: params, data: data, resolve: resolve };\n\t        }, { params: {}, data: {}, resolve: {} });\n\t    }\n\t    /**\n\t     * @whatItDoes Contains the information about a route associated with a component loaded in an\n\t     * outlet\n\t     * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n\t     * state tree.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * @Component({templateUrl:'./my-component.html'})\n\t     * class MyComponent {\n\t     *   constructor(route: ActivatedRoute) {\n\t     *     const id: string = route.snapshot.params.id;\n\t     *     const url: string = route.snapshot.url.join('');\n\t     *     const user = route.snapshot.data.user;\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var ActivatedRouteSnapshot = (function () {\n\t        /**\n\t         * @internal\n\t         */\n\t        function ActivatedRouteSnapshot(\n\t            /**\n\t             *  The URL segments matched by this route.\n\t             */\n\t            url, \n\t            /**\n\t             * The matrix parameters scoped to this route.\n\t             */\n\t            params, \n\t            /**\n\t             * The query parameters shared by all the routes.\n\t             */\n\t            queryParams, \n\t            /**\n\t             * The URL fragment shared by all the routes.\n\t             */\n\t            fragment, \n\t            /**\n\t             * The static and resolved data of this route.\n\t             */\n\t            data, \n\t            /**\n\t             * The outlet name of the route.\n\t             */\n\t            outlet, \n\t            /**\n\t             * The component of the route.\n\t             */\n\t            component, routeConfig, urlSegment, lastPathIndex, resolve) {\n\t            this.url = url;\n\t            this.params = params;\n\t            this.queryParams = queryParams;\n\t            this.fragment = fragment;\n\t            this.data = data;\n\t            this.outlet = outlet;\n\t            this.component = component;\n\t            this._routeConfig = routeConfig;\n\t            this._urlSegment = urlSegment;\n\t            this._lastPathIndex = lastPathIndex;\n\t            this._resolve = resolve;\n\t        }\n\t        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n\t            /**\n\t             * The configuration used to match this route.\n\t             */\n\t            get: function () { return this._routeConfig; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n\t            /**\n\t             * The root of the router state.\n\t             */\n\t            get: function () { return this._routerState.root; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n\t            /**\n\t             * The parent of this route in the router state tree.\n\t             */\n\t            get: function () { return this._routerState.parent(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n\t            /**\n\t             * The first child of this route in the router state tree.\n\t             */\n\t            get: function () { return this._routerState.firstChild(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n\t            /**\n\t             * The children of this route in the router state tree.\n\t             */\n\t            get: function () { return this._routerState.children(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n\t            /**\n\t             * The path from the root of the router state tree to this route.\n\t             */\n\t            get: function () { return this._routerState.pathFromRoot(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @docsNotRequired\n\t         */\n\t        ActivatedRouteSnapshot.prototype.toString = function () {\n\t            var url = this.url.map(function (s) { return s.toString(); }).join('/');\n\t            var matched = this._routeConfig ? this._routeConfig.path : '';\n\t            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n\t        };\n\t        return ActivatedRouteSnapshot;\n\t    }());\n\t    /**\n\t     * @whatItDoes Represents the state of the router at a moment in time.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * @Component({templateUrl:'template.html'})\n\t     * class MyComponent {\n\t     *   constructor(router: Router) {\n\t     *     const state: RouterState = router.routerState;\n\t     *     const snapshot: RouterStateSnapshot = state.snapshot;\n\t     *     const root: ActivatedRouteSnapshot = snapshot.root;\n\t     *     const child = root.firstChild;\n\t     *     const id: Observable<string> = child.params.map(p => p.id);\n\t     *     //...\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @description\n\t     * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n\t     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterStateSnapshot = (function (_super) {\n\t        __extends$1(RouterStateSnapshot, _super);\n\t        /**\n\t         * @internal\n\t         */\n\t        function RouterStateSnapshot(\n\t            /** The url from which this snapshot was created */\n\t            url, root) {\n\t            _super.call(this, root);\n\t            this.url = url;\n\t            setRouterStateSnapshot(this, root);\n\t        }\n\t        RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n\t        return RouterStateSnapshot;\n\t    }(Tree));\n\t    function setRouterStateSnapshot(state, node) {\n\t        node.value._routerState = state;\n\t        node.children.forEach(function (c) { return setRouterStateSnapshot(state, c); });\n\t    }\n\t    function serializeNode(node) {\n\t        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n\t        return \"\" + node.value + c;\n\t    }\n\t    /**\n\t     * The expectation is that the activate route is created with the right set of parameters.\n\t     * So we push new values into the observables only when they are not the initial values.\n\t     * And we detect that by checking if the snapshot field is set.\n\t     */\n\t    function advanceActivatedRoute(route) {\n\t        if (route.snapshot) {\n\t            if (!shallowEqual(route.snapshot.queryParams, route._futureSnapshot.queryParams)) {\n\t                route.queryParams.next(route._futureSnapshot.queryParams);\n\t            }\n\t            if (route.snapshot.fragment !== route._futureSnapshot.fragment) {\n\t                route.fragment.next(route._futureSnapshot.fragment);\n\t            }\n\t            if (!shallowEqual(route.snapshot.params, route._futureSnapshot.params)) {\n\t                route.params.next(route._futureSnapshot.params);\n\t            }\n\t            if (!shallowEqualArrays(route.snapshot.url, route._futureSnapshot.url)) {\n\t                route.url.next(route._futureSnapshot.url);\n\t            }\n\t            if (!equalParamsAndUrlSegments(route.snapshot, route._futureSnapshot)) {\n\t                route.data.next(route._futureSnapshot.data);\n\t            }\n\t            route.snapshot = route._futureSnapshot;\n\t        }\n\t        else {\n\t            route.snapshot = route._futureSnapshot;\n\t            // this is for resolved data\n\t            route.data.next(route._futureSnapshot.data);\n\t        }\n\t    }\n\t    function equalParamsAndUrlSegments(a, b) {\n\t        return shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n\t    }\n\t\n\t    function createRouterState(curr, prevState) {\n\t        var root = createNode(curr._root, prevState ? prevState._root : undefined);\n\t        return new RouterState(root, curr);\n\t    }\n\t    function createNode(curr, prevState) {\n\t        if (prevState && equalRouteSnapshots(prevState.value.snapshot, curr.value)) {\n\t            var value = prevState.value;\n\t            value._futureSnapshot = curr.value;\n\t            var children = createOrReuseChildren(curr, prevState);\n\t            return new TreeNode(value, children);\n\t        }\n\t        else {\n\t            var value = createActivatedRoute(curr.value);\n\t            var children = curr.children.map(function (c) { return createNode(c); });\n\t            return new TreeNode(value, children);\n\t        }\n\t    }\n\t    function createOrReuseChildren(curr, prevState) {\n\t        return curr.children.map(function (child) {\n\t            for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n\t                var p = _a[_i];\n\t                if (equalRouteSnapshots(p.value.snapshot, child.value)) {\n\t                    return createNode(child, p);\n\t                }\n\t            }\n\t            return createNode(child);\n\t        });\n\t    }\n\t    function createActivatedRoute(c) {\n\t        return new ActivatedRoute(new rxjs_BehaviorSubject.BehaviorSubject(c.url), new rxjs_BehaviorSubject.BehaviorSubject(c.params), new rxjs_BehaviorSubject.BehaviorSubject(c.queryParams), new rxjs_BehaviorSubject.BehaviorSubject(c.fragment), new rxjs_BehaviorSubject.BehaviorSubject(c.data), c.outlet, c.component, c);\n\t    }\n\t    function equalRouteSnapshots(a, b) {\n\t        return a._routeConfig === b._routeConfig;\n\t    }\n\t\n\t    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n\t        if (commands.length === 0) {\n\t            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n\t        }\n\t        var normalizedCommands = normalizeCommands(commands);\n\t        validateCommands(normalizedCommands);\n\t        if (navigateToRoot(normalizedCommands)) {\n\t            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n\t        }\n\t        var startingPosition = findStartingPosition(normalizedCommands, urlTree, route);\n\t        var segmentGroup = startingPosition.processChildren ?\n\t            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, normalizedCommands.commands) :\n\t            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, normalizedCommands.commands);\n\t        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n\t    }\n\t    function validateCommands(n) {\n\t        if (n.isAbsolute && n.commands.length > 0 && isMatrixParams(n.commands[0])) {\n\t            throw new Error('Root segment cannot have matrix parameters');\n\t        }\n\t        var c = n.commands.filter(function (c) { return typeof c === 'object' && c.outlets !== undefined; });\n\t        if (c.length > 0 && c[0] !== n.commands[n.commands.length - 1]) {\n\t            throw new Error('{outlets:{}} has to be the last command');\n\t        }\n\t    }\n\t    function isMatrixParams(command) {\n\t        return typeof command === 'object' && command.outlets === undefined &&\n\t            command.segmentPath === undefined;\n\t    }\n\t    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n\t        if (urlTree.root === oldSegmentGroup) {\n\t            return new UrlTree(newSegmentGroup, stringify(queryParams), fragment);\n\t        }\n\t        else {\n\t            return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), stringify(queryParams), fragment);\n\t        }\n\t    }\n\t    function replaceSegment(current, oldSegment, newSegment) {\n\t        var children = {};\n\t        forEach(current.children, function (c, outletName) {\n\t            if (c === oldSegment) {\n\t                children[outletName] = newSegment;\n\t            }\n\t            else {\n\t                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n\t            }\n\t        });\n\t        return new UrlSegmentGroup(current.segments, children);\n\t    }\n\t    function navigateToRoot(normalizedChange) {\n\t        return normalizedChange.isAbsolute && normalizedChange.commands.length === 1 &&\n\t            normalizedChange.commands[0] == '/';\n\t    }\n\t    var NormalizedNavigationCommands = (function () {\n\t        function NormalizedNavigationCommands(isAbsolute, numberOfDoubleDots, commands) {\n\t            this.isAbsolute = isAbsolute;\n\t            this.numberOfDoubleDots = numberOfDoubleDots;\n\t            this.commands = commands;\n\t        }\n\t        return NormalizedNavigationCommands;\n\t    }());\n\t    function normalizeCommands(commands) {\n\t        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] == '/') {\n\t            return new NormalizedNavigationCommands(true, 0, commands);\n\t        }\n\t        var numberOfDoubleDots = 0;\n\t        var isAbsolute = false;\n\t        var res = [];\n\t        var _loop_1 = function(i) {\n\t            var c = commands[i];\n\t            if (typeof c === 'object' && c.outlets !== undefined) {\n\t                var r_1 = {};\n\t                forEach(c.outlets, function (commands, name) {\n\t                    if (typeof commands === 'string') {\n\t                        r_1[name] = commands.split('/');\n\t                    }\n\t                    else {\n\t                        r_1[name] = commands;\n\t                    }\n\t                });\n\t                res.push({ outlets: r_1 });\n\t                return \"continue\";\n\t            }\n\t            if (typeof c === 'object' && c.segmentPath !== undefined) {\n\t                res.push(c.segmentPath);\n\t                return \"continue\";\n\t            }\n\t            if (!(typeof c === 'string')) {\n\t                res.push(c);\n\t                return \"continue\";\n\t            }\n\t            if (i === 0) {\n\t                var parts = c.split('/');\n\t                for (var j = 0; j < parts.length; ++j) {\n\t                    var cc = parts[j];\n\t                    if (j == 0 && cc == '.') {\n\t                    }\n\t                    else if (j == 0 && cc == '') {\n\t                        isAbsolute = true;\n\t                    }\n\t                    else if (cc == '..') {\n\t                        numberOfDoubleDots++;\n\t                    }\n\t                    else if (cc != '') {\n\t                        res.push(cc);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                res.push(c);\n\t            }\n\t        };\n\t        for (var i = 0; i < commands.length; ++i) {\n\t            _loop_1(i);\n\t        }\n\t        return new NormalizedNavigationCommands(isAbsolute, numberOfDoubleDots, res);\n\t    }\n\t    var Position = (function () {\n\t        function Position(segmentGroup, processChildren, index) {\n\t            this.segmentGroup = segmentGroup;\n\t            this.processChildren = processChildren;\n\t            this.index = index;\n\t        }\n\t        return Position;\n\t    }());\n\t    function findStartingPosition(normalizedChange, urlTree, route) {\n\t        if (normalizedChange.isAbsolute) {\n\t            return new Position(urlTree.root, true, 0);\n\t        }\n\t        else if (route.snapshot._lastPathIndex === -1) {\n\t            return new Position(route.snapshot._urlSegment, true, 0);\n\t        }\n\t        else {\n\t            var modifier = isMatrixParams(normalizedChange.commands[0]) ? 0 : 1;\n\t            var index = route.snapshot._lastPathIndex + modifier;\n\t            return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, normalizedChange.numberOfDoubleDots);\n\t        }\n\t    }\n\t    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n\t        var g = group;\n\t        var ci = index;\n\t        var dd = numberOfDoubleDots;\n\t        while (dd > ci) {\n\t            dd -= ci;\n\t            g = g.parent;\n\t            if (!g) {\n\t                throw new Error('Invalid number of \\'../\\'');\n\t            }\n\t            ci = g.segments.length;\n\t        }\n\t        return new Position(g, false, ci - dd);\n\t    }\n\t    function getPath(command) {\n\t        if (typeof command === 'object' && command.outlets)\n\t            return command.outlets[PRIMARY_OUTLET];\n\t        return \"\" + command;\n\t    }\n\t    function getOutlets(commands) {\n\t        if (!(typeof commands[0] === 'object'))\n\t            return (_a = {}, _a[PRIMARY_OUTLET] = commands, _a);\n\t        if (commands[0].outlets === undefined)\n\t            return (_b = {}, _b[PRIMARY_OUTLET] = commands, _b);\n\t        return commands[0].outlets;\n\t        var _a, _b;\n\t    }\n\t    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n\t        if (!segmentGroup) {\n\t            segmentGroup = new UrlSegmentGroup([], {});\n\t        }\n\t        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n\t            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n\t        }\n\t        var m = prefixedWith(segmentGroup, startIndex, commands);\n\t        var slicedCommands = commands.slice(m.commandIndex);\n\t        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n\t            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n\t            g.children[PRIMARY_OUTLET] =\n\t                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n\t            return updateSegmentGroupChildren(g, 0, slicedCommands);\n\t        }\n\t        else if (m.match && slicedCommands.length === 0) {\n\t            return new UrlSegmentGroup(segmentGroup.segments, {});\n\t        }\n\t        else if (m.match && !segmentGroup.hasChildren()) {\n\t            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n\t        }\n\t        else if (m.match) {\n\t            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n\t        }\n\t        else {\n\t            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n\t        }\n\t    }\n\t    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n\t        if (commands.length === 0) {\n\t            return new UrlSegmentGroup(segmentGroup.segments, {});\n\t        }\n\t        else {\n\t            var outlets_1 = getOutlets(commands);\n\t            var children_1 = {};\n\t            forEach(outlets_1, function (commands, outlet) {\n\t                if (commands !== null) {\n\t                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n\t                }\n\t            });\n\t            forEach(segmentGroup.children, function (child, childOutlet) {\n\t                if (outlets_1[childOutlet] === undefined) {\n\t                    children_1[childOutlet] = child;\n\t                }\n\t            });\n\t            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n\t        }\n\t    }\n\t    function prefixedWith(segmentGroup, startIndex, commands) {\n\t        var currentCommandIndex = 0;\n\t        var currentPathIndex = startIndex;\n\t        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n\t        while (currentPathIndex < segmentGroup.segments.length) {\n\t            if (currentCommandIndex >= commands.length)\n\t                return noMatch;\n\t            var path = segmentGroup.segments[currentPathIndex];\n\t            var curr = getPath(commands[currentCommandIndex]);\n\t            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n\t            if (currentPathIndex > 0 && curr === undefined)\n\t                break;\n\t            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n\t                if (!compare(curr, next, path))\n\t                    return noMatch;\n\t                currentCommandIndex += 2;\n\t            }\n\t            else {\n\t                if (!compare(curr, {}, path))\n\t                    return noMatch;\n\t                currentCommandIndex++;\n\t            }\n\t            currentPathIndex++;\n\t        }\n\t        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n\t    }\n\t    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n\t        var paths = segmentGroup.segments.slice(0, startIndex);\n\t        var i = 0;\n\t        while (i < commands.length) {\n\t            if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n\t                var children = createNewSegmentChldren(commands[i].outlets);\n\t                return new UrlSegmentGroup(paths, children);\n\t            }\n\t            // if we start with an object literal, we need to reuse the path part from the segment\n\t            if (i === 0 && isMatrixParams(commands[0])) {\n\t                var p = segmentGroup.segments[startIndex];\n\t                paths.push(new UrlSegment(p.path, commands[0]));\n\t                i++;\n\t                continue;\n\t            }\n\t            var curr = getPath(commands[i]);\n\t            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n\t            if (curr && next && isMatrixParams(next)) {\n\t                paths.push(new UrlSegment(curr, stringify(next)));\n\t                i += 2;\n\t            }\n\t            else {\n\t                paths.push(new UrlSegment(curr, {}));\n\t                i++;\n\t            }\n\t        }\n\t        return new UrlSegmentGroup(paths, {});\n\t    }\n\t    function createNewSegmentChldren(outlets) {\n\t        var children = {};\n\t        forEach(outlets, function (commands, outlet) {\n\t            if (commands !== null) {\n\t                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n\t            }\n\t        });\n\t        return children;\n\t    }\n\t    function stringify(params) {\n\t        var res = {};\n\t        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n\t        return res;\n\t    }\n\t    function compare(path, params, segment) {\n\t        return path == segment.path && shallowEqual(params, segment.parameters);\n\t    }\n\t\n\t    var NoMatch$1 = (function () {\n\t        function NoMatch() {\n\t        }\n\t        return NoMatch;\n\t    }());\n\t    function recognize(rootComponentType, config, urlTree, url) {\n\t        return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n\t    }\n\t    var Recognizer = (function () {\n\t        function Recognizer(rootComponentType, config, urlTree, url) {\n\t            this.rootComponentType = rootComponentType;\n\t            this.config = config;\n\t            this.urlTree = urlTree;\n\t            this.url = url;\n\t        }\n\t        Recognizer.prototype.recognize = function () {\n\t            try {\n\t                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n\t                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n\t                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n\t                var rootNode = new TreeNode(root, children);\n\t                var routeState = new RouterStateSnapshot(this.url, rootNode);\n\t                this.inheriteParamsAndData(routeState._root);\n\t                return rxjs_observable_of.of(routeState);\n\t            }\n\t            catch (e) {\n\t                return new rxjs_Observable.Observable(function (obs) { return obs.error(e); });\n\t            }\n\t        };\n\t        Recognizer.prototype.inheriteParamsAndData = function (routeNode) {\n\t            var _this = this;\n\t            var route = routeNode.value;\n\t            var i = inheritedParamsDataResolve(route);\n\t            route.params = Object.freeze(i.params);\n\t            route.data = Object.freeze(i.data);\n\t            routeNode.children.forEach(function (n) { return _this.inheriteParamsAndData(n); });\n\t        };\n\t        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n\t            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n\t                return this.processChildren(config, segmentGroup);\n\t            }\n\t            else {\n\t                return this.processSegment(config, segmentGroup, 0, segmentGroup.segments, outlet);\n\t            }\n\t        };\n\t        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n\t            var _this = this;\n\t            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n\t            checkOutletNameUniqueness(children);\n\t            sortActivatedRouteSnapshots(children);\n\t            return children;\n\t        };\n\t        Recognizer.prototype.processSegment = function (config, segmentGroup, pathIndex, segments, outlet) {\n\t            for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n\t                var r = config_1[_i];\n\t                try {\n\t                    return this.processSegmentAgainstRoute(r, segmentGroup, pathIndex, segments, outlet);\n\t                }\n\t                catch (e) {\n\t                    if (!(e instanceof NoMatch$1))\n\t                        throw e;\n\t                }\n\t            }\n\t            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n\t                return [];\n\t            }\n\t            else {\n\t                throw new NoMatch$1();\n\t            }\n\t        };\n\t        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n\t            return segments.length === 0 && !segmentGroup.children[outlet];\n\t        };\n\t        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, pathIndex, segments, outlet) {\n\t            if (route.redirectTo)\n\t                throw new NoMatch$1();\n\t            if ((route.outlet ? route.outlet : PRIMARY_OUTLET) !== outlet)\n\t                throw new NoMatch$1();\n\t            if (route.path === '**') {\n\t                var params = segments.length > 0 ? last(segments).parameters : {};\n\t                var snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n\t                return [new TreeNode(snapshot_1, [])];\n\t            }\n\t            var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n\t            var rawSlicedSegments = segments.slice(lastChild);\n\t            var childConfig = getChildConfig(route);\n\t            var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n\t            var snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n\t            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n\t                var children = this.processChildren(childConfig, segmentGroup);\n\t                return [new TreeNode(snapshot, children)];\n\t            }\n\t            else if (childConfig.length === 0 && slicedSegments.length === 0) {\n\t                return [new TreeNode(snapshot, [])];\n\t            }\n\t            else {\n\t                var children = this.processSegment(childConfig, segmentGroup, pathIndex + lastChild, slicedSegments, PRIMARY_OUTLET);\n\t                return [new TreeNode(snapshot, children)];\n\t            }\n\t        };\n\t        return Recognizer;\n\t    }());\n\t    function sortActivatedRouteSnapshots(nodes) {\n\t        nodes.sort(function (a, b) {\n\t            if (a.value.outlet === PRIMARY_OUTLET)\n\t                return -1;\n\t            if (b.value.outlet === PRIMARY_OUTLET)\n\t                return 1;\n\t            return a.value.outlet.localeCompare(b.value.outlet);\n\t        });\n\t    }\n\t    function getChildConfig(route) {\n\t        if (route.children) {\n\t            return route.children;\n\t        }\n\t        else if (route.loadChildren) {\n\t            return route._loadedConfig.routes;\n\t        }\n\t        else {\n\t            return [];\n\t        }\n\t    }\n\t    function match$1(segmentGroup, route, segments) {\n\t        if (route.path === '') {\n\t            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n\t                throw new NoMatch$1();\n\t            }\n\t            else {\n\t                return { consumedSegments: [], lastChild: 0, parameters: {} };\n\t            }\n\t        }\n\t        var matcher = route.matcher || defaultUrlMatcher;\n\t        var res = matcher(segments, segmentGroup, route);\n\t        if (!res)\n\t            throw new NoMatch$1();\n\t        var posParams = {};\n\t        forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n\t        var parameters = merge(posParams, res.consumed[res.consumed.length - 1].parameters);\n\t        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n\t    }\n\t    function checkOutletNameUniqueness(nodes) {\n\t        var names = {};\n\t        nodes.forEach(function (n) {\n\t            var routeWithSameOutletName = names[n.value.outlet];\n\t            if (routeWithSameOutletName) {\n\t                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n\t                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n\t                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n\t            }\n\t            names[n.value.outlet] = n.value;\n\t        });\n\t    }\n\t    function getSourceSegmentGroup(segmentGroup) {\n\t        var s = segmentGroup;\n\t        while (s._sourceSegment) {\n\t            s = s._sourceSegment;\n\t        }\n\t        return s;\n\t    }\n\t    function getPathIndexShift(segmentGroup) {\n\t        var s = segmentGroup;\n\t        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n\t        while (s._sourceSegment) {\n\t            s = s._sourceSegment;\n\t            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n\t        }\n\t        return res - 1;\n\t    }\n\t    function split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n\t        if (slicedSegments.length > 0 &&\n\t            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n\t            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n\t            s._sourceSegment = segmentGroup;\n\t            s._segmentIndexShift = consumedSegments.length;\n\t            return { segmentGroup: s, slicedSegments: [] };\n\t        }\n\t        else if (slicedSegments.length === 0 &&\n\t            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n\t            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n\t            s._sourceSegment = segmentGroup;\n\t            s._segmentIndexShift = consumedSegments.length;\n\t            return { segmentGroup: s, slicedSegments: slicedSegments };\n\t        }\n\t        else {\n\t            var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n\t            s._sourceSegment = segmentGroup;\n\t            s._segmentIndexShift = consumedSegments.length;\n\t            return { segmentGroup: s, slicedSegments: slicedSegments };\n\t        }\n\t    }\n\t    function addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n\t        var res = {};\n\t        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n\t            var r = routes_1[_i];\n\t            if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$2(r)]) {\n\t                var s = new UrlSegmentGroup([], {});\n\t                s._sourceSegment = segmentGroup;\n\t                s._segmentIndexShift = segmentGroup.segments.length;\n\t                res[getOutlet$2(r)] = s;\n\t            }\n\t        }\n\t        return merge(children, res);\n\t    }\n\t    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n\t        var res = {};\n\t        res[PRIMARY_OUTLET] = primarySegment;\n\t        primarySegment._sourceSegment = segmentGroup;\n\t        primarySegment._segmentIndexShift = consumedSegments.length;\n\t        for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n\t            var r = routes_2[_i];\n\t            if (r.path === '' && getOutlet$2(r) !== PRIMARY_OUTLET) {\n\t                var s = new UrlSegmentGroup([], {});\n\t                s._sourceSegment = segmentGroup;\n\t                s._segmentIndexShift = consumedSegments.length;\n\t                res[getOutlet$2(r)] = s;\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n\t        return routes\n\t            .filter(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) &&\n\t            getOutlet$2(r) !== PRIMARY_OUTLET; })\n\t            .length > 0;\n\t    }\n\t    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n\t        return routes.filter(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); }).length > 0;\n\t    }\n\t    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n\t        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full')\n\t            return false;\n\t        return r.path === '' && r.redirectTo === undefined;\n\t    }\n\t    function getOutlet$2(route) {\n\t        return route.outlet ? route.outlet : PRIMARY_OUTLET;\n\t    }\n\t    function getData(route) {\n\t        return route.data ? route.data : {};\n\t    }\n\t    function getResolve(route) {\n\t        return route.resolve ? route.resolve : {};\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Contains all the router outlets created in a component.\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterOutletMap = (function () {\n\t        function RouterOutletMap() {\n\t            /** @internal */\n\t            this._outlets = {};\n\t        }\n\t        /**\n\t         * Adds an outlet to this map.\n\t         */\n\t        RouterOutletMap.prototype.registerOutlet = function (name, outlet) { this._outlets[name] = outlet; };\n\t        /**\n\t         * Removes an outlet from this map.\n\t         */\n\t        RouterOutletMap.prototype.removeOutlet = function (name) { this._outlets[name] = undefined; };\n\t        return RouterOutletMap;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Provides a way to migrate Angular 1 applications to Angular 2.\n\t     *\n\t     * @experimental\n\t     */\n\t    var UrlHandlingStrategy = (function () {\n\t        function UrlHandlingStrategy() {\n\t        }\n\t        return UrlHandlingStrategy;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var DefaultUrlHandlingStrategy = (function () {\n\t        function DefaultUrlHandlingStrategy() {\n\t        }\n\t        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n\t        DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n\t        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n\t        return DefaultUrlHandlingStrategy;\n\t    }());\n\t\n\t    /**\n\t     * @whatItDoes Represents an event triggered when a navigation starts.\n\t     *\n\t     * @stable\n\t     */\n\t    var NavigationStart = (function () {\n\t        // TODO: vsavkin: make internal\n\t        function NavigationStart(\n\t            /** @docsNotRequired */\n\t            id, \n\t            /** @docsNotRequired */\n\t            url) {\n\t            this.id = id;\n\t            this.url = url;\n\t        }\n\t        /** @docsNotRequired */\n\t        NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n\t        return NavigationStart;\n\t    }());\n\t    /**\n\t     * @whatItDoes Represents an event triggered when a navigation ends successfully.\n\t     *\n\t     * @stable\n\t     */\n\t    var NavigationEnd = (function () {\n\t        // TODO: vsavkin: make internal\n\t        function NavigationEnd(\n\t            /** @docsNotRequired */\n\t            id, \n\t            /** @docsNotRequired */\n\t            url, \n\t            /** @docsNotRequired */\n\t            urlAfterRedirects) {\n\t            this.id = id;\n\t            this.url = url;\n\t            this.urlAfterRedirects = urlAfterRedirects;\n\t        }\n\t        /** @docsNotRequired */\n\t        NavigationEnd.prototype.toString = function () {\n\t            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n\t        };\n\t        return NavigationEnd;\n\t    }());\n\t    /**\n\t     * @whatItDoes Represents an event triggered when a navigation is canceled.\n\t     *\n\t     * @stable\n\t     */\n\t    var NavigationCancel = (function () {\n\t        // TODO: vsavkin: make internal\n\t        function NavigationCancel(\n\t            /** @docsNotRequired */\n\t            id, \n\t            /** @docsNotRequired */\n\t            url, \n\t            /** @docsNotRequired */\n\t            reason) {\n\t            this.id = id;\n\t            this.url = url;\n\t            this.reason = reason;\n\t        }\n\t        /** @docsNotRequired */\n\t        NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n\t        return NavigationCancel;\n\t    }());\n\t    /**\n\t     * @whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n\t     *\n\t     * @stable\n\t     */\n\t    var NavigationError = (function () {\n\t        // TODO: vsavkin: make internal\n\t        function NavigationError(\n\t            /** @docsNotRequired */\n\t            id, \n\t            /** @docsNotRequired */\n\t            url, \n\t            /** @docsNotRequired */\n\t            error) {\n\t            this.id = id;\n\t            this.url = url;\n\t            this.error = error;\n\t        }\n\t        /** @docsNotRequired */\n\t        NavigationError.prototype.toString = function () {\n\t            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n\t        };\n\t        return NavigationError;\n\t    }());\n\t    /**\n\t     * @whatItDoes Represents an event triggered when routes are recognized.\n\t     *\n\t     * @stable\n\t     */\n\t    var RoutesRecognized = (function () {\n\t        // TODO: vsavkin: make internal\n\t        function RoutesRecognized(\n\t            /** @docsNotRequired */\n\t            id, \n\t            /** @docsNotRequired */\n\t            url, \n\t            /** @docsNotRequired */\n\t            urlAfterRedirects, \n\t            /** @docsNotRequired */\n\t            state) {\n\t            this.id = id;\n\t            this.url = url;\n\t            this.urlAfterRedirects = urlAfterRedirects;\n\t            this.state = state;\n\t        }\n\t        /** @docsNotRequired */\n\t        RoutesRecognized.prototype.toString = function () {\n\t            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n\t        };\n\t        return RoutesRecognized;\n\t    }());\n\t    function defaultErrorHandler(error) {\n\t        throw error;\n\t    }\n\t    /**\n\t     * @whatItDoes Provides the navigation and url manipulation capabilities.\n\t     *\n\t     * See {@link Routes} for more details and examples.\n\t     *\n\t     * @ngModule RouterModule\n\t     *\n\t     * @stable\n\t     */\n\t    var Router = (function () {\n\t        /**\n\t         * Creates the router service.\n\t         */\n\t        // TODO: vsavkin make internal after the final is out.\n\t        function Router(rootComponentType, urlSerializer, outletMap, location, injector, loader, compiler, config) {\n\t            this.rootComponentType = rootComponentType;\n\t            this.urlSerializer = urlSerializer;\n\t            this.outletMap = outletMap;\n\t            this.location = location;\n\t            this.injector = injector;\n\t            this.config = config;\n\t            this.navigations = new rxjs_BehaviorSubject.BehaviorSubject(null);\n\t            this.routerEvents = new rxjs_Subject.Subject();\n\t            this.navigationId = 0;\n\t            /**\n\t             * Error handler that is invoked when a navigation errors.\n\t             *\n\t             * See {@link ErrorHandler} for more information.\n\t             */\n\t            this.errorHandler = defaultErrorHandler;\n\t            /**\n\t             * Indicates if at least one navigation happened.\n\t             */\n\t            this.navigated = false;\n\t            /**\n\t             * Extracts and merges URLs. Used for Angular 1 to Angular 2 migrations.\n\t             */\n\t            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n\t            this.resetConfig(config);\n\t            this.currentUrlTree = createEmptyUrlTree();\n\t            this.rawUrlTree = this.currentUrlTree;\n\t            this.configLoader = new RouterConfigLoader(loader, compiler);\n\t            this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n\t            this.processNavigations();\n\t        }\n\t        /**\n\t         * @internal\n\t         * TODO: this should be removed once the constructor of the router made internal\n\t         */\n\t        Router.prototype.resetRootComponentType = function (rootComponentType) {\n\t            this.rootComponentType = rootComponentType;\n\t            // TODO: vsavkin router 4.0 should make the root component set to null\n\t            // this will simplify the lifecycle of the router.\n\t            this.currentRouterState.root.component = this.rootComponentType;\n\t        };\n\t        /**\n\t         * Sets up the location change listener and performs the initial navigation.\n\t         */\n\t        Router.prototype.initialNavigation = function () {\n\t            this.setUpLocationChangeListener();\n\t            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n\t        };\n\t        /**\n\t         * Sets up the location change listener.\n\t         */\n\t        Router.prototype.setUpLocationChangeListener = function () {\n\t            var _this = this;\n\t            // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n\t            // which does not work properly with zone.js in IE and Safari\n\t            this.locationSubscription = this.location.subscribe(Zone.current.wrap(function (change) {\n\t                var rawUrlTree = _this.urlSerializer.parse(change['url']);\n\t                setTimeout(function () {\n\t                    _this.scheduleNavigation(rawUrlTree, { skipLocationChange: change['pop'], replaceUrl: true });\n\t                }, 0);\n\t            }));\n\t        };\n\t        Object.defineProperty(Router.prototype, \"routerState\", {\n\t            /**\n\t             * Returns the current route state.\n\t             */\n\t            get: function () { return this.currentRouterState; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(Router.prototype, \"url\", {\n\t            /**\n\t             * Returns the current url.\n\t             */\n\t            get: function () { return this.serializeUrl(this.currentUrlTree); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(Router.prototype, \"events\", {\n\t            /**\n\t             * Returns an observable of route events\n\t             */\n\t            get: function () { return this.routerEvents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Resets the configuration used for navigation and generating links.\n\t         *\n\t         * ### Usage\n\t         *\n\t         * ```\n\t         * router.resetConfig([\n\t         *  { path: 'team/:id', component: TeamCmp, children: [\n\t         *    { path: 'simple', component: SimpleCmp },\n\t         *    { path: 'user/:name', component: UserCmp }\n\t         *  ] }\n\t         * ]);\n\t         * ```\n\t         */\n\t        Router.prototype.resetConfig = function (config) {\n\t            validateConfig(config);\n\t            this.config = config;\n\t        };\n\t        /**\n\t         * @docsNotRequired\n\t         */\n\t        Router.prototype.ngOnDestroy = function () { this.dispose(); };\n\t        /**\n\t         * Disposes of the router.\n\t         */\n\t        Router.prototype.dispose = function () { this.locationSubscription.unsubscribe(); };\n\t        /**\n\t         * Applies an array of commands to the current url tree and creates a new url tree.\n\t         *\n\t         * When given an activate route, applies the given commands starting from the route.\n\t         * When not given a route, applies the given command starting from the root.\n\t         *\n\t         * ### Usage\n\t         *\n\t         * ```\n\t         * // create /team/33/user/11\n\t         * router.createUrlTree(['/team', 33, 'user', 11]);\n\t         *\n\t         * // create /team/33;expand=true/user/11\n\t         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n\t         *\n\t         * // you can collapse static segments like this (this works only with the first passed-in value):\n\t         * router.createUrlTree(['/team/33/user', userId]);\n\t         *\n\t         * // If the first segment can contain slashes, and you do not want the router to split it, you\n\t         * // can do the following:\n\t         *\n\t         * router.createUrlTree([{segmentPath: '/one/two'}]);\n\t         *\n\t         * // create /team/33/(user/11//right:chat)\n\t         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n\t         *\n\t         * // remove the right secondary node\n\t         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n\t         *\n\t         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n\t         *\n\t         * // navigate to /team/33/user/11/details\n\t         * router.createUrlTree(['details'], {relativeTo: route});\n\t         *\n\t         * // navigate to /team/33/user/22\n\t         * router.createUrlTree(['../22'], {relativeTo: route});\n\t         *\n\t         * // navigate to /team/44/user/22\n\t         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n\t         * ```\n\t         */\n\t        Router.prototype.createUrlTree = function (commands, _a) {\n\t            var _b = _a === void 0 ? {} : _a, relativeTo = _b.relativeTo, queryParams = _b.queryParams, fragment = _b.fragment, preserveQueryParams = _b.preserveQueryParams, preserveFragment = _b.preserveFragment;\n\t            var a = relativeTo ? relativeTo : this.routerState.root;\n\t            var q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams;\n\t            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n\t            return createUrlTree(a, this.currentUrlTree, commands, q, f);\n\t        };\n\t        /**\n\t         * Navigate based on the provided url. This navigation is always absolute.\n\t         *\n\t         * Returns a promise that:\n\t         * - is resolved with 'true' when navigation succeeds\n\t         * - is resolved with 'false' when navigation fails\n\t         * - is rejected when an error happens\n\t         *\n\t         * ### Usage\n\t         *\n\t         * ```\n\t         * router.navigateByUrl(\"/team/33/user/11\");\n\t         *\n\t         * // Navigate without updating the URL\n\t         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n\t         * ```\n\t         *\n\t         * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n\t         * and does not apply any delta to the current one.\n\t         */\n\t        Router.prototype.navigateByUrl = function (url, extras) {\n\t            if (extras === void 0) { extras = { skipLocationChange: false }; }\n\t            if (url instanceof UrlTree) {\n\t                return this.scheduleNavigation(this.urlHandlingStrategy.merge(url, this.rawUrlTree), extras);\n\t            }\n\t            else {\n\t                var urlTree = this.urlSerializer.parse(url);\n\t                return this.scheduleNavigation(this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree), extras);\n\t            }\n\t        };\n\t        /**\n\t         * Navigate based on the provided array of commands and a starting point.\n\t         * If no starting route is provided, the navigation is absolute.\n\t         *\n\t         * Returns a promise that:\n\t         * - is resolved with 'true' when navigation succeeds\n\t         * - is resolved with 'false' when navigation fails\n\t         * - is rejected when an error happens\n\t         *\n\t         * ### Usage\n\t         *\n\t         * ```\n\t         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n\t         *\n\t         * // Navigate without updating the URL\n\t         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true });\n\t         * ```\n\t         *\n\t         * In opposite to `navigateByUrl`, `navigate` always takes a delta\n\t         * that is applied to the current URL.\n\t         */\n\t        Router.prototype.navigate = function (commands, extras) {\n\t            if (extras === void 0) { extras = { skipLocationChange: false }; }\n\t            if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n\t                extras.queryParams = this.removeEmptyProps(extras.queryParams);\n\t            }\n\t            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n\t        };\n\t        /**\n\t         * Serializes a {@link UrlTree} into a string.\n\t         */\n\t        Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n\t        /**\n\t         * Parses a string into a {@link UrlTree}.\n\t         */\n\t        Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n\t        /**\n\t         * Returns if the url is activated or not.\n\t         */\n\t        Router.prototype.isActive = function (url, exact) {\n\t            if (url instanceof UrlTree) {\n\t                return containsTree(this.currentUrlTree, url, exact);\n\t            }\n\t            else {\n\t                var urlTree = this.urlSerializer.parse(url);\n\t                return containsTree(this.currentUrlTree, urlTree, exact);\n\t            }\n\t        };\n\t        Router.prototype.removeEmptyProps = function (params) {\n\t            return Object.keys(params).reduce(function (result, key) {\n\t                var value = params[key];\n\t                if (value !== null && value !== undefined) {\n\t                    result[key] = value;\n\t                }\n\t                return result;\n\t            }, {});\n\t        };\n\t        Router.prototype.processNavigations = function () {\n\t            var _this = this;\n\t            rxjs_operator_concatMap.concatMap\n\t                .call(this.navigations, function (nav) {\n\t                if (nav) {\n\t                    _this.executeScheduledNavigation(nav);\n\t                    // a failed navigation should not stop the router from processing\n\t                    // further navigations => the catch\n\t                    return nav.promise.catch(function () { });\n\t                }\n\t                else {\n\t                    return rxjs_observable_of.of(null);\n\t                }\n\t            })\n\t                .subscribe(function () { });\n\t        };\n\t        Router.prototype.scheduleNavigation = function (rawUrl, extras) {\n\t            var prevRawUrl = this.navigations.value ? this.navigations.value.rawUrl : null;\n\t            if (prevRawUrl && prevRawUrl.toString() === rawUrl.toString()) {\n\t                return this.navigations.value.promise;\n\t            }\n\t            var resolve = null;\n\t            var reject = null;\n\t            var promise = new Promise(function (res, rej) {\n\t                resolve = res;\n\t                reject = rej;\n\t            });\n\t            var id = ++this.navigationId;\n\t            this.navigations.next({ id: id, rawUrl: rawUrl, prevRawUrl: prevRawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n\t            // Make sure that the error is propagated even though `processNavigations` catch\n\t            // handler does not rethrow\n\t            return promise.catch(function (e) { return Promise.reject(e); });\n\t        };\n\t        Router.prototype.executeScheduledNavigation = function (_a) {\n\t            var _this = this;\n\t            var id = _a.id, rawUrl = _a.rawUrl, prevRawUrl = _a.prevRawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n\t            var url = this.urlHandlingStrategy.extract(rawUrl);\n\t            var prevUrl = prevRawUrl ? this.urlHandlingStrategy.extract(prevRawUrl) : null;\n\t            var urlTransition = !prevUrl || url.toString() !== prevUrl.toString();\n\t            if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n\t                this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n\t                Promise.resolve()\n\t                    .then(function (_) { return _this.runNavigate(url, rawUrl, extras.skipLocationChange, extras.replaceUrl, id, null); })\n\t                    .then(resolve, reject);\n\t            }\n\t            else if (urlTransition && prevRawUrl && this.urlHandlingStrategy.shouldProcessUrl(prevRawUrl)) {\n\t                this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n\t                Promise.resolve()\n\t                    .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n\t                    .then(resolve, reject);\n\t            }\n\t            else {\n\t                this.rawUrlTree = rawUrl;\n\t                resolve(null);\n\t            }\n\t        };\n\t        Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n\t            var _this = this;\n\t            if (id !== this.navigationId) {\n\t                this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n\t                this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n\t                return Promise.resolve(false);\n\t            }\n\t            return new Promise(function (resolvePromise, rejectPromise) {\n\t                // create an observable of the url and route state snapshot\n\t                // this operation do not result in any side effects\n\t                var urlAndSnapshot$;\n\t                if (!precreatedState) {\n\t                    var redirectsApplied$ = applyRedirects(_this.injector, _this.configLoader, _this.urlSerializer, url, _this.config);\n\t                    urlAndSnapshot$ = rxjs_operator_mergeMap.mergeMap.call(redirectsApplied$, function (appliedUrl) {\n\t                        return rxjs_operator_map.map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n\t                            _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n\t                            return { appliedUrl: appliedUrl, snapshot: snapshot };\n\t                        });\n\t                    });\n\t                }\n\t                else {\n\t                    urlAndSnapshot$ = rxjs_observable_of.of({ appliedUrl: url, snapshot: precreatedState });\n\t                }\n\t                // run preactivation: guards and data resolvers\n\t                var preActivation;\n\t                var preactivationTraverse$ = rxjs_operator_map.map.call(urlAndSnapshot$, function (_a) {\n\t                    var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n\t                    preActivation =\n\t                        new PreActivation(snapshot, _this.currentRouterState.snapshot, _this.injector);\n\t                    preActivation.traverse(_this.outletMap);\n\t                    return { appliedUrl: appliedUrl, snapshot: snapshot };\n\t                });\n\t                var preactivationCheckGuards = rxjs_operator_mergeMap.mergeMap.call(preactivationTraverse$, function (_a) {\n\t                    var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n\t                    if (_this.navigationId !== id)\n\t                        return rxjs_observable_of.of(false);\n\t                    return rxjs_operator_map.map.call(preActivation.checkGuards(), function (shouldActivate) {\n\t                        return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n\t                    });\n\t                });\n\t                var preactivationResolveData$ = rxjs_operator_mergeMap.mergeMap.call(preactivationCheckGuards, function (p) {\n\t                    if (_this.navigationId !== id)\n\t                        return rxjs_observable_of.of(false);\n\t                    if (p.shouldActivate) {\n\t                        return rxjs_operator_map.map.call(preActivation.resolveData(), function () { return p; });\n\t                    }\n\t                    else {\n\t                        return rxjs_observable_of.of(p);\n\t                    }\n\t                });\n\t                // create router state\n\t                // this operation has side effects => route state is being affected\n\t                var routerState$ = rxjs_operator_map.map.call(preactivationResolveData$, function (_a) {\n\t                    var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n\t                    if (shouldActivate) {\n\t                        var state = createRouterState(snapshot, _this.currentRouterState);\n\t                        return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n\t                    }\n\t                    else {\n\t                        return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n\t                    }\n\t                });\n\t                // applied the new router state\n\t                // this operation has side effects\n\t                var navigationIsSuccessful;\n\t                var storedState = _this.currentRouterState;\n\t                var storedUrl = _this.currentUrlTree;\n\t                routerState$\n\t                    .forEach(function (_a) {\n\t                    var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n\t                    if (!shouldActivate || id !== _this.navigationId) {\n\t                        navigationIsSuccessful = false;\n\t                        return;\n\t                    }\n\t                    _this.currentUrlTree = appliedUrl;\n\t                    _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n\t                    _this.currentRouterState = state;\n\t                    if (!shouldPreventPushState) {\n\t                        var path = _this.urlSerializer.serialize(_this.rawUrlTree);\n\t                        if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n\t                            _this.location.replaceState(path);\n\t                        }\n\t                        else {\n\t                            _this.location.go(path);\n\t                        }\n\t                    }\n\t                    new ActivateRoutes(state, storedState).activate(_this.outletMap);\n\t                    navigationIsSuccessful = true;\n\t                })\n\t                    .then(function () {\n\t                    _this.navigated = true;\n\t                    if (navigationIsSuccessful) {\n\t                        _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n\t                        resolvePromise(true);\n\t                    }\n\t                    else {\n\t                        _this.resetUrlToCurrentUrlTree();\n\t                        _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n\t                        resolvePromise(false);\n\t                    }\n\t                }, function (e) {\n\t                    if (e instanceof NavigationCancelingError) {\n\t                        _this.resetUrlToCurrentUrlTree();\n\t                        _this.navigated = true;\n\t                        _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n\t                        resolvePromise(false);\n\t                    }\n\t                    else {\n\t                        _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n\t                        try {\n\t                            resolvePromise(_this.errorHandler(e));\n\t                        }\n\t                        catch (ee) {\n\t                            rejectPromise(ee);\n\t                        }\n\t                    }\n\t                    _this.currentRouterState = storedState;\n\t                    _this.currentUrlTree = storedUrl;\n\t                    _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n\t                    _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n\t                });\n\t            });\n\t        };\n\t        Router.prototype.resetUrlToCurrentUrlTree = function () {\n\t            var path = this.urlSerializer.serialize(this.rawUrlTree);\n\t            this.location.replaceState(path);\n\t        };\n\t        return Router;\n\t    }());\n\t    var CanActivate = (function () {\n\t        function CanActivate(path) {\n\t            this.path = path;\n\t        }\n\t        Object.defineProperty(CanActivate.prototype, \"route\", {\n\t            get: function () { return this.path[this.path.length - 1]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return CanActivate;\n\t    }());\n\t    var CanDeactivate = (function () {\n\t        function CanDeactivate(component, route) {\n\t            this.component = component;\n\t            this.route = route;\n\t        }\n\t        return CanDeactivate;\n\t    }());\n\t    var PreActivation = (function () {\n\t        function PreActivation(future, curr, injector) {\n\t            this.future = future;\n\t            this.curr = curr;\n\t            this.injector = injector;\n\t            this.checks = [];\n\t        }\n\t        PreActivation.prototype.traverse = function (parentOutletMap) {\n\t            var futureRoot = this.future._root;\n\t            var currRoot = this.curr ? this.curr._root : null;\n\t            this.traverseChildRoutes(futureRoot, currRoot, parentOutletMap, [futureRoot.value]);\n\t        };\n\t        PreActivation.prototype.checkGuards = function () {\n\t            var _this = this;\n\t            if (this.checks.length === 0)\n\t                return rxjs_observable_of.of(true);\n\t            var checks$ = rxjs_observable_from.from(this.checks);\n\t            var runningChecks$ = rxjs_operator_mergeMap.mergeMap.call(checks$, function (s) {\n\t                if (s instanceof CanActivate) {\n\t                    return andObservables(rxjs_observable_from.from([_this.runCanActivateChild(s.path), _this.runCanActivate(s.route)]));\n\t                }\n\t                else if (s instanceof CanDeactivate) {\n\t                    // workaround https://github.com/Microsoft/TypeScript/issues/7271\n\t                    var s2 = s;\n\t                    return _this.runCanDeactivate(s2.component, s2.route);\n\t                }\n\t                else {\n\t                    throw new Error('Cannot be reached');\n\t                }\n\t            });\n\t            return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n\t        };\n\t        PreActivation.prototype.resolveData = function () {\n\t            var _this = this;\n\t            if (this.checks.length === 0)\n\t                return rxjs_observable_of.of(null);\n\t            var checks$ = rxjs_observable_from.from(this.checks);\n\t            var runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (s) {\n\t                if (s instanceof CanActivate) {\n\t                    return _this.runResolve(s.route);\n\t                }\n\t                else {\n\t                    return rxjs_observable_of.of(null);\n\t                }\n\t            });\n\t            return rxjs_operator_reduce.reduce.call(runningChecks$, function (_, __) { return _; });\n\t        };\n\t        PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, outletMap, futurePath) {\n\t            var _this = this;\n\t            var prevChildren = nodeChildrenAsMap(currNode);\n\t            futureNode.children.forEach(function (c) {\n\t                _this.traverseRoutes(c, prevChildren[c.value.outlet], outletMap, futurePath.concat([c.value]));\n\t                delete prevChildren[c.value.outlet];\n\t            });\n\t            forEach(prevChildren, function (v, k) { return _this.deactiveRouteAndItsChildren(v, outletMap._outlets[k]); });\n\t        };\n\t        PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentOutletMap, futurePath) {\n\t            var future = futureNode.value;\n\t            var curr = currNode ? currNode.value : null;\n\t            var outlet = parentOutletMap ? parentOutletMap._outlets[futureNode.value.outlet] : null;\n\t            // reusing the node\n\t            if (curr && future._routeConfig === curr._routeConfig) {\n\t                if (!equalParamsAndUrlSegments(future, curr)) {\n\t                    this.checks.push(new CanDeactivate(outlet.component, curr), new CanActivate(futurePath));\n\t                }\n\t                else {\n\t                    // we need to set the data\n\t                    future.data = curr.data;\n\t                    future._resolvedData = curr._resolvedData;\n\t                }\n\t                // If we have a component, we need to go through an outlet.\n\t                if (future.component) {\n\t                    this.traverseChildRoutes(futureNode, currNode, outlet ? outlet.outletMap : null, futurePath);\n\t                }\n\t                else {\n\t                    this.traverseChildRoutes(futureNode, currNode, parentOutletMap, futurePath);\n\t                }\n\t            }\n\t            else {\n\t                if (curr) {\n\t                    this.deactiveRouteAndItsChildren(currNode, outlet);\n\t                }\n\t                this.checks.push(new CanActivate(futurePath));\n\t                // If we have a component, we need to go through an outlet.\n\t                if (future.component) {\n\t                    this.traverseChildRoutes(futureNode, null, outlet ? outlet.outletMap : null, futurePath);\n\t                }\n\t                else {\n\t                    this.traverseChildRoutes(futureNode, null, parentOutletMap, futurePath);\n\t                }\n\t            }\n\t        };\n\t        PreActivation.prototype.deactiveRouteAndItsChildren = function (route, outlet) {\n\t            var _this = this;\n\t            var prevChildren = nodeChildrenAsMap(route);\n\t            var r = route.value;\n\t            forEach(prevChildren, function (v, k) {\n\t                if (!r.component) {\n\t                    _this.deactiveRouteAndItsChildren(v, outlet);\n\t                }\n\t                else if (!!outlet) {\n\t                    _this.deactiveRouteAndItsChildren(v, outlet.outletMap._outlets[k]);\n\t                }\n\t                else {\n\t                    _this.deactiveRouteAndItsChildren(v, null);\n\t                }\n\t            });\n\t            if (!r.component) {\n\t                this.checks.push(new CanDeactivate(null, r));\n\t            }\n\t            else if (outlet && outlet.isActivated) {\n\t                this.checks.push(new CanDeactivate(outlet.component, r));\n\t            }\n\t            else {\n\t                this.checks.push(new CanDeactivate(null, r));\n\t            }\n\t        };\n\t        PreActivation.prototype.runCanActivate = function (future) {\n\t            var _this = this;\n\t            var canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n\t            if (!canActivate || canActivate.length === 0)\n\t                return rxjs_observable_of.of(true);\n\t            var obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canActivate), function (c) {\n\t                var guard = _this.getToken(c, future);\n\t                var observable;\n\t                if (guard.canActivate) {\n\t                    observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n\t                }\n\t                else {\n\t                    observable = wrapIntoObservable(guard(future, _this.future));\n\t                }\n\t                return rxjs_operator_first.first.call(observable);\n\t            });\n\t            return andObservables(obs);\n\t        };\n\t        PreActivation.prototype.runCanActivateChild = function (path) {\n\t            var _this = this;\n\t            var future = path[path.length - 1];\n\t            var canActivateChildGuards = path.slice(0, path.length - 1)\n\t                .reverse()\n\t                .map(function (p) { return _this.extractCanActivateChild(p); })\n\t                .filter(function (_) { return _ !== null; });\n\t            return andObservables(rxjs_operator_map.map.call(rxjs_observable_from.from(canActivateChildGuards), function (d) {\n\t                var obs = rxjs_operator_map.map.call(rxjs_observable_from.from(d.guards), function (c) {\n\t                    var guard = _this.getToken(c, c.node);\n\t                    var observable;\n\t                    if (guard.canActivateChild) {\n\t                        observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n\t                    }\n\t                    else {\n\t                        observable = wrapIntoObservable(guard(future, _this.future));\n\t                    }\n\t                    return rxjs_operator_first.first.call(observable);\n\t                });\n\t                return andObservables(obs);\n\t            }));\n\t        };\n\t        PreActivation.prototype.extractCanActivateChild = function (p) {\n\t            var canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n\t            if (!canActivateChild || canActivateChild.length === 0)\n\t                return null;\n\t            return { node: p, guards: canActivateChild };\n\t        };\n\t        PreActivation.prototype.runCanDeactivate = function (component, curr) {\n\t            var _this = this;\n\t            var canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n\t            if (!canDeactivate || canDeactivate.length === 0)\n\t                return rxjs_observable_of.of(true);\n\t            var canDeactivate$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(canDeactivate), function (c) {\n\t                var guard = _this.getToken(c, curr);\n\t                var observable;\n\t                if (guard.canDeactivate) {\n\t                    observable = wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr));\n\t                }\n\t                else {\n\t                    observable = wrapIntoObservable(guard(component, curr, _this.curr));\n\t                }\n\t                return rxjs_operator_first.first.call(observable);\n\t            });\n\t            return rxjs_operator_every.every.call(canDeactivate$, function (result) { return result === true; });\n\t        };\n\t        PreActivation.prototype.runResolve = function (future) {\n\t            var resolve = future._resolve;\n\t            return rxjs_operator_map.map.call(this.resolveNode(resolve, future), function (resolvedData) {\n\t                future._resolvedData = resolvedData;\n\t                future.data = merge(future.data, inheritedParamsDataResolve(future).resolve);\n\t                return null;\n\t            });\n\t        };\n\t        PreActivation.prototype.resolveNode = function (resolve, future) {\n\t            var _this = this;\n\t            return waitForMap(resolve, function (k, v) {\n\t                var resolver = _this.getToken(v, future);\n\t                return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, _this.future)) :\n\t                    wrapIntoObservable(resolver(future, _this.future));\n\t            });\n\t        };\n\t        PreActivation.prototype.getToken = function (token, snapshot) {\n\t            var config = closestLoadedConfig(snapshot);\n\t            var injector = config ? config.injector : this.injector;\n\t            return injector.get(token);\n\t        };\n\t        return PreActivation;\n\t    }());\n\t    var ActivateRoutes = (function () {\n\t        function ActivateRoutes(futureState, currState) {\n\t            this.futureState = futureState;\n\t            this.currState = currState;\n\t        }\n\t        ActivateRoutes.prototype.activate = function (parentOutletMap) {\n\t            var futureRoot = this.futureState._root;\n\t            var currRoot = this.currState ? this.currState._root : null;\n\t            this.deactivateChildRoutes(futureRoot, currRoot, parentOutletMap);\n\t            advanceActivatedRoute(this.futureState.root);\n\t            this.activateChildRoutes(futureRoot, currRoot, parentOutletMap);\n\t        };\n\t        ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, outletMap) {\n\t            var _this = this;\n\t            var prevChildren = nodeChildrenAsMap(currNode);\n\t            futureNode.children.forEach(function (c) {\n\t                _this.deactivateRoutes(c, prevChildren[c.value.outlet], outletMap);\n\t                delete prevChildren[c.value.outlet];\n\t            });\n\t            forEach(prevChildren, function (v, k) { return _this.deactiveRouteAndItsChildren(v, outletMap); });\n\t        };\n\t        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, outletMap) {\n\t            var _this = this;\n\t            var prevChildren = nodeChildrenAsMap(currNode);\n\t            futureNode.children.forEach(function (c) { _this.activateRoutes(c, prevChildren[c.value.outlet], outletMap); });\n\t        };\n\t        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentOutletMap) {\n\t            var future = futureNode.value;\n\t            var curr = currNode ? currNode.value : null;\n\t            // reusing the node\n\t            if (future === curr) {\n\t                // If we have a normal route, we need to go through an outlet.\n\t                if (future.component) {\n\t                    var outlet = getOutlet(parentOutletMap, future);\n\t                    this.deactivateChildRoutes(futureNode, currNode, outlet.outletMap);\n\t                }\n\t                else {\n\t                    this.deactivateChildRoutes(futureNode, currNode, parentOutletMap);\n\t                }\n\t            }\n\t            else {\n\t                if (curr) {\n\t                    this.deactiveRouteAndItsChildren(currNode, parentOutletMap);\n\t                }\n\t            }\n\t        };\n\t        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentOutletMap) {\n\t            var future = futureNode.value;\n\t            var curr = currNode ? currNode.value : null;\n\t            // reusing the node\n\t            if (future === curr) {\n\t                // advance the route to push the parameters\n\t                advanceActivatedRoute(future);\n\t                // If we have a normal route, we need to go through an outlet.\n\t                if (future.component) {\n\t                    var outlet = getOutlet(parentOutletMap, future);\n\t                    this.activateChildRoutes(futureNode, currNode, outlet.outletMap);\n\t                }\n\t                else {\n\t                    this.activateChildRoutes(futureNode, currNode, parentOutletMap);\n\t                }\n\t            }\n\t            else {\n\t                // if we have a normal route, we need to advance the route\n\t                // and place the component into the outlet. After that recurse.\n\t                if (future.component) {\n\t                    advanceActivatedRoute(future);\n\t                    var outlet = getOutlet(parentOutletMap, futureNode.value);\n\t                    var outletMap = new RouterOutletMap();\n\t                    this.placeComponentIntoOutlet(outletMap, future, outlet);\n\t                    this.activateChildRoutes(futureNode, null, outletMap);\n\t                }\n\t                else {\n\t                    advanceActivatedRoute(future);\n\t                    this.activateChildRoutes(futureNode, null, parentOutletMap);\n\t                }\n\t            }\n\t        };\n\t        ActivateRoutes.prototype.placeComponentIntoOutlet = function (outletMap, future, outlet) {\n\t            var resolved = [{ provide: ActivatedRoute, useValue: future }, {\n\t                    provide: RouterOutletMap,\n\t                    useValue: outletMap\n\t                }];\n\t            var config = parentLoadedConfig(future.snapshot);\n\t            var resolver = null;\n\t            var injector = null;\n\t            if (config) {\n\t                injector = config.injectorFactory(outlet.locationInjector);\n\t                resolver = config.factoryResolver;\n\t                resolved.push({ provide: _angular_core.ComponentFactoryResolver, useValue: resolver });\n\t            }\n\t            else {\n\t                injector = outlet.locationInjector;\n\t                resolver = outlet.locationFactoryResolver;\n\t            }\n\t            outlet.activate(future, resolver, injector, _angular_core.ReflectiveInjector.resolve(resolved), outletMap);\n\t        };\n\t        ActivateRoutes.prototype.deactiveRouteAndItsChildren = function (route, parentOutletMap) {\n\t            var _this = this;\n\t            var prevChildren = nodeChildrenAsMap(route);\n\t            var outlet = null;\n\t            // getOutlet throws when cannot find the right outlet,\n\t            // which can happen if an outlet was in an NgIf and was removed\n\t            try {\n\t                outlet = getOutlet(parentOutletMap, route.value);\n\t            }\n\t            catch (e) {\n\t                return;\n\t            }\n\t            var childOutletMap = outlet.outletMap;\n\t            forEach(prevChildren, function (v, k) {\n\t                if (route.value.component) {\n\t                    _this.deactiveRouteAndItsChildren(v, childOutletMap);\n\t                }\n\t                else {\n\t                    _this.deactiveRouteAndItsChildren(v, parentOutletMap);\n\t                }\n\t            });\n\t            if (outlet && outlet.isActivated) {\n\t                outlet.deactivate();\n\t            }\n\t        };\n\t        return ActivateRoutes;\n\t    }());\n\t    function parentLoadedConfig(snapshot) {\n\t        var s = snapshot.parent;\n\t        while (s) {\n\t            var c = s._routeConfig;\n\t            if (c && c._loadedConfig)\n\t                return c._loadedConfig;\n\t            if (c && c.component)\n\t                return null;\n\t            s = s.parent;\n\t        }\n\t        return null;\n\t    }\n\t    function closestLoadedConfig(snapshot) {\n\t        if (!snapshot)\n\t            return null;\n\t        var s = snapshot.parent;\n\t        while (s) {\n\t            var c = s._routeConfig;\n\t            if (c && c._loadedConfig)\n\t                return c._loadedConfig;\n\t            s = s.parent;\n\t        }\n\t        return null;\n\t    }\n\t    function nodeChildrenAsMap(node) {\n\t        return node ? node.children.reduce(function (m, c) {\n\t            m[c.value.outlet] = c;\n\t            return m;\n\t        }, {}) : {};\n\t    }\n\t    function getOutlet(outletMap, route) {\n\t        var outlet = outletMap._outlets[route.outlet];\n\t        if (!outlet) {\n\t            var componentName = route.component.name;\n\t            if (route.outlet === PRIMARY_OUTLET) {\n\t                throw new Error(\"Cannot find primary outlet to load '\" + componentName + \"'\");\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find the outlet \" + route.outlet + \" to load '\" + componentName + \"'\");\n\t            }\n\t        }\n\t        return outlet;\n\t    }\n\t\n\t    /**\n\t     * @whatItDoes Lets you link to specific parts of your app.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * Consider the following route configuration:\n\t\n\t     * ```\n\t     * [{ path: 'user/:name', component: UserCmp }]\n\t     * ```\n\t     *\n\t     * When linking to this `user/:name` route, you can write:\n\t     *\n\t     * ```\n\t     * <a routerLink='/user/bob'>link to user component</a>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * The RouterLink directives let you link to specific parts of your app.\n\t     *\n\t     * Whe the link is static, you can use the directive as follows:\n\t     *\n\t     * ```\n\t     * <a routerLink=\"/user/bob\">link to user component</a>\n\t     * ```\n\t     *\n\t     * If you use dynamic values to generate the link, you can pass an array of path\n\t     * segments, followed by the params for each segment.\n\t     *\n\t     * For instance `['/team', teamId, 'user', userName, {details: true}]`\n\t     * means that we want to generate a link to `/team/11/user/bob;details=true`.\n\t     *\n\t     * Multiple static segments can be merged into one (e.g., `['/team/11/user', userName, {details:\n\t     true}]`).\n\t     *\n\t     * The first segment name can be prepended with `/`, `./`, or `../`:\n\t     * * If the first segment begins with `/`, the router will look up the route from the root of the\n\t     app.\n\t     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n\t     * instead look in the children of the current activated route.\n\t     * * And if the first segment begins with `../`, the router will go up one level.\n\t     *\n\t     * You can set query params and fragment as follows:\n\t     *\n\t     * ```\n\t     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">link to user\n\t     component</a>\n\t     * ```\n\t     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n\t     *\n\t     * You can also tell the directive to preserve the current query params and fragment:\n\t     *\n\t     * ```\n\t     * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>link to user\n\t     component</a>\n\t     * ```\n\t     *\n\t     * The router link directive always treats the provided input as a delta to the current url.\n\t     *\n\t     * For instance, if the current url is `/user/(box//aux:team)`.\n\t     *\n\t     * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n\t     * `/user/(jim//aux:team)`.\n\t     *\n\t     * @selector ':not(a)[routerLink]'\n\t     * @ngModule RouterModule\n\t     *\n\t     * See {@link Router.createUrlTree} for more information.\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterLink = (function () {\n\t        function RouterLink(router, route, locationStrategy) {\n\t            this.router = router;\n\t            this.route = route;\n\t            this.locationStrategy = locationStrategy;\n\t            this.commands = [];\n\t        }\n\t        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n\t            set: function (data) {\n\t                if (Array.isArray(data)) {\n\t                    this.commands = data;\n\t                }\n\t                else {\n\t                    this.commands = [data];\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RouterLink.prototype.onClick = function () {\n\t            this.router.navigateByUrl(this.urlTree);\n\t            return true;\n\t        };\n\t        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n\t            get: function () {\n\t                return this.router.createUrlTree(this.commands, {\n\t                    relativeTo: this.route,\n\t                    queryParams: this.queryParams,\n\t                    fragment: this.fragment,\n\t                    preserveQueryParams: toBool(this.preserveQueryParams),\n\t                    preserveFragment: toBool(this.preserveFragment)\n\t                });\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RouterLink.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RouterLink.ctorParameters = [\n\t            { type: Router, },\n\t            { type: ActivatedRoute, },\n\t            { type: _angular_common.LocationStrategy, },\n\t        ];\n\t        RouterLink.propDecorators = {\n\t            'queryParams': [{ type: _angular_core.Input },],\n\t            'fragment': [{ type: _angular_core.Input },],\n\t            'preserveQueryParams': [{ type: _angular_core.Input },],\n\t            'preserveFragment': [{ type: _angular_core.Input },],\n\t            'routerLink': [{ type: _angular_core.Input },],\n\t            'onClick': [{ type: _angular_core.HostListener, args: ['click', [],] },],\n\t        };\n\t        return RouterLink;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lets you link to specific parts of your app.\n\t     *\n\t     * See {@link RouterLink} for more information.\n\t     *\n\t     * @selector 'a[routerLink]'\n\t     * @ngModule RouterModule\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterLinkWithHref = (function () {\n\t        function RouterLinkWithHref(router, route, locationStrategy) {\n\t            var _this = this;\n\t            this.router = router;\n\t            this.route = route;\n\t            this.locationStrategy = locationStrategy;\n\t            this.commands = [];\n\t            this.subscription = router.events.subscribe(function (s) {\n\t                if (s instanceof NavigationEnd) {\n\t                    _this.updateTargetUrlAndHref();\n\t                }\n\t            });\n\t        }\n\t        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n\t            set: function (data) {\n\t                if (Array.isArray(data)) {\n\t                    this.commands = data;\n\t                }\n\t                else {\n\t                    this.commands = [data];\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n\t        RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n\t        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey) {\n\t            if (button !== 0 || ctrlKey || metaKey) {\n\t                return true;\n\t            }\n\t            if (typeof this.target === 'string' && this.target != '_self') {\n\t                return true;\n\t            }\n\t            this.router.navigateByUrl(this.urlTree);\n\t            return false;\n\t        };\n\t        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n\t            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n\t        };\n\t        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n\t            get: function () {\n\t                return this.router.createUrlTree(this.commands, {\n\t                    relativeTo: this.route,\n\t                    queryParams: this.queryParams,\n\t                    fragment: this.fragment,\n\t                    preserveQueryParams: toBool(this.preserveQueryParams),\n\t                    preserveFragment: toBool(this.preserveFragment)\n\t                });\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RouterLinkWithHref.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'a[routerLink]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RouterLinkWithHref.ctorParameters = [\n\t            { type: Router, },\n\t            { type: ActivatedRoute, },\n\t            { type: _angular_common.LocationStrategy, },\n\t        ];\n\t        RouterLinkWithHref.propDecorators = {\n\t            'target': [{ type: _angular_core.Input },],\n\t            'queryParams': [{ type: _angular_core.Input },],\n\t            'fragment': [{ type: _angular_core.Input },],\n\t            'routerLinkOptions': [{ type: _angular_core.Input },],\n\t            'preserveQueryParams': [{ type: _angular_core.Input },],\n\t            'preserveFragment': [{ type: _angular_core.Input },],\n\t            'href': [{ type: _angular_core.HostBinding },],\n\t            'routerLink': [{ type: _angular_core.Input },],\n\t            'onClick': [{ type: _angular_core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey'],] },],\n\t        };\n\t        return RouterLinkWithHref;\n\t    }());\n\t    function toBool(s) {\n\t        if (s === '')\n\t            return true;\n\t        return !!s;\n\t    }\n\t\n\t    /**\n\t     * @whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n\t     * becomes active.\n\t     *\n\t     * Consider the following example:\n\t     *\n\t     * ```\n\t     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n\t     * ```\n\t     *\n\t     * When the url is either '/user' or '/user/bob', the active-link class will\n\t     * be added to the `a` tag. If the url changes, the class will be removed.\n\t     *\n\t     * You can set more than one class, as follows:\n\t     *\n\t     * ```\n\t     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n\t     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n\t     * ```\n\t     *\n\t     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n\t     * only when the url matches the link exactly.\n\t     *\n\t     * ```\n\t     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n\t     * true}\">Bob</a>\n\t     * ```\n\t     *\n\t     * You can assign the RouterLinkActive instance to a template variable and directly check\n\t     * the `isActive` status.\n\t     * ```\n\t     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n\t     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n\t     * </a>\n\t     * ```\n\t     *\n\t     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n\t     *\n\t     * ```\n\t     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n\t     *   <a routerLink=\"/user/jim\">Jim</a>\n\t     *   <a routerLink=\"/user/bob\">Bob</a>\n\t     * </div>\n\t     * ```\n\t     *\n\t     * This will set the active-link class on the div tag if the url is either '/user/jim' or\n\t     * '/user/bob'.\n\t     *\n\t     * @selector ':not(a)[routerLink]'\n\t     * @ngModule RouterModule\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterLinkActive = (function () {\n\t        function RouterLinkActive(router, element, renderer) {\n\t            var _this = this;\n\t            this.router = router;\n\t            this.element = element;\n\t            this.renderer = renderer;\n\t            this.classes = [];\n\t            this.routerLinkActiveOptions = { exact: false };\n\t            this.subscription = router.events.subscribe(function (s) {\n\t                if (s instanceof NavigationEnd) {\n\t                    _this.update();\n\t                }\n\t            });\n\t        }\n\t        Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n\t            get: function () { return this.hasActiveLink(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RouterLinkActive.prototype.ngAfterContentInit = function () {\n\t            var _this = this;\n\t            this.links.changes.subscribe(function (s) { return _this.update(); });\n\t            this.linksWithHrefs.changes.subscribe(function (s) { return _this.update(); });\n\t            this.update();\n\t        };\n\t        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n\t            set: function (data) {\n\t                if (Array.isArray(data)) {\n\t                    this.classes = data;\n\t                }\n\t                else {\n\t                    this.classes = data.split(' ');\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n\t        RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n\t        RouterLinkActive.prototype.update = function () {\n\t            var _this = this;\n\t            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n\t                return;\n\t            var isActive = this.hasActiveLink();\n\t            this.classes.forEach(function (c) {\n\t                if (c) {\n\t                    _this.renderer.setElementClass(_this.element.nativeElement, c, isActive);\n\t                }\n\t            });\n\t        };\n\t        RouterLinkActive.prototype.isLinkActive = function (router) {\n\t            var _this = this;\n\t            return function (link) {\n\t                return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n\t            };\n\t        };\n\t        RouterLinkActive.prototype.hasActiveLink = function () {\n\t            return this.links.some(this.isLinkActive(this.router)) ||\n\t                this.linksWithHrefs.some(this.isLinkActive(this.router));\n\t        };\n\t        RouterLinkActive.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[routerLinkActive]',\n\t                        exportAs: 'routerLinkActive',\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RouterLinkActive.ctorParameters = [\n\t            { type: Router, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ];\n\t        RouterLinkActive.propDecorators = {\n\t            'links': [{ type: _angular_core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n\t            'linksWithHrefs': [{ type: _angular_core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n\t            'routerLinkActiveOptions': [{ type: _angular_core.Input },],\n\t            'routerLinkActive': [{ type: _angular_core.Input },],\n\t        };\n\t        return RouterLinkActive;\n\t    }());\n\t\n\t    /**\n\t     * @whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n\t     * state.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * <router-outlet></router-outlet>\n\t     * <router-outlet name='left'></router-outlet>\n\t     * <router-outlet name='right'></router-outlet>\n\t     * ```\n\t     *\n\t     * A router outlet will emit an activate event any time a new component is being instantiated,\n\t     * and a deactivate event when it is being destroyed.\n\t     *\n\t     * ```\n\t     * <router-outlet\n\t     *   (activate)='onActivate($event)'\n\t     *   (deactivate)='onDeactivate($event)'></router-outlet>\n\t     * ```\n\t     * @selector 'a[routerLink]'\n\t     * @ngModule RouterModule\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterOutlet = (function () {\n\t        function RouterOutlet(parentOutletMap, location, resolver, name) {\n\t            this.parentOutletMap = parentOutletMap;\n\t            this.location = location;\n\t            this.resolver = resolver;\n\t            this.name = name;\n\t            this.activateEvents = new _angular_core.EventEmitter();\n\t            this.deactivateEvents = new _angular_core.EventEmitter();\n\t            parentOutletMap.registerOutlet(name ? name : PRIMARY_OUTLET, this);\n\t        }\n\t        RouterOutlet.prototype.ngOnDestroy = function () { this.parentOutletMap.removeOutlet(this.name ? this.name : PRIMARY_OUTLET); };\n\t        Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n\t            get: function () { return this.location.injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n\t            get: function () { return this.resolver; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n\t            get: function () { return !!this.activated; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n\t            get: function () {\n\t                if (!this.activated)\n\t                    throw new Error('Outlet is not activated');\n\t                return this.activated.instance;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n\t            get: function () {\n\t                if (!this.activated)\n\t                    throw new Error('Outlet is not activated');\n\t                return this._activatedRoute;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RouterOutlet.prototype.deactivate = function () {\n\t            if (this.activated) {\n\t                var c = this.component;\n\t                this.activated.destroy();\n\t                this.activated = null;\n\t                this.deactivateEvents.emit(c);\n\t            }\n\t        };\n\t        RouterOutlet.prototype.activate = function (activatedRoute, resolver, injector, providers, outletMap) {\n\t            if (this.isActivated) {\n\t                throw new Error('Cannot activate an already activated outlet');\n\t            }\n\t            this.outletMap = outletMap;\n\t            this._activatedRoute = activatedRoute;\n\t            var snapshot = activatedRoute._futureSnapshot;\n\t            var component = snapshot._routeConfig.component;\n\t            var factory = resolver.resolveComponentFactory(component);\n\t            var inj = _angular_core.ReflectiveInjector.fromResolvedProviders(providers, injector);\n\t            this.activated = this.location.createComponent(factory, this.location.length, inj, []);\n\t            this.activated.changeDetectorRef.detectChanges();\n\t            this.activateEvents.emit(this.activated.instance);\n\t        };\n\t        RouterOutlet.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'router-outlet' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RouterOutlet.ctorParameters = [\n\t            { type: RouterOutletMap, },\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.ComponentFactoryResolver, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['name',] },] },\n\t        ];\n\t        RouterOutlet.propDecorators = {\n\t            'activateEvents': [{ type: _angular_core.Output, args: ['activate',] },],\n\t            'deactivateEvents': [{ type: _angular_core.Output, args: ['deactivate',] },],\n\t        };\n\t        return RouterOutlet;\n\t    }());\n\t\n\t    var getDOM = _angular_platformBrowser.__platform_browser_private__.getDOM;\n\t\n\t    /**\n\t     * @whatItDoes Provides a preloading strategy.\n\t     *\n\t     * @experimental\n\t     */\n\t    var PreloadingStrategy = (function () {\n\t        function PreloadingStrategy() {\n\t        }\n\t        return PreloadingStrategy;\n\t    }());\n\t    /**\n\t     * @whatItDoes Provides a preloading strategy that preloads all modules as quicky as possible.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var PreloadAllModules = (function () {\n\t        function PreloadAllModules() {\n\t        }\n\t        PreloadAllModules.prototype.preload = function (route, fn) {\n\t            return rxjs_operator_catch._catch.call(fn(), function () { return rxjs_observable_of.of(null); });\n\t        };\n\t        return PreloadAllModules;\n\t    }());\n\t    /**\n\t     * @whatItDoes Provides a preloading strategy that does not preload any modules.\n\t     *\n\t     * @description\n\t     *\n\t     * This strategy is enabled by default.\n\t     *\n\t     * @experimental\n\t     */\n\t    var NoPreloading = (function () {\n\t        function NoPreloading() {\n\t        }\n\t        NoPreloading.prototype.preload = function (route, fn) { return rxjs_observable_of.of(null); };\n\t        return NoPreloading;\n\t    }());\n\t    /**\n\t     * The preloader optimistically loads all router configurations to\n\t     * make navigations into lazily-loaded sections of the application faster.\n\t     *\n\t     * The preloader runs in the background. When the router bootstraps, the preloader\n\t     * starts listening to all navigation events. After every such event, the preloader\n\t     * will check if any configurations can be loaded lazily.\n\t     *\n\t     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterPreloader = (function () {\n\t        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n\t            this.router = router;\n\t            this.injector = injector;\n\t            this.preloadingStrategy = preloadingStrategy;\n\t            this.loader = new RouterConfigLoader(moduleLoader, compiler);\n\t        }\n\t        ;\n\t        RouterPreloader.prototype.setUpPreloading = function () {\n\t            var _this = this;\n\t            var navigations = rxjs_operator_filter.filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n\t            this.subscription = rxjs_operator_concatMap.concatMap.call(navigations, function () { return _this.preload(); }).subscribe(function (v) { });\n\t        };\n\t        RouterPreloader.prototype.preload = function () { return this.processRoutes(this.injector, this.router.config); };\n\t        RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n\t        RouterPreloader.prototype.processRoutes = function (injector, routes) {\n\t            var res = [];\n\t            for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n\t                var c = routes_1[_i];\n\t                // we already have the config loaded, just recurce\n\t                if (c.loadChildren && !c.canLoad && c._loadedConfig) {\n\t                    var childConfig = c._loadedConfig;\n\t                    res.push(this.processRoutes(childConfig.injector, childConfig.routes));\n\t                }\n\t                else if (c.loadChildren && !c.canLoad) {\n\t                    res.push(this.preloadConfig(injector, c));\n\t                }\n\t                else if (c.children) {\n\t                    res.push(this.processRoutes(injector, c.children));\n\t                }\n\t            }\n\t            return rxjs_operator_mergeAll.mergeAll.call(rxjs_observable_from.from(res));\n\t        };\n\t        RouterPreloader.prototype.preloadConfig = function (injector, route) {\n\t            var _this = this;\n\t            return this.preloadingStrategy.preload(route, function () {\n\t                var loaded = _this.loader.load(injector, route.loadChildren);\n\t                return rxjs_operator_mergeMap.mergeMap.call(loaded, function (config) {\n\t                    var c = route;\n\t                    c._loadedConfig = config;\n\t                    return _this.processRoutes(config.injector, config.routes);\n\t                });\n\t            });\n\t        };\n\t        RouterPreloader.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        RouterPreloader.ctorParameters = [\n\t            { type: Router, },\n\t            { type: _angular_core.NgModuleFactoryLoader, },\n\t            { type: _angular_core.Compiler, },\n\t            { type: _angular_core.Injector, },\n\t            { type: PreloadingStrategy, },\n\t        ];\n\t        return RouterPreloader;\n\t    }());\n\t\n\t    /**\n\t     * @whatItDoes Contains a list of directives\n\t     * @stable\n\t     */\n\t    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n\t    /**\n\t     * @whatItDoes Is used in DI to configure the router.\n\t     * @stable\n\t     */\n\t    var ROUTER_CONFIGURATION = new _angular_core.OpaqueToken('ROUTER_CONFIGURATION');\n\t    /**\n\t     * @docsNotRequired\n\t     */\n\t    var ROUTER_FORROOT_GUARD = new _angular_core.OpaqueToken('ROUTER_FORROOT_GUARD');\n\t    var ROUTER_PROVIDERS = [\n\t        _angular_common.Location, { provide: UrlSerializer, useClass: DefaultUrlSerializer }, {\n\t            provide: Router,\n\t            useFactory: setupRouter,\n\t            deps: [\n\t                _angular_core.ApplicationRef, UrlSerializer, RouterOutletMap, _angular_common.Location, _angular_core.Injector, _angular_core.NgModuleFactoryLoader,\n\t                _angular_core.Compiler, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new _angular_core.Optional()]\n\t            ]\n\t        },\n\t        RouterOutletMap, { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n\t        { provide: _angular_core.NgModuleFactoryLoader, useClass: _angular_core.SystemJsNgModuleLoader }, RouterPreloader, NoPreloading,\n\t        PreloadAllModules, { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } }\n\t    ];\n\t    /**\n\t     * @whatItDoes Adds router directives and providers.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n\t     * Since the router deals with a global shared resource--location, we cannot have\n\t     * more than one router service active.\n\t     *\n\t     * That is why there are two ways to create the module: `RouterModule.forRoot` and\n\t     * `RouterModule.forChild`.\n\t     *\n\t     * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n\t     * service itself.\n\t     * * `forChild` creates a module that contains all the directives and the given routes, but does not\n\t     * include\n\t     * the router service.\n\t     *\n\t     * When registered at the root, the module should be used as follows\n\t     *\n\t     * ```\n\t     * @NgModule({\n\t     *   imports: [RouterModule.forRoot(ROUTES)]\n\t     * })\n\t     * class MyNgModule {}\n\t     * ```\n\t     *\n\t     * For submodules and lazy loaded submodules the module should be used as follows:\n\t     *\n\t     * ```\n\t     * @NgModule({\n\t     *   imports: [RouterModule.forChild(ROUTES)]\n\t     * })\n\t     * class MyNgModule {}\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * Managing state transitions is one of the hardest parts of building applications. This is\n\t     * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n\t     * In addition, we often want to split applications into multiple bundles and load them on demand.\n\t     * Doing this transparently is not trivial.\n\t     *\n\t     * The Angular 2 router solves these problems. Using the router, you can declaratively specify\n\t     * application states, manage state transitions while taking care of the URL, and load bundles on\n\t     * demand.\n\t     *\n\t     * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n\t     * overview of how the router should be used.\n\t     *\n\t     * @stable\n\t     */\n\t    var RouterModule = (function () {\n\t        function RouterModule(guard) {\n\t        }\n\t        /**\n\t         * Creates a module with all the router providers and directives. It also optionally sets up an\n\t         * application listener to perform an initial navigation.\n\t         *\n\t         * Options:\n\t         * * `enableTracing` makes the router log all its internal events to the console.\n\t         * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n\t         * API.\n\t         * * `initialNavigation` disables the initial navigation.\n\t         * * `errorHandler` provides a custom error handler.\n\t         */\n\t        RouterModule.forRoot = function (routes, config) {\n\t            return {\n\t                ngModule: RouterModule,\n\t                providers: [\n\t                    ROUTER_PROVIDERS, provideRoutes(routes), {\n\t                        provide: ROUTER_FORROOT_GUARD,\n\t                        useFactory: provideForRootGuard,\n\t                        deps: [[Router, new _angular_core.Optional(), new _angular_core.SkipSelf()]]\n\t                    },\n\t                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} }, {\n\t                        provide: _angular_common.LocationStrategy,\n\t                        useFactory: provideLocationStrategy,\n\t                        deps: [\n\t                            _angular_common.PlatformLocation, [new _angular_core.Inject(_angular_common.APP_BASE_HREF), new _angular_core.Optional()], ROUTER_CONFIGURATION\n\t                        ]\n\t                    },\n\t                    {\n\t                        provide: PreloadingStrategy,\n\t                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n\t                            NoPreloading\n\t                    },\n\t                    provideRouterInitializer()\n\t                ]\n\t            };\n\t        };\n\t        /**\n\t         * Creates a module with all the router directives and a provider registering routes.\n\t         */\n\t        RouterModule.forChild = function (routes) {\n\t            return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n\t        };\n\t        RouterModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RouterModule.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n\t        ];\n\t        return RouterModule;\n\t    }());\n\t    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n\t        if (options === void 0) { options = {}; }\n\t        return options.useHash ? new _angular_common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n\t            new _angular_common.PathLocationStrategy(platformLocationStrategy, baseHref);\n\t    }\n\t    function provideForRootGuard(router) {\n\t        if (router) {\n\t            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n\t        }\n\t        return 'guarded';\n\t    }\n\t    /**\n\t     * @whatItDoes Registers routes.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * ```\n\t     * @NgModule({\n\t     *   imports: [RouterModule.forChild(ROUTES)],\n\t     *   providers: [provideRoutes(EXTRA_ROUTES)]\n\t     * })\n\t     * class MyNgModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    function provideRoutes(routes) {\n\t        return [\n\t            { provide: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n\t            { provide: ROUTES, multi: true, useValue: routes }\n\t        ];\n\t    }\n\t    function setupRouter(ref, urlSerializer, outletMap, location, injector, loader, compiler, config, opts, urlHandlingStrategy) {\n\t        if (opts === void 0) { opts = {}; }\n\t        var router = new Router(null, urlSerializer, outletMap, location, injector, loader, compiler, flatten(config));\n\t        if (urlHandlingStrategy) {\n\t            router.urlHandlingStrategy = urlHandlingStrategy;\n\t        }\n\t        if (opts.errorHandler) {\n\t            router.errorHandler = opts.errorHandler;\n\t        }\n\t        if (opts.enableTracing) {\n\t            var dom_1 = getDOM();\n\t            router.events.subscribe(function (e) {\n\t                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n\t                dom_1.log(e.toString());\n\t                dom_1.log(e);\n\t                dom_1.logGroupEnd();\n\t            });\n\t        }\n\t        return router;\n\t    }\n\t    function rootRoute(router) {\n\t        return router.routerState.root;\n\t    }\n\t    function initialRouterNavigation(router, ref, preloader, opts) {\n\t        return function (bootstrappedComponentRef) {\n\t            if (bootstrappedComponentRef !== ref.components[0]) {\n\t                return;\n\t            }\n\t            router.resetRootComponentType(ref.componentTypes[0]);\n\t            preloader.setUpPreloading();\n\t            if (opts.initialNavigation === false) {\n\t                router.setUpLocationChangeListener();\n\t            }\n\t            else {\n\t                router.initialNavigation();\n\t            }\n\t        };\n\t    }\n\t    /**\n\t     * A token for the router initializer that will be called after the app is bootstrapped.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ROUTER_INITIALIZER = new _angular_core.OpaqueToken('Router Initializer');\n\t    function provideRouterInitializer() {\n\t        return [\n\t            {\n\t                provide: ROUTER_INITIALIZER,\n\t                useFactory: initialRouterNavigation,\n\t                deps: [Router, _angular_core.ApplicationRef, RouterPreloader, ROUTER_CONFIGURATION]\n\t            },\n\t            { provide: _angular_core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER }\n\t        ];\n\t    }\n\t\n\t    var __router_private__ = {\n\t        ROUTER_PROVIDERS: ROUTER_PROVIDERS,\n\t        ROUTES: ROUTES,\n\t        flatten: flatten\n\t    };\n\t\n\t    exports.RouterLink = RouterLink;\n\t    exports.RouterLinkWithHref = RouterLinkWithHref;\n\t    exports.RouterLinkActive = RouterLinkActive;\n\t    exports.RouterOutlet = RouterOutlet;\n\t    exports.NavigationCancel = NavigationCancel;\n\t    exports.NavigationEnd = NavigationEnd;\n\t    exports.NavigationError = NavigationError;\n\t    exports.NavigationStart = NavigationStart;\n\t    exports.Router = Router;\n\t    exports.RoutesRecognized = RoutesRecognized;\n\t    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n\t    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n\t    exports.RouterModule = RouterModule;\n\t    exports.provideRoutes = provideRoutes;\n\t    exports.RouterOutletMap = RouterOutletMap;\n\t    exports.NoPreloading = NoPreloading;\n\t    exports.PreloadAllModules = PreloadAllModules;\n\t    exports.PreloadingStrategy = PreloadingStrategy;\n\t    exports.RouterPreloader = RouterPreloader;\n\t    exports.ActivatedRoute = ActivatedRoute;\n\t    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n\t    exports.RouterState = RouterState;\n\t    exports.RouterStateSnapshot = RouterStateSnapshot;\n\t    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n\t    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n\t    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n\t    exports.UrlSegment = UrlSegment;\n\t    exports.UrlSegmentGroup = UrlSegmentGroup;\n\t    exports.UrlSerializer = UrlSerializer;\n\t    exports.UrlTree = UrlTree;\n\t    exports.__router_private__ = __router_private__;\n\t\n\t}));\n\n/***/ },\n\n/***/ 19:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t/**\n\t * Created by colinjlacy on 4/14/16.\n\t */\n\tvar core_1 = __webpack_require__(5);\n\tvar LoadingIndicator = (function () {\n\t    function LoadingIndicator() {\n\t    }\n\t    LoadingIndicator = __decorate([\n\t        core_1.Component({\n\t            selector: 'loading-indicator',\n\t            template: __webpack_require__(116),\n\t            style: [__webpack_require__(115)]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], LoadingIndicator);\n\t    return LoadingIndicator;\n\t}());\n\texports.LoadingIndicator = LoadingIndicator;\n\tvar LoadingPage = (function () {\n\t    function LoadingPage(val) {\n\t        this.loading = val;\n\t    }\n\t    LoadingPage.prototype.standby = function () {\n\t        this.loading = true;\n\t    };\n\t    LoadingPage.prototype.ready = function () {\n\t        this.loading = false;\n\t    };\n\t    return LoadingPage;\n\t}());\n\texports.LoadingPage = LoadingPage;\n\n\n/***/ },\n\n/***/ 20:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// user.service.ts\n\tvar core_1 = __webpack_require__(5);\n\tvar CookieService = (function () {\n\t    function CookieService() {\n\t    }\n\t    CookieService.prototype.setCookie = function (token) {\n\t        var d = new Date();\n\t        d.setTime(d.getTime() + (24 * 60 * 60 * 1000));\n\t        document.cookie = \"auth_token=\" + token + \";expires=\" + d.toUTCString() + \";\";\n\t    };\n\t    //method to get cookies\n\t    CookieService.prototype.getCookie = function (cname) {\n\t        var name = cname + \"=\";\n\t        var ca = document.cookie.split(';');\n\t        for (var i = 0; i < ca.length; i++) {\n\t            var c = ca[i];\n\t            while (c.charAt(0) == ' ') {\n\t                c = c.substring(1);\n\t            }\n\t            if (c.indexOf(name) == 0) {\n\t                if (c.substring(name.length, c.length) == \"\")\n\t                    return false;\n\t                return c.substring(name.length, c.length);\n\t            }\n\t        }\n\t        return \"\";\n\t    };\n\t    CookieService.prototype.deleteCookie = function (cname) {\n\t        var d = new Date();\n\t        d.setTime(-1);\n\t        document.cookie = cname + \"=''\" + \";expires=\" + d.toUTCString() + \";\";\n\t    };\n\t    CookieService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], CookieService);\n\t    return CookieService;\n\t}());\n\texports.CookieService = CookieService;\n\n\n/***/ },\n\n/***/ 21:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// user.service.ts\n\tvar core_1 = __webpack_require__(5);\n\tvar http_1 = __webpack_require__(16);\n\tvar cookie_service_1 = __webpack_require__(20);\n\tvar UserService = (function () {\n\t    function UserService(http, cookieService) {\n\t        this.http = http;\n\t        this.cookieService = cookieService;\n\t        this.loggedIn = false;\n\t        this.loggedIn = !!this.cookieService.getCookie(\"auth_token\");\n\t    }\n\t    UserService.prototype.login = function (username, password) {\n\t        var _this = this;\n\t        console.log(\"attempting login\");\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        return this.http\n\t            .post('http://teammartini.herokuapp.com/Login', JSON.stringify({ username: username, password: password }), { headers: headers })\n\t            .map(function (res) { return res.json(); })\n\t            .map(function (res) {\n\t            if (!res.status) {\n\t                console.log(\"login succesfull\");\n\t                _this.cookieService.setCookie(res.token);\n\t                localStorage.setItem('username', username);\n\t                _this.loggedIn = true;\n\t                return true;\n\t            }\n\t            return false;\n\t        });\n\t    };\n\t    UserService.prototype.register = function (username, password, confirmpass) {\n\t        var _this = this;\n\t        console.log(\"registering\");\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        return this.http\n\t            .post('http://teammartini.herokuapp.com/Registration', JSON.stringify({ username: username, password: password, confirmpass: confirmpass }), { headers: headers })\n\t            .map(function (res) { return res.json(); })\n\t            .map(function (res) {\n\t            if (!res.status) {\n\t                console.log(\"registration succesfull\");\n\t                _this.cookieService.setCookie(res.token);\n\t                localStorage.setItem('username', username);\n\t                _this.loggedIn = true;\n\t                return true;\n\t            }\n\t            return false;\n\t        });\n\t    };\n\t    UserService.prototype.logout = function () {\n\t        this.cookieService.deleteCookie(\"auth_token\");\n\t        console.log(\"cookie: \" + this.cookieService.getCookie('auth_token') + \" delete method\");\n\t        this.loggedIn = false;\n\t    };\n\t    UserService.prototype.isLoggedIn = function () {\n\t        return this.loggedIn;\n\t    };\n\t    UserService.prototype.setLoggedIn = function (input) {\n\t        this.loggedIn = input;\n\t    };\n\t    UserService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http, cookie_service_1.CookieService])\n\t    ], UserService);\n\t    return UserService;\n\t}());\n\texports.UserService = UserService;\n\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// user.service.ts\n\tvar core_1 = __webpack_require__(5);\n\tvar http_1 = __webpack_require__(16);\n\tvar Observable_1 = __webpack_require__(1);\n\tvar ExtractService = (function () {\n\t    function ExtractService() {\n\t    }\n\t    ExtractService.prototype.extractData = function (res) {\n\t        console.log(res);\n\t        var body = res.json();\n\t        return body.data || {};\n\t    };\n\t    ExtractService.prototype.handleError = function (error) {\n\t        // In a real world app, we might use a remote logging infrastructure\n\t        var errMsg;\n\t        if (error instanceof http_1.Response) {\n\t            var body = error.json() || '';\n\t            var err = body.error || JSON.stringify(body);\n\t            errMsg = error.status + \" - \" + (error.statusText || '') + \" \" + err;\n\t        }\n\t        else {\n\t            errMsg = error.message ? error.message : error.toString();\n\t        }\n\t        console.error(errMsg);\n\t        return Observable_1.Observable.throw(errMsg);\n\t    };\n\t    ExtractService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], ExtractService);\n\t    return ExtractService;\n\t}());\n\texports.ExtractService = ExtractService;\n\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"/*--- Common tools --- */\\n.clearfix:after {\\n    content: \\\".\\\";\\n    display: block;\\n    height: 0;\\n    clear: both;\\n    visibility: hidden;\\n}\\n\\nimg {\\n    display: block;\\n    margin: 0.5rem;\\n}\\n/*--- Reset ---*/\\nhtml, body, section, form, div, dl, head, p{\\n    margin : 0;\\n    padding : 0;\\n}\\na{\\n    text-decoration: none;\\n}\\nul {\\n    display: block;\\n    list-style: none;\\n}\\n\\nfieldset{\\n    margin: 0;\\n    padding: 0;\\n    border: 0;\\n}\\n\\ninput, select, button{\\n    border: none;\\n}\\n\\n/*--- Common --- */\\nh1{\\n    display: block;\\n    font-size: 5rem;\\n    margin: 0;\\n    color: #252525;\\n    float: left;\\n}\\nli{\\n    display: inline-block;\\n    float: left;\\n}\\nnav{\\n    width: 65%;\\n}\\n.header, .footer{\\n    width: 100%;\\n    height: 12rem;\\n    background-color: rgba(255,255,255,0.8);\\n}\\n.wrapper{\\n    height: 40rem;\\n    width:80rem;\\n    margin: 0 auto;\\n}\\n.headerwrap{\\n    width: 60%;\\n    height: 100%;\\n}\\n.navwrapper{\\n    height: 100%;\\n}\\n.centerwrapper{\\n}\\n.center{\\n    width: 80rem;\\n    height:40rem;\\n    margin: 0 auto  ;\\n    position: absolute;\\n    top: 40%;\\n}\\n.outerWrapper{\\n    min-height: 100rem;\\n    width: 100%;\\n    background-image: url(\\\"public/img/panorama.jpg\\\");\\n    background-repeat: repeat ;\\n}\\n/*--- Logo ---*/\\n.logo{\\n    line-height: 10rem;\\n    font-size: 5rem;\\n    font-weight: lighter;\\n}\\n.logo a{\\n    color: #262626;\\n}\\n\\n/*--- Navigation bar ---*/\\n.navbar{\\n    margin: 0rem;\\n    display: inline-block;\\n    font-size: 3rem;\\n    height: 100%\\n}\\n\\n.navbar ul{\\n    margin: 0;\\n    height: 100%;\\n}\\n.navbar li{\\n    height: 38%;\\n    float: left;\\n    margin-left: 2rem;\\n    padding-top: 6%;\\n    padding-bottom: 4%;\\n    padding-left: 4%;\\n    padding-right: 4%;\\n}\\n.navbar li a {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    color: #262626;\\n    line-height: 0.5rem;\\n}\\n.navbar li:hover{\\n    border-bottom: solid;\\n    border-color: #1565c0;\\n    border-width: thick;\\n    background-color: rgba(0,0,0,0.1);\\n}\\n/*--- Login bar ---*/\\n.login{\\n    display: inline-block;\\n    float: right;\\n    width: 25%;\\n    height: 10rem;\\n}\\n.loginElement{\\n    margin-left: 1rem;\\n    font-size: 2rem;\\n    line-height: 10rem;\\n    display: block;\\n    float: left;\\n}\\n.login img{\\n    margin-top: 3rem;\\n    width: 4rem;\\n    height:4rem;\\n}\\n.login p{\\n    color: #262626;\\n}\\n.login button{\\n    margin-left: 1rem;\\n    margin-top: 3rem;\\n    line-height: normal;\\n    background-color: #1565c0;\\n    width: 10rem;\\n    height:4rem;\\n}\\n.login button a{\\n    color: #fff;\\n}\\n\\n/*--- Footer ---*/\\n.footer{\\n    display: block;\\n    float: left;\\n    bottom: 0;\\n}\"\n\n/***/ },\n\n/***/ 40:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar GlobalEventsManager = (function () {\n\t    function GlobalEventsManager() {\n\t        this.showNavBar = new core_1.EventEmitter();\n\t    }\n\t    GlobalEventsManager = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], GlobalEventsManager);\n\t    return GlobalEventsManager;\n\t}());\n\texports.GlobalEventsManager = GlobalEventsManager;\n\n\n/***/ },\n\n/***/ 55:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar loading_indicator_1 = __webpack_require__(19);\n\tvar services_1 = __webpack_require__(56);\n\tvar ClassComponent = (function (_super) {\n\t    __extends(ClassComponent, _super);\n\t    function ClassComponent(classService) {\n\t        _super.call(this, true);\n\t        this.classService = classService;\n\t        this.username = localStorage.getItem('username');\n\t        this.teacher = true;\n\t    }\n\t    ClassComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.standby();\n\t        this.classService.checkifTeacher().subscribe(function (data) {\n\t            _this.teacher = data.teacher;\n\t            console.log(_this.teacher);\n\t        });\n\t        this.classService.getClasses().subscribe(function (data) {\n\t            _this.classes = data;\n\t            console.log(_this.classes);\n\t            _this.ready();\n\t        });\n\t        this.ready();\n\t    };\n\t    ClassComponent.prototype.viewDetails = function (c) {\n\t        var _this = this;\n\t        console.log(c);\n\t        this.classService.getStudents(c.id).subscribe(function (students) {\n\t            _this.students = students;\n\t            _this.detail = c;\n\t        });\n\t        this.classService.getTests(c.id).subscribe(function (tests) { return _this.tests = tests; });\n\t    };\n\t    ClassComponent.prototype.addStudent = function (student) {\n\t        if (!this.contains(student)) {\n\t            this.newstudents.push(student.id);\n\t        }\n\t    };\n\t    ClassComponent.prototype.contains = function (student) {\n\t        for (var _i = 0, _a = this.students; _i < _a.length; _i++) {\n\t            var s = _a[_i];\n\t            if (s === student)\n\t                return true;\n\t        }\n\t        return false;\n\t    };\n\t    ClassComponent.prototype.addStudents = function () {\n\t        this.classService.addStudent(this.newstudents, this.detail.id);\n\t    };\n\t    ClassComponent.prototype.addGroup = function (name) {\n\t        var _this = this;\n\t        this.classService.createClass(name).subscribe(function (data) { return _this.classService.getClasses().subscribe(function (data) {\n\t            console.log(data);\n\t            _this.classes = data;\n\t        }); });\n\t    };\n\t    ClassComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'class',\n\t            template: __webpack_require__(121),\n\t            styles: [__webpack_require__(30), __webpack_require__(117)]\n\t        }), \n\t        __metadata('design:paramtypes', [services_1.ClassService])\n\t    ], ClassComponent);\n\t    return ClassComponent;\n\t}(loading_indicator_1.LoadingPage));\n\texports.ClassComponent = ClassComponent;\n\n\n/***/ },\n\n/***/ 56:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(20));\n\t__export(__webpack_require__(104));\n\t__export(__webpack_require__(29));\n\t__export(__webpack_require__(105));\n\t__export(__webpack_require__(106));\n\t__export(__webpack_require__(21));\n\t__export(__webpack_require__(103));\n\t__export(__webpack_require__(107));\n\n\n/***/ },\n\n/***/ 58:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.2.4\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(5), __webpack_require__(88), __webpack_require__(6), __webpack_require__(1), __webpack_require__(45)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n\t}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Base class for control directives.\n\t     *\n\t     * Only used internally in the forms module.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractControlDirective = (function () {\n\t        function AbstractControlDirective() {\n\t        }\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n\t            get: function () { throw new Error('unimplemented'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n\t            get: function () { return this.control ? this.control.value : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n\t            get: function () { return this.control ? this.control.valid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n\t            get: function () { return this.control ? this.control.invalid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n\t            get: function () { return this.control ? this.control.pending : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n\t            get: function () { return this.control ? this.control.errors : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n\t            get: function () { return this.control ? this.control.pristine : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n\t            get: function () { return this.control ? this.control.dirty : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n\t            get: function () { return this.control ? this.control.touched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n\t            get: function () { return this.control ? this.control.untouched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n\t            get: function () { return this.control ? this.control.disabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n\t            get: function () { return this.control ? this.control.enabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n\t            get: function () { return this.control ? this.control.statusChanges : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n\t            get: function () { return this.control ? this.control.valueChanges : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AbstractControlDirective.prototype.reset = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            if (this.control)\n\t                this.control.reset(value);\n\t        };\n\t        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return this.control ? this.control.hasError(errorCode, path) : false;\n\t        };\n\t        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return this.control ? this.control.getError(errorCode, path) : null;\n\t        };\n\t        return AbstractControlDirective;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * A directive that contains multiple {@link NgControl}s.\n\t     *\n\t     * Only used by the forms module.\n\t     *\n\t     * @stable\n\t     */\n\t    var ControlContainer = (function (_super) {\n\t        __extends$1(ControlContainer, _super);\n\t        function ControlContainer() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n\t            /**\n\t             * Get the form to which this container belongs.\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ControlContainer.prototype, \"path\", {\n\t            /**\n\t             * Get the path to this container.\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ControlContainer;\n\t    }(AbstractControlDirective));\n\t\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    // JS has NaN !== NaN\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var k1 = Object.keys(m1);\n\t            var k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var i = 0; i < k1.length; i++) {\n\t                var key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var i = 0; i < items.length; ++i) {\n\t                var index = list.indexOf(items[i]);\n\t                if (index > -1) {\n\t                    list.splice(index, 1);\n\t                }\n\t            }\n\t        };\n\t        ListWrapper.remove = function (list, el) {\n\t            var index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        ListWrapper.flatten = function (list) {\n\t            return list.reduce(function (flat, item) {\n\t                var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n\t                return flat.concat(flatItem);\n\t            }, []);\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t\n\t    var isPromise = _angular_core.__core_private__.isPromise;\n\t\n\t    function isEmptyInputValue(value) {\n\t        return value == null || typeof value === 'string' && value.length === 0;\n\t    }\n\t    /**\n\t     * Providers for validators to be used for {@link FormControl}s in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n\t     * @stable\n\t     */\n\t    var NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n\t    /**\n\t     * Providers for asynchronous validators to be used for {@link FormControl}s\n\t     * in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * See {@link NG_VALIDATORS} for more details.\n\t     *\n\t     * @stable\n\t     */\n\t    var NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n\t    /**\n\t     * Provides a set of validators used by form controls.\n\t     *\n\t     * A validator is a function that processes a {@link FormControl} or collection of\n\t     * controls and returns a map of errors. A null map means that validation has passed.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * var loginControl = new FormControl(\"\", Validators.required)\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var Validators = (function () {\n\t        function Validators() {\n\t        }\n\t        /**\n\t         * Validator that requires controls to have a non-empty value.\n\t         */\n\t        Validators.required = function (control) {\n\t            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n\t        };\n\t        /**\n\t         * Validator that requires controls to have a value of a minimum length.\n\t         */\n\t        Validators.minLength = function (minLength) {\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var length = typeof control.value === 'string' ? control.value.length : 0;\n\t                return length < minLength ?\n\t                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         * Validator that requires controls to have a value of a maximum length.\n\t         */\n\t        Validators.maxLength = function (maxLength) {\n\t            return function (control) {\n\t                var length = typeof control.value === 'string' ? control.value.length : 0;\n\t                return length > maxLength ?\n\t                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         * Validator that requires a control to match a regex to its value.\n\t         */\n\t        Validators.pattern = function (pattern) {\n\t            if (!pattern)\n\t                return Validators.nullValidator;\n\t            var regex;\n\t            var regexStr;\n\t            if (typeof pattern === 'string') {\n\t                regexStr = \"^\" + pattern + \"$\";\n\t                regex = new RegExp(regexStr);\n\t            }\n\t            else {\n\t                regexStr = pattern.toString();\n\t                regex = pattern;\n\t            }\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var value = control.value;\n\t                return regex.test(value) ? null :\n\t                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n\t            };\n\t        };\n\t        /**\n\t         * No-op validator.\n\t         */\n\t        Validators.nullValidator = function (c) { return null; };\n\t        /**\n\t         * Compose multiple validators into a single function that returns the union\n\t         * of the individual error maps.\n\t         */\n\t        Validators.compose = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                return _mergeErrors(_executeValidators(control, presentValidators));\n\t            };\n\t        };\n\t        Validators.composeAsync = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n\t                return Promise.all(promises).then(_mergeErrors);\n\t            };\n\t        };\n\t        return Validators;\n\t    }());\n\t    function _convertToPromise(obj) {\n\t        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n\t    }\n\t    function _executeValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    function _executeAsyncValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    function _mergeErrors(arrayOfErrors) {\n\t        var res = arrayOfErrors.reduce(function (res, errors) {\n\t            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n\t        }, {});\n\t        return Object.keys(res).length === 0 ? null : res;\n\t    }\n\t\n\t    /**\n\t     * Used to provide a {@link ControlValueAccessor} for form controls.\n\t     *\n\t     * See {@link DefaultValueAccessor} for how to implement one.\n\t     * @stable\n\t     */\n\t    var NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\t\n\t    var CHECKBOX_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n\t        multi: true,\n\t    };\n\t    /**\n\t     * The accessor for writing a value and listening to changes on a checkbox input element.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n\t     *  ```\n\t     *\n\t     *  @stable\n\t     */\n\t    var CheckboxControlValueAccessor = (function () {\n\t        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n\t        };\n\t        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        CheckboxControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n\t                        providers: [CHECKBOX_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CheckboxControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return CheckboxControlValueAccessor;\n\t    }());\n\t\n\t    var DEFAULT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The default accessor for writing a value and listening to changes that is used by the\n\t     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n\t     *  ```\n\t     *\n\t     *  @stable\n\t     */\n\t    var DefaultValueAccessor = (function () {\n\t        function DefaultValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        DefaultValueAccessor.prototype.writeValue = function (value) {\n\t            var normalizedValue = value == null ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        DefaultValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n\t                        // TODO: vsavkin replace the above selector with the one below it once\n\t                        // https://github.com/angular/angular/issues/3011 is implemented\n\t                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n\t                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [DEFAULT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DefaultValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return DefaultValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    function normalizeValidator(validator) {\n\t        if (validator.validate) {\n\t            return function (c) { return validator.validate(c); };\n\t        }\n\t        else {\n\t            return validator;\n\t        }\n\t    }\n\t    function normalizeAsyncValidator(validator) {\n\t        if (validator.validate) {\n\t            return function (c) { return validator.validate(c); };\n\t        }\n\t        else {\n\t            return validator;\n\t        }\n\t    }\n\t\n\t    var NUMBER_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The accessor for writing a number value and listening to changes that is used by the\n\t     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"number\" [(ngModel)]=\"age\">\n\t     *  ```\n\t     */\n\t    var NumberValueAccessor = (function () {\n\t        function NumberValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        NumberValueAccessor.prototype.writeValue = function (value) {\n\t            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n\t            var normalizedValue = value == null ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        NumberValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [NUMBER_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NumberValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return NumberValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function unimplemented() {\n\t        throw new Error('unimplemented');\n\t    }\n\t    /**\n\t     * A base class that all control directive extend.\n\t     * It binds a {@link FormControl} object to a DOM element.\n\t     *\n\t     * Used internally by Angular forms.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControl = (function (_super) {\n\t        __extends$2(NgControl, _super);\n\t        function NgControl() {\n\t            _super.apply(this, arguments);\n\t            /** @internal */\n\t            this._parent = null;\n\t            this.name = null;\n\t            this.valueAccessor = null;\n\t            /** @internal */\n\t            this._rawValidators = [];\n\t            /** @internal */\n\t            this._rawAsyncValidators = [];\n\t        }\n\t        Object.defineProperty(NgControl.prototype, \"validator\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgControl;\n\t    }(AbstractControlDirective));\n\t\n\t    var RADIO_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * Internal class used by Angular to uncheck radio buttons with the matching name.\n\t     */\n\t    var RadioControlRegistry = (function () {\n\t        function RadioControlRegistry() {\n\t            this._accessors = [];\n\t        }\n\t        RadioControlRegistry.prototype.add = function (control, accessor) {\n\t            this._accessors.push([control, accessor]);\n\t        };\n\t        RadioControlRegistry.prototype.remove = function (accessor) {\n\t            for (var i = this._accessors.length - 1; i >= 0; --i) {\n\t                if (this._accessors[i][1] === accessor) {\n\t                    this._accessors.splice(i, 1);\n\t                    return;\n\t                }\n\t            }\n\t        };\n\t        RadioControlRegistry.prototype.select = function (accessor) {\n\t            var _this = this;\n\t            this._accessors.forEach(function (c) {\n\t                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n\t                    c[1].fireUncheck(accessor.value);\n\t                }\n\t            });\n\t        };\n\t        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n\t            if (!controlPair[0].control)\n\t                return false;\n\t            return controlPair[0]._parent === accessor._control._parent &&\n\t                controlPair[1].name === accessor.name;\n\t        };\n\t        RadioControlRegistry.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlRegistry.ctorParameters = [];\n\t        return RadioControlRegistry;\n\t    }());\n\t    /**\n\t     * @whatItDoes  Writes radio control values and listens to radio control changes.\n\t     *\n\t     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n\t     * to keep the view synced with the {@link FormControl} model.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n\t     * value accessor will be active on any radio control that has a form directive. You do\n\t     * **not** need to add a special selector to activate it.\n\t     *\n\t     * ### How to use radio buttons with form directives\n\t     *\n\t     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n\t     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n\t     * attributes do not affect each other.\n\t     *\n\t     * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n\t     *\n\t     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n\t     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n\t     *\n\t     * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n\t     *\n\t     *  * **npm package**: `@angular/forms`\n\t     *\n\t     *  @stable\n\t     */\n\t    var RadioControlValueAccessor = (function () {\n\t        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this._registry = _registry;\n\t            this._injector = _injector;\n\t            this.onChange = function () { };\n\t            this.onTouched = function () { };\n\t        }\n\t        RadioControlValueAccessor.prototype.ngOnInit = function () {\n\t            this._control = this._injector.get(NgControl);\n\t            this._checkName();\n\t            this._registry.add(this._control, this);\n\t        };\n\t        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n\t        RadioControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._state = value === this.value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n\t        };\n\t        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this._fn = fn;\n\t            this.onChange = function () {\n\t                fn(_this.value);\n\t                _this._registry.select(_this);\n\t            };\n\t        };\n\t        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n\t        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        RadioControlValueAccessor.prototype._checkName = function () {\n\t            if (this.name && this.formControlName && this.name !== this.formControlName) {\n\t                this._throwNameError();\n\t            }\n\t            if (!this.name && this.formControlName)\n\t                this.name = this.formControlName;\n\t        };\n\t        RadioControlValueAccessor.prototype._throwNameError = function () {\n\t            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n\t        };\n\t        RadioControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n\t                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n\t                        providers: [RADIO_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: RadioControlRegistry, },\n\t            { type: _angular_core.Injector, },\n\t        ];\n\t        RadioControlValueAccessor.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'formControlName': [{ type: _angular_core.Input },],\n\t            'value': [{ type: _angular_core.Input },],\n\t        };\n\t        return RadioControlValueAccessor;\n\t    }());\n\t\n\t    var RANGE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The accessor for writing a range value and listening to changes that is used by the\n\t     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"range\" [(ngModel)]=\"age\" >\n\t     *  ```\n\t     */\n\t    var RangeValueAccessor = (function () {\n\t        function RangeValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        RangeValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n\t        };\n\t        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        RangeValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [RANGE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RangeValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return RangeValueAccessor;\n\t    }());\n\t\n\t    var SELECT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    function _buildValueString(id, value) {\n\t        if (id == null)\n\t            return \"\" + value;\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    function _extractId(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     * @whatItDoes Writes values and listens to changes on a select element.\n\t     *\n\t     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n\t     * to keep the view synced with the {@link FormControl} model.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n\t     * value accessor will be active on any select control that has a form directive. You do\n\t     * **not** need to add a special selector to activate it.\n\t     *\n\t     * ### How to use select controls with form directives\n\t     *\n\t     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n\t     * attribute to the main `<select>` tag.\n\t     *\n\t     * If your option values are simple strings, you can bind to the normal `value` property\n\t     * on the option.  If your option values happen to be objects (and you'd like to save the\n\t     * selection in your form as an object), use `ngValue` instead:\n\t     *\n\t     * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n\t     *\n\t     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n\t     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n\t     * choice of binding to the  `value` or `ngValue` property on the select's options.\n\t     *\n\t     * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n\t     *\n\t     * Note: We listen to the 'change' event because 'input' events aren't fired\n\t     * for selects in Firefox and IE:\n\t     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n\t     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var SelectControlValueAccessor = (function () {\n\t        function SelectControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        SelectControlValueAccessor.prototype.writeValue = function (value) {\n\t            this.value = value;\n\t            var valueString = _buildValueString(this._getOptionId(value), value);\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n\t        };\n\t        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (valueString) {\n\t                _this.value = valueString;\n\t                fn(_this._getOptionValue(valueString));\n\t            };\n\t        };\n\t        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id), value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /** @internal */\n\t        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var id = _extractId(valueString);\n\t            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n\t        };\n\t        SelectControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return SelectControlValueAccessor;\n\t    }());\n\t    /**\n\t     * @whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * See docs for {@link SelectControlValueAccessor} for usage examples.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSelectOption = (function () {\n\t        function NgSelectOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (this._select)\n\t                this.id = this._select._registerOption();\n\t        }\n\t        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._select._optionMap.set(this.id, value);\n\t                this._setElementValue(_buildValueString(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n\t            set: function (value) {\n\t                this._setElementValue(value);\n\t                if (this._select)\n\t                    this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        NgSelectOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        NgSelectOption.prototype.ngOnDestroy = function () {\n\t            if (this._select) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectOption.ctorParameters = [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ];\n\t        NgSelectOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectOption;\n\t    }());\n\t\n\t    var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    function _buildValueString$1(id, value) {\n\t        if (id == null)\n\t            return \"\" + value;\n\t        if (typeof value === 'string')\n\t            value = \"'\" + value + \"'\";\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    function _extractId$1(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     * The accessor for writing a value and listening to changes on a select element.\n\t     *\n\t     * @stable\n\t     */\n\t    var SelectMultipleControlValueAccessor = (function () {\n\t        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n\t            var _this = this;\n\t            this.value = value;\n\t            if (value == null)\n\t                return;\n\t            var values = value;\n\t            // convert values to ids\n\t            var ids = values.map(function (v) { return _this._getOptionId(v); });\n\t            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n\t        };\n\t        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (_) {\n\t                var selected = [];\n\t                if (_.hasOwnProperty('selectedOptions')) {\n\t                    var options = _.selectedOptions;\n\t                    for (var i = 0; i < options.length; i++) {\n\t                        var opt = options.item(i);\n\t                        var val = _this._getOptionValue(opt.value);\n\t                        selected.push(val);\n\t                    }\n\t                }\n\t                else {\n\t                    var options = _.options;\n\t                    for (var i = 0; i < options.length; i++) {\n\t                        var opt = options.item(i);\n\t                        if (opt.selected) {\n\t                            var val = _this._getOptionValue(opt.value);\n\t                            selected.push(val);\n\t                        }\n\t                    }\n\t                }\n\t                fn(selected);\n\t            };\n\t        };\n\t        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n\t            var id = (this._idCounter++).toString();\n\t            this._optionMap.set(id, value);\n\t            return id;\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id)._value, value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /** @internal */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var id = _extractId$1(valueString);\n\t            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n\t        };\n\t        SelectMultipleControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectMultipleControlValueAccessor.ctorParameters = [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ];\n\t        return SelectMultipleControlValueAccessor;\n\t    }());\n\t    /**\n\t     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <select multiple name=\"city\" ngModel>\n\t     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n\t     * </select>\n\t     * ```\n\t     */\n\t    var NgSelectMultipleOption = (function () {\n\t        function NgSelectMultipleOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (this._select) {\n\t                this.id = this._select._registerOption(this);\n\t            }\n\t        }\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._value = value;\n\t                this._setElementValue(_buildValueString$1(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n\t            set: function (value) {\n\t                if (this._select) {\n\t                    this._value = value;\n\t                    this._setElementValue(_buildValueString$1(this.id, value));\n\t                    this._select.writeValue(this._select.value);\n\t                }\n\t                else {\n\t                    this._setElementValue(value);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        /** @internal */\n\t        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n\t        };\n\t        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n\t            if (this._select) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectMultipleOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectMultipleOption.ctorParameters = [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ];\n\t        NgSelectMultipleOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectMultipleOption;\n\t    }());\n\t\n\t    function controlPath(name, parent) {\n\t        return parent.path.concat([name]);\n\t    }\n\t    function setUpControl(control, dir) {\n\t        if (!control)\n\t            _throwError(dir, 'Cannot find control with');\n\t        if (!dir.valueAccessor)\n\t            _throwError(dir, 'No value accessor for form control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t        dir.valueAccessor.writeValue(control.value);\n\t        // view -> model\n\t        dir.valueAccessor.registerOnChange(function (newValue) {\n\t            dir.viewToModelUpdate(newValue);\n\t            control.markAsDirty();\n\t            control.setValue(newValue, { emitModelToViewChange: false });\n\t        });\n\t        // touched\n\t        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n\t        control.registerOnChange(function (newValue, emitModelEvent) {\n\t            // control -> view\n\t            dir.valueAccessor.writeValue(newValue);\n\t            // control -> ngModel\n\t            if (emitModelEvent)\n\t                dir.viewToModelUpdate(newValue);\n\t        });\n\t        if (dir.valueAccessor.setDisabledState) {\n\t            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n\t        }\n\t        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange)\n\t                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange)\n\t                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t    }\n\t    function cleanUpControl(control, dir) {\n\t        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n\t        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange) {\n\t                validator.registerOnValidatorChange(null);\n\t            }\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange) {\n\t                validator.registerOnValidatorChange(null);\n\t            }\n\t        });\n\t        if (control)\n\t            control._clearChangeFns();\n\t    }\n\t    function setUpFormContainer(control, dir) {\n\t        if (isBlank(control))\n\t            _throwError(dir, 'Cannot find control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t    }\n\t    function _noControlError(dir) {\n\t        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n\t    }\n\t    function _throwError(dir, message) {\n\t        var messageEnd;\n\t        if (dir.path.length > 1) {\n\t            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n\t        }\n\t        else if (dir.path[0]) {\n\t            messageEnd = \"name: '\" + dir.path + \"'\";\n\t        }\n\t        else {\n\t            messageEnd = 'unspecified name attribute';\n\t        }\n\t        throw new Error(message + \" \" + messageEnd);\n\t    }\n\t    function composeValidators(validators) {\n\t        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n\t    }\n\t    function composeAsyncValidators(validators) {\n\t        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n\t            null;\n\t    }\n\t    function isPropertyUpdated(changes, viewModel) {\n\t        if (!changes.hasOwnProperty('model'))\n\t            return false;\n\t        var change = changes['model'];\n\t        if (change.isFirstChange())\n\t            return true;\n\t        return !looseIdentical(viewModel, change.currentValue);\n\t    }\n\t    var BUILTIN_ACCESSORS = [\n\t        CheckboxControlValueAccessor,\n\t        RangeValueAccessor,\n\t        NumberValueAccessor,\n\t        SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor,\n\t        RadioControlValueAccessor,\n\t    ];\n\t    function isBuiltInAccessor(valueAccessor) {\n\t        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n\t    }\n\t    // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n\t    function selectValueAccessor(dir, valueAccessors) {\n\t        if (!valueAccessors)\n\t            return null;\n\t        var defaultAccessor;\n\t        var builtinAccessor;\n\t        var customAccessor;\n\t        valueAccessors.forEach(function (v) {\n\t            if (v.constructor === DefaultValueAccessor) {\n\t                defaultAccessor = v;\n\t            }\n\t            else if (isBuiltInAccessor(v)) {\n\t                if (builtinAccessor)\n\t                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n\t                builtinAccessor = v;\n\t            }\n\t            else {\n\t                if (customAccessor)\n\t                    _throwError(dir, 'More than one custom value accessor matches form control with');\n\t                customAccessor = v;\n\t            }\n\t        });\n\t        if (customAccessor)\n\t            return customAccessor;\n\t        if (builtinAccessor)\n\t            return builtinAccessor;\n\t        if (defaultAccessor)\n\t            return defaultAccessor;\n\t        _throwError(dir, 'No valid value accessor for form control with');\n\t        return null;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractFormGroupDirective = (function (_super) {\n\t        __extends(AbstractFormGroupDirective, _super);\n\t        function AbstractFormGroupDirective() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormGroup(this);\n\t        };\n\t        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormGroup(this);\n\t            }\n\t        };\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n\t            /**\n\t             * Get the {@link FormGroup} backing this binding.\n\t             */\n\t            get: function () { return this.formDirective.getFormGroup(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n\t            /**\n\t             * Get the path to this control group.\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n\t            /**\n\t             * Get the {@link Form} to which this group belongs.\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n\t        return AbstractFormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var AbstractControlStatus = (function () {\n\t        function AbstractControlStatus(cd) {\n\t            this._cd = cd;\n\t        }\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n\t            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n\t            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n\t            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n\t            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n\t            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n\t            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n\t            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AbstractControlStatus;\n\t    }());\n\t    var ngControlStatusHost = {\n\t        '[class.ng-untouched]': 'ngClassUntouched',\n\t        '[class.ng-touched]': 'ngClassTouched',\n\t        '[class.ng-pristine]': 'ngClassPristine',\n\t        '[class.ng-dirty]': 'ngClassDirty',\n\t        '[class.ng-valid]': 'ngClassValid',\n\t        '[class.ng-invalid]': 'ngClassInvalid',\n\t        '[class.ng-pending]': 'ngClassPending',\n\t    };\n\t    /**\n\t     * Directive automatically applied to Angular form controls that sets CSS classes\n\t     * based on control status (valid/invalid/dirty/etc).\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControlStatus = (function (_super) {\n\t        __extends$3(NgControlStatus, _super);\n\t        function NgControlStatus(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatus.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatus.ctorParameters = [\n\t            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n\t        ];\n\t        return NgControlStatus;\n\t    }(AbstractControlStatus));\n\t    /**\n\t     * Directive automatically applied to Angular form groups that sets CSS classes\n\t     * based on control status (valid/invalid/dirty/etc).\n\t     *\n\t     * @stable\n\t     */\n\t    var NgControlStatusGroup = (function (_super) {\n\t        __extends$3(NgControlStatusGroup, _super);\n\t        function NgControlStatusGroup(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatusGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n\t                        host: ngControlStatusHost\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatusGroup.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n\t        ];\n\t        return NgControlStatusGroup;\n\t    }(AbstractControlStatus));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   @Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   @Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * @stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$5(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var schedulerFn;\n\t            var errorFn = function (err) { return null; };\n\t            var completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n\t     */\n\t    var VALID = 'VALID';\n\t    /**\n\t     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n\t     */\n\t    var INVALID = 'INVALID';\n\t    /**\n\t     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n\t     * errors are not yet available for the input value.\n\t     */\n\t    var PENDING = 'PENDING';\n\t    /**\n\t     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n\t     * calculations of validity or value.\n\t     */\n\t    var DISABLED = 'DISABLED';\n\t    function _find(control, path, delimiter) {\n\t        if (path == null)\n\t            return null;\n\t        if (!(path instanceof Array)) {\n\t            path = path.split(delimiter);\n\t        }\n\t        if (path instanceof Array && (path.length === 0))\n\t            return null;\n\t        return path.reduce(function (v, name) {\n\t            if (v instanceof FormGroup) {\n\t                return v.controls[name] || null;\n\t            }\n\t            if (v instanceof FormArray) {\n\t                return v.at(name) || null;\n\t            }\n\t            return null;\n\t        }, control);\n\t    }\n\t    function toObservable(r) {\n\t        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n\t    }\n\t    function coerceToValidator(validator) {\n\t        return Array.isArray(validator) ? composeValidators(validator) : validator;\n\t    }\n\t    function coerceToAsyncValidator(asyncValidator) {\n\t        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n\t    }\n\t    /**\n\t     * @whatItDoes This is the base class for {@link FormControl}, {@link FormGroup}, and\n\t     * {@link FormArray}.\n\t     *\n\t     * It provides some of the shared behavior that all controls and groups of controls have, like\n\t     * running validators, calculating status, and resetting state. It also defines the properties\n\t     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n\t     * instantiated directly.\n\t     *\n\t     * @stable\n\t     */\n\t    var AbstractControl = (function () {\n\t        function AbstractControl(validator, asyncValidator) {\n\t            this.validator = validator;\n\t            this.asyncValidator = asyncValidator;\n\t            /** @internal */\n\t            this._onCollectionChange = function () { };\n\t            this._pristine = true;\n\t            this._touched = false;\n\t            /** @internal */\n\t            this._onDisabledChange = [];\n\t        }\n\t        Object.defineProperty(AbstractControl.prototype, \"value\", {\n\t            /**\n\t             * The value of the control.\n\t             */\n\t            get: function () { return this._value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n\t            /**\n\t             * The parent control.\n\t             */\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"status\", {\n\t            /**\n\t             * The validation status of the control. There are four possible\n\t             * validation statuses:\n\t             *\n\t             * * **VALID**:  control has passed all validation checks\n\t             * * **INVALID**: control has failed at least one validation check\n\t             * * **PENDING**: control is in the midst of conducting a validation check\n\t             * * **DISABLED**: control is exempt from validation checks\n\t             *\n\t             * These statuses are mutually exclusive, so a control cannot be\n\t             * both valid AND invalid or invalid AND disabled.\n\t             */\n\t            get: function () { return this._status; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n\t            /**\n\t             * A control is `valid` when its `status === VALID`.\n\t             *\n\t             * In order to have this status, the control must have passed all its\n\t             * validation checks.\n\t             */\n\t            get: function () { return this._status === VALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n\t            /**\n\t             * A control is `invalid` when its `status === INVALID`.\n\t             *\n\t             * In order to have this status, the control must have failed\n\t             * at least one of its validation checks.\n\t             */\n\t            get: function () { return this._status === INVALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n\t            /**\n\t             * A control is `pending` when its `status === PENDING`.\n\t             *\n\t             * In order to have this status, the control must be in the\n\t             * middle of conducting a validation check.\n\t             */\n\t            get: function () { return this._status == PENDING; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n\t            /**\n\t             * A control is `disabled` when its `status === DISABLED`.\n\t             *\n\t             * Disabled controls are exempt from validation checks and\n\t             * are not included in the aggregate value of their ancestor\n\t             * controls.\n\t             */\n\t            get: function () { return this._status === DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n\t            /**\n\t             * A control is `enabled` as long as its `status !== DISABLED`.\n\t             *\n\t             * In other words, it has a status of `VALID`, `INVALID`, or\n\t             * `PENDING`.\n\t             */\n\t            get: function () { return this._status !== DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n\t            /**\n\t             * Returns any errors generated by failing validation. If there\n\t             * are no errors, it will return null.\n\t             */\n\t            get: function () { return this._errors; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n\t            /**\n\t             * A control is `pristine` if the user has not yet changed\n\t             * the value in the UI.\n\t             *\n\t             * Note that programmatic changes to a control's value will\n\t             * *not* mark it dirty.\n\t             */\n\t            get: function () { return this._pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n\t            /**\n\t             * A control is `dirty` if the user has changed the value\n\t             * in the UI.\n\t             *\n\t             * Note that programmatic changes to a control's value will\n\t             * *not* mark it dirty.\n\t             */\n\t            get: function () { return !this.pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n\t            /**\n\t            * A control is marked `touched` once the user has triggered\n\t            * a `blur` event on it.\n\t            */\n\t            get: function () { return this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n\t            /**\n\t             * A control is `untouched` if the user has not yet triggered\n\t             * a `blur` event on it.\n\t             */\n\t            get: function () { return !this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n\t            /**\n\t             * Emits an event every time the value of the control changes, in\n\t             * the UI or programmatically.\n\t             */\n\t            get: function () { return this._valueChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n\t            /**\n\t             * Emits an event every time the validation status of the control\n\t             * is re-calculated.\n\t             */\n\t            get: function () { return this._statusChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Sets the synchronous validators that are active on this control.  Calling\n\t         * this will overwrite any existing sync validators.\n\t         */\n\t        AbstractControl.prototype.setValidators = function (newValidator) {\n\t            this.validator = coerceToValidator(newValidator);\n\t        };\n\t        /**\n\t         * Sets the async validators that are active on this control. Calling this\n\t         * will overwrite any existing async validators.\n\t         */\n\t        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n\t            this.asyncValidator = coerceToAsyncValidator(newValidator);\n\t        };\n\t        /**\n\t         * Empties out the sync validator list.\n\t         */\n\t        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n\t        /**\n\t         * Empties out the async validator list.\n\t         */\n\t        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n\t        /**\n\t         * Marks the control as `touched`.\n\t         *\n\t         * This will also mark all direct ancestors as `touched` to maintain\n\t         * the model.\n\t         */\n\t        AbstractControl.prototype.markAsTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = true;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `untouched`.\n\t         *\n\t         * If the control has any children, it will also mark all children as `untouched`\n\t         * to maintain the model, and re-calculate the `touched` status of all parent\n\t         * controls.\n\t         */\n\t        AbstractControl.prototype.markAsUntouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = false;\n\t            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `dirty`.\n\t         *\n\t         * This will also mark all direct ancestors as `dirty` to maintain\n\t         * the model.\n\t         */\n\t        AbstractControl.prototype.markAsDirty = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = false;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsDirty({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `pristine`.\n\t         *\n\t         * If the control has any children, it will also mark all children as `pristine`\n\t         * to maintain the model, and re-calculate the `pristine` status of all parent\n\t         * controls.\n\t         */\n\t        AbstractControl.prototype.markAsPristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = true;\n\t            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `pending`.\n\t         */\n\t        AbstractControl.prototype.markAsPending = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._status = PENDING;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsPending({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Disables the control. This means the control will be exempt from validation checks and\n\t         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n\t         *\n\t         * If the control has children, all children will be disabled to maintain the model.\n\t         */\n\t        AbstractControl.prototype.disable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = DISABLED;\n\t            this._errors = null;\n\t            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n\t            this._updateValue();\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n\t        };\n\t        /**\n\t         * Enables the control. This means the control will be included in validation checks and\n\t         * the aggregate value of its parent. Its status is re-calculated based on its value and\n\t         * its validators.\n\t         *\n\t         * If the control has children, all children will be enabled.\n\t         */\n\t        AbstractControl.prototype.enable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = VALID;\n\t            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n\t        };\n\t        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity();\n\t                this._parent._updatePristine();\n\t                this._parent._updateTouched();\n\t            }\n\t        };\n\t        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n\t        /**\n\t         * Re-calculates the value and validation status of the control.\n\t         *\n\t         * By default, it will also update the value and validity of its ancestors.\n\t         */\n\t        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._setInitialStatus();\n\t            this._updateValue();\n\t            if (this.enabled) {\n\t                this._errors = this._runValidator();\n\t                this._status = this._calculateStatus();\n\t                if (this._status === VALID || this._status === PENDING) {\n\t                    this._runAsyncValidator(emitEvent);\n\t                }\n\t            }\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updateTreeValidity = function (_a) {\n\t            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n\t            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t        };\n\t        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n\t        AbstractControl.prototype._runValidator = function () {\n\t            return this.validator ? this.validator(this) : null;\n\t        };\n\t        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n\t            var _this = this;\n\t            if (this.asyncValidator) {\n\t                this._status = PENDING;\n\t                this._cancelExistingSubscription();\n\t                var obs = toObservable(this.asyncValidator(this));\n\t                this._asyncValidationSubscription =\n\t                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n\t            }\n\t        };\n\t        AbstractControl.prototype._cancelExistingSubscription = function () {\n\t            if (this._asyncValidationSubscription) {\n\t                this._asyncValidationSubscription.unsubscribe();\n\t            }\n\t        };\n\t        /**\n\t         * Sets errors on a form control.\n\t         *\n\t         * This is used when validations are run manually by the user, rather than automatically.\n\t         *\n\t         * Calling `setErrors` will also update the validity of the parent control.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * const login = new FormControl(\"someLogin\");\n\t         * login.setErrors({\n\t         *   \"notUnique\": true\n\t         * });\n\t         *\n\t         * expect(login.valid).toEqual(false);\n\t         * expect(login.errors).toEqual({\"notUnique\": true});\n\t         *\n\t         * login.setValue(\"someOtherLogin\");\n\t         *\n\t         * expect(login.valid).toEqual(true);\n\t         * ```\n\t         */\n\t        AbstractControl.prototype.setErrors = function (errors, _a) {\n\t            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n\t            this._errors = errors;\n\t            this._updateControlsErrors(emitEvent !== false);\n\t        };\n\t        /**\n\t         * Retrieves a child control given the control's name or path.\n\t         *\n\t         * Paths can be passed in as an array or a string delimited by a dot.\n\t         *\n\t         * To get a control nested within a `person` sub-group:\n\t         *\n\t         * * `this.form.get('person.name');`\n\t         *\n\t         * -OR-\n\t         *\n\t         * * `this.form.get(['person', 'name']);`\n\t         */\n\t        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n\t        /**\n\t         * Returns true if the control with the given path has the error specified. Otherwise\n\t         * returns null or undefined.\n\t         *\n\t         * If no path is given, it checks for the error on the present control.\n\t         */\n\t        AbstractControl.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            var control = path ? this.get(path) : this;\n\t            return control && control._errors ? control._errors[errorCode] : null;\n\t        };\n\t        /**\n\t         * Returns true if the control with the given path has the error specified. Otherwise\n\t         * returns false.\n\t         *\n\t         * If no path is given, it checks for the error on the present control.\n\t         */\n\t        AbstractControl.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return !!this.getError(errorCode, path);\n\t        };\n\t        Object.defineProperty(AbstractControl.prototype, \"root\", {\n\t            /**\n\t             * Retrieves the top-level ancestor of this control.\n\t             */\n\t            get: function () {\n\t                var x = this;\n\t                while (x._parent) {\n\t                    x = x._parent;\n\t                }\n\t                return x;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n\t            this._status = this._calculateStatus();\n\t            if (emitEvent) {\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent) {\n\t                this._parent._updateControlsErrors(emitEvent);\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._initObservables = function () {\n\t            this._valueChanges = new EventEmitter();\n\t            this._statusChanges = new EventEmitter();\n\t        };\n\t        AbstractControl.prototype._calculateStatus = function () {\n\t            if (this._allControlsDisabled())\n\t                return DISABLED;\n\t            if (this._errors)\n\t                return INVALID;\n\t            if (this._anyControlsHaveStatus(PENDING))\n\t                return PENDING;\n\t            if (this._anyControlsHaveStatus(INVALID))\n\t                return INVALID;\n\t            return VALID;\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n\t            return this._anyControls(function (control) { return control.status === status; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsDirty = function () {\n\t            return this._anyControls(function (control) { return control.dirty; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._anyControlsTouched = function () {\n\t            return this._anyControls(function (control) { return control.touched; });\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updatePristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = !this._anyControlsDirty();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._updateTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = this._anyControlsTouched();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._isBoxedValue = function (formState) {\n\t            return typeof formState === 'object' && formState !== null &&\n\t                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n\t        };\n\t        /** @internal */\n\t        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n\t        return AbstractControl;\n\t    }());\n\t    /**\n\t     * @whatItDoes Tracks the value and validation status of an individual form control.\n\t     *\n\t     * It is one of the three fundamental building blocks of Angular forms, along with\n\t     * {@link FormGroup} and {@link FormArray}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormControl}, you can pass in an initial value as the\n\t     * first argument. Example:\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl('some value');\n\t     * console.log(ctrl.value);     // 'some value'\n\t     *```\n\t     *\n\t     * You can also initialize the control with a form state object on instantiation,\n\t     * which includes both the value and whether or not the control is disabled.\n\t     * You can't use the value key without the disabled key; both are required\n\t     * to use this way of initialization.\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n\t     * console.log(ctrl.value);     // 'n/a'\n\t     * console.log(ctrl.status);   // 'DISABLED'\n\t     * ```\n\t     *\n\t     * To include a sync validator (or an array of sync validators) with the control,\n\t     * pass it in as the second argument. Async validators are also supported, but\n\t     * have to be passed in separately as the third arg.\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl('', Validators.required);\n\t     * console.log(ctrl.value);     // ''\n\t     * console.log(ctrl.status);   // 'INVALID'\n\t     * ```\n\t     *\n\t     * See its superclass, {@link AbstractControl}, for more properties and methods.\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormControl = (function (_super) {\n\t        __extends$6(FormControl, _super);\n\t        function FormControl(formState, validator, asyncValidator) {\n\t            if (formState === void 0) { formState = null; }\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n\t            /** @internal */\n\t            this._onChange = [];\n\t            this._applyFormState(formState);\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t            this._initObservables();\n\t        }\n\t        /**\n\t         * Set the value of the form control to `value`.\n\t         *\n\t         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n\t         * and not its parent component. This defaults to false.\n\t         *\n\t         * If `emitEvent` is `true`, this\n\t         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n\t         * to true (as it falls through to `updateValueAndValidity`).\n\t         *\n\t         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n\t         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n\t         * specified.\n\t         *\n\t         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n\t         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n\t         */\n\t        FormControl.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n\t            this._value = value;\n\t            if (this._onChange.length && emitModelToViewChange !== false) {\n\t                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n\t            }\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Patches the value of a control.\n\t         *\n\t         * This function is functionally the same as {@link FormControl.setValue} at this level.\n\t         * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n\t         * where it does behave differently.\n\t         */\n\t        FormControl.prototype.patchValue = function (value, options) {\n\t            if (options === void 0) { options = {}; }\n\t            this.setValue(value, options);\n\t        };\n\t        /**\n\t         * Resets the form control. This means by default:\n\t         *\n\t         * * it is marked as `pristine`\n\t         * * it is marked as `untouched`\n\t         * * value is set to null\n\t         *\n\t         * You can also reset to a specific form state by passing through a standalone\n\t         * value or a form state object that contains both a value and a disabled state\n\t         * (these are the only two properties that cannot be calculated).\n\t         *\n\t         * Ex:\n\t         *\n\t         * ```ts\n\t         * this.control.reset('Nancy');\n\t         *\n\t         * console.log(this.control.value);  // 'Nancy'\n\t         * ```\n\t         *\n\t         * OR\n\t         *\n\t         * ```\n\t         * this.control.reset({value: 'Nancy', disabled: true});\n\t         *\n\t         * console.log(this.control.value);  // 'Nancy'\n\t         * console.log(this.control.status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormControl.prototype.reset = function (formState, _a) {\n\t            if (formState === void 0) { formState = null; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._applyFormState(formState);\n\t            this.markAsPristine({ onlySelf: onlySelf });\n\t            this.markAsUntouched({ onlySelf: onlySelf });\n\t            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._updateValue = function () { };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._anyControls = function (condition) { return false; };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n\t        /**\n\t         * Register a listener for change events.\n\t         */\n\t        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._clearChangeFns = function () {\n\t            this._onChange = [];\n\t            this._onDisabledChange = [];\n\t            this._onCollectionChange = function () { };\n\t        };\n\t        /**\n\t         * Register a listener for disabled events.\n\t         */\n\t        FormControl.prototype.registerOnDisabledChange = function (fn) {\n\t            this._onDisabledChange.push(fn);\n\t        };\n\t        /**\n\t         * @internal\n\t         */\n\t        FormControl.prototype._forEachChild = function (cb) { };\n\t        FormControl.prototype._applyFormState = function (formState) {\n\t            if (this._isBoxedValue(formState)) {\n\t                this._value = formState.value;\n\t                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n\t                    this.enable({ onlySelf: true, emitEvent: false });\n\t            }\n\t            else {\n\t                this._value = formState;\n\t            }\n\t        };\n\t        return FormControl;\n\t    }(AbstractControl));\n\t    /**\n\t     * @whatItDoes Tracks the value and validity state of a group of {@link FormControl}\n\t     * instances.\n\t     *\n\t     * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n\t     * with each control name as the key.  It calculates its status by reducing the statuses\n\t     * of its children. For example, if one of the controls in a group is invalid, the entire\n\t     * group becomes invalid.\n\t     *\n\t     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n\t     * along with {@link FormControl} and {@link FormArray}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n\t     * argument. The key for each child will be the name under which it is registered.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const form = new FormGroup({\n\t     *   first: new FormControl('Nancy', Validators.minLength(2)),\n\t     *   last: new FormControl('Drew'),\n\t     * });\n\t     *\n\t     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n\t     * console.log(form.status);  // 'VALID'\n\t     * ```\n\t     *\n\t     * You can also include group-level validators as the second arg, or group-level async\n\t     * validators as the third arg. These come in handy when you want to perform validation\n\t     * that considers the value of more than one child control.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const form = new FormGroup({\n\t     *   password: new FormControl('', Validators.minLength(2)),\n\t     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n\t     * }, passwordMatchValidator);\n\t     *\n\t     *\n\t     * function passwordMatchValidator(g: FormGroup) {\n\t     *    return g.get('password').value === g.get('passwordConfirm').value\n\t     *       ? null : {'mismatch': true};\n\t     * }\n\t     * ```\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormGroup = (function (_super) {\n\t        __extends$6(FormGroup, _super);\n\t        function FormGroup(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         * Registers a control with the group's list of controls.\n\t         *\n\t         * This method does not update value or validity of the control, so for\n\t         * most cases you'll want to use {@link FormGroup.addControl} instead.\n\t         */\n\t        FormGroup.prototype.registerControl = function (name, control) {\n\t            if (this.controls[name])\n\t                return this.controls[name];\n\t            this.controls[name] = control;\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t            return control;\n\t        };\n\t        /**\n\t         * Add a control to this group.\n\t         */\n\t        FormGroup.prototype.addControl = function (name, control) {\n\t            this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Remove a control from this group.\n\t         */\n\t        FormGroup.prototype.removeControl = function (name) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Replace an existing control.\n\t         */\n\t        FormGroup.prototype.setControl = function (name, control) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            if (control)\n\t                this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Check whether there is an enabled control with the given name in the group.\n\t         *\n\t         * It will return false for disabled controls. If you'd like to check for\n\t         * existence in the group only, use {@link AbstractControl.get} instead.\n\t         */\n\t        FormGroup.prototype.contains = function (controlName) {\n\t            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n\t        };\n\t        /**\n\t         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n\t         *  the structure of the group, with control names as keys.\n\t         *\n\t         * This method performs strict checks, so it will throw an error if you try\n\t         * to set the value of a control that doesn't exist or if you exclude the\n\t         * value of a control.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const form = new FormGroup({\n\t         *     first: new FormControl(),\n\t         *     last: new FormControl()\n\t         *  });\n\t         *  console.log(form.value);   // {first: null, last: null}\n\t         *\n\t         *  form.setValue({first: 'Nancy', last: 'Drew'});\n\t         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n\t         *\n\t         *  ```\n\t         */\n\t        FormGroup.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._checkAllValuesPresent(value);\n\t            Object.keys(value).forEach(function (name) {\n\t                _this._throwIfControlMissing(name);\n\t                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n\t         *  names as keys, and will do its best to match the values to the correct controls\n\t         *  in the group.\n\t         *\n\t         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const form = new FormGroup({\n\t         *     first: new FormControl(),\n\t         *     last: new FormControl()\n\t         *  });\n\t         *  console.log(form.value);   // {first: null, last: null}\n\t         *\n\t         *  form.patchValue({first: 'Nancy'});\n\t         *  console.log(form.value);   // {first: 'Nancy', last: null}\n\t         *\n\t         *  ```\n\t         */\n\t        FormGroup.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            Object.keys(value).forEach(function (name) {\n\t                if (_this.controls[name]) {\n\t                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Resets the {@link FormGroup}. This means by default:\n\t         *\n\t         * * The group and all descendants are marked `pristine`\n\t         * * The group and all descendants are marked `untouched`\n\t         * * The value of all descendants will be null or null maps\n\t         *\n\t         * You can also reset to a specific form state by passing in a map of states\n\t         * that matches the structure of your form, with control names as keys. The state\n\t         * can be a standalone value or a form state object with both a value and a disabled\n\t         * status.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```ts\n\t         * this.form.reset({first: 'name', last: 'last name'});\n\t         *\n\t         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t         * ```\n\t         *\n\t         * - OR -\n\t         *\n\t         * ```\n\t         * this.form.reset({\n\t         *   first: {value: 'name', disabled: true},\n\t         *   last: 'last'\n\t         * });\n\t         *\n\t         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t         * console.log(this.form.get('first').status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormGroup.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = {}; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._forEachChild(function (control, name) {\n\t                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * The aggregate value of the {@link FormGroup}, including any disabled controls.\n\t         *\n\t         * If you'd like to include all values regardless of disabled status, use this method.\n\t         * Otherwise, the `value` property is the best way to get the value of the group.\n\t         */\n\t        FormGroup.prototype.getRawValue = function () {\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                acc[name] = control.value;\n\t                return acc;\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._throwIfControlMissing = function (name) {\n\t            if (!Object.keys(this.controls).length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.controls[name]) {\n\t                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n\t            }\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._forEachChild = function (cb) {\n\t            var _this = this;\n\t            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) {\n\t                control.setParent(_this);\n\t                control._registerOnCollectionChange(_this._onCollectionChange);\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n\t        /** @internal */\n\t        FormGroup.prototype._anyControls = function (condition) {\n\t            var _this = this;\n\t            var res = false;\n\t            this._forEachChild(function (control, name) {\n\t                res = res || (_this.contains(name) && condition(control));\n\t            });\n\t            return res;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._reduceValue = function () {\n\t            var _this = this;\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                if (control.enabled || _this.disabled) {\n\t                    acc[name] = control.value;\n\t                }\n\t                return acc;\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n\t            var res = initValue;\n\t            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n\t            return res;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n\t                var controlName = _a[_i];\n\t                if (this.controls[controlName].enabled) {\n\t                    return false;\n\t                }\n\t            }\n\t            return Object.keys(this.controls).length > 0 || this.disabled;\n\t        };\n\t        /** @internal */\n\t        FormGroup.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, name) {\n\t                if (value[name] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n\t                }\n\t            });\n\t        };\n\t        return FormGroup;\n\t    }(AbstractControl));\n\t    /**\n\t     * @whatItDoes Tracks the value and validity state of an array of {@link FormControl}\n\t     * instances.\n\t     *\n\t     * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n\t     * It calculates its status by reducing the statuses of its children. For example, if one of\n\t     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n\t     *\n\t     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n\t     * along with {@link FormControl} and {@link FormGroup}.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n\t     * argument.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const arr = new FormArray([\n\t     *   new FormControl('Nancy', Validators.minLength(2)),\n\t     *   new FormControl('Drew'),\n\t     * ]);\n\t     *\n\t     * console.log(arr.value);   // ['Nancy', 'Drew']\n\t     * console.log(arr.status);  // 'VALID'\n\t     * ```\n\t     *\n\t     * You can also include array-level validators as the second arg, or array-level async\n\t     * validators as the third arg. These come in handy when you want to perform validation\n\t     * that considers the value of more than one child control.\n\t     *\n\t     * ### Adding or removing controls\n\t     *\n\t     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n\t     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n\t     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n\t     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n\t     * as broken change detection.\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormArray = (function (_super) {\n\t        __extends$6(FormArray, _super);\n\t        function FormArray(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         * Get the {@link AbstractControl} at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.at = function (index) { return this.controls[index]; };\n\t        /**\n\t         * Insert a new {@link AbstractControl} at the end of the array.\n\t         */\n\t        FormArray.prototype.push = function (control) {\n\t            this.controls.push(control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Insert a new {@link AbstractControl} at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.insert = function (index, control) {\n\t            this.controls.splice(index, 0, control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Remove the control at the given `index` in the array.\n\t         */\n\t        FormArray.prototype.removeAt = function (index) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Replace an existing control.\n\t         */\n\t        FormArray.prototype.setControl = function (index, control) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            if (control) {\n\t                this.controls.splice(index, 0, control);\n\t                this._registerControl(control);\n\t            }\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        Object.defineProperty(FormArray.prototype, \"length\", {\n\t            /**\n\t             * Length of the control array.\n\t             */\n\t            get: function () { return this.controls.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n\t         *  the structure of the control.\n\t         *\n\t         * This method performs strict checks, so it will throw an error if you try\n\t         * to set the value of a control that doesn't exist or if you exclude the\n\t         * value of a control.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const arr = new FormArray([\n\t         *     new FormControl(),\n\t         *     new FormControl()\n\t         *  ]);\n\t         *  console.log(arr.value);   // [null, null]\n\t         *\n\t         *  arr.setValue(['Nancy', 'Drew']);\n\t         *  console.log(arr.value);   // ['Nancy', 'Drew']\n\t         *  ```\n\t         */\n\t        FormArray.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._checkAllValuesPresent(value);\n\t            value.forEach(function (newValue, index) {\n\t                _this._throwIfControlMissing(index);\n\t                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n\t         *  structure of the control, and will do its best to match the values to the correct\n\t         *  controls in the group.\n\t         *\n\t         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const arr = new FormArray([\n\t         *     new FormControl(),\n\t         *     new FormControl()\n\t         *  ]);\n\t         *  console.log(arr.value);   // [null, null]\n\t         *\n\t         *  arr.patchValue(['Nancy']);\n\t         *  console.log(arr.value);   // ['Nancy', null]\n\t         *  ```\n\t         */\n\t        FormArray.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            value.forEach(function (newValue, index) {\n\t                if (_this.at(index)) {\n\t                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Resets the {@link FormArray}. This means by default:\n\t         *\n\t         * * The array and all descendants are marked `pristine`\n\t         * * The array and all descendants are marked `untouched`\n\t         * * The value of all descendants will be null or null maps\n\t         *\n\t         * You can also reset to a specific form state by passing in an array of states\n\t         * that matches the structure of the control. The state can be a standalone value\n\t         * or a form state object with both a value and a disabled status.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```ts\n\t         * this.arr.reset(['name', 'last name']);\n\t         *\n\t         * console.log(this.arr.value);  // ['name', 'last name']\n\t         * ```\n\t         *\n\t         * - OR -\n\t         *\n\t         * ```\n\t         * this.arr.reset([\n\t         *   {value: 'name', disabled: true},\n\t         *   'last'\n\t         * ]);\n\t         *\n\t         * console.log(this.arr.value);  // ['name', 'last name']\n\t         * console.log(this.arr.get(0).status);  // 'DISABLED'\n\t         * ```\n\t         */\n\t        FormArray.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = []; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._forEachChild(function (control, index) {\n\t                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * The aggregate value of the array, including any disabled controls.\n\t         *\n\t         * If you'd like to include all values regardless of disabled status, use this method.\n\t         * Otherwise, the `value` property is the best way to get the value of the array.\n\t         */\n\t        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n\t        /** @internal */\n\t        FormArray.prototype._throwIfControlMissing = function (index) {\n\t            if (!this.controls.length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.at(index)) {\n\t                throw new Error(\"Cannot find form control at index \" + index);\n\t            }\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._forEachChild = function (cb) {\n\t            this.controls.forEach(function (control, index) { cb(control, index); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._updateValue = function () {\n\t            var _this = this;\n\t            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n\t                .map(function (control) { return control.value; });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._anyControls = function (condition) {\n\t            return this.controls.some(function (control) { return control.enabled && condition(control); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) { return _this._registerControl(control); });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, i) {\n\t                if (value[i] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n\t                }\n\t            });\n\t        };\n\t        /** @internal */\n\t        FormArray.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n\t                var control = _a[_i];\n\t                if (control.enabled)\n\t                    return false;\n\t            }\n\t            return this.controls.length > 0 || this.disabled;\n\t        };\n\t        FormArray.prototype._registerControl = function (control) {\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t        };\n\t        return FormArray;\n\t    }(AbstractControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formDirectiveProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n\t    };\n\t    var resolvedPromise = Promise.resolve(null);\n\t    /**\n\t     * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n\t     * to track aggregate form value and validation status.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * As soon as you import the `FormsModule`, this directive becomes active by default on\n\t     * all `<form>` tags.  You don't need to add a special selector.\n\t     *\n\t     * You can export the directive into a local template variable using `ngForm` as the key\n\t     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n\t     * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n\t     * will give you access to the aggregate value and validity status of the form, as well as\n\t     * user interaction properties like `dirty` and `touched`.\n\t     *\n\t     * To register child controls with the form, you'll want to use {@link NgModel} with a\n\t     * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n\t     * sub-groups within the form.\n\t     *\n\t     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n\t     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t     * submission event.\n\t     *\n\t     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `FormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var NgForm = (function (_super) {\n\t        __extends$4(NgForm, _super);\n\t        function NgForm(validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._submitted = false;\n\t            this.ngSubmit = new EventEmitter();\n\t            this.form =\n\t                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n\t        }\n\t        Object.defineProperty(NgForm.prototype, \"submitted\", {\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"controls\", {\n\t            get: function () { return this.form.controls; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgForm.prototype.addControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                dir._control = container.registerControl(dir.name, dir.control);\n\t                setUpControl(dir.control, dir);\n\t                dir.control.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n\t        NgForm.prototype.removeControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                if (container) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        NgForm.prototype.addFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                var group = new FormGroup({});\n\t                setUpFormContainer(group, dir);\n\t                container.registerControl(dir.name, group);\n\t                group.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        NgForm.prototype.removeFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var container = _this._findContainer(dir.path);\n\t                if (container) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n\t        NgForm.prototype.updateModel = function (dir, value) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var ctrl = _this.form.get(dir.path);\n\t                ctrl.setValue(value);\n\t            });\n\t        };\n\t        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n\t        NgForm.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        NgForm.prototype.onReset = function () { this.resetForm(); };\n\t        NgForm.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /** @internal */\n\t        NgForm.prototype._findContainer = function (path) {\n\t            path.pop();\n\t            return path.length ? this.form.get(path) : this.form;\n\t        };\n\t        NgForm.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n\t                        providers: [formDirectiveProvider],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        outputs: ['ngSubmit'],\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgForm.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        return NgForm;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var Examples = {\n\t        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n\t        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n\t        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n\t        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n\t        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n\t    };\n\t\n\t    var TemplateDrivenErrors = (function () {\n\t        function TemplateDrivenErrors() {\n\t        }\n\t        TemplateDrivenErrors.modelParentException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n\t        };\n\t        TemplateDrivenErrors.formGroupNameException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        TemplateDrivenErrors.missingNameException = function () {\n\t            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n\t        };\n\t        TemplateDrivenErrors.modelGroupParentException = function () {\n\t            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        return TemplateDrivenErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var modelGroupProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n\t    };\n\t    /**\n\t     * @whatItDoes Creates and binds a {@link FormGroup} instance to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can only be used as a child of {@link NgForm} (or in other words,\n\t     * within `<form>` tags).\n\t     *\n\t     * Use this directive if you'd like to create a sub-group within a form. This can\n\t     * come in handy if you want to validate a sub-group of your form separately from\n\t     * the rest of your form, or if some values in your domain model make more sense to\n\t     * consume together in a nested object.\n\t     *\n\t     * Pass in the name you'd like this sub-group to have and it will become the key\n\t     * for the sub-group in the form's full value. You can also export the directive into\n\t     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n\t     *\n\t     * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `FormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var NgModelGroup = (function (_super) {\n\t        __extends$8(NgModelGroup, _super);\n\t        function NgModelGroup(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /** @internal */\n\t        NgModelGroup.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelGroupParentException();\n\t            }\n\t        };\n\t        NgModelGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModelGroup.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        NgModelGroup.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n\t        };\n\t        return NgModelGroup;\n\t    }(AbstractFormGroupDirective));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formControlBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n\t    };\n\t    /**\n\t     * `ngModel` forces an additional change detection run when its inputs change:\n\t     * E.g.:\n\t     * ```\n\t     * <div>{{myModel.valid}}</div>\n\t     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n\t     * ```\n\t     * I.e. `ngModel` can export itself on the element and then be used in the template.\n\t     * Normally, this would result in expressions before the `input` that use the exported directive\n\t     * to have and old value as they have been\n\t     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n\t     * detection run.\n\t     *\n\t     * Notes:\n\t     * - this is just one extra run no matter how many `ngModel` have been changed.\n\t     * - this is a general problem when using `exportAs` for directives!\n\t     */\n\t    var resolvedPromise$1 = Promise.resolve(null);\n\t    /**\n\t     * @whatItDoes Creates a {@link FormControl} instance from a domain model and binds it\n\t     * to a form control element.\n\t     *\n\t     * The {@link FormControl} instance will track the value, user interaction, and\n\t     * validation status of the control and keep the view synced with the model. If used\n\t     * within a parent form, the directive will also register itself with the form as a child\n\t     * control.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can be used by itself or as part of a larger form. All you need is the\n\t     * `ngModel` selector to activate it.\n\t     *\n\t     * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n\t     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n\t     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n\t     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n\t     * the domain model in your class as well.\n\t     *\n\t     * If you wish to inspect the properties of the associated {@link FormControl} (like\n\t     * validity state), you can also export the directive into a local template variable using\n\t     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n\t     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n\t     * will fall through to the control anyway, so you can access them directly. You can see a\n\t     * full list of properties directly available in {@link AbstractControlDirective}.\n\t     *\n\t     * The following is an example of a simple standalone control using `ngModel`:\n\t     *\n\t     * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n\t     *\n\t     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n\t     * so that the control can be registered with the parent form under that name.\n\t     *\n\t     * It's worth noting that in the context of a parent form, you often can skip one-way or\n\t     * two-way binding because the parent form will sync the value for you. You can access\n\t     * its properties by exporting it into a local template variable using `ngForm` (ex:\n\t     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n\t     *\n\t     * If you do need to populate initial values into your form, using a one-way binding for\n\t     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n\t     * than the domain model's value on submit.\n\t     *\n\t     * Take a look at an example of using `ngModel` within a form:\n\t     *\n\t     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t     *\n\t     * To see `ngModel` examples with different form control types, see:\n\t     *\n\t     * * Radio buttons: {@link RadioControlValueAccessor}\n\t     * * Selects: {@link SelectControlValueAccessor}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: `FormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var NgModel = (function (_super) {\n\t        __extends$7(NgModel, _super);\n\t        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            /** @internal */\n\t            this._control = new FormControl();\n\t            /** @internal */\n\t            this._registered = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        NgModel.prototype.ngOnChanges = function (changes) {\n\t            this._checkForErrors();\n\t            if (!this._registered)\n\t                this._setUpControl();\n\t            if ('isDisabled' in changes) {\n\t                this._updateDisabled(changes);\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this._updateValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n\t        Object.defineProperty(NgModel.prototype, \"control\", {\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"path\", {\n\t            get: function () {\n\t                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModel.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        NgModel.prototype._setUpControl = function () {\n\t            this._isStandalone() ? this._setUpStandalone() :\n\t                this.formDirective.addControl(this);\n\t            this._registered = true;\n\t        };\n\t        NgModel.prototype._isStandalone = function () {\n\t            return !this._parent || (this.options && this.options.standalone);\n\t        };\n\t        NgModel.prototype._setUpStandalone = function () {\n\t            setUpControl(this._control, this);\n\t            this._control.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        NgModel.prototype._checkForErrors = function () {\n\t            if (!this._isStandalone()) {\n\t                this._checkParentType();\n\t            }\n\t            this._checkName();\n\t        };\n\t        NgModel.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                TemplateDrivenErrors.formGroupNameException();\n\t            }\n\t            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelParentException();\n\t            }\n\t        };\n\t        NgModel.prototype._checkName = function () {\n\t            if (this.options && this.options.name)\n\t                this.name = this.options.name;\n\t            if (!this._isStandalone() && !this.name) {\n\t                TemplateDrivenErrors.missingNameException();\n\t            }\n\t        };\n\t        NgModel.prototype._updateValue = function (value) {\n\t            var _this = this;\n\t            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n\t        };\n\t        NgModel.prototype._updateDisabled = function (changes) {\n\t            var _this = this;\n\t            var disabledValue = changes['isDisabled'].currentValue;\n\t            var isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n\t            resolvedPromise$1.then(function () {\n\t                if (isDisabled && !_this.control.disabled) {\n\t                    _this.control.disable();\n\t                }\n\t                else if (!isDisabled && _this.control.disabled) {\n\t                    _this.control.enable();\n\t                }\n\t            });\n\t        };\n\t        NgModel.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n\t                        providers: [formControlBinding],\n\t                        exportAs: 'ngModel'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModel.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        NgModel.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t        };\n\t        return NgModel;\n\t    }(NgControl));\n\t\n\t    var ReactiveErrors = (function () {\n\t        function ReactiveErrors() {\n\t        }\n\t        ReactiveErrors.controlParentException = function () {\n\t            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n\t        };\n\t        ReactiveErrors.ngModelGroupException = function () {\n\t            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n\t        };\n\t        ReactiveErrors.missingFormException = function () {\n\t            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n\t        };\n\t        ReactiveErrors.groupParentException = function () {\n\t            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n\t        };\n\t        ReactiveErrors.arrayParentException = function () {\n\t            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n\t        };\n\t        ReactiveErrors.disabledAttrWarning = function () {\n\t            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n\t        };\n\t        return ReactiveErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formControlBinding$1 = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a standalone {@link FormControl} instance to a form control element.\n\t     *\n\t     * In other words, this directive ensures that any values written to the {@link FormControl}\n\t     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t     * any values written to the DOM element through user input will be reflected in the\n\t     * {@link FormControl} instance (view -> model).\n\t     *\n\t     * @howToUse\n\t     *\n\t     * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n\t     * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n\t     * {@link FormControlDirective}.\n\t     *\n\t     * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n\t     * it does not require that your {@link FormControl} instance be part of any parent\n\t     * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n\t     * exists above it.\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormControl} instance. See a full list of available properties in\n\t     * {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n\t     * or you can set it programmatically later using {@link AbstractControl.setValue} or\n\t     * {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormControlDirective = (function (_super) {\n\t        __extends$9(FormControlDirective, _super);\n\t        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this.update = new EventEmitter();\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlDirective.prototype.ngOnChanges = function (changes) {\n\t            if (this._isControlChanged(changes)) {\n\t                setUpControl(this.form, this);\n\t                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                    this.valueAccessor.setDisabledState(true);\n\t                }\n\t                this.form.updateValueAndValidity({ emitEvent: false });\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.form.setValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        FormControlDirective.prototype._isControlChanged = function (changes) {\n\t            return changes.hasOwnProperty('form');\n\t        };\n\t        FormControlDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlDirective.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        FormControlDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlDirective;\n\t    }(NgControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formDirectiveProvider$1 = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n\t    };\n\t    /**\n\t     * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive accepts an existing {@link FormGroup} instance. It will then use this\n\t     * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n\t     * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n\t     * and {@link FormArrayName} directives.\n\t     *\n\t     * **Set value**: You can set the form's initial value when instantiating the\n\t     * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n\t     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n\t     * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n\t     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t     * submission event.\n\t     *\n\t     * ### Example\n\t     *\n\t     * In this example, we create form controls for first name and last name.\n\t     *\n\t     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormGroupDirective = (function (_super) {\n\t        __extends$11(FormGroupDirective, _super);\n\t        function FormGroupDirective(_validators, _asyncValidators) {\n\t            _super.call(this);\n\t            this._validators = _validators;\n\t            this._asyncValidators = _asyncValidators;\n\t            this._submitted = false;\n\t            this.directives = [];\n\t            this.form = null;\n\t            this.ngSubmit = new EventEmitter();\n\t        }\n\t        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n\t            this._checkFormPresent();\n\t            if (changes.hasOwnProperty('form')) {\n\t                this._updateValidators();\n\t                this._updateDomValue();\n\t                this._updateRegistrations();\n\t            }\n\t        };\n\t        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormGroupDirective.prototype.addControl = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpControl(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t            this.directives.push(dir);\n\t            return ctrl;\n\t        };\n\t        FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n\t        FormGroupDirective.prototype.addFormGroup = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n\t        FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.addFormArray = function (dir) {\n\t            var ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n\t        FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n\t        FormGroupDirective.prototype.updateModel = function (dir, value) {\n\t            var ctrl = this.form.get(dir.path);\n\t            ctrl.setValue(value);\n\t        };\n\t        FormGroupDirective.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n\t        FormGroupDirective.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /** @internal */\n\t        FormGroupDirective.prototype._updateDomValue = function () {\n\t            var _this = this;\n\t            this.directives.forEach(function (dir) {\n\t                var newCtrl = _this.form.get(dir.path);\n\t                if (dir._control !== newCtrl) {\n\t                    cleanUpControl(dir._control, dir);\n\t                    if (newCtrl)\n\t                        setUpControl(newCtrl, dir);\n\t                    dir._control = newCtrl;\n\t                }\n\t            });\n\t            this.form._updateTreeValidity({ emitEvent: false });\n\t        };\n\t        FormGroupDirective.prototype._updateRegistrations = function () {\n\t            var _this = this;\n\t            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n\t            if (this._oldForm)\n\t                this._oldForm._registerOnCollectionChange(function () { });\n\t            this._oldForm = this.form;\n\t        };\n\t        FormGroupDirective.prototype._updateValidators = function () {\n\t            var sync = composeValidators(this._validators);\n\t            this.form.validator = Validators.compose([this.form.validator, sync]);\n\t            var async = composeAsyncValidators(this._asyncValidators);\n\t            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n\t        };\n\t        FormGroupDirective.prototype._checkFormPresent = function () {\n\t            if (!this.form) {\n\t                ReactiveErrors.missingFormException();\n\t            }\n\t        };\n\t        FormGroupDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroup]',\n\t                        providers: [formDirectiveProvider$1],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupDirective.ctorParameters = [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormGroupDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n\t            'ngSubmit': [{ type: _angular_core.Output },],\n\t        };\n\t        return FormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var formGroupNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a nested {@link FormGroup} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the nested {@link FormGroup} you want to link, and\n\t     * will look for a {@link FormGroup} registered with that name in the parent\n\t     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n\t     *\n\t     * Nested form groups can come in handy when you want to validate a sub-group of a\n\t     * form separately from the rest or when you'd like to group the values of certain\n\t     * controls into their own nested object.\n\t     *\n\t     * **Access the group**: You can access the associated {@link FormGroup} using the\n\t     * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n\t     *\n\t     * You can also access individual controls within the group using dot syntax.\n\t     * Ex: `this.form.get('name.first')`\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can set an initial value for each child control when instantiating\n\t     * the {@link FormGroup}, or you can set it programmatically later using\n\t     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormGroupName = (function (_super) {\n\t        __extends$12(FormGroupName, _super);\n\t        function FormGroupName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /** @internal */\n\t        FormGroupName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.groupParentException();\n\t            }\n\t        };\n\t        FormGroupName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormGroupName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n\t        };\n\t        return FormGroupName;\n\t    }(AbstractFormGroupDirective));\n\t    var formArrayNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n\t    };\n\t    /**\n\t     * @whatItDoes Syncs a nested {@link FormArray} to a DOM element.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the nested {@link FormArray} you want to link, and\n\t     * will look for a {@link FormArray} registered with that name in the parent\n\t     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n\t     *\n\t     * Nested form arrays can come in handy when you have a group of form controls but\n\t     * you're not sure how many there will be. Form arrays allow you to create new\n\t     * form controls dynamically.\n\t     *\n\t     * **Access the array**: You can access the associated {@link FormArray} using the\n\t     * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n\t     * Ex: `this.form.get('cities')`.\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can set an initial value for each child control when instantiating\n\t     * the {@link FormArray}, or you can set the value programmatically later using the\n\t     * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n\t     * methods.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n\t     * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n\t     * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n\t     * status is re-calculated.\n\t     *\n\t     * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n\t     * calling its {@link FormArray.push} method.\n\t     *  Ex: `this.form.get('cities').push(new FormControl());`\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     * @stable\n\t     */\n\t    var FormArrayName = (function (_super) {\n\t        __extends$12(FormArrayName, _super);\n\t        function FormArrayName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        FormArrayName.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormArray(this);\n\t        };\n\t        FormArrayName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormArray(this);\n\t            }\n\t        };\n\t        Object.defineProperty(FormArrayName.prototype, \"control\", {\n\t            get: function () { return this.formDirective.getFormArray(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n\t            get: function () {\n\t                return this._parent ? this._parent.formDirective : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"path\", {\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormArrayName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.arrayParentException();\n\t            }\n\t        };\n\t        FormArrayName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormArrayName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ];\n\t        FormArrayName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n\t        };\n\t        return FormArrayName;\n\t    }(ControlContainer));\n\t    function _hasInvalidParent(parent) {\n\t        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n\t            !(parent instanceof FormArrayName);\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var controlNameBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n\t    };\n\t    /**\n\t     * @whatItDoes  Syncs a {@link FormControl} in an existing {@link FormGroup} to a form control\n\t     * element by name.\n\t     *\n\t     * In other words, this directive ensures that any values written to the {@link FormControl}\n\t     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t     * any values written to the DOM element through user input will be reflected in the\n\t     * {@link FormControl} instance (view -> model).\n\t     *\n\t     * @howToUse\n\t     *\n\t     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the {@link FormControl} instance you want to\n\t     * link, and will look for a {@link FormControl} registered with that name in the\n\t     * closest {@link FormGroup} or {@link FormArray} above it.\n\t     *\n\t     * **Access the control**: You can access the {@link FormControl} associated with\n\t     * this directive by using the {@link AbstractControl.get} method.\n\t     * Ex: `this.form.get('first');`\n\t     *\n\t     * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n\t     * See a full list of available properties in {@link AbstractControl}.\n\t     *\n\t     *  **Set value**: You can set an initial value for the control when instantiating the\n\t     *  {@link FormControl}, or you can set it programmatically later using\n\t     *  {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * In this example, we create form controls for first name and last name.\n\t     *\n\t     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t     *\n\t     * To see `formControlName` examples with different form control types, see:\n\t     *\n\t     * * Radio buttons: {@link RadioControlValueAccessor}\n\t     * * Selects: {@link SelectControlValueAccessor}\n\t     *\n\t     * **npm package**: `@angular/forms`\n\t     *\n\t     * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     *  @stable\n\t     */\n\t    var FormControlName = (function (_super) {\n\t        __extends$10(FormControlName, _super);\n\t        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this._added = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlName.prototype.ngOnChanges = function (changes) {\n\t            if (!this._added)\n\t                this._setUpControl();\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.viewModel = this.model;\n\t                this.formDirective.updateModel(this, this.model);\n\t            }\n\t        };\n\t        FormControlName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeControl(this);\n\t            }\n\t        };\n\t        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        Object.defineProperty(FormControlName.prototype, \"path\", {\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"validator\", {\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"control\", {\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        FormControlName.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof FormGroupName) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                ReactiveErrors.ngModelGroupException();\n\t            }\n\t            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n\t                !(this._parent instanceof FormArrayName)) {\n\t                ReactiveErrors.controlParentException();\n\t            }\n\t        };\n\t        FormControlName.prototype._setUpControl = function () {\n\t            this._checkParentType();\n\t            this._control = this.formDirective.addControl(this);\n\t            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                this.valueAccessor.setDisabledState(true);\n\t            }\n\t            this._added = true;\n\t        };\n\t        FormControlName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlName.ctorParameters = [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ];\n\t        FormControlName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlName;\n\t    }(NgControl));\n\t\n\t    var REQUIRED_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A Directive that adds the `required` validator to any controls marked with the\n\t     * `required` attribute, via the {@link NG_VALIDATORS} binding.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input name=\"fullName\" ngModel required>\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var RequiredValidator = (function () {\n\t        function RequiredValidator() {\n\t        }\n\t        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n\t            get: function () { return this._required; },\n\t            set: function (value) {\n\t                this._required = value != null && value !== false && \"\" + value !== 'false';\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        RequiredValidator.prototype.validate = function (c) {\n\t            return this.required ? Validators.required(c) : null;\n\t        };\n\t        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        RequiredValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n\t                        providers: [REQUIRED_VALIDATOR],\n\t                        host: { '[attr.required]': 'required ? \"\" : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RequiredValidator.ctorParameters = [];\n\t        RequiredValidator.propDecorators = {\n\t            'required': [{ type: _angular_core.Input },],\n\t        };\n\t        return RequiredValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='min'}\n\t     */\n\t    var MIN_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n\t     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n\t     *\n\t     * @stable\n\t     */\n\t    var MinLengthValidator = (function () {\n\t        function MinLengthValidator() {\n\t        }\n\t        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('minlength' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        MinLengthValidator.prototype.validate = function (c) {\n\t            return this.minlength == null ? null : this._validator(c);\n\t        };\n\t        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        MinLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n\t        };\n\t        MinLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n\t                        providers: [MIN_LENGTH_VALIDATOR],\n\t                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MinLengthValidator.ctorParameters = [];\n\t        MinLengthValidator.propDecorators = {\n\t            'minlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MinLengthValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='max'}\n\t     */\n\t    var MAX_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n\t     * `formControl`,\n\t     * or control with `ngModel` that also has a `maxlength` attribute.\n\t     *\n\t     * @stable\n\t     */\n\t    var MaxLengthValidator = (function () {\n\t        function MaxLengthValidator() {\n\t        }\n\t        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('maxlength' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        MaxLengthValidator.prototype.validate = function (c) {\n\t            return this.maxlength != null ? this._validator(c) : null;\n\t        };\n\t        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        MaxLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n\t        };\n\t        MaxLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n\t                        providers: [MAX_LENGTH_VALIDATOR],\n\t                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MaxLengthValidator.ctorParameters = [];\n\t        MaxLengthValidator.propDecorators = {\n\t            'maxlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MaxLengthValidator;\n\t    }());\n\t    var PATTERN_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A Directive that adds the `pattern` validator to any controls marked with the\n\t     * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n\t     * as the regex to validate Control value against.  Follows pattern attribute\n\t     * semantics; i.e. regex must match entire Control value.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n\t     * ```\n\t     * @stable\n\t     */\n\t    var PatternValidator = (function () {\n\t        function PatternValidator() {\n\t        }\n\t        PatternValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('pattern' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n\t        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n\t        PatternValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n\t                        providers: [PATTERN_VALIDATOR],\n\t                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PatternValidator.ctorParameters = [];\n\t        PatternValidator.propDecorators = {\n\t            'pattern': [{ type: _angular_core.Input },],\n\t        };\n\t        return PatternValidator;\n\t    }());\n\t\n\t    /**\n\t     * @whatItDoes Creates an {@link AbstractControl} from a user-specified configuration.\n\t     *\n\t     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n\t     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n\t     * forms.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * To use, inject `FormBuilder` into your component class. You can then call its methods\n\t     * directly.\n\t     *\n\t     * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n\t     *\n\t     *  * **npm package**: `@angular/forms`\n\t     *\n\t     *  * **NgModule**: {@link ReactiveFormsModule}\n\t     *\n\t     * @stable\n\t     */\n\t    var FormBuilder = (function () {\n\t        function FormBuilder() {\n\t        }\n\t        /**\n\t         * Construct a new {@link FormGroup} with the given map of configuration.\n\t         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n\t         *\n\t         * See the {@link FormGroup} constructor for more details.\n\t         */\n\t        FormBuilder.prototype.group = function (controlsConfig, extra) {\n\t            if (extra === void 0) { extra = null; }\n\t            var controls = this._reduceControls(controlsConfig);\n\t            var validator = isPresent(extra) ? extra['validator'] : null;\n\t            var asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n\t            return new FormGroup(controls, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n\t         * `asyncValidator`.\n\t         *\n\t         * `formState` can either be a standalone value for the form control or an object\n\t         * that contains both a value and a disabled status.\n\t         *\n\t         */\n\t        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            return new FormControl(formState, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * Construct a {@link FormArray} from the given `controlsConfig` array of\n\t         * configuration, with the given optional `validator` and `asyncValidator`.\n\t         */\n\t        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n\t            var _this = this;\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n\t            return new FormArray(controls, validator, asyncValidator);\n\t        };\n\t        /** @internal */\n\t        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n\t            var _this = this;\n\t            var controls = {};\n\t            Object.keys(controlsConfig).forEach(function (controlName) {\n\t                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n\t            });\n\t            return controls;\n\t        };\n\t        /** @internal */\n\t        FormBuilder.prototype._createControl = function (controlConfig) {\n\t            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n\t                controlConfig instanceof FormArray) {\n\t                return controlConfig;\n\t            }\n\t            else if (Array.isArray(controlConfig)) {\n\t                var value = controlConfig[0];\n\t                var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n\t                var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n\t                return this.control(value, validator, asyncValidator);\n\t            }\n\t            else {\n\t                return this.control(controlConfig);\n\t            }\n\t        };\n\t        FormBuilder.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        FormBuilder.ctorParameters = [];\n\t        return FormBuilder;\n\t    }());\n\t\n\t    var SHARED_FORM_DIRECTIVES = [\n\t        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n\t        RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus,\n\t        NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator\n\t    ];\n\t    var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n\t    var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n\t    /**\n\t     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n\t     */\n\t    var InternalFormsSharedModule = (function () {\n\t        function InternalFormsSharedModule() {\n\t        }\n\t        InternalFormsSharedModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: SHARED_FORM_DIRECTIVES,\n\t                        exports: SHARED_FORM_DIRECTIVES,\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        InternalFormsSharedModule.ctorParameters = [];\n\t        return InternalFormsSharedModule;\n\t    }());\n\t\n\t    /**\n\t     * The ng module for forms.\n\t     * @stable\n\t     */\n\t    var FormsModule = (function () {\n\t        function FormsModule() {\n\t        }\n\t        FormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n\t                        providers: [RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormsModule.ctorParameters = [];\n\t        return FormsModule;\n\t    }());\n\t    /**\n\t     * The ng module for reactive forms.\n\t     * @stable\n\t     */\n\t    var ReactiveFormsModule = (function () {\n\t        function ReactiveFormsModule() {\n\t        }\n\t        ReactiveFormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n\t                        providers: [FormBuilder, RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ReactiveFormsModule.ctorParameters = [];\n\t        return ReactiveFormsModule;\n\t    }());\n\t\n\t    exports.AbstractControlDirective = AbstractControlDirective;\n\t    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n\t    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n\t    exports.ControlContainer = ControlContainer;\n\t    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n\t    exports.DefaultValueAccessor = DefaultValueAccessor;\n\t    exports.NgControl = NgControl;\n\t    exports.NgControlStatus = NgControlStatus;\n\t    exports.NgControlStatusGroup = NgControlStatusGroup;\n\t    exports.NgForm = NgForm;\n\t    exports.NgModel = NgModel;\n\t    exports.NgModelGroup = NgModelGroup;\n\t    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n\t    exports.FormControlDirective = FormControlDirective;\n\t    exports.FormControlName = FormControlName;\n\t    exports.FormGroupDirective = FormGroupDirective;\n\t    exports.FormArrayName = FormArrayName;\n\t    exports.FormGroupName = FormGroupName;\n\t    exports.NgSelectOption = NgSelectOption;\n\t    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n\t    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n\t    exports.MaxLengthValidator = MaxLengthValidator;\n\t    exports.MinLengthValidator = MinLengthValidator;\n\t    exports.PatternValidator = PatternValidator;\n\t    exports.RequiredValidator = RequiredValidator;\n\t    exports.FormBuilder = FormBuilder;\n\t    exports.AbstractControl = AbstractControl;\n\t    exports.FormArray = FormArray;\n\t    exports.FormControl = FormControl;\n\t    exports.FormGroup = FormGroup;\n\t    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n\t    exports.NG_VALIDATORS = NG_VALIDATORS;\n\t    exports.Validators = Validators;\n\t    exports.FormsModule = FormsModule;\n\t    exports.ReactiveFormsModule = ReactiveFormsModule;\n\t\n\t}));\n\n/***/ },\n\n/***/ 59:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"/*--- Login content ---*/\\n.contentWrapper{\\n    display: block;\\n    margin: auto;\\n    width: 60%;\\n}\\nh2{\\n    display: block;\\n    color: #ffffff;\\n    font-size: 5rem;\\n    font-weight: lighter;\\n    text-align: center;\\n}\\n\\n/*Input fields*/\\n.innerForm{\\n    display: block;\\n    width: 60%;\\n    margin: auto;\\n}\\n#username, #password, #confirmpass{\\n    color: #262626;\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n    background-color: #ffffff;\\n    width: 100%;\\n    height: 4rem;\\n    margin-right: 150rem;\\n    margin-bottom: 1rem;\\n    padding-left: 1rem;\\n}\\n::-webkit-input-placeholder { /* WebKit, Blink, Edge */\\n    color:    #262626;\\n    text-transform: uppercase;\\n    font-family: 'Roboto', sans-serif;\\n}\\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\\n    color:    #262626;\\n    opacity:  1;\\n    text-transform: uppercase;\\n    font-family: 'Roboto', sans-serif;\\n}\\n::-moz-placeholder { /* Mozilla Firefox 19+ */\\n    color:    #262626;\\n    opacity:  1;\\n    text-transform: uppercase;\\n    font-family: 'Roboto', sans-serif;\\n}\\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\\n    color:    #262626;\\n    text-transform: uppercase;\\n    font-family: 'Roboto', sans-serif;\\n}\\n\\n/* Register link */\\n.register, .loginLink{\\n    display: block;\\n    width: 100%;\\n    margin: 0 auto;\\n    text-align: center;\\n    text-decoration: none;\\n    color: #ffffff;\\n    font-size: 1.5rem;\\n    font-weight: lighter;\\n}\\n\\n.register span, .loginLink span{\\n    color: #1565c0;\\n}\\n\\n/* Button */\\n.loginBtn{\\n    font-size: 3rem;\\n    border: none;\\n    color: #fff;\\n    margin-top: 1.25rem;\\n    line-height: normal;\\n    background-color: #1565c0;\\n    width: 30.4rem;\\n    height:4rem;\\n    margin-bottom: 5rem;\\n}\\n\"\n\n/***/ },\n\n/***/ 98:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar score_service_1 = __webpack_require__(106);\n\tvar user_service_1 = __webpack_require__(21);\n\tvar loading_indicator_1 = __webpack_require__(19);\n\tvar router_1 = __webpack_require__(17);\n\tvar DashboardComponent = (function (_super) {\n\t    __extends(DashboardComponent, _super);\n\t    function DashboardComponent(scoreService, userService, router) {\n\t        _super.call(this, true);\n\t        this.scoreService = scoreService;\n\t        this.userService = userService;\n\t        this.router = router;\n\t        this.labels = [];\n\t        this.ChartType = 'line';\n\t        this.ChartLegend = true;\n\t        this.username = localStorage.getItem('username');\n\t        this.ready();\n\t    }\n\t    DashboardComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.graphdata = [];\n\t        this.items = [];\n\t        console.log(this.userService.isLoggedIn());\n\t        this.standby();\n\t        this.scoreService.getScores().subscribe(function (data) {\n\t            console.log('executing');\n\t            _this.processData(data);\n\t            console.log(_this.graphdata);\n\t            _this.ready();\n\t        }, function (error) { return _this.error = error; });\n\t    };\n\t    DashboardComponent.prototype.startNew = function () {\n\t        this.router.navigate(['Exercise']);\n\t    };\n\t    DashboardComponent.prototype.processData = function (data) {\n\t        var _this = this;\n\t        var max = 0;\n\t        data.map(function (i) {\n\t            console.log(i);\n\t            var data;\n\t            data = [];\n\t            var item;\n\t            item = {};\n\t            item.title = i.translations;\n\t            item.completed = 0;\n\t            var total = 0;\n\t            var totalscore = 0;\n\t            //needed for labals\n\t            if (i.tests.length > max)\n\t                max = i.tests.length;\n\t            //process testdata + calculate avg\n\t            i.tests.map(function (test) {\n\t                console.log('processing data');\n\t                item.completed++;\n\t                total += test.max;\n\t                totalscore += test.score;\n\t                data.push(test.score);\n\t            });\n\t            item.avarage = Math.round((totalscore / total) * 1000) / 100;\n\t            _this.graphdata.push({ data: data, label: item.title });\n\t            _this.items.push(item);\n\t        });\n\t        //fill labels array\n\t        while (this.labels.length < max)\n\t            this.labels.push(this.labels.length);\n\t    };\n\t    DashboardComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'dashboard',\n\t            template: __webpack_require__(122),\n\t            styles: [__webpack_require__(30), __webpack_require__(118)]\n\t        }), \n\t        __metadata('design:paramtypes', [score_service_1.ScoreService, user_service_1.UserService, router_1.Router])\n\t    ], DashboardComponent);\n\t    return DashboardComponent;\n\t}(loading_indicator_1.LoadingPage));\n\texports.DashboardComponent = DashboardComponent;\n\n\n/***/ },\n\n/***/ 99:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// exercise.component.ts\n\tvar core_1 = __webpack_require__(5);\n\tvar router_1 = __webpack_require__(17);\n\tvar entry_service_1 = __webpack_require__(104);\n\tvar loading_indicator_1 = __webpack_require__(19);\n\tvar ExerciseComponent = (function (_super) {\n\t    __extends(ExerciseComponent, _super);\n\t    function ExerciseComponent(entryService, router) {\n\t        _super.call(this, true);\n\t        this.entryService = entryService;\n\t        this.router = router;\n\t        this.languages = [\"NL-EN\", \"EN-NL\"];\n\t        this.lenght = 10;\n\t        this.count = 0;\n\t        this.i = 0;\n\t        this.ready();\n\t    }\n\t    ;\n\t    ExerciseComponent.prototype.ngOnInit = function () {\n\t        console.log('initializing..');\n\t        this.setup = true;\n\t        this.score = -1;\n\t    };\n\t    ExerciseComponent.prototype.startExercise = function (amount, language) {\n\t        this.standby();\n\t        this.curlangs = language.selected;\n\t        this.setup = false;\n\t        this.entries = this.getEntries(amount.value);\n\t    };\n\t    ExerciseComponent.prototype.getEntries = function (amount) {\n\t        var _this = this;\n\t        this.entryService.getEntries(amount)\n\t            .subscribe(function (entries) {\n\t            entries.forEach(function (entry) { return entry.translation = \"\"; });\n\t            _this.entries = entries;\n\t            _this.curEntry = entries[0];\n\t            _this.ready();\n\t            console.log(\"got the entries\");\n\t        }, function (error) { return _this.error = error; });\n\t    };\n\t    ExerciseComponent.prototype.next = function (answer) {\n\t        console.log(answer);\n\t        this.count++;\n\t        if (this.entries[this.count]) {\n\t            this.entries[this.count - 1].translation = answer;\n\t            this.curEntry = this.entries[this.count];\n\t        }\n\t        else {\n\t            console.log('test completed');\n\t            this.getScore();\n\t        }\n\t    };\n\t    ExerciseComponent.prototype.getScore = function () {\n\t        var _this = this;\n\t        this.standby();\n\t        console.log(\"end of test\");\n\t        console.log(this.entries);\n\t        this.entryService.getScore(this.entries).subscribe(function (res) {\n\t            _this.score = res.score;\n\t            _this.ready();\n\t            console.log(res.score);\n\t        }, function (error) { return _this.error = error; });\n\t        this.curEntry = null;\n\t    };\n\t    ExerciseComponent.prototype.startNewTest = function () {\n\t        this.score = -1;\n\t        this.count = 0;\n\t        this.setup = true;\n\t    };\n\t    ExerciseComponent.prototype.goBack = function () {\n\t        this.router.navigate(['Dashboard']);\n\t    };\n\t    ExerciseComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'exercise',\n\t            template: __webpack_require__(123),\n\t            styles: [__webpack_require__(119)],\n\t            directives: [loading_indicator_1.LoadingIndicator]\n\t        }), \n\t        __metadata('design:paramtypes', [entry_service_1.EntryService, router_1.Router])\n\t    ], ExerciseComponent);\n\t    return ExerciseComponent;\n\t}(loading_indicator_1.LoadingPage));\n\texports.ExerciseComponent = ExerciseComponent;\n\n\n/***/ },\n\n/***/ 100:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar forms_1 = __webpack_require__(58);\n\tvar core_1 = __webpack_require__(5);\n\tvar search_service_1 = __webpack_require__(107);\n\tvar LiveSearch = (function () {\n\t    function LiveSearch(searchService) {\n\t        this.searchService = searchService;\n\t        this.term = new forms_1.FormControl();\n\t        this.selectEvent = new core_1.EventEmitter();\n\t    }\n\t    LiveSearch.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.term.valueChanges\n\t            .debounceTime(400)\n\t            .subscribe(function (term) { return _this.searchService.search(term).subscribe(function (items) { return _this.items = items; }); });\n\t    };\n\t    LiveSearch.prototype.search = function (term) {\n\t        var _this = this;\n\t        this.term.valueChanges\n\t            .debounceTime(400)\n\t            .subscribe(function (term) { return _this.searchService.search(term).subscribe(function (items) { return _this.items = items; }); });\n\t    };\n\t    LiveSearch.prototype.select = function (student) {\n\t        this.term = student.name;\n\t        this.selectEvent.emit(student);\n\t    };\n\t    LiveSearch = __decorate([\n\t        core_1.Component({\n\t            selector: 'livesearch',\n\t            template: __webpack_require__(114),\n\t            styles: [__webpack_require__(113)]\n\t        }), \n\t        __metadata('design:paramtypes', [search_service_1.SearchService])\n\t    ], LiveSearch);\n\t    return LiveSearch;\n\t}());\n\texports.LiveSearch = LiveSearch;\n\n\n/***/ },\n\n/***/ 101:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// login.component.ts\n\tvar core_1 = __webpack_require__(5);\n\tvar router_1 = __webpack_require__(17);\n\t//services\n\tvar user_service_1 = __webpack_require__(21);\n\t//loading-indicator\n\tvar loading_indicator_1 = __webpack_require__(19);\n\t//globaleventmanager for navbar\n\tvar GlobalEventsManager_1 = __webpack_require__(40);\n\tvar LoginComponent = (function (_super) {\n\t    __extends(LoginComponent, _super);\n\t    function LoginComponent(userService, router, eventEmitter) {\n\t        _super.call(this, true);\n\t        this.userService = userService;\n\t        this.router = router;\n\t        this.eventEmitter = eventEmitter;\n\t        this.LoggedIn = this.userService.isLoggedIn();\n\t        this.ready();\n\t    }\n\t    LoginComponent.prototype.ngOnInit = function () {\n\t        if (this.LoggedIn) {\n\t            this.eventEmitter.showNavBar.emit(true);\n\t            this.router.navigate(['Dashboard']);\n\t        }\n\t        ;\n\t    };\n\t    LoginComponent.prototype.onSubmit = function (event, email, password) {\n\t        var _this = this;\n\t        this.standby();\n\t        event.preventDefault();\n\t        console.log(\"submitting\");\n\t        this.userService.login(email, password).subscribe(function (result) {\n\t            if (result) {\n\t                _this.eventEmitter.showNavBar.emit(true);\n\t                _this.router.navigate(['Dashboard']);\n\t            }\n\t        });\n\t    };\n\t    LoginComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'login',\n\t            template: __webpack_require__(124),\n\t            styles: [__webpack_require__(59)],\n\t            directives: [loading_indicator_1.LoadingIndicator]\n\t        }), \n\t        __metadata('design:paramtypes', [user_service_1.UserService, router_1.Router, GlobalEventsManager_1.GlobalEventsManager])\n\t    ], LoginComponent);\n\t    return LoginComponent;\n\t}(loading_indicator_1.LoadingPage));\n\texports.LoginComponent = LoginComponent;\n\n\n/***/ },\n\n/***/ 102:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// login.component.ts\n\tvar core_1 = __webpack_require__(5);\n\tvar router_1 = __webpack_require__(17);\n\t//services\n\tvar user_service_1 = __webpack_require__(21);\n\t//loading-indicator\n\tvar loading_indicator_1 = __webpack_require__(19);\n\tvar RegisterComponent = (function (_super) {\n\t    __extends(RegisterComponent, _super);\n\t    function RegisterComponent(userService, router) {\n\t        _super.call(this, true);\n\t        this.userService = userService;\n\t        this.router = router;\n\t        this.userStatus = new core_1.EventEmitter();\n\t        this.ready();\n\t    }\n\t    RegisterComponent.prototype.ngOnInit = function () {\n\t        this.userStatus.emit(false);\n\t    };\n\t    RegisterComponent.prototype.onSubmit = function (event, email, password, confirmpass) {\n\t        var _this = this;\n\t        this.standby();\n\t        event.preventDefault();\n\t        console.log(\"submitting\");\n\t        this.userService.register(email, password, confirmpass).subscribe(function (result) {\n\t            if (result) {\n\t                _this.router.navigate(['Exercise']);\n\t            }\n\t            else {\n\t            }\n\t        });\n\t    };\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], RegisterComponent.prototype, \"userStatus\", void 0);\n\t    RegisterComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'register',\n\t            template: __webpack_require__(126),\n\t            styles: [__webpack_require__(59)],\n\t            directives: [loading_indicator_1.LoadingIndicator]\n\t        }), \n\t        __metadata('design:paramtypes', [user_service_1.UserService, router_1.Router])\n\t    ], RegisterComponent);\n\t    return RegisterComponent;\n\t}(loading_indicator_1.LoadingPage));\n\texports.RegisterComponent = RegisterComponent;\n\n\n/***/ },\n\n/***/ 103:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// user.service.ts\n\tvar core_1 = __webpack_require__(5);\n\tvar http_1 = __webpack_require__(16);\n\tvar cookie_service_1 = __webpack_require__(20);\n\tvar extract_service_1 = __webpack_require__(29);\n\tvar ClassService = (function () {\n\t    function ClassService(http, cookieService, extractService) {\n\t        this.http = http;\n\t        this.cookieService = cookieService;\n\t        this.extractService = extractService;\n\t    }\n\t    ClassService.prototype.createClass = function (name) {\n\t        console.log(name);\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        //options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        console.log(options);\n\t        return this.http\n\t            .post('https://teammartini.herokuapp.com/Group/SaveGroup', JSON.stringify({ name: name }), options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    ClassService.prototype.addStudent = function (students, id) {\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        params.append('students', students);\n\t        params.append('groupid', id);\n\t        //options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        return this.http\n\t            .post('http://teammartini.herokuapp.com/Group/Addstudents', options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    ClassService.prototype.getClasses = function () {\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        //options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        return this.http\n\t            .get('http://teammartini.herokuapp.com/GetGroups', options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    ClassService.prototype.getTests = function (id) {\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        params.append('groupid', id);\n\t        //options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        return this.http\n\t            .get('http://teammartini.herokuapp.com/Group/GetTests', options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    ClassService.prototype.checkifTeacher = function () {\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        //options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        return this.http\n\t            .get('http://teammartini.herokuapp.com/IsTeacher', options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    ClassService.prototype.getStudents = function (id) {\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        params.append('groupid', id);\n\t        //options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        return this.http\n\t            .get('http://teammartini.herokuapp.com/Group/GetStudents', options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    ClassService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http, cookie_service_1.CookieService, extract_service_1.ExtractService])\n\t    ], ClassService);\n\t    return ClassService;\n\t}());\n\texports.ClassService = ClassService;\n\n\n/***/ },\n\n/***/ 104:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar http_1 = __webpack_require__(16);\n\tvar cookie_service_1 = __webpack_require__(20);\n\tvar extract_service_1 = __webpack_require__(29);\n\tvar EntryService = (function () {\n\t    function EntryService(http, cookieService, extractService) {\n\t        this.http = http;\n\t        this.cookieService = cookieService;\n\t        this.extractService = extractService;\n\t    }\n\t    EntryService.prototype.getEntries = function (count) {\n\t        //create auth header\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('amount', count);\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        //create options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        return this.http.get(\"http://teammartini.herokuapp.com/Exercise\", options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    EntryService.prototype.getScore = function (answers) {\n\t        //add headers\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        //options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        //post answers and return score\n\t        return this.http.post('http://teammartini.herokuapp.com/Exercise', JSON.stringify(answers), options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    EntryService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http, cookie_service_1.CookieService, extract_service_1.ExtractService])\n\t    ], EntryService);\n\t    return EntryService;\n\t}());\n\texports.EntryService = EntryService;\n\n\n/***/ },\n\n/***/ 105:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar user_service_1 = __webpack_require__(21);\n\tvar LoggedInGuard = (function () {\n\t    function LoggedInGuard(user) {\n\t        this.user = user;\n\t    }\n\t    LoggedInGuard.prototype.canActivate = function () {\n\t        return this.user.isLoggedIn();\n\t    };\n\t    LoggedInGuard = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [user_service_1.UserService])\n\t    ], LoggedInGuard);\n\t    return LoggedInGuard;\n\t}());\n\texports.LoggedInGuard = LoggedInGuard;\n\n\n/***/ },\n\n/***/ 106:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// user.service.ts\n\tvar core_1 = __webpack_require__(5);\n\tvar http_1 = __webpack_require__(16);\n\tvar cookie_service_1 = __webpack_require__(20);\n\tvar extract_service_1 = __webpack_require__(29);\n\tvar ScoreService = (function () {\n\t    function ScoreService(http, cookieService, extractService) {\n\t        this.http = http;\n\t        this.cookieService = cookieService;\n\t        this.extractService = extractService;\n\t    }\n\t    ScoreService.prototype.getScores = function () {\n\t        console.log(\"getting data\");\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        //options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        return this.http\n\t            .get('http://teammartini.herokuapp.com/GetUserResults', options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    ScoreService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http, cookie_service_1.CookieService, extract_service_1.ExtractService])\n\t    ], ScoreService);\n\t    return ScoreService;\n\t}());\n\texports.ScoreService = ScoreService;\n\n\n/***/ },\n\n/***/ 107:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar http_1 = __webpack_require__(16);\n\tvar cookie_service_1 = __webpack_require__(20);\n\tvar extract_service_1 = __webpack_require__(29);\n\tvar SearchService = (function () {\n\t    function SearchService(http, cookieService, extractService) {\n\t        this.http = http;\n\t        this.cookieService = cookieService;\n\t        this.extractService = extractService;\n\t    }\n\t    SearchService.prototype.search = function (term) {\n\t        //create auth header\n\t        var headers = new http_1.Headers();\n\t        headers.append('Content-Type', 'application/json');\n\t        //routeparams\n\t        var params = new http_1.URLSearchParams();\n\t        params.append('name', term);\n\t        params.append('token', this.cookieService.getCookie('auth_token'));\n\t        //create options\n\t        var options = new http_1.RequestOptions({\n\t            headers: headers,\n\t            search: params\n\t        });\n\t        return this.http.get(\"http://teammartini.herokuapp.com/SearchUser\", options)\n\t            .map(this.extractService.extractData)\n\t            .catch(this.extractService.handleError);\n\t    };\n\t    SearchService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http, cookie_service_1.CookieService, extract_service_1.ExtractService])\n\t    ], SearchService);\n\t    return SearchService;\n\t}());\n\texports.SearchService = SearchService;\n\n\n/***/ },\n\n/***/ 108:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.2.4\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t   true ? factory(exports, __webpack_require__(5)) :\n\t  typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t  (factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n\t}(this, function (exports,_angular_core) { 'use strict';\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  /**\n\t   * A segment of text within the template.\n\t   */\n\t  var TextAst = (function () {\n\t      function TextAst(value, ngContentIndex, sourceSpan) {\n\t          this.value = value;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n\t      return TextAst;\n\t  }());\n\t  /**\n\t   * A bound expression within the text of a template.\n\t   */\n\t  var BoundTextAst = (function () {\n\t      function BoundTextAst(value, ngContentIndex, sourceSpan) {\n\t          this.value = value;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      BoundTextAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitBoundText(this, context);\n\t      };\n\t      return BoundTextAst;\n\t  }());\n\t  /**\n\t   * A plain attribute on an element.\n\t   */\n\t  var AttrAst = (function () {\n\t      function AttrAst(name, value, sourceSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n\t      return AttrAst;\n\t  }());\n\t  /**\n\t   * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n\t   * `[@trigger]=\"stateExp\"`)\n\t   */\n\t  var BoundElementPropertyAst = (function () {\n\t      function BoundElementPropertyAst(name, type, securityContext, needsRuntimeSecurityContext, value, unit, sourceSpan) {\n\t          this.name = name;\n\t          this.type = type;\n\t          this.securityContext = securityContext;\n\t          this.needsRuntimeSecurityContext = needsRuntimeSecurityContext;\n\t          this.value = value;\n\t          this.unit = unit;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitElementProperty(this, context);\n\t      };\n\t      Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n\t          get: function () { return this.type === exports.PropertyBindingType.Animation; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return BoundElementPropertyAst;\n\t  }());\n\t  /**\n\t   * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n\t   * `(@trigger.phase)=\"callback($event)\"`).\n\t   */\n\t  var BoundEventAst = (function () {\n\t      function BoundEventAst(name, target, phase, handler, sourceSpan) {\n\t          this.name = name;\n\t          this.target = target;\n\t          this.phase = phase;\n\t          this.handler = handler;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      BoundEventAst.calcFullName = function (name, target, phase) {\n\t          if (target) {\n\t              return target + \":\" + name;\n\t          }\n\t          else if (phase) {\n\t              return \"@\" + name + \".\" + phase;\n\t          }\n\t          else {\n\t              return name;\n\t          }\n\t      };\n\t      BoundEventAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitEvent(this, context);\n\t      };\n\t      Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n\t          get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n\t          get: function () { return !!this.phase; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return BoundEventAst;\n\t  }());\n\t  /**\n\t   * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n\t   */\n\t  var ReferenceAst = (function () {\n\t      function ReferenceAst(name, value, sourceSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      ReferenceAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitReference(this, context);\n\t      };\n\t      return ReferenceAst;\n\t  }());\n\t  /**\n\t   * A variable declaration on a <template> (e.g. `var-someName=\"someLocalName\"`).\n\t   */\n\t  var VariableAst = (function () {\n\t      function VariableAst(name, value, sourceSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      VariableAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitVariable(this, context);\n\t      };\n\t      return VariableAst;\n\t  }());\n\t  /**\n\t   * An element declaration in a template.\n\t   */\n\t  var ElementAst = (function () {\n\t      function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan, endSourceSpan) {\n\t          this.name = name;\n\t          this.attrs = attrs;\n\t          this.inputs = inputs;\n\t          this.outputs = outputs;\n\t          this.references = references;\n\t          this.directives = directives;\n\t          this.providers = providers;\n\t          this.hasViewContainer = hasViewContainer;\n\t          this.children = children;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t          this.endSourceSpan = endSourceSpan;\n\t      }\n\t      ElementAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitElement(this, context);\n\t      };\n\t      return ElementAst;\n\t  }());\n\t  /**\n\t   * A `<template>` element included in an Angular template.\n\t   */\n\t  var EmbeddedTemplateAst = (function () {\n\t      function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan) {\n\t          this.attrs = attrs;\n\t          this.outputs = outputs;\n\t          this.references = references;\n\t          this.variables = variables;\n\t          this.directives = directives;\n\t          this.providers = providers;\n\t          this.hasViewContainer = hasViewContainer;\n\t          this.children = children;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitEmbeddedTemplate(this, context);\n\t      };\n\t      return EmbeddedTemplateAst;\n\t  }());\n\t  /**\n\t   * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n\t   */\n\t  var BoundDirectivePropertyAst = (function () {\n\t      function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n\t          this.directiveName = directiveName;\n\t          this.templateName = templateName;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitDirectiveProperty(this, context);\n\t      };\n\t      return BoundDirectivePropertyAst;\n\t  }());\n\t  /**\n\t   * A directive declared on an element.\n\t   */\n\t  var DirectiveAst = (function () {\n\t      function DirectiveAst(directive, inputs, hostProperties, hostEvents, sourceSpan) {\n\t          this.directive = directive;\n\t          this.inputs = inputs;\n\t          this.hostProperties = hostProperties;\n\t          this.hostEvents = hostEvents;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      DirectiveAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitDirective(this, context);\n\t      };\n\t      return DirectiveAst;\n\t  }());\n\t  /**\n\t   * A provider declared on an element\n\t   */\n\t  var ProviderAst = (function () {\n\t      function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n\t          this.token = token;\n\t          this.multiProvider = multiProvider;\n\t          this.eager = eager;\n\t          this.providers = providers;\n\t          this.providerType = providerType;\n\t          this.lifecycleHooks = lifecycleHooks;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      ProviderAst.prototype.visit = function (visitor, context) {\n\t          // No visit method in the visitor for now...\n\t          return null;\n\t      };\n\t      return ProviderAst;\n\t  }());\n\t  exports.ProviderAstType;\n\t  (function (ProviderAstType) {\n\t      ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n\t      ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n\t      ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n\t      ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n\t      ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n\t  })(exports.ProviderAstType || (exports.ProviderAstType = {}));\n\t  /**\n\t   * Position where content is to be projected (instance of `<ng-content>` in a template).\n\t   */\n\t  var NgContentAst = (function () {\n\t      function NgContentAst(index, ngContentIndex, sourceSpan) {\n\t          this.index = index;\n\t          this.ngContentIndex = ngContentIndex;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      NgContentAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitNgContent(this, context);\n\t      };\n\t      return NgContentAst;\n\t  }());\n\t  /**\n\t   * Enumeration of types of property bindings.\n\t   */\n\t  exports.PropertyBindingType;\n\t  (function (PropertyBindingType) {\n\t      /**\n\t       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Property\"] = 0] = \"Property\";\n\t      /**\n\t       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Attribute\"] = 1] = \"Attribute\";\n\t      /**\n\t       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Class\"] = 2] = \"Class\";\n\t      /**\n\t       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Style\"] = 3] = \"Style\";\n\t      /**\n\t       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n\t       */\n\t      PropertyBindingType[PropertyBindingType[\"Animation\"] = 4] = \"Animation\";\n\t  })(exports.PropertyBindingType || (exports.PropertyBindingType = {}));\n\t  /**\n\t   * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n\t   */\n\t  function templateVisitAll(visitor, asts, context) {\n\t      if (context === void 0) { context = null; }\n\t      var result = [];\n\t      var visit = visitor.visit ?\n\t          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n\t          function (ast) { return ast.visit(visitor, context); };\n\t      asts.forEach(function (ast) {\n\t          var astResult = visit(ast);\n\t          if (astResult) {\n\t              result.push(astResult);\n\t          }\n\t      });\n\t      return result;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var $EOF = 0;\n\t  var $TAB = 9;\n\t  var $LF = 10;\n\t  var $VTAB = 11;\n\t  var $FF = 12;\n\t  var $CR = 13;\n\t  var $SPACE = 32;\n\t  var $BANG = 33;\n\t  var $DQ = 34;\n\t  var $HASH = 35;\n\t  var $$ = 36;\n\t  var $PERCENT = 37;\n\t  var $AMPERSAND = 38;\n\t  var $SQ = 39;\n\t  var $LPAREN = 40;\n\t  var $RPAREN = 41;\n\t  var $STAR = 42;\n\t  var $PLUS = 43;\n\t  var $COMMA = 44;\n\t  var $MINUS = 45;\n\t  var $PERIOD = 46;\n\t  var $SLASH = 47;\n\t  var $COLON = 58;\n\t  var $SEMICOLON = 59;\n\t  var $LT = 60;\n\t  var $EQ = 61;\n\t  var $GT = 62;\n\t  var $QUESTION = 63;\n\t  var $0 = 48;\n\t  var $9 = 57;\n\t  var $A = 65;\n\t  var $E = 69;\n\t  var $F = 70;\n\t  var $X = 88;\n\t  var $Z = 90;\n\t  var $LBRACKET = 91;\n\t  var $BACKSLASH = 92;\n\t  var $RBRACKET = 93;\n\t  var $CARET = 94;\n\t  var $_ = 95;\n\t  var $a = 97;\n\t  var $e = 101;\n\t  var $f = 102;\n\t  var $n = 110;\n\t  var $r = 114;\n\t  var $t = 116;\n\t  var $u = 117;\n\t  var $v = 118;\n\t  var $x = 120;\n\t  var $z = 122;\n\t  var $LBRACE = 123;\n\t  var $BAR = 124;\n\t  var $RBRACE = 125;\n\t  var $NBSP = 160;\n\t  var $BT = 96;\n\t  function isWhitespace(code) {\n\t      return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n\t  }\n\t  function isDigit(code) {\n\t      return $0 <= code && code <= $9;\n\t  }\n\t  function isAsciiLetter(code) {\n\t      return code >= $a && code <= $z || code >= $A && code <= $Z;\n\t  }\n\t  function isAsciiHexDigit(code) {\n\t      return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n\t  }\n\t\n\t  function isPresent(obj) {\n\t      return obj != null;\n\t  }\n\t  function isBlank(obj) {\n\t      return obj == null;\n\t  }\n\t  var STRING_MAP_PROTO = Object.getPrototypeOf({});\n\t  function isStrictStringMap(obj) {\n\t      return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n\t  }\n\t  function stringify(token) {\n\t      if (typeof token === 'string') {\n\t          return token;\n\t      }\n\t      if (token == null) {\n\t          return '' + token;\n\t      }\n\t      if (token.overriddenName) {\n\t          return token.overriddenName;\n\t      }\n\t      if (token.name) {\n\t          return token.name;\n\t      }\n\t      var res = token.toString();\n\t      var newLineIndex = res.indexOf('\\n');\n\t      return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t  }\n\t  var NumberWrapper = (function () {\n\t      function NumberWrapper() {\n\t      }\n\t      NumberWrapper.parseIntAutoRadix = function (text) {\n\t          var result = parseInt(text);\n\t          if (isNaN(result)) {\n\t              throw new Error('Invalid integer literal when parsing ' + text);\n\t          }\n\t          return result;\n\t      };\n\t      NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n\t      return NumberWrapper;\n\t  }());\n\t  function isJsObject(o) {\n\t      return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t  }\n\t  function isPrimitive(obj) {\n\t      return !isJsObject(obj);\n\t  }\n\t  function escapeRegExp(s) {\n\t      return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n\t  }\n\t\n\t  function assertArrayOfStrings(identifier, value) {\n\t      if (!_angular_core.isDevMode() || isBlank(value)) {\n\t          return;\n\t      }\n\t      if (!Array.isArray(value)) {\n\t          throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n\t      }\n\t      for (var i = 0; i < value.length; i += 1) {\n\t          if (typeof value[i] !== 'string') {\n\t              throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n\t          }\n\t      }\n\t  }\n\t  var INTERPOLATION_BLACKLIST_REGEXPS = [\n\t      /^\\s*$/,\n\t      /[<>]/,\n\t      /^[{}]$/,\n\t      /&(#|[a-z])/i,\n\t      /^\\/\\//,\n\t  ];\n\t  function assertInterpolationSymbols(identifier, value) {\n\t      if (isPresent(value) && !(Array.isArray(value) && value.length == 2)) {\n\t          throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n\t      }\n\t      else if (_angular_core.isDevMode() && !isBlank(value)) {\n\t          var start_1 = value[0];\n\t          var end_1 = value[1];\n\t          // black list checking\n\t          INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n\t              if (regexp.test(start_1) || regexp.test(end_1)) {\n\t                  throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n\t              }\n\t          });\n\t      }\n\t  }\n\t\n\t  var InterpolationConfig = (function () {\n\t      function InterpolationConfig(start, end) {\n\t          this.start = start;\n\t          this.end = end;\n\t      }\n\t      InterpolationConfig.fromArray = function (markers) {\n\t          if (!markers) {\n\t              return DEFAULT_INTERPOLATION_CONFIG;\n\t          }\n\t          assertInterpolationSymbols('interpolation', markers);\n\t          return new InterpolationConfig(markers[0], markers[1]);\n\t      };\n\t      ;\n\t      return InterpolationConfig;\n\t  }());\n\t  var DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$1 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var ParserError = (function () {\n\t      function ParserError(message, input, errLocation, ctxLocation) {\n\t          this.input = input;\n\t          this.errLocation = errLocation;\n\t          this.ctxLocation = ctxLocation;\n\t          this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n\t      }\n\t      return ParserError;\n\t  }());\n\t  var ParseSpan = (function () {\n\t      function ParseSpan(start, end) {\n\t          this.start = start;\n\t          this.end = end;\n\t      }\n\t      return ParseSpan;\n\t  }());\n\t  var AST = (function () {\n\t      function AST(span) {\n\t          this.span = span;\n\t      }\n\t      AST.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return null;\n\t      };\n\t      AST.prototype.toString = function () { return 'AST'; };\n\t      return AST;\n\t  }());\n\t  /**\n\t   * Represents a quoted expression of the form:\n\t   *\n\t   * quote = prefix `:` uninterpretedExpression\n\t   * prefix = identifier\n\t   * uninterpretedExpression = arbitrary string\n\t   *\n\t   * A quoted expression is meant to be pre-processed by an AST transformer that\n\t   * converts it into another AST that no longer contains quoted expressions.\n\t   * It is meant to allow third-party developers to extend Angular template\n\t   * expression language. The `uninterpretedExpression` part of the quote is\n\t   * therefore not interpreted by the Angular's own expression parser.\n\t   */\n\t  var Quote = (function (_super) {\n\t      __extends$1(Quote, _super);\n\t      function Quote(span, prefix, uninterpretedExpression, location) {\n\t          _super.call(this, span);\n\t          this.prefix = prefix;\n\t          this.uninterpretedExpression = uninterpretedExpression;\n\t          this.location = location;\n\t      }\n\t      Quote.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitQuote(this, context);\n\t      };\n\t      Quote.prototype.toString = function () { return 'Quote'; };\n\t      return Quote;\n\t  }(AST));\n\t  var EmptyExpr = (function (_super) {\n\t      __extends$1(EmptyExpr, _super);\n\t      function EmptyExpr() {\n\t          _super.apply(this, arguments);\n\t      }\n\t      EmptyExpr.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          // do nothing\n\t      };\n\t      return EmptyExpr;\n\t  }(AST));\n\t  var ImplicitReceiver = (function (_super) {\n\t      __extends$1(ImplicitReceiver, _super);\n\t      function ImplicitReceiver() {\n\t          _super.apply(this, arguments);\n\t      }\n\t      ImplicitReceiver.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitImplicitReceiver(this, context);\n\t      };\n\t      return ImplicitReceiver;\n\t  }(AST));\n\t  /**\n\t   * Multiple expressions separated by a semicolon.\n\t   */\n\t  var Chain = (function (_super) {\n\t      __extends$1(Chain, _super);\n\t      function Chain(span, expressions) {\n\t          _super.call(this, span);\n\t          this.expressions = expressions;\n\t      }\n\t      Chain.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitChain(this, context);\n\t      };\n\t      return Chain;\n\t  }(AST));\n\t  var Conditional = (function (_super) {\n\t      __extends$1(Conditional, _super);\n\t      function Conditional(span, condition, trueExp, falseExp) {\n\t          _super.call(this, span);\n\t          this.condition = condition;\n\t          this.trueExp = trueExp;\n\t          this.falseExp = falseExp;\n\t      }\n\t      Conditional.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitConditional(this, context);\n\t      };\n\t      return Conditional;\n\t  }(AST));\n\t  var PropertyRead = (function (_super) {\n\t      __extends$1(PropertyRead, _super);\n\t      function PropertyRead(span, receiver, name) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t      }\n\t      PropertyRead.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitPropertyRead(this, context);\n\t      };\n\t      return PropertyRead;\n\t  }(AST));\n\t  var PropertyWrite = (function (_super) {\n\t      __extends$1(PropertyWrite, _super);\n\t      function PropertyWrite(span, receiver, name, value) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t          this.value = value;\n\t      }\n\t      PropertyWrite.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitPropertyWrite(this, context);\n\t      };\n\t      return PropertyWrite;\n\t  }(AST));\n\t  var SafePropertyRead = (function (_super) {\n\t      __extends$1(SafePropertyRead, _super);\n\t      function SafePropertyRead(span, receiver, name) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t      }\n\t      SafePropertyRead.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitSafePropertyRead(this, context);\n\t      };\n\t      return SafePropertyRead;\n\t  }(AST));\n\t  var KeyedRead = (function (_super) {\n\t      __extends$1(KeyedRead, _super);\n\t      function KeyedRead(span, obj, key) {\n\t          _super.call(this, span);\n\t          this.obj = obj;\n\t          this.key = key;\n\t      }\n\t      KeyedRead.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitKeyedRead(this, context);\n\t      };\n\t      return KeyedRead;\n\t  }(AST));\n\t  var KeyedWrite = (function (_super) {\n\t      __extends$1(KeyedWrite, _super);\n\t      function KeyedWrite(span, obj, key, value) {\n\t          _super.call(this, span);\n\t          this.obj = obj;\n\t          this.key = key;\n\t          this.value = value;\n\t      }\n\t      KeyedWrite.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitKeyedWrite(this, context);\n\t      };\n\t      return KeyedWrite;\n\t  }(AST));\n\t  var BindingPipe = (function (_super) {\n\t      __extends$1(BindingPipe, _super);\n\t      function BindingPipe(span, exp, name, args) {\n\t          _super.call(this, span);\n\t          this.exp = exp;\n\t          this.name = name;\n\t          this.args = args;\n\t      }\n\t      BindingPipe.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitPipe(this, context);\n\t      };\n\t      return BindingPipe;\n\t  }(AST));\n\t  var LiteralPrimitive = (function (_super) {\n\t      __extends$1(LiteralPrimitive, _super);\n\t      function LiteralPrimitive(span, value) {\n\t          _super.call(this, span);\n\t          this.value = value;\n\t      }\n\t      LiteralPrimitive.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitLiteralPrimitive(this, context);\n\t      };\n\t      return LiteralPrimitive;\n\t  }(AST));\n\t  var LiteralArray = (function (_super) {\n\t      __extends$1(LiteralArray, _super);\n\t      function LiteralArray(span, expressions) {\n\t          _super.call(this, span);\n\t          this.expressions = expressions;\n\t      }\n\t      LiteralArray.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitLiteralArray(this, context);\n\t      };\n\t      return LiteralArray;\n\t  }(AST));\n\t  var LiteralMap = (function (_super) {\n\t      __extends$1(LiteralMap, _super);\n\t      function LiteralMap(span, keys, values) {\n\t          _super.call(this, span);\n\t          this.keys = keys;\n\t          this.values = values;\n\t      }\n\t      LiteralMap.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitLiteralMap(this, context);\n\t      };\n\t      return LiteralMap;\n\t  }(AST));\n\t  var Interpolation = (function (_super) {\n\t      __extends$1(Interpolation, _super);\n\t      function Interpolation(span, strings, expressions) {\n\t          _super.call(this, span);\n\t          this.strings = strings;\n\t          this.expressions = expressions;\n\t      }\n\t      Interpolation.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitInterpolation(this, context);\n\t      };\n\t      return Interpolation;\n\t  }(AST));\n\t  var Binary = (function (_super) {\n\t      __extends$1(Binary, _super);\n\t      function Binary(span, operation, left, right) {\n\t          _super.call(this, span);\n\t          this.operation = operation;\n\t          this.left = left;\n\t          this.right = right;\n\t      }\n\t      Binary.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitBinary(this, context);\n\t      };\n\t      return Binary;\n\t  }(AST));\n\t  var PrefixNot = (function (_super) {\n\t      __extends$1(PrefixNot, _super);\n\t      function PrefixNot(span, expression) {\n\t          _super.call(this, span);\n\t          this.expression = expression;\n\t      }\n\t      PrefixNot.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitPrefixNot(this, context);\n\t      };\n\t      return PrefixNot;\n\t  }(AST));\n\t  var MethodCall = (function (_super) {\n\t      __extends$1(MethodCall, _super);\n\t      function MethodCall(span, receiver, name, args) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t          this.args = args;\n\t      }\n\t      MethodCall.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitMethodCall(this, context);\n\t      };\n\t      return MethodCall;\n\t  }(AST));\n\t  var SafeMethodCall = (function (_super) {\n\t      __extends$1(SafeMethodCall, _super);\n\t      function SafeMethodCall(span, receiver, name, args) {\n\t          _super.call(this, span);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t          this.args = args;\n\t      }\n\t      SafeMethodCall.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitSafeMethodCall(this, context);\n\t      };\n\t      return SafeMethodCall;\n\t  }(AST));\n\t  var FunctionCall = (function (_super) {\n\t      __extends$1(FunctionCall, _super);\n\t      function FunctionCall(span, target, args) {\n\t          _super.call(this, span);\n\t          this.target = target;\n\t          this.args = args;\n\t      }\n\t      FunctionCall.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return visitor.visitFunctionCall(this, context);\n\t      };\n\t      return FunctionCall;\n\t  }(AST));\n\t  var ASTWithSource = (function (_super) {\n\t      __extends$1(ASTWithSource, _super);\n\t      function ASTWithSource(ast, source, location, errors) {\n\t          _super.call(this, new ParseSpan(0, isBlank(source) ? 0 : source.length));\n\t          this.ast = ast;\n\t          this.source = source;\n\t          this.location = location;\n\t          this.errors = errors;\n\t      }\n\t      ASTWithSource.prototype.visit = function (visitor, context) {\n\t          if (context === void 0) { context = null; }\n\t          return this.ast.visit(visitor, context);\n\t      };\n\t      ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n\t      return ASTWithSource;\n\t  }(AST));\n\t  var TemplateBinding = (function () {\n\t      function TemplateBinding(span, key, keyIsVar, name, expression) {\n\t          this.span = span;\n\t          this.key = key;\n\t          this.keyIsVar = keyIsVar;\n\t          this.name = name;\n\t          this.expression = expression;\n\t      }\n\t      return TemplateBinding;\n\t  }());\n\t  var RecursiveAstVisitor = (function () {\n\t      function RecursiveAstVisitor() {\n\t      }\n\t      RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n\t          ast.left.visit(this);\n\t          ast.right.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n\t      RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n\t          ast.condition.visit(this);\n\t          ast.trueExp.visit(this);\n\t          ast.falseExp.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n\t          ast.exp.visit(this);\n\t          this.visitAll(ast.args, context);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n\t          ast.target.visit(this);\n\t          this.visitAll(ast.args, context);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n\t      RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n\t          return this.visitAll(ast.expressions, context);\n\t      };\n\t      RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n\t          ast.obj.visit(this);\n\t          ast.key.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n\t          ast.obj.visit(this);\n\t          ast.key.visit(this);\n\t          ast.value.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n\t          return this.visitAll(ast.expressions, context);\n\t      };\n\t      RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n\t      RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n\t      RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          return this.visitAll(ast.args, context);\n\t      };\n\t      RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n\t          ast.expression.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          ast.value.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n\t          ast.receiver.visit(this);\n\t          return this.visitAll(ast.args, context);\n\t      };\n\t      RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n\t          var _this = this;\n\t          asts.forEach(function (ast) { return ast.visit(_this, context); });\n\t          return null;\n\t      };\n\t      RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n\t      return RecursiveAstVisitor;\n\t  }());\n\t\n\t  exports.TokenType;\n\t  (function (TokenType) {\n\t      TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n\t      TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n\t      TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n\t      TokenType[TokenType[\"String\"] = 3] = \"String\";\n\t      TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n\t      TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n\t      TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n\t  })(exports.TokenType || (exports.TokenType = {}));\n\t  var KEYWORDS = ['var', 'let', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\n\t  var Lexer = (function () {\n\t      function Lexer() {\n\t      }\n\t      Lexer.prototype.tokenize = function (text) {\n\t          var scanner = new _Scanner(text);\n\t          var tokens = [];\n\t          var token = scanner.scanToken();\n\t          while (token != null) {\n\t              tokens.push(token);\n\t              token = scanner.scanToken();\n\t          }\n\t          return tokens;\n\t      };\n\t      Lexer.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      Lexer.ctorParameters = [];\n\t      return Lexer;\n\t  }());\n\t  var Token = (function () {\n\t      function Token(index, type, numValue, strValue) {\n\t          this.index = index;\n\t          this.type = type;\n\t          this.numValue = numValue;\n\t          this.strValue = strValue;\n\t      }\n\t      Token.prototype.isCharacter = function (code) {\n\t          return this.type == exports.TokenType.Character && this.numValue == code;\n\t      };\n\t      Token.prototype.isNumber = function () { return this.type == exports.TokenType.Number; };\n\t      Token.prototype.isString = function () { return this.type == exports.TokenType.String; };\n\t      Token.prototype.isOperator = function (operater) {\n\t          return this.type == exports.TokenType.Operator && this.strValue == operater;\n\t      };\n\t      Token.prototype.isIdentifier = function () { return this.type == exports.TokenType.Identifier; };\n\t      Token.prototype.isKeyword = function () { return this.type == exports.TokenType.Keyword; };\n\t      Token.prototype.isKeywordLet = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'let'; };\n\t      Token.prototype.isKeywordNull = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'null'; };\n\t      Token.prototype.isKeywordUndefined = function () {\n\t          return this.type == exports.TokenType.Keyword && this.strValue == 'undefined';\n\t      };\n\t      Token.prototype.isKeywordTrue = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'true'; };\n\t      Token.prototype.isKeywordFalse = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'false'; };\n\t      Token.prototype.isKeywordThis = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'this'; };\n\t      Token.prototype.isError = function () { return this.type == exports.TokenType.Error; };\n\t      Token.prototype.toNumber = function () { return this.type == exports.TokenType.Number ? this.numValue : -1; };\n\t      Token.prototype.toString = function () {\n\t          switch (this.type) {\n\t              case exports.TokenType.Character:\n\t              case exports.TokenType.Identifier:\n\t              case exports.TokenType.Keyword:\n\t              case exports.TokenType.Operator:\n\t              case exports.TokenType.String:\n\t              case exports.TokenType.Error:\n\t                  return this.strValue;\n\t              case exports.TokenType.Number:\n\t                  return this.numValue.toString();\n\t              default:\n\t                  return null;\n\t          }\n\t      };\n\t      return Token;\n\t  }());\n\t  function newCharacterToken(index, code) {\n\t      return new Token(index, exports.TokenType.Character, code, String.fromCharCode(code));\n\t  }\n\t  function newIdentifierToken(index, text) {\n\t      return new Token(index, exports.TokenType.Identifier, 0, text);\n\t  }\n\t  function newKeywordToken(index, text) {\n\t      return new Token(index, exports.TokenType.Keyword, 0, text);\n\t  }\n\t  function newOperatorToken(index, text) {\n\t      return new Token(index, exports.TokenType.Operator, 0, text);\n\t  }\n\t  function newStringToken(index, text) {\n\t      return new Token(index, exports.TokenType.String, 0, text);\n\t  }\n\t  function newNumberToken(index, n) {\n\t      return new Token(index, exports.TokenType.Number, n, '');\n\t  }\n\t  function newErrorToken(index, message) {\n\t      return new Token(index, exports.TokenType.Error, 0, message);\n\t  }\n\t  var EOF = new Token(-1, exports.TokenType.Character, 0, '');\n\t  var _Scanner = (function () {\n\t      function _Scanner(input) {\n\t          this.input = input;\n\t          this.peek = 0;\n\t          this.index = -1;\n\t          this.length = input.length;\n\t          this.advance();\n\t      }\n\t      _Scanner.prototype.advance = function () {\n\t          this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n\t      };\n\t      _Scanner.prototype.scanToken = function () {\n\t          var input = this.input, length = this.length;\n\t          var peek = this.peek, index = this.index;\n\t          // Skip whitespace.\n\t          while (peek <= $SPACE) {\n\t              if (++index >= length) {\n\t                  peek = $EOF;\n\t                  break;\n\t              }\n\t              else {\n\t                  peek = input.charCodeAt(index);\n\t              }\n\t          }\n\t          this.peek = peek;\n\t          this.index = index;\n\t          if (index >= length) {\n\t              return null;\n\t          }\n\t          // Handle identifiers and numbers.\n\t          if (isIdentifierStart(peek))\n\t              return this.scanIdentifier();\n\t          if (isDigit(peek))\n\t              return this.scanNumber(index);\n\t          var start = index;\n\t          switch (peek) {\n\t              case $PERIOD:\n\t                  this.advance();\n\t                  return isDigit(this.peek) ? this.scanNumber(start) :\n\t                      newCharacterToken(start, $PERIOD);\n\t              case $LPAREN:\n\t              case $RPAREN:\n\t              case $LBRACE:\n\t              case $RBRACE:\n\t              case $LBRACKET:\n\t              case $RBRACKET:\n\t              case $COMMA:\n\t              case $COLON:\n\t              case $SEMICOLON:\n\t                  return this.scanCharacter(start, peek);\n\t              case $SQ:\n\t              case $DQ:\n\t                  return this.scanString();\n\t              case $HASH:\n\t              case $PLUS:\n\t              case $MINUS:\n\t              case $STAR:\n\t              case $SLASH:\n\t              case $PERCENT:\n\t              case $CARET:\n\t                  return this.scanOperator(start, String.fromCharCode(peek));\n\t              case $QUESTION:\n\t                  return this.scanComplexOperator(start, '?', $PERIOD, '.');\n\t              case $LT:\n\t              case $GT:\n\t                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n\t              case $BANG:\n\t              case $EQ:\n\t                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n\t              case $AMPERSAND:\n\t                  return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n\t              case $BAR:\n\t                  return this.scanComplexOperator(start, '|', $BAR, '|');\n\t              case $NBSP:\n\t                  while (isWhitespace(this.peek))\n\t                      this.advance();\n\t                  return this.scanToken();\n\t          }\n\t          this.advance();\n\t          return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n\t      };\n\t      _Scanner.prototype.scanCharacter = function (start, code) {\n\t          this.advance();\n\t          return newCharacterToken(start, code);\n\t      };\n\t      _Scanner.prototype.scanOperator = function (start, str) {\n\t          this.advance();\n\t          return newOperatorToken(start, str);\n\t      };\n\t      /**\n\t       * Tokenize a 2/3 char long operator\n\t       *\n\t       * @param start start index in the expression\n\t       * @param one first symbol (always part of the operator)\n\t       * @param twoCode code point for the second symbol\n\t       * @param two second symbol (part of the operator when the second code point matches)\n\t       * @param threeCode code point for the third symbol\n\t       * @param three third symbol (part of the operator when provided and matches source expression)\n\t       * @returns {Token}\n\t       */\n\t      _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n\t          this.advance();\n\t          var str = one;\n\t          if (this.peek == twoCode) {\n\t              this.advance();\n\t              str += two;\n\t          }\n\t          if (isPresent(threeCode) && this.peek == threeCode) {\n\t              this.advance();\n\t              str += three;\n\t          }\n\t          return newOperatorToken(start, str);\n\t      };\n\t      _Scanner.prototype.scanIdentifier = function () {\n\t          var start = this.index;\n\t          this.advance();\n\t          while (isIdentifierPart(this.peek))\n\t              this.advance();\n\t          var str = this.input.substring(start, this.index);\n\t          return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n\t              newIdentifierToken(start, str);\n\t      };\n\t      _Scanner.prototype.scanNumber = function (start) {\n\t          var simple = (this.index === start);\n\t          this.advance(); // Skip initial digit.\n\t          while (true) {\n\t              if (isDigit(this.peek)) {\n\t              }\n\t              else if (this.peek == $PERIOD) {\n\t                  simple = false;\n\t              }\n\t              else if (isExponentStart(this.peek)) {\n\t                  this.advance();\n\t                  if (isExponentSign(this.peek))\n\t                      this.advance();\n\t                  if (!isDigit(this.peek))\n\t                      return this.error('Invalid exponent', -1);\n\t                  simple = false;\n\t              }\n\t              else {\n\t                  break;\n\t              }\n\t              this.advance();\n\t          }\n\t          var str = this.input.substring(start, this.index);\n\t          var value = simple ? NumberWrapper.parseIntAutoRadix(str) : parseFloat(str);\n\t          return newNumberToken(start, value);\n\t      };\n\t      _Scanner.prototype.scanString = function () {\n\t          var start = this.index;\n\t          var quote = this.peek;\n\t          this.advance(); // Skip initial quote.\n\t          var buffer = '';\n\t          var marker = this.index;\n\t          var input = this.input;\n\t          while (this.peek != quote) {\n\t              if (this.peek == $BACKSLASH) {\n\t                  buffer += input.substring(marker, this.index);\n\t                  this.advance();\n\t                  var unescapedCode = void 0;\n\t                  if (this.peek == $u) {\n\t                      // 4 character hex code for unicode character.\n\t                      var hex = input.substring(this.index + 1, this.index + 5);\n\t                      if (/^[0-9a-f]+$/i.test(hex)) {\n\t                          unescapedCode = parseInt(hex, 16);\n\t                      }\n\t                      else {\n\t                          return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n\t                      }\n\t                      for (var i = 0; i < 5; i++) {\n\t                          this.advance();\n\t                      }\n\t                  }\n\t                  else {\n\t                      unescapedCode = unescape(this.peek);\n\t                      this.advance();\n\t                  }\n\t                  buffer += String.fromCharCode(unescapedCode);\n\t                  marker = this.index;\n\t              }\n\t              else if (this.peek == $EOF) {\n\t                  return this.error('Unterminated quote', 0);\n\t              }\n\t              else {\n\t                  this.advance();\n\t              }\n\t          }\n\t          var last = input.substring(marker, this.index);\n\t          this.advance(); // Skip terminating quote.\n\t          return newStringToken(start, buffer + last);\n\t      };\n\t      _Scanner.prototype.error = function (message, offset) {\n\t          var position = this.index + offset;\n\t          return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n\t      };\n\t      return _Scanner;\n\t  }());\n\t  function isIdentifierStart(code) {\n\t      return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n\t          (code == $_) || (code == $$);\n\t  }\n\t  function isIdentifier(input) {\n\t      if (input.length == 0)\n\t          return false;\n\t      var scanner = new _Scanner(input);\n\t      if (!isIdentifierStart(scanner.peek))\n\t          return false;\n\t      scanner.advance();\n\t      while (scanner.peek !== $EOF) {\n\t          if (!isIdentifierPart(scanner.peek))\n\t              return false;\n\t          scanner.advance();\n\t      }\n\t      return true;\n\t  }\n\t  function isIdentifierPart(code) {\n\t      return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n\t          (code == $$);\n\t  }\n\t  function isExponentStart(code) {\n\t      return code == $e || code == $E;\n\t  }\n\t  function isExponentSign(code) {\n\t      return code == $MINUS || code == $PLUS;\n\t  }\n\t  function isQuote(code) {\n\t      return code === $SQ || code === $DQ || code === $BT;\n\t  }\n\t  function unescape(code) {\n\t      switch (code) {\n\t          case $n:\n\t              return $LF;\n\t          case $f:\n\t              return $FF;\n\t          case $r:\n\t              return $CR;\n\t          case $t:\n\t              return $TAB;\n\t          case $v:\n\t              return $VTAB;\n\t          default:\n\t              return code;\n\t      }\n\t  }\n\t\n\t  var SplitInterpolation = (function () {\n\t      function SplitInterpolation(strings, expressions, offsets) {\n\t          this.strings = strings;\n\t          this.expressions = expressions;\n\t          this.offsets = offsets;\n\t      }\n\t      return SplitInterpolation;\n\t  }());\n\t  var TemplateBindingParseResult = (function () {\n\t      function TemplateBindingParseResult(templateBindings, warnings, errors) {\n\t          this.templateBindings = templateBindings;\n\t          this.warnings = warnings;\n\t          this.errors = errors;\n\t      }\n\t      return TemplateBindingParseResult;\n\t  }());\n\t  function _createInterpolateRegExp(config) {\n\t      var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n\t      return new RegExp(pattern, 'g');\n\t  }\n\t  var Parser = (function () {\n\t      function Parser(_lexer) {\n\t          this._lexer = _lexer;\n\t          this.errors = [];\n\t      }\n\t      Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          this._checkNoInterpolation(input, location, interpolationConfig);\n\t          var sourceToLex = this._stripComments(input);\n\t          var tokens = this._lexer.tokenize(this._stripComments(input));\n\t          var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n\t              .parseChain();\n\t          return new ASTWithSource(ast, input, location, this.errors);\n\t      };\n\t      Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var ast = this._parseBindingAst(input, location, interpolationConfig);\n\t          return new ASTWithSource(ast, input, location, this.errors);\n\t      };\n\t      Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var ast = this._parseBindingAst(input, location, interpolationConfig);\n\t          var errors = SimpleExpressionChecker.check(ast);\n\t          if (errors.length > 0) {\n\t              this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n\t          }\n\t          return new ASTWithSource(ast, input, location, this.errors);\n\t      };\n\t      Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n\t          this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n\t      };\n\t      Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n\t          // Quotes expressions use 3rd-party expression language. We don't want to use\n\t          // our lexer or parser for that, so we check for that ahead of time.\n\t          var quote = this._parseQuote(input, location);\n\t          if (isPresent(quote)) {\n\t              return quote;\n\t          }\n\t          this._checkNoInterpolation(input, location, interpolationConfig);\n\t          var sourceToLex = this._stripComments(input);\n\t          var tokens = this._lexer.tokenize(sourceToLex);\n\t          return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n\t              .parseChain();\n\t      };\n\t      Parser.prototype._parseQuote = function (input, location) {\n\t          if (isBlank(input))\n\t              return null;\n\t          var prefixSeparatorIndex = input.indexOf(':');\n\t          if (prefixSeparatorIndex == -1)\n\t              return null;\n\t          var prefix = input.substring(0, prefixSeparatorIndex).trim();\n\t          if (!isIdentifier(prefix))\n\t              return null;\n\t          var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n\t          return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n\t      };\n\t      Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n\t          var tokens = this._lexer.tokenize(input);\n\t          if (prefixToken) {\n\t              // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n\t              var prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n\t                  t.index = 0;\n\t                  return t;\n\t              });\n\t              tokens.unshift.apply(tokens, prefixTokens);\n\t          }\n\t          return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n\t              .parseTemplateBindings();\n\t      };\n\t      Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var split = this.splitInterpolation(input, location, interpolationConfig);\n\t          if (split == null)\n\t              return null;\n\t          var expressions = [];\n\t          for (var i = 0; i < split.expressions.length; ++i) {\n\t              var expressionText = split.expressions[i];\n\t              var sourceToLex = this._stripComments(expressionText);\n\t              var tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n\t              var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n\t                  .parseChain();\n\t              expressions.push(ast);\n\t          }\n\t          return new ASTWithSource(new Interpolation(new ParseSpan(0, isBlank(input) ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n\t      };\n\t      Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var regexp = _createInterpolateRegExp(interpolationConfig);\n\t          var parts = input.split(regexp);\n\t          if (parts.length <= 1) {\n\t              return null;\n\t          }\n\t          var strings = [];\n\t          var expressions = [];\n\t          var offsets = [];\n\t          var offset = 0;\n\t          for (var i = 0; i < parts.length; i++) {\n\t              var part = parts[i];\n\t              if (i % 2 === 0) {\n\t                  // fixed string\n\t                  strings.push(part);\n\t                  offset += part.length;\n\t              }\n\t              else if (part.trim().length > 0) {\n\t                  offset += interpolationConfig.start.length;\n\t                  expressions.push(part);\n\t                  offsets.push(offset);\n\t                  offset += part.length + interpolationConfig.end.length;\n\t              }\n\t              else {\n\t                  this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n\t                  expressions.push('$implict');\n\t                  offsets.push(offset);\n\t              }\n\t          }\n\t          return new SplitInterpolation(strings, expressions, offsets);\n\t      };\n\t      Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n\t          return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, isBlank(input) ? 0 : input.length), input), input, location, this.errors);\n\t      };\n\t      Parser.prototype._stripComments = function (input) {\n\t          var i = this._commentStart(input);\n\t          return isPresent(i) ? input.substring(0, i).trim() : input;\n\t      };\n\t      Parser.prototype._commentStart = function (input) {\n\t          var outerQuote = null;\n\t          for (var i = 0; i < input.length - 1; i++) {\n\t              var char = input.charCodeAt(i);\n\t              var nextChar = input.charCodeAt(i + 1);\n\t              if (char === $SLASH && nextChar == $SLASH && isBlank(outerQuote))\n\t                  return i;\n\t              if (outerQuote === char) {\n\t                  outerQuote = null;\n\t              }\n\t              else if (isBlank(outerQuote) && isQuote(char)) {\n\t                  outerQuote = char;\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n\t          var regexp = _createInterpolateRegExp(interpolationConfig);\n\t          var parts = input.split(regexp);\n\t          if (parts.length > 1) {\n\t              this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n\t          }\n\t      };\n\t      Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n\t          var errLocation = '';\n\t          for (var j = 0; j < partInErrIdx; j++) {\n\t              errLocation += j % 2 === 0 ?\n\t                  parts[j] :\n\t                  \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n\t          }\n\t          return errLocation.length;\n\t      };\n\t      Parser.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      Parser.ctorParameters = [\n\t          { type: Lexer, },\n\t      ];\n\t      return Parser;\n\t  }());\n\t  var _ParseAST = (function () {\n\t      function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n\t          this.input = input;\n\t          this.location = location;\n\t          this.tokens = tokens;\n\t          this.inputLength = inputLength;\n\t          this.parseAction = parseAction;\n\t          this.errors = errors;\n\t          this.offset = offset;\n\t          this.rparensExpected = 0;\n\t          this.rbracketsExpected = 0;\n\t          this.rbracesExpected = 0;\n\t          this.index = 0;\n\t      }\n\t      _ParseAST.prototype.peek = function (offset) {\n\t          var i = this.index + offset;\n\t          return i < this.tokens.length ? this.tokens[i] : EOF;\n\t      };\n\t      Object.defineProperty(_ParseAST.prototype, \"next\", {\n\t          get: function () { return this.peek(0); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n\t          get: function () {\n\t              return (this.index < this.tokens.length) ? this.next.index + this.offset :\n\t                  this.inputLength + this.offset;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n\t      _ParseAST.prototype.advance = function () { this.index++; };\n\t      _ParseAST.prototype.optionalCharacter = function (code) {\n\t          if (this.next.isCharacter(code)) {\n\t              this.advance();\n\t              return true;\n\t          }\n\t          else {\n\t              return false;\n\t          }\n\t      };\n\t      _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n\t      _ParseAST.prototype.expectCharacter = function (code) {\n\t          if (this.optionalCharacter(code))\n\t              return;\n\t          this.error(\"Missing expected \" + String.fromCharCode(code));\n\t      };\n\t      _ParseAST.prototype.optionalOperator = function (op) {\n\t          if (this.next.isOperator(op)) {\n\t              this.advance();\n\t              return true;\n\t          }\n\t          else {\n\t              return false;\n\t          }\n\t      };\n\t      _ParseAST.prototype.expectOperator = function (operator) {\n\t          if (this.optionalOperator(operator))\n\t              return;\n\t          this.error(\"Missing expected operator \" + operator);\n\t      };\n\t      _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n\t          var n = this.next;\n\t          if (!n.isIdentifier() && !n.isKeyword()) {\n\t              this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n\t              return '';\n\t          }\n\t          this.advance();\n\t          return n.toString();\n\t      };\n\t      _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n\t          var n = this.next;\n\t          if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n\t              this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n\t              return '';\n\t          }\n\t          this.advance();\n\t          return n.toString();\n\t      };\n\t      _ParseAST.prototype.parseChain = function () {\n\t          var exprs = [];\n\t          var start = this.inputIndex;\n\t          while (this.index < this.tokens.length) {\n\t              var expr = this.parsePipe();\n\t              exprs.push(expr);\n\t              if (this.optionalCharacter($SEMICOLON)) {\n\t                  if (!this.parseAction) {\n\t                      this.error('Binding expression cannot contain chained expression');\n\t                  }\n\t                  while (this.optionalCharacter($SEMICOLON)) {\n\t                  } // read all semicolons\n\t              }\n\t              else if (this.index < this.tokens.length) {\n\t                  this.error(\"Unexpected token '\" + this.next + \"'\");\n\t              }\n\t          }\n\t          if (exprs.length == 0)\n\t              return new EmptyExpr(this.span(start));\n\t          if (exprs.length == 1)\n\t              return exprs[0];\n\t          return new Chain(this.span(start), exprs);\n\t      };\n\t      _ParseAST.prototype.parsePipe = function () {\n\t          var result = this.parseExpression();\n\t          if (this.optionalOperator('|')) {\n\t              if (this.parseAction) {\n\t                  this.error('Cannot have a pipe in an action expression');\n\t              }\n\t              do {\n\t                  var name_1 = this.expectIdentifierOrKeyword();\n\t                  var args = [];\n\t                  while (this.optionalCharacter($COLON)) {\n\t                      args.push(this.parseExpression());\n\t                  }\n\t                  result = new BindingPipe(this.span(result.span.start - this.offset), result, name_1, args);\n\t              } while (this.optionalOperator('|'));\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n\t      _ParseAST.prototype.parseConditional = function () {\n\t          var start = this.inputIndex;\n\t          var result = this.parseLogicalOr();\n\t          if (this.optionalOperator('?')) {\n\t              var yes = this.parsePipe();\n\t              var no = void 0;\n\t              if (!this.optionalCharacter($COLON)) {\n\t                  var end = this.inputIndex;\n\t                  var expression = this.input.substring(start, end);\n\t                  this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n\t                  no = new EmptyExpr(this.span(start));\n\t              }\n\t              else {\n\t                  no = this.parsePipe();\n\t              }\n\t              return new Conditional(this.span(start), result, yes, no);\n\t          }\n\t          else {\n\t              return result;\n\t          }\n\t      };\n\t      _ParseAST.prototype.parseLogicalOr = function () {\n\t          // '||'\n\t          var result = this.parseLogicalAnd();\n\t          while (this.optionalOperator('||')) {\n\t              var right = this.parseLogicalAnd();\n\t              result = new Binary(this.span(result.span.start), '||', result, right);\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseLogicalAnd = function () {\n\t          // '&&'\n\t          var result = this.parseEquality();\n\t          while (this.optionalOperator('&&')) {\n\t              var right = this.parseEquality();\n\t              result = new Binary(this.span(result.span.start), '&&', result, right);\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseEquality = function () {\n\t          // '==','!=','===','!=='\n\t          var result = this.parseRelational();\n\t          while (this.next.type == exports.TokenType.Operator) {\n\t              var operator = this.next.strValue;\n\t              switch (operator) {\n\t                  case '==':\n\t                  case '===':\n\t                  case '!=':\n\t                  case '!==':\n\t                      this.advance();\n\t                      var right = this.parseRelational();\n\t                      result = new Binary(this.span(result.span.start), operator, result, right);\n\t                      continue;\n\t              }\n\t              break;\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseRelational = function () {\n\t          // '<', '>', '<=', '>='\n\t          var result = this.parseAdditive();\n\t          while (this.next.type == exports.TokenType.Operator) {\n\t              var operator = this.next.strValue;\n\t              switch (operator) {\n\t                  case '<':\n\t                  case '>':\n\t                  case '<=':\n\t                  case '>=':\n\t                      this.advance();\n\t                      var right = this.parseAdditive();\n\t                      result = new Binary(this.span(result.span.start), operator, result, right);\n\t                      continue;\n\t              }\n\t              break;\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseAdditive = function () {\n\t          // '+', '-'\n\t          var result = this.parseMultiplicative();\n\t          while (this.next.type == exports.TokenType.Operator) {\n\t              var operator = this.next.strValue;\n\t              switch (operator) {\n\t                  case '+':\n\t                  case '-':\n\t                      this.advance();\n\t                      var right = this.parseMultiplicative();\n\t                      result = new Binary(this.span(result.span.start), operator, result, right);\n\t                      continue;\n\t              }\n\t              break;\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseMultiplicative = function () {\n\t          // '*', '%', '/'\n\t          var result = this.parsePrefix();\n\t          while (this.next.type == exports.TokenType.Operator) {\n\t              var operator = this.next.strValue;\n\t              switch (operator) {\n\t                  case '*':\n\t                  case '%':\n\t                  case '/':\n\t                      this.advance();\n\t                      var right = this.parsePrefix();\n\t                      result = new Binary(this.span(result.span.start), operator, result, right);\n\t                      continue;\n\t              }\n\t              break;\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parsePrefix = function () {\n\t          if (this.next.type == exports.TokenType.Operator) {\n\t              var start = this.inputIndex;\n\t              var operator = this.next.strValue;\n\t              var result = void 0;\n\t              switch (operator) {\n\t                  case '+':\n\t                      this.advance();\n\t                      return this.parsePrefix();\n\t                  case '-':\n\t                      this.advance();\n\t                      result = this.parsePrefix();\n\t                      return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n\t                  case '!':\n\t                      this.advance();\n\t                      result = this.parsePrefix();\n\t                      return new PrefixNot(this.span(start), result);\n\t              }\n\t          }\n\t          return this.parseCallChain();\n\t      };\n\t      _ParseAST.prototype.parseCallChain = function () {\n\t          var result = this.parsePrimary();\n\t          while (true) {\n\t              if (this.optionalCharacter($PERIOD)) {\n\t                  result = this.parseAccessMemberOrMethodCall(result, false);\n\t              }\n\t              else if (this.optionalOperator('?.')) {\n\t                  result = this.parseAccessMemberOrMethodCall(result, true);\n\t              }\n\t              else if (this.optionalCharacter($LBRACKET)) {\n\t                  this.rbracketsExpected++;\n\t                  var key = this.parsePipe();\n\t                  this.rbracketsExpected--;\n\t                  this.expectCharacter($RBRACKET);\n\t                  if (this.optionalOperator('=')) {\n\t                      var value = this.parseConditional();\n\t                      result = new KeyedWrite(this.span(result.span.start), result, key, value);\n\t                  }\n\t                  else {\n\t                      result = new KeyedRead(this.span(result.span.start), result, key);\n\t                  }\n\t              }\n\t              else if (this.optionalCharacter($LPAREN)) {\n\t                  this.rparensExpected++;\n\t                  var args = this.parseCallArguments();\n\t                  this.rparensExpected--;\n\t                  this.expectCharacter($RPAREN);\n\t                  result = new FunctionCall(this.span(result.span.start), result, args);\n\t              }\n\t              else {\n\t                  return result;\n\t              }\n\t          }\n\t      };\n\t      _ParseAST.prototype.parsePrimary = function () {\n\t          var start = this.inputIndex;\n\t          if (this.optionalCharacter($LPAREN)) {\n\t              this.rparensExpected++;\n\t              var result = this.parsePipe();\n\t              this.rparensExpected--;\n\t              this.expectCharacter($RPAREN);\n\t              return result;\n\t          }\n\t          else if (this.next.isKeywordNull()) {\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), null);\n\t          }\n\t          else if (this.next.isKeywordUndefined()) {\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), void 0);\n\t          }\n\t          else if (this.next.isKeywordTrue()) {\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), true);\n\t          }\n\t          else if (this.next.isKeywordFalse()) {\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), false);\n\t          }\n\t          else if (this.next.isKeywordThis()) {\n\t              this.advance();\n\t              return new ImplicitReceiver(this.span(start));\n\t          }\n\t          else if (this.optionalCharacter($LBRACKET)) {\n\t              this.rbracketsExpected++;\n\t              var elements = this.parseExpressionList($RBRACKET);\n\t              this.rbracketsExpected--;\n\t              this.expectCharacter($RBRACKET);\n\t              return new LiteralArray(this.span(start), elements);\n\t          }\n\t          else if (this.next.isCharacter($LBRACE)) {\n\t              return this.parseLiteralMap();\n\t          }\n\t          else if (this.next.isIdentifier()) {\n\t              return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n\t          }\n\t          else if (this.next.isNumber()) {\n\t              var value = this.next.toNumber();\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), value);\n\t          }\n\t          else if (this.next.isString()) {\n\t              var literalValue = this.next.toString();\n\t              this.advance();\n\t              return new LiteralPrimitive(this.span(start), literalValue);\n\t          }\n\t          else if (this.index >= this.tokens.length) {\n\t              this.error(\"Unexpected end of expression: \" + this.input);\n\t              return new EmptyExpr(this.span(start));\n\t          }\n\t          else {\n\t              this.error(\"Unexpected token \" + this.next);\n\t              return new EmptyExpr(this.span(start));\n\t          }\n\t      };\n\t      _ParseAST.prototype.parseExpressionList = function (terminator) {\n\t          var result = [];\n\t          if (!this.next.isCharacter(terminator)) {\n\t              do {\n\t                  result.push(this.parsePipe());\n\t              } while (this.optionalCharacter($COMMA));\n\t          }\n\t          return result;\n\t      };\n\t      _ParseAST.prototype.parseLiteralMap = function () {\n\t          var keys = [];\n\t          var values = [];\n\t          var start = this.inputIndex;\n\t          this.expectCharacter($LBRACE);\n\t          if (!this.optionalCharacter($RBRACE)) {\n\t              this.rbracesExpected++;\n\t              do {\n\t                  var key = this.expectIdentifierOrKeywordOrString();\n\t                  keys.push(key);\n\t                  this.expectCharacter($COLON);\n\t                  values.push(this.parsePipe());\n\t              } while (this.optionalCharacter($COMMA));\n\t              this.rbracesExpected--;\n\t              this.expectCharacter($RBRACE);\n\t          }\n\t          return new LiteralMap(this.span(start), keys, values);\n\t      };\n\t      _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n\t          if (isSafe === void 0) { isSafe = false; }\n\t          var start = receiver.span.start;\n\t          var id = this.expectIdentifierOrKeyword();\n\t          if (this.optionalCharacter($LPAREN)) {\n\t              this.rparensExpected++;\n\t              var args = this.parseCallArguments();\n\t              this.expectCharacter($RPAREN);\n\t              this.rparensExpected--;\n\t              var span = this.span(start);\n\t              return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n\t                  new MethodCall(span, receiver, id, args);\n\t          }\n\t          else {\n\t              if (isSafe) {\n\t                  if (this.optionalOperator('=')) {\n\t                      this.error('The \\'?.\\' operator cannot be used in the assignment');\n\t                      return new EmptyExpr(this.span(start));\n\t                  }\n\t                  else {\n\t                      return new SafePropertyRead(this.span(start), receiver, id);\n\t                  }\n\t              }\n\t              else {\n\t                  if (this.optionalOperator('=')) {\n\t                      if (!this.parseAction) {\n\t                          this.error('Bindings cannot contain assignments');\n\t                          return new EmptyExpr(this.span(start));\n\t                      }\n\t                      var value = this.parseConditional();\n\t                      return new PropertyWrite(this.span(start), receiver, id, value);\n\t                  }\n\t                  else {\n\t                      return new PropertyRead(this.span(start), receiver, id);\n\t                  }\n\t              }\n\t          }\n\t      };\n\t      _ParseAST.prototype.parseCallArguments = function () {\n\t          if (this.next.isCharacter($RPAREN))\n\t              return [];\n\t          var positionals = [];\n\t          do {\n\t              positionals.push(this.parsePipe());\n\t          } while (this.optionalCharacter($COMMA));\n\t          return positionals;\n\t      };\n\t      /**\n\t       * An identifier, a keyword, a string with an optional `-` inbetween.\n\t       */\n\t      _ParseAST.prototype.expectTemplateBindingKey = function () {\n\t          var result = '';\n\t          var operatorFound = false;\n\t          do {\n\t              result += this.expectIdentifierOrKeywordOrString();\n\t              operatorFound = this.optionalOperator('-');\n\t              if (operatorFound) {\n\t                  result += '-';\n\t              }\n\t          } while (operatorFound);\n\t          return result.toString();\n\t      };\n\t      _ParseAST.prototype.parseTemplateBindings = function () {\n\t          var bindings = [];\n\t          var prefix = null;\n\t          var warnings = [];\n\t          while (this.index < this.tokens.length) {\n\t              var start = this.inputIndex;\n\t              var keyIsVar = this.peekKeywordLet();\n\t              if (keyIsVar) {\n\t                  this.advance();\n\t              }\n\t              var key = this.expectTemplateBindingKey();\n\t              if (!keyIsVar) {\n\t                  if (prefix == null) {\n\t                      prefix = key;\n\t                  }\n\t                  else {\n\t                      key = prefix + key[0].toUpperCase() + key.substring(1);\n\t                  }\n\t              }\n\t              this.optionalCharacter($COLON);\n\t              var name_2 = null;\n\t              var expression = null;\n\t              if (keyIsVar) {\n\t                  if (this.optionalOperator('=')) {\n\t                      name_2 = this.expectTemplateBindingKey();\n\t                  }\n\t                  else {\n\t                      name_2 = '\\$implicit';\n\t                  }\n\t              }\n\t              else if (this.next !== EOF && !this.peekKeywordLet()) {\n\t                  var start_1 = this.inputIndex;\n\t                  var ast = this.parsePipe();\n\t                  var source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n\t                  expression = new ASTWithSource(ast, source, this.location, this.errors);\n\t              }\n\t              bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n\t              if (!this.optionalCharacter($SEMICOLON)) {\n\t                  this.optionalCharacter($COMMA);\n\t              }\n\t          }\n\t          return new TemplateBindingParseResult(bindings, warnings, this.errors);\n\t      };\n\t      _ParseAST.prototype.error = function (message, index) {\n\t          if (index === void 0) { index = null; }\n\t          this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n\t          this.skip();\n\t      };\n\t      _ParseAST.prototype.locationText = function (index) {\n\t          if (index === void 0) { index = null; }\n\t          if (isBlank(index))\n\t              index = this.index;\n\t          return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n\t              \"at the end of the expression\";\n\t      };\n\t      // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n\t      // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n\t      // '}' and ']' as conditional recovery points if one of calling productions is expecting\n\t      // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n\t      // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n\t      // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n\t      // must be conditional as they must be skipped if none of the calling productions are not\n\t      // expecting the closing token else we will never make progress in the case of an\n\t      // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n\t      // parseChain() is always the root production and it expects a ';'.\n\t      // If a production expects one of these token it increments the corresponding nesting count,\n\t      // and then decrements it just prior to checking if the token is in the input.\n\t      _ParseAST.prototype.skip = function () {\n\t          var n = this.next;\n\t          while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n\t              (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n\t              (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n\t              (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n\t              if (this.next.isError()) {\n\t                  this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n\t              }\n\t              this.advance();\n\t              n = this.next;\n\t          }\n\t      };\n\t      return _ParseAST;\n\t  }());\n\t  var SimpleExpressionChecker = (function () {\n\t      function SimpleExpressionChecker() {\n\t          this.errors = [];\n\t      }\n\t      SimpleExpressionChecker.check = function (ast) {\n\t          var s = new SimpleExpressionChecker();\n\t          ast.visit(s);\n\t          return s.errors;\n\t      };\n\t      SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n\t      SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n\t      SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n\t      SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitAll = function (asts) {\n\t          var _this = this;\n\t          return asts.map(function (node) { return node.visit(_this); });\n\t      };\n\t      SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n\t      SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n\t      return SimpleExpressionChecker;\n\t  }());\n\t\n\t  var ParseLocation = (function () {\n\t      function ParseLocation(file, offset, line, col) {\n\t          this.file = file;\n\t          this.offset = offset;\n\t          this.line = line;\n\t          this.col = col;\n\t      }\n\t      ParseLocation.prototype.toString = function () {\n\t          return isPresent(this.offset) ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n\t      };\n\t      return ParseLocation;\n\t  }());\n\t  var ParseSourceFile = (function () {\n\t      function ParseSourceFile(content, url) {\n\t          this.content = content;\n\t          this.url = url;\n\t      }\n\t      return ParseSourceFile;\n\t  }());\n\t  var ParseSourceSpan = (function () {\n\t      function ParseSourceSpan(start, end, details) {\n\t          if (details === void 0) { details = null; }\n\t          this.start = start;\n\t          this.end = end;\n\t          this.details = details;\n\t      }\n\t      ParseSourceSpan.prototype.toString = function () {\n\t          return this.start.file.content.substring(this.start.offset, this.end.offset);\n\t      };\n\t      return ParseSourceSpan;\n\t  }());\n\t  exports.ParseErrorLevel;\n\t  (function (ParseErrorLevel) {\n\t      ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n\t      ParseErrorLevel[ParseErrorLevel[\"FATAL\"] = 1] = \"FATAL\";\n\t  })(exports.ParseErrorLevel || (exports.ParseErrorLevel = {}));\n\t  var ParseError = (function () {\n\t      function ParseError(span, msg, level) {\n\t          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n\t          this.span = span;\n\t          this.msg = msg;\n\t          this.level = level;\n\t      }\n\t      ParseError.prototype.toString = function () {\n\t          var source = this.span.start.file.content;\n\t          var ctxStart = this.span.start.offset;\n\t          var contextStr = '';\n\t          var details = '';\n\t          if (isPresent(ctxStart)) {\n\t              if (ctxStart > source.length - 1) {\n\t                  ctxStart = source.length - 1;\n\t              }\n\t              var ctxEnd = ctxStart;\n\t              var ctxLen = 0;\n\t              var ctxLines = 0;\n\t              while (ctxLen < 100 && ctxStart > 0) {\n\t                  ctxStart--;\n\t                  ctxLen++;\n\t                  if (source[ctxStart] == '\\n') {\n\t                      if (++ctxLines == 3) {\n\t                          break;\n\t                      }\n\t                  }\n\t              }\n\t              ctxLen = 0;\n\t              ctxLines = 0;\n\t              while (ctxLen < 100 && ctxEnd < source.length - 1) {\n\t                  ctxEnd++;\n\t                  ctxLen++;\n\t                  if (source[ctxEnd] == '\\n') {\n\t                      if (++ctxLines == 3) {\n\t                          break;\n\t                      }\n\t                  }\n\t              }\n\t              var context = source.substring(ctxStart, this.span.start.offset) + '[ERROR ->]' +\n\t                  source.substring(this.span.start.offset, ctxEnd + 1);\n\t              contextStr = \" (\\\"\" + context + \"\\\")\";\n\t          }\n\t          if (this.span.details) {\n\t              details = \", \" + this.span.details;\n\t          }\n\t          return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n\t      };\n\t      return ParseError;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var Text = (function () {\n\t      function Text(value, sourceSpan) {\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n\t      return Text;\n\t  }());\n\t  var Expansion = (function () {\n\t      function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n\t          this.switchValue = switchValue;\n\t          this.type = type;\n\t          this.cases = cases;\n\t          this.sourceSpan = sourceSpan;\n\t          this.switchValueSourceSpan = switchValueSourceSpan;\n\t      }\n\t      Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n\t      return Expansion;\n\t  }());\n\t  var ExpansionCase = (function () {\n\t      function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n\t          this.value = value;\n\t          this.expression = expression;\n\t          this.sourceSpan = sourceSpan;\n\t          this.valueSourceSpan = valueSourceSpan;\n\t          this.expSourceSpan = expSourceSpan;\n\t      }\n\t      ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n\t      return ExpansionCase;\n\t  }());\n\t  var Attribute$1 = (function () {\n\t      function Attribute(name, value, sourceSpan, valueSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t          this.valueSpan = valueSpan;\n\t      }\n\t      Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n\t      return Attribute;\n\t  }());\n\t  var Element = (function () {\n\t      function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n\t          this.name = name;\n\t          this.attrs = attrs;\n\t          this.children = children;\n\t          this.sourceSpan = sourceSpan;\n\t          this.startSourceSpan = startSourceSpan;\n\t          this.endSourceSpan = endSourceSpan;\n\t      }\n\t      Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n\t      return Element;\n\t  }());\n\t  var Comment = (function () {\n\t      function Comment(value, sourceSpan) {\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n\t      return Comment;\n\t  }());\n\t  function visitAll(visitor, nodes, context) {\n\t      if (context === void 0) { context = null; }\n\t      var result = [];\n\t      var visit = visitor.visit ?\n\t          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n\t          function (ast) { return ast.visit(visitor, context); };\n\t      nodes.forEach(function (ast) {\n\t          var astResult = visit(ast);\n\t          if (astResult) {\n\t              result.push(astResult);\n\t          }\n\t      });\n\t      return result;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var TagContentType;\n\t  (function (TagContentType) {\n\t      TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n\t      TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n\t      TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n\t  })(TagContentType || (TagContentType = {}));\n\t  function splitNsName(elementName) {\n\t      if (elementName[0] != ':') {\n\t          return [null, elementName];\n\t      }\n\t      var colonIndex = elementName.indexOf(':', 1);\n\t      if (colonIndex == -1) {\n\t          throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n\t      }\n\t      return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n\t  }\n\t  function getNsPrefix(fullName) {\n\t      return fullName === null ? null : splitNsName(fullName)[0];\n\t  }\n\t  function mergeNsAndName(prefix, localName) {\n\t      return prefix ? \":\" + prefix + \":\" + localName : localName;\n\t  }\n\t  // see http://www.w3.org/TR/html51/syntax.html#named-character-references\n\t  // see https://html.spec.whatwg.org/multipage/entities.json\n\t  // This list is not exhaustive to keep the compiler footprint low.\n\t  // The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\n\t  var NAMED_ENTITIES = {\n\t      'Aacute': '\\u00C1',\n\t      'aacute': '\\u00E1',\n\t      'Acirc': '\\u00C2',\n\t      'acirc': '\\u00E2',\n\t      'acute': '\\u00B4',\n\t      'AElig': '\\u00C6',\n\t      'aelig': '\\u00E6',\n\t      'Agrave': '\\u00C0',\n\t      'agrave': '\\u00E0',\n\t      'alefsym': '\\u2135',\n\t      'Alpha': '\\u0391',\n\t      'alpha': '\\u03B1',\n\t      'amp': '&',\n\t      'and': '\\u2227',\n\t      'ang': '\\u2220',\n\t      'apos': '\\u0027',\n\t      'Aring': '\\u00C5',\n\t      'aring': '\\u00E5',\n\t      'asymp': '\\u2248',\n\t      'Atilde': '\\u00C3',\n\t      'atilde': '\\u00E3',\n\t      'Auml': '\\u00C4',\n\t      'auml': '\\u00E4',\n\t      'bdquo': '\\u201E',\n\t      'Beta': '\\u0392',\n\t      'beta': '\\u03B2',\n\t      'brvbar': '\\u00A6',\n\t      'bull': '\\u2022',\n\t      'cap': '\\u2229',\n\t      'Ccedil': '\\u00C7',\n\t      'ccedil': '\\u00E7',\n\t      'cedil': '\\u00B8',\n\t      'cent': '\\u00A2',\n\t      'Chi': '\\u03A7',\n\t      'chi': '\\u03C7',\n\t      'circ': '\\u02C6',\n\t      'clubs': '\\u2663',\n\t      'cong': '\\u2245',\n\t      'copy': '\\u00A9',\n\t      'crarr': '\\u21B5',\n\t      'cup': '\\u222A',\n\t      'curren': '\\u00A4',\n\t      'dagger': '\\u2020',\n\t      'Dagger': '\\u2021',\n\t      'darr': '\\u2193',\n\t      'dArr': '\\u21D3',\n\t      'deg': '\\u00B0',\n\t      'Delta': '\\u0394',\n\t      'delta': '\\u03B4',\n\t      'diams': '\\u2666',\n\t      'divide': '\\u00F7',\n\t      'Eacute': '\\u00C9',\n\t      'eacute': '\\u00E9',\n\t      'Ecirc': '\\u00CA',\n\t      'ecirc': '\\u00EA',\n\t      'Egrave': '\\u00C8',\n\t      'egrave': '\\u00E8',\n\t      'empty': '\\u2205',\n\t      'emsp': '\\u2003',\n\t      'ensp': '\\u2002',\n\t      'Epsilon': '\\u0395',\n\t      'epsilon': '\\u03B5',\n\t      'equiv': '\\u2261',\n\t      'Eta': '\\u0397',\n\t      'eta': '\\u03B7',\n\t      'ETH': '\\u00D0',\n\t      'eth': '\\u00F0',\n\t      'Euml': '\\u00CB',\n\t      'euml': '\\u00EB',\n\t      'euro': '\\u20AC',\n\t      'exist': '\\u2203',\n\t      'fnof': '\\u0192',\n\t      'forall': '\\u2200',\n\t      'frac12': '\\u00BD',\n\t      'frac14': '\\u00BC',\n\t      'frac34': '\\u00BE',\n\t      'frasl': '\\u2044',\n\t      'Gamma': '\\u0393',\n\t      'gamma': '\\u03B3',\n\t      'ge': '\\u2265',\n\t      'gt': '>',\n\t      'harr': '\\u2194',\n\t      'hArr': '\\u21D4',\n\t      'hearts': '\\u2665',\n\t      'hellip': '\\u2026',\n\t      'Iacute': '\\u00CD',\n\t      'iacute': '\\u00ED',\n\t      'Icirc': '\\u00CE',\n\t      'icirc': '\\u00EE',\n\t      'iexcl': '\\u00A1',\n\t      'Igrave': '\\u00CC',\n\t      'igrave': '\\u00EC',\n\t      'image': '\\u2111',\n\t      'infin': '\\u221E',\n\t      'int': '\\u222B',\n\t      'Iota': '\\u0399',\n\t      'iota': '\\u03B9',\n\t      'iquest': '\\u00BF',\n\t      'isin': '\\u2208',\n\t      'Iuml': '\\u00CF',\n\t      'iuml': '\\u00EF',\n\t      'Kappa': '\\u039A',\n\t      'kappa': '\\u03BA',\n\t      'Lambda': '\\u039B',\n\t      'lambda': '\\u03BB',\n\t      'lang': '\\u27E8',\n\t      'laquo': '\\u00AB',\n\t      'larr': '\\u2190',\n\t      'lArr': '\\u21D0',\n\t      'lceil': '\\u2308',\n\t      'ldquo': '\\u201C',\n\t      'le': '\\u2264',\n\t      'lfloor': '\\u230A',\n\t      'lowast': '\\u2217',\n\t      'loz': '\\u25CA',\n\t      'lrm': '\\u200E',\n\t      'lsaquo': '\\u2039',\n\t      'lsquo': '\\u2018',\n\t      'lt': '<',\n\t      'macr': '\\u00AF',\n\t      'mdash': '\\u2014',\n\t      'micro': '\\u00B5',\n\t      'middot': '\\u00B7',\n\t      'minus': '\\u2212',\n\t      'Mu': '\\u039C',\n\t      'mu': '\\u03BC',\n\t      'nabla': '\\u2207',\n\t      'nbsp': '\\u00A0',\n\t      'ndash': '\\u2013',\n\t      'ne': '\\u2260',\n\t      'ni': '\\u220B',\n\t      'not': '\\u00AC',\n\t      'notin': '\\u2209',\n\t      'nsub': '\\u2284',\n\t      'Ntilde': '\\u00D1',\n\t      'ntilde': '\\u00F1',\n\t      'Nu': '\\u039D',\n\t      'nu': '\\u03BD',\n\t      'Oacute': '\\u00D3',\n\t      'oacute': '\\u00F3',\n\t      'Ocirc': '\\u00D4',\n\t      'ocirc': '\\u00F4',\n\t      'OElig': '\\u0152',\n\t      'oelig': '\\u0153',\n\t      'Ograve': '\\u00D2',\n\t      'ograve': '\\u00F2',\n\t      'oline': '\\u203E',\n\t      'Omega': '\\u03A9',\n\t      'omega': '\\u03C9',\n\t      'Omicron': '\\u039F',\n\t      'omicron': '\\u03BF',\n\t      'oplus': '\\u2295',\n\t      'or': '\\u2228',\n\t      'ordf': '\\u00AA',\n\t      'ordm': '\\u00BA',\n\t      'Oslash': '\\u00D8',\n\t      'oslash': '\\u00F8',\n\t      'Otilde': '\\u00D5',\n\t      'otilde': '\\u00F5',\n\t      'otimes': '\\u2297',\n\t      'Ouml': '\\u00D6',\n\t      'ouml': '\\u00F6',\n\t      'para': '\\u00B6',\n\t      'permil': '\\u2030',\n\t      'perp': '\\u22A5',\n\t      'Phi': '\\u03A6',\n\t      'phi': '\\u03C6',\n\t      'Pi': '\\u03A0',\n\t      'pi': '\\u03C0',\n\t      'piv': '\\u03D6',\n\t      'plusmn': '\\u00B1',\n\t      'pound': '\\u00A3',\n\t      'prime': '\\u2032',\n\t      'Prime': '\\u2033',\n\t      'prod': '\\u220F',\n\t      'prop': '\\u221D',\n\t      'Psi': '\\u03A8',\n\t      'psi': '\\u03C8',\n\t      'quot': '\\u0022',\n\t      'radic': '\\u221A',\n\t      'rang': '\\u27E9',\n\t      'raquo': '\\u00BB',\n\t      'rarr': '\\u2192',\n\t      'rArr': '\\u21D2',\n\t      'rceil': '\\u2309',\n\t      'rdquo': '\\u201D',\n\t      'real': '\\u211C',\n\t      'reg': '\\u00AE',\n\t      'rfloor': '\\u230B',\n\t      'Rho': '\\u03A1',\n\t      'rho': '\\u03C1',\n\t      'rlm': '\\u200F',\n\t      'rsaquo': '\\u203A',\n\t      'rsquo': '\\u2019',\n\t      'sbquo': '\\u201A',\n\t      'Scaron': '\\u0160',\n\t      'scaron': '\\u0161',\n\t      'sdot': '\\u22C5',\n\t      'sect': '\\u00A7',\n\t      'shy': '\\u00AD',\n\t      'Sigma': '\\u03A3',\n\t      'sigma': '\\u03C3',\n\t      'sigmaf': '\\u03C2',\n\t      'sim': '\\u223C',\n\t      'spades': '\\u2660',\n\t      'sub': '\\u2282',\n\t      'sube': '\\u2286',\n\t      'sum': '\\u2211',\n\t      'sup': '\\u2283',\n\t      'sup1': '\\u00B9',\n\t      'sup2': '\\u00B2',\n\t      'sup3': '\\u00B3',\n\t      'supe': '\\u2287',\n\t      'szlig': '\\u00DF',\n\t      'Tau': '\\u03A4',\n\t      'tau': '\\u03C4',\n\t      'there4': '\\u2234',\n\t      'Theta': '\\u0398',\n\t      'theta': '\\u03B8',\n\t      'thetasym': '\\u03D1',\n\t      'thinsp': '\\u2009',\n\t      'THORN': '\\u00DE',\n\t      'thorn': '\\u00FE',\n\t      'tilde': '\\u02DC',\n\t      'times': '\\u00D7',\n\t      'trade': '\\u2122',\n\t      'Uacute': '\\u00DA',\n\t      'uacute': '\\u00FA',\n\t      'uarr': '\\u2191',\n\t      'uArr': '\\u21D1',\n\t      'Ucirc': '\\u00DB',\n\t      'ucirc': '\\u00FB',\n\t      'Ugrave': '\\u00D9',\n\t      'ugrave': '\\u00F9',\n\t      'uml': '\\u00A8',\n\t      'upsih': '\\u03D2',\n\t      'Upsilon': '\\u03A5',\n\t      'upsilon': '\\u03C5',\n\t      'Uuml': '\\u00DC',\n\t      'uuml': '\\u00FC',\n\t      'weierp': '\\u2118',\n\t      'Xi': '\\u039E',\n\t      'xi': '\\u03BE',\n\t      'Yacute': '\\u00DD',\n\t      'yacute': '\\u00FD',\n\t      'yen': '\\u00A5',\n\t      'yuml': '\\u00FF',\n\t      'Yuml': '\\u0178',\n\t      'Zeta': '\\u0396',\n\t      'zeta': '\\u03B6',\n\t      'zwj': '\\u200D',\n\t      'zwnj': '\\u200C',\n\t  };\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$3 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var TokenType$1;\n\t  (function (TokenType) {\n\t      TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n\t      TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n\t      TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n\t      TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n\t      TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n\t      TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n\t      TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n\t      TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n\t      TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n\t      TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n\t      TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n\t      TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n\t      TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n\t      TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n\t      TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n\t      TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n\t      TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n\t      TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n\t      TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n\t      TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n\t  })(TokenType$1 || (TokenType$1 = {}));\n\t  var Token$1 = (function () {\n\t      function Token(type, parts, sourceSpan) {\n\t          this.type = type;\n\t          this.parts = parts;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      return Token;\n\t  }());\n\t  var TokenError = (function (_super) {\n\t      __extends$3(TokenError, _super);\n\t      function TokenError(errorMsg, tokenType, span) {\n\t          _super.call(this, span, errorMsg);\n\t          this.tokenType = tokenType;\n\t      }\n\t      return TokenError;\n\t  }(ParseError));\n\t  var TokenizeResult = (function () {\n\t      function TokenizeResult(tokens, errors) {\n\t          this.tokens = tokens;\n\t          this.errors = errors;\n\t      }\n\t      return TokenizeResult;\n\t  }());\n\t  function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n\t      if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n\t      if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t      return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n\t          .tokenize();\n\t  }\n\t  var _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n\t  function _unexpectedCharacterErrorMsg(charCode) {\n\t      var char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n\t      return \"Unexpected character \\\"\" + char + \"\\\"\";\n\t  }\n\t  function _unknownEntityErrorMsg(entitySrc) {\n\t      return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n\t  }\n\t  var _ControlFlowError = (function () {\n\t      function _ControlFlowError(error) {\n\t          this.error = error;\n\t      }\n\t      return _ControlFlowError;\n\t  }());\n\t  // See http://www.w3.org/TR/html51/syntax.html#writing\n\t  var _Tokenizer = (function () {\n\t      /**\n\t       * @param _file The html source\n\t       * @param _getTagDefinition\n\t       * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n\t       * @param _interpolationConfig\n\t       */\n\t      function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n\t          if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          this._file = _file;\n\t          this._getTagDefinition = _getTagDefinition;\n\t          this._tokenizeIcu = _tokenizeIcu;\n\t          this._interpolationConfig = _interpolationConfig;\n\t          // Note: this is always lowercase!\n\t          this._peek = -1;\n\t          this._nextPeek = -1;\n\t          this._index = -1;\n\t          this._line = 0;\n\t          this._column = -1;\n\t          this._expansionCaseStack = [];\n\t          this._inInterpolation = false;\n\t          this.tokens = [];\n\t          this.errors = [];\n\t          this._input = _file.content;\n\t          this._length = _file.content.length;\n\t          this._advance();\n\t      }\n\t      _Tokenizer.prototype._processCarriageReturns = function (content) {\n\t          // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n\t          // In order to keep the original position in the source, we can not\n\t          // pre-process it.\n\t          // Instead CRs are processed right before instantiating the tokens.\n\t          return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n\t      };\n\t      _Tokenizer.prototype.tokenize = function () {\n\t          while (this._peek !== $EOF) {\n\t              var start = this._getLocation();\n\t              try {\n\t                  if (this._attemptCharCode($LT)) {\n\t                      if (this._attemptCharCode($BANG)) {\n\t                          if (this._attemptCharCode($LBRACKET)) {\n\t                              this._consumeCdata(start);\n\t                          }\n\t                          else if (this._attemptCharCode($MINUS)) {\n\t                              this._consumeComment(start);\n\t                          }\n\t                          else {\n\t                              this._consumeDocType(start);\n\t                          }\n\t                      }\n\t                      else if (this._attemptCharCode($SLASH)) {\n\t                          this._consumeTagClose(start);\n\t                      }\n\t                      else {\n\t                          this._consumeTagOpen(start);\n\t                      }\n\t                  }\n\t                  else if (!this._tokenizeIcu || !this._tokenizeExpansionForm()) {\n\t                      this._consumeText();\n\t                  }\n\t              }\n\t              catch (e) {\n\t                  if (e instanceof _ControlFlowError) {\n\t                      this.errors.push(e.error);\n\t                  }\n\t                  else {\n\t                      throw e;\n\t                  }\n\t              }\n\t          }\n\t          this._beginToken(TokenType$1.EOF);\n\t          this._endToken([]);\n\t          return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n\t      };\n\t      /**\n\t       * @returns {boolean} whether an ICU token has been created\n\t       * @internal\n\t       */\n\t      _Tokenizer.prototype._tokenizeExpansionForm = function () {\n\t          if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n\t              this._consumeExpansionFormStart();\n\t              return true;\n\t          }\n\t          if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n\t              this._consumeExpansionCaseStart();\n\t              return true;\n\t          }\n\t          if (this._peek === $RBRACE) {\n\t              if (this._isInExpansionCase()) {\n\t                  this._consumeExpansionCaseEnd();\n\t                  return true;\n\t              }\n\t              if (this._isInExpansionForm()) {\n\t                  this._consumeExpansionFormEnd();\n\t                  return true;\n\t              }\n\t          }\n\t          return false;\n\t      };\n\t      _Tokenizer.prototype._getLocation = function () {\n\t          return new ParseLocation(this._file, this._index, this._line, this._column);\n\t      };\n\t      _Tokenizer.prototype._getSpan = function (start, end) {\n\t          if (start === void 0) { start = this._getLocation(); }\n\t          if (end === void 0) { end = this._getLocation(); }\n\t          return new ParseSourceSpan(start, end);\n\t      };\n\t      _Tokenizer.prototype._beginToken = function (type, start) {\n\t          if (start === void 0) { start = this._getLocation(); }\n\t          this._currentTokenStart = start;\n\t          this._currentTokenType = type;\n\t      };\n\t      _Tokenizer.prototype._endToken = function (parts, end) {\n\t          if (end === void 0) { end = this._getLocation(); }\n\t          var token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n\t          this.tokens.push(token);\n\t          this._currentTokenStart = null;\n\t          this._currentTokenType = null;\n\t          return token;\n\t      };\n\t      _Tokenizer.prototype._createError = function (msg, span) {\n\t          if (this._isInExpansionForm()) {\n\t              msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n\t          }\n\t          var error = new TokenError(msg, this._currentTokenType, span);\n\t          this._currentTokenStart = null;\n\t          this._currentTokenType = null;\n\t          return new _ControlFlowError(error);\n\t      };\n\t      _Tokenizer.prototype._advance = function () {\n\t          if (this._index >= this._length) {\n\t              throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n\t          }\n\t          if (this._peek === $LF) {\n\t              this._line++;\n\t              this._column = 0;\n\t          }\n\t          else if (this._peek !== $LF && this._peek !== $CR) {\n\t              this._column++;\n\t          }\n\t          this._index++;\n\t          this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n\t          this._nextPeek =\n\t              this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n\t      };\n\t      _Tokenizer.prototype._attemptCharCode = function (charCode) {\n\t          if (this._peek === charCode) {\n\t              this._advance();\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n\t          if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n\t              this._advance();\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      _Tokenizer.prototype._requireCharCode = function (charCode) {\n\t          var location = this._getLocation();\n\t          if (!this._attemptCharCode(charCode)) {\n\t              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n\t          }\n\t      };\n\t      _Tokenizer.prototype._attemptStr = function (chars) {\n\t          var len = chars.length;\n\t          if (this._index + len > this._length) {\n\t              return false;\n\t          }\n\t          var initialPosition = this._savePosition();\n\t          for (var i = 0; i < len; i++) {\n\t              if (!this._attemptCharCode(chars.charCodeAt(i))) {\n\t                  // If attempting to parse the string fails, we want to reset the parser\n\t                  // to where it was before the attempt\n\t                  this._restorePosition(initialPosition);\n\t                  return false;\n\t              }\n\t          }\n\t          return true;\n\t      };\n\t      _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n\t          for (var i = 0; i < chars.length; i++) {\n\t              if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n\t                  return false;\n\t              }\n\t          }\n\t          return true;\n\t      };\n\t      _Tokenizer.prototype._requireStr = function (chars) {\n\t          var location = this._getLocation();\n\t          if (!this._attemptStr(chars)) {\n\t              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n\t          }\n\t      };\n\t      _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n\t          while (!predicate(this._peek)) {\n\t              this._advance();\n\t          }\n\t      };\n\t      _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n\t          var start = this._getLocation();\n\t          this._attemptCharCodeUntilFn(predicate);\n\t          if (this._index - start.offset < len) {\n\t              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n\t          }\n\t      };\n\t      _Tokenizer.prototype._attemptUntilChar = function (char) {\n\t          while (this._peek !== char) {\n\t              this._advance();\n\t          }\n\t      };\n\t      _Tokenizer.prototype._readChar = function (decodeEntities) {\n\t          if (decodeEntities && this._peek === $AMPERSAND) {\n\t              return this._decodeEntity();\n\t          }\n\t          else {\n\t              var index = this._index;\n\t              this._advance();\n\t              return this._input[index];\n\t          }\n\t      };\n\t      _Tokenizer.prototype._decodeEntity = function () {\n\t          var start = this._getLocation();\n\t          this._advance();\n\t          if (this._attemptCharCode($HASH)) {\n\t              var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n\t              var numberStart = this._getLocation().offset;\n\t              this._attemptCharCodeUntilFn(isDigitEntityEnd);\n\t              if (this._peek != $SEMICOLON) {\n\t                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n\t              }\n\t              this._advance();\n\t              var strNum = this._input.substring(numberStart, this._index - 1);\n\t              try {\n\t                  var charCode = parseInt(strNum, isHex ? 16 : 10);\n\t                  return String.fromCharCode(charCode);\n\t              }\n\t              catch (e) {\n\t                  var entity = this._input.substring(start.offset + 1, this._index - 1);\n\t                  throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n\t              }\n\t          }\n\t          else {\n\t              var startPosition = this._savePosition();\n\t              this._attemptCharCodeUntilFn(isNamedEntityEnd);\n\t              if (this._peek != $SEMICOLON) {\n\t                  this._restorePosition(startPosition);\n\t                  return '&';\n\t              }\n\t              this._advance();\n\t              var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n\t              var char = NAMED_ENTITIES[name_1];\n\t              if (!char) {\n\t                  throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n\t              }\n\t              return char;\n\t          }\n\t      };\n\t      _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n\t          var tagCloseStart;\n\t          var textStart = this._getLocation();\n\t          this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n\t          var parts = [];\n\t          while (true) {\n\t              tagCloseStart = this._getLocation();\n\t              if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n\t                  break;\n\t              }\n\t              if (this._index > tagCloseStart.offset) {\n\t                  // add the characters consumed by the previous if statement to the output\n\t                  parts.push(this._input.substring(tagCloseStart.offset, this._index));\n\t              }\n\t              while (this._peek !== firstCharOfEnd) {\n\t                  parts.push(this._readChar(decodeEntities));\n\t              }\n\t          }\n\t          return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n\t      };\n\t      _Tokenizer.prototype._consumeComment = function (start) {\n\t          var _this = this;\n\t          this._beginToken(TokenType$1.COMMENT_START, start);\n\t          this._requireCharCode($MINUS);\n\t          this._endToken([]);\n\t          var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n\t          this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n\t          this._endToken([]);\n\t      };\n\t      _Tokenizer.prototype._consumeCdata = function (start) {\n\t          var _this = this;\n\t          this._beginToken(TokenType$1.CDATA_START, start);\n\t          this._requireStr('CDATA[');\n\t          this._endToken([]);\n\t          var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n\t          this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n\t          this._endToken([]);\n\t      };\n\t      _Tokenizer.prototype._consumeDocType = function (start) {\n\t          this._beginToken(TokenType$1.DOC_TYPE, start);\n\t          this._attemptUntilChar($GT);\n\t          this._advance();\n\t          this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n\t      };\n\t      _Tokenizer.prototype._consumePrefixAndName = function () {\n\t          var nameOrPrefixStart = this._index;\n\t          var prefix = null;\n\t          while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n\t              this._advance();\n\t          }\n\t          var nameStart;\n\t          if (this._peek === $COLON) {\n\t              this._advance();\n\t              prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n\t              nameStart = this._index;\n\t          }\n\t          else {\n\t              nameStart = nameOrPrefixStart;\n\t          }\n\t          this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n\t          var name = this._input.substring(nameStart, this._index);\n\t          return [prefix, name];\n\t      };\n\t      _Tokenizer.prototype._consumeTagOpen = function (start) {\n\t          var savedPos = this._savePosition();\n\t          var tagName;\n\t          var lowercaseTagName;\n\t          try {\n\t              if (!isAsciiLetter(this._peek)) {\n\t                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n\t              }\n\t              var nameStart = this._index;\n\t              this._consumeTagOpenStart(start);\n\t              tagName = this._input.substring(nameStart, this._index);\n\t              lowercaseTagName = tagName.toLowerCase();\n\t              this._attemptCharCodeUntilFn(isNotWhitespace);\n\t              while (this._peek !== $SLASH && this._peek !== $GT) {\n\t                  this._consumeAttributeName();\n\t                  this._attemptCharCodeUntilFn(isNotWhitespace);\n\t                  if (this._attemptCharCode($EQ)) {\n\t                      this._attemptCharCodeUntilFn(isNotWhitespace);\n\t                      this._consumeAttributeValue();\n\t                  }\n\t                  this._attemptCharCodeUntilFn(isNotWhitespace);\n\t              }\n\t              this._consumeTagOpenEnd();\n\t          }\n\t          catch (e) {\n\t              if (e instanceof _ControlFlowError) {\n\t                  // When the start tag is invalid, assume we want a \"<\"\n\t                  this._restorePosition(savedPos);\n\t                  // Back to back text tokens are merged at the end\n\t                  this._beginToken(TokenType$1.TEXT, start);\n\t                  this._endToken(['<']);\n\t                  return;\n\t              }\n\t              throw e;\n\t          }\n\t          var contentTokenType = this._getTagDefinition(tagName).contentType;\n\t          if (contentTokenType === TagContentType.RAW_TEXT) {\n\t              this._consumeRawTextWithTagClose(lowercaseTagName, false);\n\t          }\n\t          else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n\t              this._consumeRawTextWithTagClose(lowercaseTagName, true);\n\t          }\n\t      };\n\t      _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n\t          var _this = this;\n\t          var textToken = this._consumeRawText(decodeEntities, $LT, function () {\n\t              if (!_this._attemptCharCode($SLASH))\n\t                  return false;\n\t              _this._attemptCharCodeUntilFn(isNotWhitespace);\n\t              if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n\t                  return false;\n\t              _this._attemptCharCodeUntilFn(isNotWhitespace);\n\t              return _this._attemptCharCode($GT);\n\t          });\n\t          this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n\t          this._endToken([null, lowercaseTagName]);\n\t      };\n\t      _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n\t          this._beginToken(TokenType$1.TAG_OPEN_START, start);\n\t          var parts = this._consumePrefixAndName();\n\t          this._endToken(parts);\n\t      };\n\t      _Tokenizer.prototype._consumeAttributeName = function () {\n\t          this._beginToken(TokenType$1.ATTR_NAME);\n\t          var prefixAndName = this._consumePrefixAndName();\n\t          this._endToken(prefixAndName);\n\t      };\n\t      _Tokenizer.prototype._consumeAttributeValue = function () {\n\t          this._beginToken(TokenType$1.ATTR_VALUE);\n\t          var value;\n\t          if (this._peek === $SQ || this._peek === $DQ) {\n\t              var quoteChar = this._peek;\n\t              this._advance();\n\t              var parts = [];\n\t              while (this._peek !== quoteChar) {\n\t                  parts.push(this._readChar(true));\n\t              }\n\t              value = parts.join('');\n\t              this._advance();\n\t          }\n\t          else {\n\t              var valueStart = this._index;\n\t              this._requireCharCodeUntilFn(isNameEnd, 1);\n\t              value = this._input.substring(valueStart, this._index);\n\t          }\n\t          this._endToken([this._processCarriageReturns(value)]);\n\t      };\n\t      _Tokenizer.prototype._consumeTagOpenEnd = function () {\n\t          var tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n\t          this._beginToken(tokenType);\n\t          this._requireCharCode($GT);\n\t          this._endToken([]);\n\t      };\n\t      _Tokenizer.prototype._consumeTagClose = function (start) {\n\t          this._beginToken(TokenType$1.TAG_CLOSE, start);\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          var prefixAndName = this._consumePrefixAndName();\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._requireCharCode($GT);\n\t          this._endToken(prefixAndName);\n\t      };\n\t      _Tokenizer.prototype._consumeExpansionFormStart = function () {\n\t          this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n\t          this._requireCharCode($LBRACE);\n\t          this._endToken([]);\n\t          this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n\t          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n\t          var condition = this._readUntil($COMMA);\n\t          this._endToken([condition], this._getLocation());\n\t          this._requireCharCode($COMMA);\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n\t          var type = this._readUntil($COMMA);\n\t          this._endToken([type], this._getLocation());\n\t          this._requireCharCode($COMMA);\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t      };\n\t      _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n\t          this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n\t          var value = this._readUntil($LBRACE).trim();\n\t          this._endToken([value], this._getLocation());\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n\t          this._requireCharCode($LBRACE);\n\t          this._endToken([], this._getLocation());\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n\t      };\n\t      _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n\t          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n\t          this._requireCharCode($RBRACE);\n\t          this._endToken([], this._getLocation());\n\t          this._attemptCharCodeUntilFn(isNotWhitespace);\n\t          this._expansionCaseStack.pop();\n\t      };\n\t      _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n\t          this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n\t          this._requireCharCode($RBRACE);\n\t          this._endToken([]);\n\t          this._expansionCaseStack.pop();\n\t      };\n\t      _Tokenizer.prototype._consumeText = function () {\n\t          var start = this._getLocation();\n\t          this._beginToken(TokenType$1.TEXT, start);\n\t          var parts = [];\n\t          do {\n\t              if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n\t                  parts.push(this._interpolationConfig.start);\n\t                  this._inInterpolation = true;\n\t              }\n\t              else if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.end) &&\n\t                  this._inInterpolation) {\n\t                  parts.push(this._interpolationConfig.end);\n\t                  this._inInterpolation = false;\n\t              }\n\t              else {\n\t                  parts.push(this._readChar(true));\n\t              }\n\t          } while (!this._isTextEnd());\n\t          this._endToken([this._processCarriageReturns(parts.join(''))]);\n\t      };\n\t      _Tokenizer.prototype._isTextEnd = function () {\n\t          if (this._peek === $LT || this._peek === $EOF) {\n\t              return true;\n\t          }\n\t          if (this._tokenizeIcu && !this._inInterpolation) {\n\t              if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n\t                  // start of an expansion form\n\t                  return true;\n\t              }\n\t              if (this._peek === $RBRACE && this._isInExpansionCase()) {\n\t                  // end of and expansion case\n\t                  return true;\n\t              }\n\t          }\n\t          return false;\n\t      };\n\t      _Tokenizer.prototype._savePosition = function () {\n\t          return [this._peek, this._index, this._column, this._line, this.tokens.length];\n\t      };\n\t      _Tokenizer.prototype._readUntil = function (char) {\n\t          var start = this._index;\n\t          this._attemptUntilChar(char);\n\t          return this._input.substring(start, this._index);\n\t      };\n\t      _Tokenizer.prototype._restorePosition = function (position) {\n\t          this._peek = position[0];\n\t          this._index = position[1];\n\t          this._column = position[2];\n\t          this._line = position[3];\n\t          var nbTokens = position[4];\n\t          if (nbTokens < this.tokens.length) {\n\t              // remove any extra tokens\n\t              this.tokens = this.tokens.slice(0, nbTokens);\n\t          }\n\t      };\n\t      _Tokenizer.prototype._isInExpansionCase = function () {\n\t          return this._expansionCaseStack.length > 0 &&\n\t              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n\t                  TokenType$1.EXPANSION_CASE_EXP_START;\n\t      };\n\t      _Tokenizer.prototype._isInExpansionForm = function () {\n\t          return this._expansionCaseStack.length > 0 &&\n\t              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n\t                  TokenType$1.EXPANSION_FORM_START;\n\t      };\n\t      return _Tokenizer;\n\t  }());\n\t  function isNotWhitespace(code) {\n\t      return !isWhitespace(code) || code === $EOF;\n\t  }\n\t  function isNameEnd(code) {\n\t      return isWhitespace(code) || code === $GT || code === $SLASH ||\n\t          code === $SQ || code === $DQ || code === $EQ;\n\t  }\n\t  function isPrefixEnd(code) {\n\t      return (code < $a || $z < code) && (code < $A || $Z < code) &&\n\t          (code < $0 || code > $9);\n\t  }\n\t  function isDigitEntityEnd(code) {\n\t      return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n\t  }\n\t  function isNamedEntityEnd(code) {\n\t      return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n\t  }\n\t  function isExpansionFormStart(input, offset, interpolationConfig) {\n\t      var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n\t      return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n\t  }\n\t  function isExpansionCaseStart(peek) {\n\t      return peek === $EQ || isAsciiLetter(peek);\n\t  }\n\t  function compareCharCodeCaseInsensitive(code1, code2) {\n\t      return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n\t  }\n\t  function toUpperCaseCharCode(code) {\n\t      return code >= $a && code <= $z ? code - $a + $A : code;\n\t  }\n\t  function mergeTextTokens(srcTokens) {\n\t      var dstTokens = [];\n\t      var lastDstToken;\n\t      for (var i = 0; i < srcTokens.length; i++) {\n\t          var token = srcTokens[i];\n\t          if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n\t              lastDstToken.parts[0] += token.parts[0];\n\t              lastDstToken.sourceSpan.end = token.sourceSpan.end;\n\t          }\n\t          else {\n\t              lastDstToken = token;\n\t              dstTokens.push(lastDstToken);\n\t          }\n\t      }\n\t      return dstTokens;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$2 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var TreeError = (function (_super) {\n\t      __extends$2(TreeError, _super);\n\t      function TreeError(elementName, span, msg) {\n\t          _super.call(this, span, msg);\n\t          this.elementName = elementName;\n\t      }\n\t      TreeError.create = function (elementName, span, msg) {\n\t          return new TreeError(elementName, span, msg);\n\t      };\n\t      return TreeError;\n\t  }(ParseError));\n\t  var ParseTreeResult = (function () {\n\t      function ParseTreeResult(rootNodes, errors) {\n\t          this.rootNodes = rootNodes;\n\t          this.errors = errors;\n\t      }\n\t      return ParseTreeResult;\n\t  }());\n\t  var Parser$1 = (function () {\n\t      function Parser(getTagDefinition) {\n\t          this.getTagDefinition = getTagDefinition;\n\t      }\n\t      Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n\t          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n\t          var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n\t          return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n\t      };\n\t      return Parser;\n\t  }());\n\t  var _TreeBuilder = (function () {\n\t      function _TreeBuilder(tokens, getTagDefinition) {\n\t          this.tokens = tokens;\n\t          this.getTagDefinition = getTagDefinition;\n\t          this._index = -1;\n\t          this._rootNodes = [];\n\t          this._errors = [];\n\t          this._elementStack = [];\n\t          this._advance();\n\t      }\n\t      _TreeBuilder.prototype.build = function () {\n\t          while (this._peek.type !== TokenType$1.EOF) {\n\t              if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n\t                  this._consumeStartTag(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n\t                  this._consumeEndTag(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.CDATA_START) {\n\t                  this._closeVoidElement();\n\t                  this._consumeCdata(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.COMMENT_START) {\n\t                  this._closeVoidElement();\n\t                  this._consumeComment(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n\t                  this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n\t                  this._closeVoidElement();\n\t                  this._consumeText(this._advance());\n\t              }\n\t              else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n\t                  this._consumeExpansion(this._advance());\n\t              }\n\t              else {\n\t                  // Skip all other tokens...\n\t                  this._advance();\n\t              }\n\t          }\n\t          return new ParseTreeResult(this._rootNodes, this._errors);\n\t      };\n\t      _TreeBuilder.prototype._advance = function () {\n\t          var prev = this._peek;\n\t          if (this._index < this.tokens.length - 1) {\n\t              // Note: there is always an EOF token at the end\n\t              this._index++;\n\t          }\n\t          this._peek = this.tokens[this._index];\n\t          return prev;\n\t      };\n\t      _TreeBuilder.prototype._advanceIf = function (type) {\n\t          if (this._peek.type === type) {\n\t              return this._advance();\n\t          }\n\t          return null;\n\t      };\n\t      _TreeBuilder.prototype._consumeCdata = function (startToken) {\n\t          this._consumeText(this._advance());\n\t          this._advanceIf(TokenType$1.CDATA_END);\n\t      };\n\t      _TreeBuilder.prototype._consumeComment = function (token) {\n\t          var text = this._advanceIf(TokenType$1.RAW_TEXT);\n\t          this._advanceIf(TokenType$1.COMMENT_END);\n\t          var value = isPresent(text) ? text.parts[0].trim() : null;\n\t          this._addToParent(new Comment(value, token.sourceSpan));\n\t      };\n\t      _TreeBuilder.prototype._consumeExpansion = function (token) {\n\t          var switchValue = this._advance();\n\t          var type = this._advance();\n\t          var cases = [];\n\t          // read =\n\t          while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n\t              var expCase = this._parseExpansionCase();\n\t              if (!expCase)\n\t                  return; // error\n\t              cases.push(expCase);\n\t          }\n\t          // read the final }\n\t          if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n\t              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n\t              return;\n\t          }\n\t          var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n\t          this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n\t          this._advance();\n\t      };\n\t      _TreeBuilder.prototype._parseExpansionCase = function () {\n\t          var value = this._advance();\n\t          // read {\n\t          if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n\t              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n\t              return null;\n\t          }\n\t          // read until }\n\t          var start = this._advance();\n\t          var exp = this._collectExpansionExpTokens(start);\n\t          if (!exp)\n\t              return null;\n\t          var end = this._advance();\n\t          exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n\t          // parse everything in between { and }\n\t          var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n\t          if (parsedExp.errors.length > 0) {\n\t              this._errors = this._errors.concat(parsedExp.errors);\n\t              return null;\n\t          }\n\t          var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n\t          var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n\t          return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n\t      };\n\t      _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n\t          var exp = [];\n\t          var expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n\t          while (true) {\n\t              if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n\t                  this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n\t                  expansionFormStack.push(this._peek.type);\n\t              }\n\t              if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n\t                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n\t                      expansionFormStack.pop();\n\t                      if (expansionFormStack.length == 0)\n\t                          return exp;\n\t                  }\n\t                  else {\n\t                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n\t                      return null;\n\t                  }\n\t              }\n\t              if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n\t                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n\t                      expansionFormStack.pop();\n\t                  }\n\t                  else {\n\t                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n\t                      return null;\n\t                  }\n\t              }\n\t              if (this._peek.type === TokenType$1.EOF) {\n\t                  this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n\t                  return null;\n\t              }\n\t              exp.push(this._advance());\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._consumeText = function (token) {\n\t          var text = token.parts[0];\n\t          if (text.length > 0 && text[0] == '\\n') {\n\t              var parent_1 = this._getParentElement();\n\t              if (isPresent(parent_1) && parent_1.children.length == 0 &&\n\t                  this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n\t                  text = text.substring(1);\n\t              }\n\t          }\n\t          if (text.length > 0) {\n\t              this._addToParent(new Text(text, token.sourceSpan));\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._closeVoidElement = function () {\n\t          if (this._elementStack.length > 0) {\n\t              var el = this._elementStack[this._elementStack.length - 1];\n\t              if (this.getTagDefinition(el.name).isVoid) {\n\t                  this._elementStack.pop();\n\t              }\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n\t          var prefix = startTagToken.parts[0];\n\t          var name = startTagToken.parts[1];\n\t          var attrs = [];\n\t          while (this._peek.type === TokenType$1.ATTR_NAME) {\n\t              attrs.push(this._consumeAttr(this._advance()));\n\t          }\n\t          var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n\t          var selfClosing = false;\n\t          // Note: There could have been a tokenizer error\n\t          // so that we don't get a token for the end tag...\n\t          if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n\t              this._advance();\n\t              selfClosing = true;\n\t              var tagDef = this.getTagDefinition(fullName);\n\t              if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n\t                  this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n\t              }\n\t          }\n\t          else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n\t              this._advance();\n\t              selfClosing = false;\n\t          }\n\t          var end = this._peek.sourceSpan.start;\n\t          var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n\t          var el = new Element(fullName, attrs, [], span, span, null);\n\t          this._pushElement(el);\n\t          if (selfClosing) {\n\t              this._popElement(fullName);\n\t              el.endSourceSpan = span;\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._pushElement = function (el) {\n\t          if (this._elementStack.length > 0) {\n\t              var parentEl = this._elementStack[this._elementStack.length - 1];\n\t              if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n\t                  this._elementStack.pop();\n\t              }\n\t          }\n\t          var tagDef = this.getTagDefinition(el.name);\n\t          var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n\t          if (isPresent(parent) && tagDef.requireExtraParent(parent.name)) {\n\t              var newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n\t              this._insertBeforeContainer(parent, container, newParent);\n\t          }\n\t          this._addToParent(el);\n\t          this._elementStack.push(el);\n\t      };\n\t      _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n\t          var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\t          if (this._getParentElement()) {\n\t              this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n\t          }\n\t          if (this.getTagDefinition(fullName).isVoid) {\n\t              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n\t          }\n\t          else if (!this._popElement(fullName)) {\n\t              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Unexpected closing tag \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._popElement = function (fullName) {\n\t          for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n\t              var el = this._elementStack[stackIndex];\n\t              if (el.name == fullName) {\n\t                  this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n\t                  return true;\n\t              }\n\t              if (!this.getTagDefinition(el.name).closedByParent) {\n\t                  return false;\n\t              }\n\t          }\n\t          return false;\n\t      };\n\t      _TreeBuilder.prototype._consumeAttr = function (attrName) {\n\t          var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n\t          var end = attrName.sourceSpan.end;\n\t          var value = '';\n\t          var valueSpan;\n\t          if (this._peek.type === TokenType$1.ATTR_VALUE) {\n\t              var valueToken = this._advance();\n\t              value = valueToken.parts[0];\n\t              end = valueToken.sourceSpan.end;\n\t              valueSpan = valueToken.sourceSpan;\n\t          }\n\t          return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n\t      };\n\t      _TreeBuilder.prototype._getParentElement = function () {\n\t          return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n\t      };\n\t      /**\n\t       * Returns the parent in the DOM and the container.\n\t       *\n\t       * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n\t       */\n\t      _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n\t          var container = null;\n\t          for (var i = this._elementStack.length - 1; i >= 0; i--) {\n\t              if (this._elementStack[i].name !== 'ng-container') {\n\t                  return { parent: this._elementStack[i], container: container };\n\t              }\n\t              container = this._elementStack[i];\n\t          }\n\t          return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n\t      };\n\t      _TreeBuilder.prototype._addToParent = function (node) {\n\t          var parent = this._getParentElement();\n\t          if (isPresent(parent)) {\n\t              parent.children.push(node);\n\t          }\n\t          else {\n\t              this._rootNodes.push(node);\n\t          }\n\t      };\n\t      /**\n\t       * Insert a node between the parent and the container.\n\t       * When no container is given, the node is appended as a child of the parent.\n\t       * Also updates the element stack accordingly.\n\t       *\n\t       * @internal\n\t       */\n\t      _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n\t          if (!container) {\n\t              this._addToParent(node);\n\t              this._elementStack.push(node);\n\t          }\n\t          else {\n\t              if (parent) {\n\t                  // replace the container with the new node in the children\n\t                  var index = parent.children.indexOf(container);\n\t                  parent.children[index] = node;\n\t              }\n\t              else {\n\t                  this._rootNodes.push(node);\n\t              }\n\t              node.children.push(container);\n\t              this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n\t          }\n\t      };\n\t      _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n\t          if (isBlank(prefix)) {\n\t              prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n\t              if (isBlank(prefix) && isPresent(parentElement)) {\n\t                  prefix = getNsPrefix(parentElement.name);\n\t              }\n\t          }\n\t          return mergeNsAndName(prefix, localName);\n\t      };\n\t      return _TreeBuilder;\n\t  }());\n\t  function lastOnStack(stack, element) {\n\t      return stack.length > 0 && stack[stack.length - 1] === element;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  function digestMessage(message) {\n\t      return sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n\t  }\n\t  /**\n\t   * Serialize the i18n ast to something xml-like in order to generate an UID.\n\t   *\n\t   * The visitor is also used in the i18n parser tests\n\t   *\n\t   * @internal\n\t   */\n\t  var _SerializerVisitor = (function () {\n\t      function _SerializerVisitor() {\n\t      }\n\t      _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n\t      _SerializerVisitor.prototype.visitContainer = function (container, context) {\n\t          var _this = this;\n\t          return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n\t      };\n\t      _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n\t          var _this = this;\n\t          var strCases = Object.keys(icu.cases).map(function (k) { return (k + \" {\" + icu.cases[k].visit(_this) + \"}\"); });\n\t          return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n\t      };\n\t      _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n\t          var _this = this;\n\t          return ph.isVoid ?\n\t              \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n\t              \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n\t      };\n\t      _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n\t          return \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\";\n\t      };\n\t      _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n\t          return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n\t      };\n\t      return _SerializerVisitor;\n\t  }());\n\t  var serializerVisitor = new _SerializerVisitor();\n\t  function serializeNodes(nodes) {\n\t      return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n\t  }\n\t  /**\n\t   * Compute the SHA1 of the given string\n\t   *\n\t   * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n\t   *\n\t   * WARNING: this function has not been designed not tested with security in mind.\n\t   *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n\t   */\n\t  function sha1(str) {\n\t      var utf8 = utf8Encode(str);\n\t      var words32 = stringToWords32(utf8);\n\t      var len = utf8.length * 8;\n\t      var w = new Array(80);\n\t      var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n\t      words32[len >> 5] |= 0x80 << (24 - len % 32);\n\t      words32[((len + 64 >> 9) << 4) + 15] = len;\n\t      for (var i = 0; i < words32.length; i += 16) {\n\t          var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n\t          for (var j = 0; j < 80; j++) {\n\t              if (j < 16) {\n\t                  w[j] = words32[i + j];\n\t              }\n\t              else {\n\t                  w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n\t              }\n\t              var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n\t              var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n\t              _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n\t          }\n\t          _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n\t      }\n\t      var sha1 = words32ToString([a, b, c, d, e]);\n\t      var hex = '';\n\t      for (var i = 0; i < sha1.length; i++) {\n\t          var b_1 = sha1.charCodeAt(i);\n\t          hex += (b_1 >>> 4 & 0x0f).toString(16) + (b_1 & 0x0f).toString(16);\n\t      }\n\t      return hex.toLowerCase();\n\t      var _d, _e;\n\t  }\n\t  function utf8Encode(str) {\n\t      var encoded = '';\n\t      for (var index = 0; index < str.length; index++) {\n\t          var codePoint = decodeSurrogatePairs(str, index);\n\t          if (codePoint <= 0x7f) {\n\t              encoded += String.fromCharCode(codePoint);\n\t          }\n\t          else if (codePoint <= 0x7ff) {\n\t              encoded += String.fromCharCode(0xc0 | codePoint >>> 6, 0x80 | codePoint & 0x3f);\n\t          }\n\t          else if (codePoint <= 0xffff) {\n\t              encoded += String.fromCharCode(0xe0 | codePoint >>> 12, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n\t          }\n\t          else if (codePoint <= 0x1fffff) {\n\t              encoded += String.fromCharCode(0xf0 | codePoint >>> 18, 0x80 | codePoint >>> 12 & 0x3f, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n\t          }\n\t      }\n\t      return encoded;\n\t  }\n\t  // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t  function decodeSurrogatePairs(str, index) {\n\t      if (index < 0 || index >= str.length) {\n\t          throw new Error(\"index=\" + index + \" is out of range in \\\"\" + str + \"\\\"\");\n\t      }\n\t      var high = str.charCodeAt(index);\n\t      var low;\n\t      if (high >= 0xd800 && high <= 0xdfff && str.length > index + 1) {\n\t          low = str.charCodeAt(index + 1);\n\t          if (low >= 0xdc00 && low <= 0xdfff) {\n\t              return (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n\t          }\n\t      }\n\t      return high;\n\t  }\n\t  function stringToWords32(str) {\n\t      var words32 = Array(str.length >>> 2);\n\t      for (var i = 0; i < words32.length; i++) {\n\t          words32[i] = 0;\n\t      }\n\t      for (var i = 0; i < str.length; i++) {\n\t          words32[i >>> 2] |= (str.charCodeAt(i) & 0xff) << 8 * (3 - i & 0x3);\n\t      }\n\t      return words32;\n\t  }\n\t  function words32ToString(words32) {\n\t      var str = '';\n\t      for (var i = 0; i < words32.length * 4; i++) {\n\t          str += String.fromCharCode((words32[i >>> 2] >>> 8 * (3 - i & 0x3)) & 0xff);\n\t      }\n\t      return str;\n\t  }\n\t  function fk(index, b, c, d) {\n\t      if (index < 20) {\n\t          return [(b & c) | (~b & d), 0x5a827999];\n\t      }\n\t      if (index < 40) {\n\t          return [b ^ c ^ d, 0x6ed9eba1];\n\t      }\n\t      if (index < 60) {\n\t          return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n\t      }\n\t      return [b ^ c ^ d, 0xca62c1d6];\n\t  }\n\t  function add32(a, b) {\n\t      var low = (a & 0xffff) + (b & 0xffff);\n\t      var high = (a >> 16) + (b >> 16) + (low >> 16);\n\t      return (high << 16) | (low & 0xffff);\n\t  }\n\t  function rol32(a, count) {\n\t      return (a << count) | (a >>> (32 - count));\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var Message = (function () {\n\t      /**\n\t       * @param nodes message AST\n\t       * @param placeholders maps placeholder names to static content\n\t       * @param placeholderToMsgIds maps placeholder names to translatable message IDs (used for ICU\n\t       *                            messages)\n\t       * @param meaning\n\t       * @param description\n\t       */\n\t      function Message(nodes, placeholders, placeholderToMsgIds, meaning, description) {\n\t          this.nodes = nodes;\n\t          this.placeholders = placeholders;\n\t          this.placeholderToMsgIds = placeholderToMsgIds;\n\t          this.meaning = meaning;\n\t          this.description = description;\n\t      }\n\t      return Message;\n\t  }());\n\t  var Text$1 = (function () {\n\t      function Text(value, sourceSpan) {\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n\t      return Text;\n\t  }());\n\t  var Container = (function () {\n\t      function Container(children, sourceSpan) {\n\t          this.children = children;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n\t      return Container;\n\t  }());\n\t  var Icu = (function () {\n\t      function Icu(expression, type, cases, sourceSpan) {\n\t          this.expression = expression;\n\t          this.type = type;\n\t          this.cases = cases;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n\t      return Icu;\n\t  }());\n\t  var TagPlaceholder = (function () {\n\t      function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n\t          this.tag = tag;\n\t          this.attrs = attrs;\n\t          this.startName = startName;\n\t          this.closeName = closeName;\n\t          this.children = children;\n\t          this.isVoid = isVoid;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n\t      return TagPlaceholder;\n\t  }());\n\t  var Placeholder = (function () {\n\t      function Placeholder(value, name, sourceSpan) {\n\t          if (name === void 0) { name = ''; }\n\t          this.value = value;\n\t          this.name = name;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n\t      return Placeholder;\n\t  }());\n\t  var IcuPlaceholder = (function () {\n\t      function IcuPlaceholder(value, name, sourceSpan) {\n\t          if (name === void 0) { name = ''; }\n\t          this.value = value;\n\t          this.name = name;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n\t      return IcuPlaceholder;\n\t  }());\n\t\n\t  var HtmlTagDefinition = (function () {\n\t      function HtmlTagDefinition(_a) {\n\t          var _this = this;\n\t          var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n\t          this.closedByChildren = {};\n\t          this.closedByParent = false;\n\t          this.canSelfClose = false;\n\t          if (closedByChildren && closedByChildren.length > 0) {\n\t              closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n\t          }\n\t          this.isVoid = isVoid;\n\t          this.closedByParent = closedByParent || isVoid;\n\t          if (requiredParents && requiredParents.length > 0) {\n\t              this.requiredParents = {};\n\t              // The first parent is the list is automatically when none of the listed parents are present\n\t              this.parentToAdd = requiredParents[0];\n\t              requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n\t          }\n\t          this.implicitNamespacePrefix = implicitNamespacePrefix;\n\t          this.contentType = contentType;\n\t          this.ignoreFirstLf = ignoreFirstLf;\n\t      }\n\t      HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n\t          if (!this.requiredParents) {\n\t              return false;\n\t          }\n\t          if (!currentParent) {\n\t              return true;\n\t          }\n\t          var lcParent = currentParent.toLowerCase();\n\t          return this.requiredParents[lcParent] != true && lcParent != 'template';\n\t      };\n\t      HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n\t          return this.isVoid || name.toLowerCase() in this.closedByChildren;\n\t      };\n\t      return HtmlTagDefinition;\n\t  }());\n\t  // see http://www.w3.org/TR/html51/syntax.html#optional-tags\n\t  // This implementation does not fully conform to the HTML5 spec.\n\t  var TAG_DEFINITIONS = {\n\t      'base': new HtmlTagDefinition({ isVoid: true }),\n\t      'meta': new HtmlTagDefinition({ isVoid: true }),\n\t      'area': new HtmlTagDefinition({ isVoid: true }),\n\t      'embed': new HtmlTagDefinition({ isVoid: true }),\n\t      'link': new HtmlTagDefinition({ isVoid: true }),\n\t      'img': new HtmlTagDefinition({ isVoid: true }),\n\t      'input': new HtmlTagDefinition({ isVoid: true }),\n\t      'param': new HtmlTagDefinition({ isVoid: true }),\n\t      'hr': new HtmlTagDefinition({ isVoid: true }),\n\t      'br': new HtmlTagDefinition({ isVoid: true }),\n\t      'source': new HtmlTagDefinition({ isVoid: true }),\n\t      'track': new HtmlTagDefinition({ isVoid: true }),\n\t      'wbr': new HtmlTagDefinition({ isVoid: true }),\n\t      'p': new HtmlTagDefinition({\n\t          closedByChildren: [\n\t              'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n\t              'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n\t              'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n\t          ],\n\t          closedByParent: true\n\t      }),\n\t      'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n\t      'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n\t      'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n\t      'tr': new HtmlTagDefinition({\n\t          closedByChildren: ['tr'],\n\t          requiredParents: ['tbody', 'tfoot', 'thead'],\n\t          closedByParent: true\n\t      }),\n\t      'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n\t      'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n\t      'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n\t      'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n\t      'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n\t      'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n\t      'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n\t      'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n\t      'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n\t      'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n\t      'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n\t      'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n\t      'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n\t      'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n\t      'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n\t      'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n\t      'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n\t      'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n\t      'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n\t      'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n\t  };\n\t  var _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n\t  function getHtmlTagDefinition(tagName) {\n\t      return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var TAG_TO_PLACEHOLDER_NAMES = {\n\t      'A': 'LINK',\n\t      'B': 'BOLD_TEXT',\n\t      'BR': 'LINE_BREAK',\n\t      'EM': 'EMPHASISED_TEXT',\n\t      'H1': 'HEADING_LEVEL1',\n\t      'H2': 'HEADING_LEVEL2',\n\t      'H3': 'HEADING_LEVEL3',\n\t      'H4': 'HEADING_LEVEL4',\n\t      'H5': 'HEADING_LEVEL5',\n\t      'H6': 'HEADING_LEVEL6',\n\t      'HR': 'HORIZONTAL_RULE',\n\t      'I': 'ITALIC_TEXT',\n\t      'LI': 'LIST_ITEM',\n\t      'LINK': 'MEDIA_LINK',\n\t      'OL': 'ORDERED_LIST',\n\t      'P': 'PARAGRAPH',\n\t      'Q': 'QUOTATION',\n\t      'S': 'STRIKETHROUGH_TEXT',\n\t      'SMALL': 'SMALL_TEXT',\n\t      'SUB': 'SUBSTRIPT',\n\t      'SUP': 'SUPERSCRIPT',\n\t      'TBODY': 'TABLE_BODY',\n\t      'TD': 'TABLE_CELL',\n\t      'TFOOT': 'TABLE_FOOTER',\n\t      'TH': 'TABLE_HEADER_CELL',\n\t      'THEAD': 'TABLE_HEADER',\n\t      'TR': 'TABLE_ROW',\n\t      'TT': 'MONOSPACED_TEXT',\n\t      'U': 'UNDERLINED_TEXT',\n\t      'UL': 'UNORDERED_LIST',\n\t  };\n\t  /**\n\t   * Creates unique names for placeholder with different content\n\t   *\n\t   * @internal\n\t   */\n\t  var PlaceholderRegistry = (function () {\n\t      function PlaceholderRegistry() {\n\t          // Count the occurrence of the base name top generate a unique name\n\t          this._placeHolderNameCounts = {};\n\t          // Maps signature to placeholder names\n\t          this._signatureToName = {};\n\t      }\n\t      PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n\t          var signature = this._hashTag(tag, attrs, isVoid);\n\t          if (this._signatureToName[signature]) {\n\t              return this._signatureToName[signature];\n\t          }\n\t          var upperTag = tag.toUpperCase();\n\t          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n\t          var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n\t          this._signatureToName[signature] = name;\n\t          return name;\n\t      };\n\t      PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n\t          var signature = this._hashClosingTag(tag);\n\t          if (this._signatureToName[signature]) {\n\t              return this._signatureToName[signature];\n\t          }\n\t          var upperTag = tag.toUpperCase();\n\t          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n\t          var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n\t          this._signatureToName[signature] = name;\n\t          return name;\n\t      };\n\t      PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n\t          var upperName = name.toUpperCase();\n\t          var signature = \"PH: \" + upperName + \"=\" + content;\n\t          if (this._signatureToName[signature]) {\n\t              return this._signatureToName[signature];\n\t          }\n\t          var uniqueName = this._generateUniqueName(upperName);\n\t          this._signatureToName[signature] = uniqueName;\n\t          return uniqueName;\n\t      };\n\t      // Generate a hash for a tag - does not take attribute order into account\n\t      PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n\t          var start = \"<\" + tag;\n\t          var strAttrs = Object.keys(attrs).sort().map(function (name) { return (\" \" + name + \"=\" + attrs[name]); }).join('');\n\t          var end = isVoid ? '/>' : \"></\" + tag + \">\";\n\t          return start + strAttrs + end;\n\t      };\n\t      PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n\t      PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n\t          var name = base;\n\t          var next = this._placeHolderNameCounts[name];\n\t          if (!next) {\n\t              next = 1;\n\t          }\n\t          else {\n\t              name += \"_\" + next;\n\t              next++;\n\t          }\n\t          this._placeHolderNameCounts[base] = next;\n\t          return name;\n\t      };\n\t      return PlaceholderRegistry;\n\t  }());\n\t\n\t  var _expParser = new Parser(new Lexer());\n\t  /**\n\t   * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n\t   */\n\t  function createI18nMessageFactory(interpolationConfig) {\n\t      var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n\t      return function (nodes, meaning, description) {\n\t          return visitor.toI18nMessage(nodes, meaning, description);\n\t      };\n\t  }\n\t  var _I18nVisitor = (function () {\n\t      function _I18nVisitor(_expressionParser, _interpolationConfig) {\n\t          this._expressionParser = _expressionParser;\n\t          this._interpolationConfig = _interpolationConfig;\n\t      }\n\t      _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description) {\n\t          this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n\t          this._icuDepth = 0;\n\t          this._placeholderRegistry = new PlaceholderRegistry();\n\t          this._placeholderToContent = {};\n\t          this._placeholderToIds = {};\n\t          var i18nodes = visitAll(this, nodes, {});\n\t          return new Message(i18nodes, this._placeholderToContent, this._placeholderToIds, meaning, description);\n\t      };\n\t      _I18nVisitor.prototype.visitElement = function (el, context) {\n\t          var children = visitAll(this, el.children);\n\t          var attrs = {};\n\t          el.attrs.forEach(function (attr) {\n\t              // Do not visit the attributes, translatable ones are top-level ASTs\n\t              attrs[attr.name] = attr.value;\n\t          });\n\t          var isVoid = getHtmlTagDefinition(el.name).isVoid;\n\t          var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n\t          this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n\t          var closePhName = '';\n\t          if (!isVoid) {\n\t              closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n\t              this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n\t          }\n\t          return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n\t      };\n\t      _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n\t          return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n\t      };\n\t      _I18nVisitor.prototype.visitText = function (text, context) {\n\t          return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n\t      };\n\t      _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n\t      _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n\t          var _this = this;\n\t          this._icuDepth++;\n\t          var i18nIcuCases = {};\n\t          var i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n\t          icu.cases.forEach(function (caze) {\n\t              i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n\t          });\n\t          this._icuDepth--;\n\t          if (this._isIcu || this._icuDepth > 0) {\n\t              // If the message (vs a part of the message) is an ICU message returns it\n\t              return i18nIcu;\n\t          }\n\t          // Else returns a placeholder\n\t          // ICU placeholders should not be replaced with their original content but with the their\n\t          // translations. We need to create a new visitor (they are not re-entrant) to compute the\n\t          // message id.\n\t          // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n\t          var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n\t          var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n\t          this._placeholderToIds[phName] = digestMessage(visitor.toI18nMessage([icu], '', ''));\n\t          return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n\t      };\n\t      _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n\t          throw new Error('Unreachable code');\n\t      };\n\t      _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n\t          var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n\t          if (!splitInterpolation) {\n\t              // No expression, return a single text\n\t              return new Text$1(text, sourceSpan);\n\t          }\n\t          // Return a group of text + expressions\n\t          var nodes = [];\n\t          var container = new Container(nodes, sourceSpan);\n\t          var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n\t          for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n\t              var expression = splitInterpolation.expressions[i];\n\t              var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n\t              var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n\t              if (splitInterpolation.strings[i].length) {\n\t                  // No need to add empty strings\n\t                  nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n\t              }\n\t              nodes.push(new Placeholder(expression, phName, sourceSpan));\n\t              this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n\t          }\n\t          // The last index contains no expression\n\t          var lastStringIdx = splitInterpolation.strings.length - 1;\n\t          if (splitInterpolation.strings[lastStringIdx].length) {\n\t              nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n\t          }\n\t          return container;\n\t      };\n\t      return _I18nVisitor;\n\t  }());\n\t  var _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*\"([\\s\\S]*?)\"[\\s\\S]*\\)/g;\n\t  function _extractPlaceholderName(input) {\n\t      return input.split(_CUSTOM_PH_EXP)[1];\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$4 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  /**\n\t   * An i18n error.\n\t   */\n\t  var I18nError = (function (_super) {\n\t      __extends$4(I18nError, _super);\n\t      function I18nError(span, msg) {\n\t          _super.call(this, span, msg);\n\t      }\n\t      return I18nError;\n\t  }(ParseError));\n\t\n\t  var _I18N_ATTR = 'i18n';\n\t  var _I18N_ATTR_PREFIX = 'i18n-';\n\t  var _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\n\t  /**\n\t   * Extract translatable messages from an html AST\n\t   */\n\t  function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n\t      var visitor = new _Visitor(implicitTags, implicitAttrs);\n\t      return visitor.extract(nodes, interpolationConfig);\n\t  }\n\t  function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n\t      var visitor = new _Visitor(implicitTags, implicitAttrs);\n\t      return visitor.merge(nodes, translations, interpolationConfig);\n\t  }\n\t  var ExtractionResult = (function () {\n\t      function ExtractionResult(messages, errors) {\n\t          this.messages = messages;\n\t          this.errors = errors;\n\t      }\n\t      return ExtractionResult;\n\t  }());\n\t  var _VisitorMode;\n\t  (function (_VisitorMode) {\n\t      _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n\t      _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n\t  })(_VisitorMode || (_VisitorMode = {}));\n\t  /**\n\t   * This Visitor is used:\n\t   * 1. to extract all the translatable strings from an html AST (see `extract()`),\n\t   * 2. to replace the translatable strings with the actual translations (see `merge()`)\n\t   *\n\t   * @internal\n\t   */\n\t  var _Visitor = (function () {\n\t      function _Visitor(_implicitTags, _implicitAttrs) {\n\t          this._implicitTags = _implicitTags;\n\t          this._implicitAttrs = _implicitAttrs;\n\t      }\n\t      /**\n\t       * Extracts the messages from the tree\n\t       */\n\t      _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n\t          var _this = this;\n\t          this._init(_VisitorMode.Extract, interpolationConfig);\n\t          nodes.forEach(function (node) { return node.visit(_this, null); });\n\t          if (this._inI18nBlock) {\n\t              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n\t          }\n\t          return new ExtractionResult(this._messages, this._errors);\n\t      };\n\t      /**\n\t       * Returns a tree where all translatable nodes are translated\n\t       */\n\t      _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n\t          this._init(_VisitorMode.Merge, interpolationConfig);\n\t          this._translations = translations;\n\t          // Construct a single fake root element\n\t          var wrapper = new Element('wrapper', [], nodes, null, null, null);\n\t          var translatedNode = wrapper.visit(this, null);\n\t          if (this._inI18nBlock) {\n\t              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n\t          }\n\t          return new ParseTreeResult(translatedNode.children, this._errors);\n\t      };\n\t      _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n\t          // Parse cases for translatable html attributes\n\t          var expression = visitAll(this, icuCase.expression, context);\n\t          if (this._mode === _VisitorMode.Merge) {\n\t              return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n\t          }\n\t      };\n\t      _Visitor.prototype.visitExpansion = function (icu, context) {\n\t          this._mayBeAddBlockChildren(icu);\n\t          var wasInIcu = this._inIcu;\n\t          if (!this._inIcu) {\n\t              // nested ICU messages should not be extracted but top-level translated as a whole\n\t              if (this._isInTranslatableSection) {\n\t                  this._addMessage([icu]);\n\t              }\n\t              this._inIcu = true;\n\t          }\n\t          var cases = visitAll(this, icu.cases, context);\n\t          if (this._mode === _VisitorMode.Merge) {\n\t              icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n\t          }\n\t          this._inIcu = wasInIcu;\n\t          return icu;\n\t      };\n\t      _Visitor.prototype.visitComment = function (comment, context) {\n\t          var isOpening = _isOpeningComment(comment);\n\t          if (isOpening && this._isInTranslatableSection) {\n\t              this._reportError(comment, 'Could not start a block inside a translatable section');\n\t              return;\n\t          }\n\t          var isClosing = _isClosingComment(comment);\n\t          if (isClosing && !this._inI18nBlock) {\n\t              this._reportError(comment, 'Trying to close an unopened block');\n\t              return;\n\t          }\n\t          if (!this._inI18nNode && !this._inIcu) {\n\t              if (!this._inI18nBlock) {\n\t                  if (isOpening) {\n\t                      this._inI18nBlock = true;\n\t                      this._blockStartDepth = this._depth;\n\t                      this._blockChildren = [];\n\t                      this._blockMeaningAndDesc = comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n\t                      this._openTranslatableSection(comment);\n\t                  }\n\t              }\n\t              else {\n\t                  if (isClosing) {\n\t                      if (this._depth == this._blockStartDepth) {\n\t                          this._closeTranslatableSection(comment, this._blockChildren);\n\t                          this._inI18nBlock = false;\n\t                          var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n\t                          // merge attributes in sections\n\t                          var nodes = this._translateMessage(comment, message);\n\t                          return visitAll(this, nodes);\n\t                      }\n\t                      else {\n\t                          this._reportError(comment, 'I18N blocks should not cross element boundaries');\n\t                          return;\n\t                      }\n\t                  }\n\t              }\n\t          }\n\t      };\n\t      _Visitor.prototype.visitText = function (text, context) {\n\t          if (this._isInTranslatableSection) {\n\t              this._mayBeAddBlockChildren(text);\n\t          }\n\t          return text;\n\t      };\n\t      _Visitor.prototype.visitElement = function (el, context) {\n\t          var _this = this;\n\t          this._mayBeAddBlockChildren(el);\n\t          this._depth++;\n\t          var wasInI18nNode = this._inI18nNode;\n\t          var wasInImplicitNode = this._inImplicitNode;\n\t          var childNodes;\n\t          // Extract only top level nodes with the (implicit) \"i18n\" attribute if not in a block or an ICU\n\t          // message\n\t          var i18nAttr = _getI18nAttr(el);\n\t          var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) &&\n\t              !this._inIcu && !this._isInTranslatableSection;\n\t          var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n\t          this._inImplicitNode = this._inImplicitNode || isImplicit;\n\t          if (!this._isInTranslatableSection && !this._inIcu) {\n\t              if (i18nAttr) {\n\t                  // explicit translation\n\t                  this._inI18nNode = true;\n\t                  var message = this._addMessage(el.children, i18nAttr.value);\n\t                  childNodes = this._translateMessage(el, message);\n\t              }\n\t              else if (isTopLevelImplicit) {\n\t                  // implicit translation\n\t                  this._inI18nNode = true;\n\t                  var message = this._addMessage(el.children);\n\t                  childNodes = this._translateMessage(el, message);\n\t              }\n\t              if (this._mode == _VisitorMode.Extract) {\n\t                  var isTranslatable = i18nAttr || isTopLevelImplicit;\n\t                  if (isTranslatable) {\n\t                      this._openTranslatableSection(el);\n\t                  }\n\t                  visitAll(this, el.children);\n\t                  if (isTranslatable) {\n\t                      this._closeTranslatableSection(el, el.children);\n\t                  }\n\t              }\n\t              if (this._mode === _VisitorMode.Merge && !i18nAttr && !isTopLevelImplicit) {\n\t                  childNodes = [];\n\t                  el.children.forEach(function (child) {\n\t                      var visited = child.visit(_this, context);\n\t                      if (visited && !_this._isInTranslatableSection) {\n\t                          // Do not add the children from translatable sections (= i18n blocks here)\n\t                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n\t                          childNodes = childNodes.concat(visited);\n\t                      }\n\t                  });\n\t              }\n\t          }\n\t          else {\n\t              if (i18nAttr || isTopLevelImplicit) {\n\t                  this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n\t              }\n\t              if (this._mode == _VisitorMode.Extract) {\n\t                  // Descend into child nodes for extraction\n\t                  visitAll(this, el.children);\n\t              }\n\t              if (this._mode == _VisitorMode.Merge) {\n\t                  // Translate attributes in ICU messages\n\t                  childNodes = [];\n\t                  el.children.forEach(function (child) {\n\t                      var visited = child.visit(_this, context);\n\t                      if (visited && !_this._isInTranslatableSection) {\n\t                          // Do not add the children from translatable sections (= i18n blocks here)\n\t                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n\t                          childNodes = childNodes.concat(visited);\n\t                      }\n\t                  });\n\t              }\n\t          }\n\t          this._visitAttributesOf(el);\n\t          this._depth--;\n\t          this._inI18nNode = wasInI18nNode;\n\t          this._inImplicitNode = wasInImplicitNode;\n\t          if (this._mode === _VisitorMode.Merge) {\n\t              // There are no childNodes in translatable sections - those nodes will be replace anyway\n\t              var translatedAttrs = this._translateAttributes(el);\n\t              return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n\t          }\n\t      };\n\t      _Visitor.prototype.visitAttribute = function (attribute, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _Visitor.prototype._init = function (mode, interpolationConfig) {\n\t          this._mode = mode;\n\t          this._inI18nBlock = false;\n\t          this._inI18nNode = false;\n\t          this._depth = 0;\n\t          this._inIcu = false;\n\t          this._msgCountAtSectionStart = void 0;\n\t          this._errors = [];\n\t          this._messages = [];\n\t          this._inImplicitNode = false;\n\t          this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n\t      };\n\t      // looks for translatable attributes\n\t      _Visitor.prototype._visitAttributesOf = function (el) {\n\t          var _this = this;\n\t          var explicitAttrNameToValue = {};\n\t          var implicitAttrNames = this._implicitAttrs[el.name] || [];\n\t          el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n\t              .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n\t              attr.value; });\n\t          el.attrs.forEach(function (attr) {\n\t              if (attr.name in explicitAttrNameToValue) {\n\t                  _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n\t              }\n\t              else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n\t                  _this._addMessage([attr]);\n\t              }\n\t          });\n\t      };\n\t      // add a translatable message\n\t      _Visitor.prototype._addMessage = function (ast, meaningAndDesc) {\n\t          if (ast.length == 0 ||\n\t              ast.length == 1 && ast[0] instanceof Attribute$1 && !ast[0].value) {\n\t              // Do not create empty messages\n\t              return;\n\t          }\n\t          var _a = _splitMeaningAndDesc(meaningAndDesc), meaning = _a[0], description = _a[1];\n\t          var message = this._createI18nMessage(ast, meaning, description);\n\t          this._messages.push(message);\n\t          return message;\n\t      };\n\t      // Translates the given message given the `TranslationBundle`\n\t      // no-op when called in extraction mode (returns [])\n\t      _Visitor.prototype._translateMessage = function (el, message) {\n\t          if (message && this._mode === _VisitorMode.Merge) {\n\t              var id = digestMessage(message);\n\t              var nodes = this._translations.get(id);\n\t              if (nodes) {\n\t                  return nodes;\n\t              }\n\t              this._reportError(el, \"Translation unavailable for message id=\\\"\" + id + \"\\\"\");\n\t          }\n\t          return [];\n\t      };\n\t      // translate the attributes of an element and remove i18n specific attributes\n\t      _Visitor.prototype._translateAttributes = function (el) {\n\t          var _this = this;\n\t          var attributes = el.attrs;\n\t          var i18nAttributeMeanings = {};\n\t          attributes.forEach(function (attr) {\n\t              if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n\t                  i18nAttributeMeanings[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n\t                      _splitMeaningAndDesc(attr.value)[0];\n\t              }\n\t          });\n\t          var translatedAttributes = [];\n\t          attributes.forEach(function (attr) {\n\t              if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n\t                  // strip i18n specific attributes\n\t                  return;\n\t              }\n\t              if (attr.value && attr.value != '' && i18nAttributeMeanings.hasOwnProperty(attr.name)) {\n\t                  var meaning = i18nAttributeMeanings[attr.name];\n\t                  var message = _this._createI18nMessage([attr], meaning, '');\n\t                  var id = digestMessage(message);\n\t                  var nodes = _this._translations.get(id);\n\t                  if (nodes) {\n\t                      if (nodes[0] instanceof Text) {\n\t                          var value = nodes[0].value;\n\t                          translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n\t                      }\n\t                      else {\n\t                          _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n\t                      }\n\t                  }\n\t                  else {\n\t                      _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n\t                  }\n\t              }\n\t              else {\n\t                  translatedAttributes.push(attr);\n\t              }\n\t          });\n\t          return translatedAttributes;\n\t      };\n\t      /**\n\t       * Add the node as a child of the block when:\n\t       * - we are in a block,\n\t       * - we are not inside a ICU message (those are handled separately),\n\t       * - the node is a \"direct child\" of the block\n\t       */\n\t      _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n\t          if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n\t              this._blockChildren.push(node);\n\t          }\n\t      };\n\t      /**\n\t       * Marks the start of a section, see `_endSection`\n\t       */\n\t      _Visitor.prototype._openTranslatableSection = function (node) {\n\t          if (this._isInTranslatableSection) {\n\t              this._reportError(node, 'Unexpected section start');\n\t          }\n\t          else {\n\t              this._msgCountAtSectionStart = this._messages.length;\n\t          }\n\t      };\n\t      Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n\t          /**\n\t           * A translatable section could be:\n\t           * - a translatable element,\n\t           * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n\t           */\n\t          get: function () {\n\t              return this._msgCountAtSectionStart !== void 0;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      /**\n\t       * Terminates a section.\n\t       *\n\t       * If a section has only one significant children (comments not significant) then we should not\n\t       * keep the message from this children:\n\t       *\n\t       * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n\t       * - one for the <p> content with meaning and description,\n\t       * - another one for the ICU message.\n\t       *\n\t       * In this case the last message is discarded as it contains less information (the AST is\n\t       * otherwise identical).\n\t       *\n\t       * Note that we should still keep messages extracted from attributes inside the section (ie in the\n\t       * ICU message here)\n\t       */\n\t      _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n\t          if (!this._isInTranslatableSection) {\n\t              this._reportError(node, 'Unexpected section end');\n\t              return;\n\t          }\n\t          var startIndex = this._msgCountAtSectionStart;\n\t          var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n\t          if (significantChildren == 1) {\n\t              for (var i = this._messages.length - 1; i >= startIndex; i--) {\n\t                  var ast = this._messages[i].nodes;\n\t                  if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n\t                      this._messages.splice(i, 1);\n\t                      break;\n\t                  }\n\t              }\n\t          }\n\t          this._msgCountAtSectionStart = void 0;\n\t      };\n\t      _Visitor.prototype._reportError = function (node, msg) {\n\t          this._errors.push(new I18nError(node.sourceSpan, msg));\n\t      };\n\t      return _Visitor;\n\t  }());\n\t  function _isOpeningComment(n) {\n\t      return n instanceof Comment && n.value && n.value.startsWith('i18n');\n\t  }\n\t  function _isClosingComment(n) {\n\t      return n instanceof Comment && n.value && n.value === '/i18n';\n\t  }\n\t  function _getI18nAttr(p) {\n\t      return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n\t  }\n\t  function _splitMeaningAndDesc(i18n) {\n\t      if (!i18n)\n\t          return ['', ''];\n\t      var pipeIndex = i18n.indexOf('|');\n\t      return pipeIndex == -1 ? ['', i18n] : [i18n.slice(0, pipeIndex), i18n.slice(pipeIndex + 1)];\n\t  }\n\t\n\t  /**\n\t   * A container for message extracted from the templates.\n\t   */\n\t  var MessageBundle = (function () {\n\t      function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs) {\n\t          this._htmlParser = _htmlParser;\n\t          this._implicitTags = _implicitTags;\n\t          this._implicitAttrs = _implicitAttrs;\n\t          this._messageMap = {};\n\t      }\n\t      MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n\t          var _this = this;\n\t          var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n\t          if (htmlParserResult.errors.length) {\n\t              return htmlParserResult.errors;\n\t          }\n\t          var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n\t          if (i18nParserResult.errors.length) {\n\t              return i18nParserResult.errors;\n\t          }\n\t          i18nParserResult.messages.forEach(function (message) { _this._messageMap[digestMessage(message)] = message; });\n\t      };\n\t      MessageBundle.prototype.getMessageMap = function () { return this._messageMap; };\n\t      MessageBundle.prototype.write = function (serializer) { return serializer.write(this._messageMap); };\n\t      return MessageBundle;\n\t  }());\n\t\n\t  var XmlTagDefinition = (function () {\n\t      function XmlTagDefinition() {\n\t          this.closedByParent = false;\n\t          this.contentType = TagContentType.PARSABLE_DATA;\n\t          this.isVoid = false;\n\t          this.ignoreFirstLf = false;\n\t          this.canSelfClose = true;\n\t      }\n\t      XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n\t      XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n\t      return XmlTagDefinition;\n\t  }());\n\t  var _TAG_DEFINITION = new XmlTagDefinition();\n\t  function getXmlTagDefinition(tagName) {\n\t      return _TAG_DEFINITION;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$5 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var XmlParser = (function (_super) {\n\t      __extends$5(XmlParser, _super);\n\t      function XmlParser() {\n\t          _super.call(this, getXmlTagDefinition);\n\t      }\n\t      XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n\t          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n\t          return _super.prototype.parse.call(this, source, url, parseExpansionForms, null);\n\t      };\n\t      return XmlParser;\n\t  }(Parser$1));\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  // Generate a map of placeholder to content indexed by message ids\n\t  function extractPlaceholders(messageBundle) {\n\t      var messageMap = messageBundle.getMessageMap();\n\t      var placeholders = {};\n\t      Object.keys(messageMap).forEach(function (msgId) {\n\t          placeholders[msgId] = messageMap[msgId].placeholders;\n\t      });\n\t      return placeholders;\n\t  }\n\t  // Generate a map of placeholder to message ids indexed by message ids\n\t  function extractPlaceholderToIds(messageBundle) {\n\t      var messageMap = messageBundle.getMessageMap();\n\t      var placeholderToIds = {};\n\t      Object.keys(messageMap).forEach(function (msgId) {\n\t          placeholderToIds[msgId] = messageMap[msgId].placeholderToMsgIds;\n\t      });\n\t      return placeholderToIds;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$6 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var _Visitor$1 = (function () {\n\t      function _Visitor() {\n\t      }\n\t      _Visitor.prototype.visitTag = function (tag) {\n\t          var _this = this;\n\t          var strAttrs = this._serializeAttributes(tag.attrs);\n\t          if (tag.children.length == 0) {\n\t              return \"<\" + tag.name + strAttrs + \"/>\";\n\t          }\n\t          var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n\t          return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n\t      };\n\t      _Visitor.prototype.visitText = function (text) { return text.value; };\n\t      _Visitor.prototype.visitDeclaration = function (decl) {\n\t          return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n\t      };\n\t      _Visitor.prototype._serializeAttributes = function (attrs) {\n\t          var strAttrs = Object.keys(attrs).map(function (name) { return (name + \"=\\\"\" + attrs[name] + \"\\\"\"); }).join(' ');\n\t          return strAttrs.length > 0 ? ' ' + strAttrs : '';\n\t      };\n\t      _Visitor.prototype.visitDoctype = function (doctype) {\n\t          return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n\t      };\n\t      return _Visitor;\n\t  }());\n\t  var _visitor = new _Visitor$1();\n\t  function serialize(nodes) {\n\t      return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n\t  }\n\t  var Declaration = (function () {\n\t      function Declaration(unescapedAttrs) {\n\t          var _this = this;\n\t          this.attrs = {};\n\t          Object.keys(unescapedAttrs).forEach(function (k) {\n\t              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n\t          });\n\t      }\n\t      Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n\t      return Declaration;\n\t  }());\n\t  var Doctype = (function () {\n\t      function Doctype(rootTag, dtd) {\n\t          this.rootTag = rootTag;\n\t          this.dtd = dtd;\n\t      }\n\t      ;\n\t      Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n\t      return Doctype;\n\t  }());\n\t  var Tag = (function () {\n\t      function Tag(name, unescapedAttrs, children) {\n\t          var _this = this;\n\t          if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n\t          if (children === void 0) { children = []; }\n\t          this.name = name;\n\t          this.children = children;\n\t          this.attrs = {};\n\t          Object.keys(unescapedAttrs).forEach(function (k) {\n\t              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n\t          });\n\t      }\n\t      Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n\t      return Tag;\n\t  }());\n\t  var Text$2 = (function () {\n\t      function Text(unescapedValue) {\n\t          this.value = _escapeXml(unescapedValue);\n\t      }\n\t      ;\n\t      Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n\t      return Text;\n\t  }());\n\t  var CR = (function (_super) {\n\t      __extends$6(CR, _super);\n\t      function CR(ws) {\n\t          if (ws === void 0) { ws = 0; }\n\t          _super.call(this, \"\\n\" + new Array(ws + 1).join(' '));\n\t      }\n\t      return CR;\n\t  }(Text$2));\n\t  var _ESCAPED_CHARS = [\n\t      [/&/g, '&amp;'],\n\t      [/\"/g, '&quot;'],\n\t      [/'/g, '&apos;'],\n\t      [/</g, '&lt;'],\n\t      [/>/g, '&gt;'],\n\t  ];\n\t  function _escapeXml(text) {\n\t      return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n\t  }\n\t\n\t  var _VERSION = '1.2';\n\t  var _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n\t  // TODO(vicb): make this a param (s/_/-/)\n\t  var _SOURCE_LANG = 'en';\n\t  var _PLACEHOLDER_TAG = 'x';\n\t  var _SOURCE_TAG = 'source';\n\t  var _TARGET_TAG = 'target';\n\t  var _UNIT_TAG = 'trans-unit';\n\t  // http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n\t  // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\n\t  var Xliff = (function () {\n\t      function Xliff(_htmlParser, _interpolationConfig) {\n\t          this._htmlParser = _htmlParser;\n\t          this._interpolationConfig = _interpolationConfig;\n\t      }\n\t      Xliff.prototype.write = function (messageMap) {\n\t          var visitor = new _WriteVisitor();\n\t          var transUnits = [];\n\t          Object.keys(messageMap).forEach(function (id) {\n\t              var message = messageMap[id];\n\t              var transUnit = new Tag(_UNIT_TAG, { id: id, datatype: 'html' });\n\t              transUnit.children.push(new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG));\n\t              if (message.description) {\n\t                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n\t              }\n\t              if (message.meaning) {\n\t                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n\t              }\n\t              transUnit.children.push(new CR(6));\n\t              transUnits.push(new CR(6), transUnit);\n\t          });\n\t          var body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n\t          var file = new Tag('file', { 'source-language': _SOURCE_LANG, datatype: 'plaintext', original: 'ng2.template' }, [new CR(4), body, new CR(2)]);\n\t          var xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n\t          return serialize([\n\t              new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n\t          ]);\n\t      };\n\t      Xliff.prototype.load = function (content, url, messageBundle) {\n\t          var _this = this;\n\t          // Parse the xtb file into xml nodes\n\t          var result = new XmlParser().parse(content, url);\n\t          if (result.errors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n\t          }\n\t          // Replace the placeholders, messages are now string\n\t          var _a = new _LoadVisitor().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n\t          if (errors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n\t          }\n\t          // Convert the string messages to html ast\n\t          // TODO(vicb): map error message back to the original message in xtb\n\t          var messageMap = {};\n\t          var parseErrors = [];\n\t          Object.keys(messages).forEach(function (id) {\n\t              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n\t              parseErrors.push.apply(parseErrors, res.errors);\n\t              messageMap[id] = res.rootNodes;\n\t          });\n\t          if (parseErrors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n\t          }\n\t          return messageMap;\n\t      };\n\t      return Xliff;\n\t  }());\n\t  var _WriteVisitor = (function () {\n\t      function _WriteVisitor() {\n\t      }\n\t      _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n\t      _WriteVisitor.prototype.visitContainer = function (container, context) {\n\t          var _this = this;\n\t          var nodes = [];\n\t          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n\t          return nodes;\n\t      };\n\t      _WriteVisitor.prototype.visitIcu = function (icu, context) {\n\t          if (this._isInIcu) {\n\t              // nested ICU is not supported\n\t              throw new Error('xliff does not support nested ICU messages');\n\t          }\n\t          this._isInIcu = true;\n\t          // TODO(vicb): support ICU messages\n\t          // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n\t          // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n\t          var nodes = [];\n\t          this._isInIcu = false;\n\t          return nodes;\n\t      };\n\t      _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n\t          var ctype = getCtypeForTag(ph.tag);\n\t          var startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n\t          if (ph.isVoid) {\n\t              // void tags have no children nor closing tags\n\t              return [startTagPh];\n\t          }\n\t          var closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n\t          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n\t      };\n\t      _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n\t          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n\t      };\n\t      _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n\t          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n\t      };\n\t      _WriteVisitor.prototype.serialize = function (nodes) {\n\t          var _this = this;\n\t          this._isInIcu = false;\n\t          return (_a = []).concat.apply(_a, nodes.map(function (node) { return node.visit(_this); }));\n\t          var _a;\n\t      };\n\t      return _WriteVisitor;\n\t  }());\n\t  // TODO(vicb): add error management (structure)\n\t  // TODO(vicb): factorize (xtb) ?\n\t  var _LoadVisitor = (function () {\n\t      function _LoadVisitor() {\n\t      }\n\t      _LoadVisitor.prototype.parse = function (nodes, messageBundle) {\n\t          var _this = this;\n\t          this._messageNodes = [];\n\t          this._translatedMessages = {};\n\t          this._msgId = '';\n\t          this._target = [];\n\t          this._errors = [];\n\t          // Find all messages\n\t          visitAll(this, nodes, null);\n\t          var messageMap = messageBundle.getMessageMap();\n\t          var placeholders = extractPlaceholders(messageBundle);\n\t          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n\t          this._messageNodes\n\t              .filter(function (message) {\n\t              // Remove any messages that is not present in the source message bundle.\n\t              return messageMap.hasOwnProperty(message[0]);\n\t          })\n\t              .sort(function (a, b) {\n\t              // Because there could be no ICU placeholders inside an ICU message,\n\t              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n\t              // messages, those would always be empty\n\t              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n\t              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n\t                  return -1;\n\t              }\n\t              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n\t                  return 1;\n\t              }\n\t              return 0;\n\t          })\n\t              .forEach(function (message) {\n\t              var id = message[0];\n\t              _this._placeholders = placeholders[id] || {};\n\t              _this._placeholderToIds = placeholderToIds[id] || {};\n\t              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n\t              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n\t          });\n\t          return { messages: this._translatedMessages, errors: this._errors };\n\t      };\n\t      _LoadVisitor.prototype.visitElement = function (element, context) {\n\t          switch (element.name) {\n\t              case _UNIT_TAG:\n\t                  this._target = null;\n\t                  var msgId = element.attrs.find(function (attr) { return attr.name === 'id'; });\n\t                  if (!msgId) {\n\t                      this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n\t                  }\n\t                  else {\n\t                      this._msgId = msgId.value;\n\t                  }\n\t                  visitAll(this, element.children, null);\n\t                  if (this._msgId !== null) {\n\t                      this._messageNodes.push([this._msgId, this._target]);\n\t                  }\n\t                  break;\n\t              case _SOURCE_TAG:\n\t                  // ignore source message\n\t                  break;\n\t              case _TARGET_TAG:\n\t                  this._target = element.children;\n\t                  break;\n\t              case _PLACEHOLDER_TAG:\n\t                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n\t                  if (!idAttr) {\n\t                      this._addError(element, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n\t                  }\n\t                  else {\n\t                      var id = idAttr.value;\n\t                      if (this._placeholders.hasOwnProperty(id)) {\n\t                          return this._placeholders[id];\n\t                      }\n\t                      if (this._placeholderToIds.hasOwnProperty(id) &&\n\t                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])) {\n\t                          return this._translatedMessages[this._placeholderToIds[id]];\n\t                      }\n\t                      // TODO(vicb): better error message for when\n\t                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])\n\t                      this._addError(element, \"The placeholder \\\"\" + id + \"\\\" does not exists in the source message\");\n\t                  }\n\t                  break;\n\t              default:\n\t                  visitAll(this, element.children, null);\n\t          }\n\t      };\n\t      _LoadVisitor.prototype.visitAttribute = function (attribute, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _LoadVisitor.prototype.visitText = function (text, context) { return text.value; };\n\t      _LoadVisitor.prototype.visitComment = function (comment, context) { return ''; };\n\t      _LoadVisitor.prototype.visitExpansion = function (expansion, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _LoadVisitor.prototype.visitExpansionCase = function (expansionCase, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _LoadVisitor.prototype._addError = function (node, message) {\n\t          this._errors.push(new I18nError(node.sourceSpan, message));\n\t      };\n\t      return _LoadVisitor;\n\t  }());\n\t  function getCtypeForTag(tag) {\n\t      switch (tag.toLowerCase()) {\n\t          case 'br':\n\t              return 'lb';\n\t          case 'img':\n\t              return 'image';\n\t          default:\n\t              return \"x-\" + tag;\n\t      }\n\t  }\n\t\n\t  var _MESSAGES_TAG = 'messagebundle';\n\t  var _MESSAGE_TAG = 'msg';\n\t  var _PLACEHOLDER_TAG$1 = 'ph';\n\t  var _EXEMPLE_TAG = 'ex';\n\t  var _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\n\t  var Xmb = (function () {\n\t      function Xmb() {\n\t      }\n\t      Xmb.prototype.write = function (messageMap) {\n\t          var visitor = new _Visitor$2();\n\t          var rootNode = new Tag(_MESSAGES_TAG);\n\t          Object.keys(messageMap).forEach(function (id) {\n\t              var message = messageMap[id];\n\t              var attrs = { id: id };\n\t              if (message.description) {\n\t                  attrs['desc'] = message.description;\n\t              }\n\t              if (message.meaning) {\n\t                  attrs['meaning'] = message.meaning;\n\t              }\n\t              rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes)));\n\t          });\n\t          rootNode.children.push(new CR());\n\t          return serialize([\n\t              new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n\t              new CR(),\n\t              new Doctype(_MESSAGES_TAG, _DOCTYPE),\n\t              new CR(),\n\t              rootNode,\n\t              new CR(),\n\t          ]);\n\t      };\n\t      Xmb.prototype.load = function (content, url, messageBundle) {\n\t          throw new Error('Unsupported');\n\t      };\n\t      return Xmb;\n\t  }());\n\t  var _Visitor$2 = (function () {\n\t      function _Visitor() {\n\t      }\n\t      _Visitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n\t      _Visitor.prototype.visitContainer = function (container, context) {\n\t          var _this = this;\n\t          var nodes = [];\n\t          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n\t          return nodes;\n\t      };\n\t      _Visitor.prototype.visitIcu = function (icu, context) {\n\t          var _this = this;\n\t          var nodes = [new Text$2(\"{\" + icu.expression + \", \" + icu.type + \", \")];\n\t          Object.keys(icu.cases).forEach(function (c) {\n\t              nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n\t          });\n\t          nodes.push(new Text$2(\"}\"));\n\t          return nodes;\n\t      };\n\t      _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n\t          var startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n\t          var startTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.startName }, [startEx]);\n\t          if (ph.isVoid) {\n\t              // void tags have no children nor closing tags\n\t              return [startTagPh];\n\t          }\n\t          var closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n\t          var closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.closeName }, [closeEx]);\n\t          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n\t      };\n\t      _Visitor.prototype.visitPlaceholder = function (ph, context) {\n\t          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n\t      };\n\t      _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n\t          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n\t      };\n\t      _Visitor.prototype.serialize = function (nodes) {\n\t          var _this = this;\n\t          return (_a = []).concat.apply(_a, nodes.map(function (node) { return node.visit(_this); }));\n\t          var _a;\n\t      };\n\t      return _Visitor;\n\t  }());\n\t\n\t  var _TRANSLATIONS_TAG = 'translationbundle';\n\t  var _TRANSLATION_TAG = 'translation';\n\t  var _PLACEHOLDER_TAG$2 = 'ph';\n\t  var Xtb = (function () {\n\t      function Xtb(_htmlParser, _interpolationConfig) {\n\t          this._htmlParser = _htmlParser;\n\t          this._interpolationConfig = _interpolationConfig;\n\t      }\n\t      Xtb.prototype.write = function (messageMap) { throw new Error('Unsupported'); };\n\t      Xtb.prototype.load = function (content, url, messageBundle) {\n\t          var _this = this;\n\t          // Parse the xtb file into xml nodes\n\t          var result = new XmlParser().parse(content, url);\n\t          if (result.errors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n\t          }\n\t          // Replace the placeholders, messages are now string\n\t          var _a = new _Visitor$3().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n\t          if (errors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n\t          }\n\t          // Convert the string messages to html ast\n\t          // TODO(vicb): map error message back to the original message in xtb\n\t          var messageMap = {};\n\t          var parseErrors = [];\n\t          Object.keys(messages).forEach(function (id) {\n\t              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n\t              parseErrors.push.apply(parseErrors, res.errors);\n\t              messageMap[id] = res.rootNodes;\n\t          });\n\t          if (parseErrors.length) {\n\t              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n\t          }\n\t          return messageMap;\n\t      };\n\t      return Xtb;\n\t  }());\n\t  var _Visitor$3 = (function () {\n\t      function _Visitor() {\n\t      }\n\t      _Visitor.prototype.parse = function (nodes, messageBundle) {\n\t          var _this = this;\n\t          this._messageNodes = [];\n\t          this._translatedMessages = {};\n\t          this._bundleDepth = 0;\n\t          this._translationDepth = 0;\n\t          this._errors = [];\n\t          // Find all messages\n\t          visitAll(this, nodes, null);\n\t          var messageMap = messageBundle.getMessageMap();\n\t          var placeholders = extractPlaceholders(messageBundle);\n\t          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n\t          this._messageNodes\n\t              .filter(function (message) {\n\t              // Remove any messages that is not present in the source message bundle.\n\t              return messageMap.hasOwnProperty(message[0]);\n\t          })\n\t              .sort(function (a, b) {\n\t              // Because there could be no ICU placeholders inside an ICU message,\n\t              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n\t              // messages, those would always be empty\n\t              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n\t              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n\t                  return -1;\n\t              }\n\t              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n\t                  return 1;\n\t              }\n\t              return 0;\n\t          })\n\t              .forEach(function (message) {\n\t              var id = message[0];\n\t              _this._placeholders = placeholders[id] || {};\n\t              _this._placeholderToIds = placeholderToIds[id] || {};\n\t              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n\t              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n\t          });\n\t          return { messages: this._translatedMessages, errors: this._errors };\n\t      };\n\t      _Visitor.prototype.visitElement = function (element, context) {\n\t          switch (element.name) {\n\t              case _TRANSLATIONS_TAG:\n\t                  this._bundleDepth++;\n\t                  if (this._bundleDepth > 1) {\n\t                      this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n\t                  }\n\t                  visitAll(this, element.children, null);\n\t                  this._bundleDepth--;\n\t                  break;\n\t              case _TRANSLATION_TAG:\n\t                  this._translationDepth++;\n\t                  if (this._translationDepth > 1) {\n\t                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> elements can not be nested\");\n\t                  }\n\t                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n\t                  if (!idAttr) {\n\t                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n\t                  }\n\t                  else {\n\t                      // ICU placeholders are reference to other messages.\n\t                      // The referenced message might not have been decoded yet.\n\t                      // We need to have all messages available to make sure deps are decoded first.\n\t                      // TODO(vicb): report an error on duplicate id\n\t                      this._messageNodes.push([idAttr.value, element.children]);\n\t                  }\n\t                  this._translationDepth--;\n\t                  break;\n\t              case _PLACEHOLDER_TAG$2:\n\t                  var nameAttr = element.attrs.find(function (attr) { return attr.name === 'name'; });\n\t                  if (!nameAttr) {\n\t                      this._addError(element, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"name\\\" attribute\");\n\t                  }\n\t                  else {\n\t                      var name_1 = nameAttr.value;\n\t                      if (this._placeholders.hasOwnProperty(name_1)) {\n\t                          return this._placeholders[name_1];\n\t                      }\n\t                      if (this._placeholderToIds.hasOwnProperty(name_1) &&\n\t                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[name_1])) {\n\t                          return this._translatedMessages[this._placeholderToIds[name_1]];\n\t                      }\n\t                      // TODO(vicb): better error message for when\n\t                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[name])\n\t                      this._addError(element, \"The placeholder \\\"\" + name_1 + \"\\\" does not exists in the source message\");\n\t                  }\n\t                  break;\n\t              default:\n\t                  this._addError(element, 'Unexpected tag');\n\t          }\n\t      };\n\t      _Visitor.prototype.visitAttribute = function (attribute, context) {\n\t          throw new Error('unreachable code');\n\t      };\n\t      _Visitor.prototype.visitText = function (text, context) { return text.value; };\n\t      _Visitor.prototype.visitComment = function (comment, context) { return ''; };\n\t      _Visitor.prototype.visitExpansion = function (expansion, context) {\n\t          var _this = this;\n\t          var strCases = expansion.cases.map(function (c) { return c.visit(_this, null); });\n\t          return \"{\" + expansion.switchValue + \", \" + expansion.type + \", strCases.join(' ')}\";\n\t      };\n\t      _Visitor.prototype.visitExpansionCase = function (expansionCase, context) {\n\t          return expansionCase.value + \" {\" + visitAll(this, expansionCase.expression, null) + \"}\";\n\t      };\n\t      _Visitor.prototype._addError = function (node, message) {\n\t          this._errors.push(new I18nError(node.sourceSpan, message));\n\t      };\n\t      return _Visitor;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  /**\n\t   * A container for translated messages\n\t   */\n\t  var TranslationBundle = (function () {\n\t      function TranslationBundle(_messageMap) {\n\t          if (_messageMap === void 0) { _messageMap = {}; }\n\t          this._messageMap = _messageMap;\n\t      }\n\t      TranslationBundle.load = function (content, url, messageBundle, serializer) {\n\t          return new TranslationBundle(serializer.load(content, url, messageBundle));\n\t      };\n\t      TranslationBundle.prototype.get = function (id) { return this._messageMap[id]; };\n\t      TranslationBundle.prototype.has = function (id) { return id in this._messageMap; };\n\t      return TranslationBundle;\n\t  }());\n\t\n\t  var I18NHtmlParser = (function () {\n\t      // TODO(vicb): transB.load() should not need a msgB & add transB.resolve(msgB,\n\t      // interpolationConfig)\n\t      // TODO(vicb): remove the interpolationConfig from the Xtb serializer\n\t      function I18NHtmlParser(_htmlParser, _translations, _translationsFormat) {\n\t          this._htmlParser = _htmlParser;\n\t          this._translations = _translations;\n\t          this._translationsFormat = _translationsFormat;\n\t      }\n\t      I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n\t          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n\t          if (!this._translations || this._translations === '') {\n\t              // Do not enable i18n when no translation bundle is provided\n\t              return parseResult;\n\t          }\n\t          // TODO(vicb): add support for implicit tags / attributes\n\t          var messageBundle = new MessageBundle(this._htmlParser, [], {});\n\t          var errors = messageBundle.updateFromTemplate(source, url, interpolationConfig);\n\t          if (errors && errors.length) {\n\t              return new ParseTreeResult(parseResult.rootNodes, parseResult.errors.concat(errors));\n\t          }\n\t          var serializer = this._createSerializer(interpolationConfig);\n\t          var translationBundle = TranslationBundle.load(this._translations, url, messageBundle, serializer);\n\t          return mergeTranslations(parseResult.rootNodes, translationBundle, interpolationConfig, [], {});\n\t      };\n\t      I18NHtmlParser.prototype._createSerializer = function (interpolationConfig) {\n\t          var format = (this._translationsFormat || 'xlf').toLowerCase();\n\t          switch (format) {\n\t              case 'xmb':\n\t                  return new Xmb();\n\t              case 'xtb':\n\t                  return new Xtb(this._htmlParser, interpolationConfig);\n\t              case 'xliff':\n\t              case 'xlf':\n\t              default:\n\t                  return new Xliff(this._htmlParser, interpolationConfig);\n\t          }\n\t      };\n\t      return I18NHtmlParser;\n\t  }());\n\t\n\t  /**\n\t   * Wraps Javascript Objects\n\t   */\n\t  var StringMapWrapper = (function () {\n\t      function StringMapWrapper() {\n\t      }\n\t      StringMapWrapper.merge = function (m1, m2) {\n\t          var m = {};\n\t          for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t              var k = _a[_i];\n\t              m[k] = m1[k];\n\t          }\n\t          for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t              var k = _c[_b];\n\t              m[k] = m2[k];\n\t          }\n\t          return m;\n\t      };\n\t      StringMapWrapper.equals = function (m1, m2) {\n\t          var k1 = Object.keys(m1);\n\t          var k2 = Object.keys(m2);\n\t          if (k1.length != k2.length) {\n\t              return false;\n\t          }\n\t          for (var i = 0; i < k1.length; i++) {\n\t              var key = k1[i];\n\t              if (m1[key] !== m2[key]) {\n\t                  return false;\n\t              }\n\t          }\n\t          return true;\n\t      };\n\t      return StringMapWrapper;\n\t  }());\n\t  var ListWrapper = (function () {\n\t      function ListWrapper() {\n\t      }\n\t      ListWrapper.removeAll = function (list, items) {\n\t          for (var i = 0; i < items.length; ++i) {\n\t              var index = list.indexOf(items[i]);\n\t              if (index > -1) {\n\t                  list.splice(index, 1);\n\t              }\n\t          }\n\t      };\n\t      ListWrapper.remove = function (list, el) {\n\t          var index = list.indexOf(el);\n\t          if (index > -1) {\n\t              list.splice(index, 1);\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      ListWrapper.equals = function (a, b) {\n\t          if (a.length != b.length)\n\t              return false;\n\t          for (var i = 0; i < a.length; ++i) {\n\t              if (a[i] !== b[i])\n\t                  return false;\n\t          }\n\t          return true;\n\t      };\n\t      ListWrapper.flatten = function (list) {\n\t          return list.reduce(function (flat, item) {\n\t              var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n\t              return flat.concat(flatItem);\n\t          }, []);\n\t      };\n\t      return ListWrapper;\n\t  }());\n\t\n\t  var _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n\t      '([-\\\\w]+)|' +\n\t      '(?:\\\\.([-\\\\w]+))|' +\n\t      '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +\n\t      '(\\\\))|' +\n\t      '(\\\\s*,\\\\s*)', // \",\"\n\t  'g');\n\t  /**\n\t   * A css selector contains an element name,\n\t   * css classes and attribute/value pairs with the purpose\n\t   * of selecting subsets out of them.\n\t   */\n\t  var CssSelector = (function () {\n\t      function CssSelector() {\n\t          this.element = null;\n\t          this.classNames = [];\n\t          this.attrs = [];\n\t          this.notSelectors = [];\n\t      }\n\t      CssSelector.parse = function (selector) {\n\t          var results = [];\n\t          var _addResult = function (res, cssSel) {\n\t              if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n\t                  cssSel.attrs.length == 0) {\n\t                  cssSel.element = '*';\n\t              }\n\t              res.push(cssSel);\n\t          };\n\t          var cssSelector = new CssSelector();\n\t          var match;\n\t          var current = cssSelector;\n\t          var inNot = false;\n\t          _SELECTOR_REGEXP.lastIndex = 0;\n\t          while (match = _SELECTOR_REGEXP.exec(selector)) {\n\t              if (match[1]) {\n\t                  if (inNot) {\n\t                      throw new Error('Nesting :not is not allowed in a selector');\n\t                  }\n\t                  inNot = true;\n\t                  current = new CssSelector();\n\t                  cssSelector.notSelectors.push(current);\n\t              }\n\t              if (match[2]) {\n\t                  current.setElement(match[2]);\n\t              }\n\t              if (match[3]) {\n\t                  current.addClassName(match[3]);\n\t              }\n\t              if (match[4]) {\n\t                  current.addAttribute(match[4], match[5]);\n\t              }\n\t              if (match[6]) {\n\t                  inNot = false;\n\t                  current = cssSelector;\n\t              }\n\t              if (match[7]) {\n\t                  if (inNot) {\n\t                      throw new Error('Multiple selectors in :not are not supported');\n\t                  }\n\t                  _addResult(results, cssSelector);\n\t                  cssSelector = current = new CssSelector();\n\t              }\n\t          }\n\t          _addResult(results, cssSelector);\n\t          return results;\n\t      };\n\t      CssSelector.prototype.isElementSelector = function () {\n\t          return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n\t              this.notSelectors.length === 0;\n\t      };\n\t      CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n\t      CssSelector.prototype.setElement = function (element) {\n\t          if (element === void 0) { element = null; }\n\t          this.element = element;\n\t      };\n\t      /** Gets a template string for an element that matches the selector. */\n\t      CssSelector.prototype.getMatchingElementTemplate = function () {\n\t          var tagName = this.element || 'div';\n\t          var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n\t          var attrs = '';\n\t          for (var i = 0; i < this.attrs.length; i += 2) {\n\t              var attrName = this.attrs[i];\n\t              var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n\t              attrs += \" \" + attrName + attrValue;\n\t          }\n\t          return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n\t              \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n\t      };\n\t      CssSelector.prototype.addAttribute = function (name, value) {\n\t          if (value === void 0) { value = ''; }\n\t          this.attrs.push(name, value && value.toLowerCase() || '');\n\t      };\n\t      CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n\t      CssSelector.prototype.toString = function () {\n\t          var res = this.element || '';\n\t          if (this.classNames) {\n\t              this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n\t          }\n\t          if (this.attrs) {\n\t              for (var i = 0; i < this.attrs.length; i += 2) {\n\t                  var name_1 = this.attrs[i];\n\t                  var value = this.attrs[i + 1];\n\t                  res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n\t              }\n\t          }\n\t          this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n\t          return res;\n\t      };\n\t      return CssSelector;\n\t  }());\n\t  /**\n\t   * Reads a list of CssSelectors and allows to calculate which ones\n\t   * are contained in a given CssSelector.\n\t   */\n\t  var SelectorMatcher = (function () {\n\t      function SelectorMatcher() {\n\t          this._elementMap = new Map();\n\t          this._elementPartialMap = new Map();\n\t          this._classMap = new Map();\n\t          this._classPartialMap = new Map();\n\t          this._attrValueMap = new Map();\n\t          this._attrValuePartialMap = new Map();\n\t          this._listContexts = [];\n\t      }\n\t      SelectorMatcher.createNotMatcher = function (notSelectors) {\n\t          var notMatcher = new SelectorMatcher();\n\t          notMatcher.addSelectables(notSelectors, null);\n\t          return notMatcher;\n\t      };\n\t      SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n\t          var listContext = null;\n\t          if (cssSelectors.length > 1) {\n\t              listContext = new SelectorListContext(cssSelectors);\n\t              this._listContexts.push(listContext);\n\t          }\n\t          for (var i = 0; i < cssSelectors.length; i++) {\n\t              this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n\t          }\n\t      };\n\t      /**\n\t       * Add an object that can be found later on by calling `match`.\n\t       * @param cssSelector A css selector\n\t       * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n\t       */\n\t      SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n\t          var matcher = this;\n\t          var element = cssSelector.element;\n\t          var classNames = cssSelector.classNames;\n\t          var attrs = cssSelector.attrs;\n\t          var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\t          if (element) {\n\t              var isTerminal = attrs.length === 0 && classNames.length === 0;\n\t              if (isTerminal) {\n\t                  this._addTerminal(matcher._elementMap, element, selectable);\n\t              }\n\t              else {\n\t                  matcher = this._addPartial(matcher._elementPartialMap, element);\n\t              }\n\t          }\n\t          if (classNames) {\n\t              for (var i = 0; i < classNames.length; i++) {\n\t                  var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n\t                  var className = classNames[i];\n\t                  if (isTerminal) {\n\t                      this._addTerminal(matcher._classMap, className, selectable);\n\t                  }\n\t                  else {\n\t                      matcher = this._addPartial(matcher._classPartialMap, className);\n\t                  }\n\t              }\n\t          }\n\t          if (attrs) {\n\t              for (var i = 0; i < attrs.length; i += 2) {\n\t                  var isTerminal = i === attrs.length - 2;\n\t                  var name_2 = attrs[i];\n\t                  var value = attrs[i + 1];\n\t                  if (isTerminal) {\n\t                      var terminalMap = matcher._attrValueMap;\n\t                      var terminalValuesMap = terminalMap.get(name_2);\n\t                      if (!terminalValuesMap) {\n\t                          terminalValuesMap = new Map();\n\t                          terminalMap.set(name_2, terminalValuesMap);\n\t                      }\n\t                      this._addTerminal(terminalValuesMap, value, selectable);\n\t                  }\n\t                  else {\n\t                      var partialMap = matcher._attrValuePartialMap;\n\t                      var partialValuesMap = partialMap.get(name_2);\n\t                      if (!partialValuesMap) {\n\t                          partialValuesMap = new Map();\n\t                          partialMap.set(name_2, partialValuesMap);\n\t                      }\n\t                      matcher = this._addPartial(partialValuesMap, value);\n\t                  }\n\t              }\n\t          }\n\t      };\n\t      SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n\t          var terminalList = map.get(name);\n\t          if (!terminalList) {\n\t              terminalList = [];\n\t              map.set(name, terminalList);\n\t          }\n\t          terminalList.push(selectable);\n\t      };\n\t      SelectorMatcher.prototype._addPartial = function (map, name) {\n\t          var matcher = map.get(name);\n\t          if (!matcher) {\n\t              matcher = new SelectorMatcher();\n\t              map.set(name, matcher);\n\t          }\n\t          return matcher;\n\t      };\n\t      /**\n\t       * Find the objects that have been added via `addSelectable`\n\t       * whose css selector is contained in the given css selector.\n\t       * @param cssSelector A css selector\n\t       * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n\t       * @return boolean true if a match was found\n\t      */\n\t      SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n\t          var result = false;\n\t          var element = cssSelector.element;\n\t          var classNames = cssSelector.classNames;\n\t          var attrs = cssSelector.attrs;\n\t          for (var i = 0; i < this._listContexts.length; i++) {\n\t              this._listContexts[i].alreadyMatched = false;\n\t          }\n\t          result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n\t          result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n\t              result;\n\t          if (classNames) {\n\t              for (var i = 0; i < classNames.length; i++) {\n\t                  var className = classNames[i];\n\t                  result =\n\t                      this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n\t                  result =\n\t                      this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n\t                          result;\n\t              }\n\t          }\n\t          if (attrs) {\n\t              for (var i = 0; i < attrs.length; i += 2) {\n\t                  var name_3 = attrs[i];\n\t                  var value = attrs[i + 1];\n\t                  var terminalValuesMap = this._attrValueMap.get(name_3);\n\t                  if (value) {\n\t                      result =\n\t                          this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n\t                  }\n\t                  result =\n\t                      this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\t                  var partialValuesMap = this._attrValuePartialMap.get(name_3);\n\t                  if (value) {\n\t                      result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n\t                  }\n\t                  result =\n\t                      this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n\t              }\n\t          }\n\t          return result;\n\t      };\n\t      /** @internal */\n\t      SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n\t          if (!map || typeof name !== 'string') {\n\t              return false;\n\t          }\n\t          var selectables = map.get(name);\n\t          var starSelectables = map.get('*');\n\t          if (starSelectables) {\n\t              selectables = selectables.concat(starSelectables);\n\t          }\n\t          if (!selectables) {\n\t              return false;\n\t          }\n\t          var selectable;\n\t          var result = false;\n\t          for (var i = 0; i < selectables.length; i++) {\n\t              selectable = selectables[i];\n\t              result = selectable.finalize(cssSelector, matchedCallback) || result;\n\t          }\n\t          return result;\n\t      };\n\t      /** @internal */\n\t      SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n\t          if (!map || typeof name !== 'string') {\n\t              return false;\n\t          }\n\t          var nestedSelector = map.get(name);\n\t          if (!nestedSelector) {\n\t              return false;\n\t          }\n\t          // TODO(perf): get rid of recursion and measure again\n\t          // TODO(perf): don't pass the whole selector into the recursion,\n\t          // but only the not processed parts\n\t          return nestedSelector.match(cssSelector, matchedCallback);\n\t      };\n\t      return SelectorMatcher;\n\t  }());\n\t  var SelectorListContext = (function () {\n\t      function SelectorListContext(selectors) {\n\t          this.selectors = selectors;\n\t          this.alreadyMatched = false;\n\t      }\n\t      return SelectorListContext;\n\t  }());\n\t  // Store context to pass back selector and context when a selector is matched\n\t  var SelectorContext = (function () {\n\t      function SelectorContext(selector, cbContext, listContext) {\n\t          this.selector = selector;\n\t          this.cbContext = cbContext;\n\t          this.listContext = listContext;\n\t          this.notSelectors = selector.notSelectors;\n\t      }\n\t      SelectorContext.prototype.finalize = function (cssSelector, callback) {\n\t          var result = true;\n\t          if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n\t              var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n\t              result = !notMatcher.match(cssSelector, null);\n\t          }\n\t          if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n\t              if (this.listContext) {\n\t                  this.listContext.alreadyMatched = true;\n\t              }\n\t              callback(this.selector, this.cbContext);\n\t          }\n\t          return result;\n\t      };\n\t      return SelectorContext;\n\t  }());\n\t\n\t  var MODULE_SUFFIX = '';\n\t  var DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n\t  function dashCaseToCamelCase(input) {\n\t      return input.replace(DASH_CASE_REGEXP, function () {\n\t          var m = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              m[_i - 0] = arguments[_i];\n\t          }\n\t          return m[1].toUpperCase();\n\t      });\n\t  }\n\t  function splitAtColon(input, defaultValues) {\n\t      return _splitAt(input, ':', defaultValues);\n\t  }\n\t  function splitAtPeriod(input, defaultValues) {\n\t      return _splitAt(input, '.', defaultValues);\n\t  }\n\t  function _splitAt(input, character, defaultValues) {\n\t      var characterIndex = input.indexOf(character);\n\t      if (characterIndex == -1)\n\t          return defaultValues;\n\t      return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n\t  }\n\t  function sanitizeIdentifier(name) {\n\t      return name.replace(/\\W/g, '_');\n\t  }\n\t  function visitValue(value, visitor, context) {\n\t      if (Array.isArray(value)) {\n\t          return visitor.visitArray(value, context);\n\t      }\n\t      if (isStrictStringMap(value)) {\n\t          return visitor.visitStringMap(value, context);\n\t      }\n\t      if (isBlank(value) || isPrimitive(value)) {\n\t          return visitor.visitPrimitive(value, context);\n\t      }\n\t      return visitor.visitOther(value, context);\n\t  }\n\t  var ValueTransformer = (function () {\n\t      function ValueTransformer() {\n\t      }\n\t      ValueTransformer.prototype.visitArray = function (arr, context) {\n\t          var _this = this;\n\t          return arr.map(function (value) { return visitValue(value, _this, context); });\n\t      };\n\t      ValueTransformer.prototype.visitStringMap = function (map, context) {\n\t          var _this = this;\n\t          var result = {};\n\t          Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n\t          return result;\n\t      };\n\t      ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n\t      ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n\t      return ValueTransformer;\n\t  }());\n\t  var SyncAsyncResult = (function () {\n\t      function SyncAsyncResult(syncResult, asyncResult) {\n\t          if (asyncResult === void 0) { asyncResult = null; }\n\t          this.syncResult = syncResult;\n\t          this.asyncResult = asyncResult;\n\t          if (!asyncResult) {\n\t              this.asyncResult = Promise.resolve(syncResult);\n\t          }\n\t      }\n\t      return SyncAsyncResult;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$7 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  function unimplemented() {\n\t      throw new Error('unimplemented');\n\t  }\n\t  // group 0: \"[prop] or (event) or @trigger\"\n\t  // group 1: \"prop\" from \"[prop]\"\n\t  // group 2: \"event\" from \"(event)\"\n\t  // group 3: \"@trigger\" from \"@trigger\"\n\t  var HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n\t  var CompileMetadataWithIdentifier = (function () {\n\t      function CompileMetadataWithIdentifier() {\n\t      }\n\t      Object.defineProperty(CompileMetadataWithIdentifier.prototype, \"identifier\", {\n\t          get: function () { return unimplemented(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompileMetadataWithIdentifier;\n\t  }());\n\t  var CompileAnimationEntryMetadata = (function () {\n\t      function CompileAnimationEntryMetadata(name, definitions) {\n\t          if (name === void 0) { name = null; }\n\t          if (definitions === void 0) { definitions = null; }\n\t          this.name = name;\n\t          this.definitions = definitions;\n\t      }\n\t      return CompileAnimationEntryMetadata;\n\t  }());\n\t  var CompileAnimationStateMetadata = (function () {\n\t      function CompileAnimationStateMetadata() {\n\t      }\n\t      return CompileAnimationStateMetadata;\n\t  }());\n\t  var CompileAnimationStateDeclarationMetadata = (function (_super) {\n\t      __extends$7(CompileAnimationStateDeclarationMetadata, _super);\n\t      function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n\t          _super.call(this);\n\t          this.stateNameExpr = stateNameExpr;\n\t          this.styles = styles;\n\t      }\n\t      return CompileAnimationStateDeclarationMetadata;\n\t  }(CompileAnimationStateMetadata));\n\t  var CompileAnimationStateTransitionMetadata = (function (_super) {\n\t      __extends$7(CompileAnimationStateTransitionMetadata, _super);\n\t      function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n\t          _super.call(this);\n\t          this.stateChangeExpr = stateChangeExpr;\n\t          this.steps = steps;\n\t      }\n\t      return CompileAnimationStateTransitionMetadata;\n\t  }(CompileAnimationStateMetadata));\n\t  var CompileAnimationMetadata = (function () {\n\t      function CompileAnimationMetadata() {\n\t      }\n\t      return CompileAnimationMetadata;\n\t  }());\n\t  var CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n\t      __extends$7(CompileAnimationKeyframesSequenceMetadata, _super);\n\t      function CompileAnimationKeyframesSequenceMetadata(steps) {\n\t          if (steps === void 0) { steps = []; }\n\t          _super.call(this);\n\t          this.steps = steps;\n\t      }\n\t      return CompileAnimationKeyframesSequenceMetadata;\n\t  }(CompileAnimationMetadata));\n\t  var CompileAnimationStyleMetadata = (function (_super) {\n\t      __extends$7(CompileAnimationStyleMetadata, _super);\n\t      function CompileAnimationStyleMetadata(offset, styles) {\n\t          if (styles === void 0) { styles = null; }\n\t          _super.call(this);\n\t          this.offset = offset;\n\t          this.styles = styles;\n\t      }\n\t      return CompileAnimationStyleMetadata;\n\t  }(CompileAnimationMetadata));\n\t  var CompileAnimationAnimateMetadata = (function (_super) {\n\t      __extends$7(CompileAnimationAnimateMetadata, _super);\n\t      function CompileAnimationAnimateMetadata(timings, styles) {\n\t          if (timings === void 0) { timings = 0; }\n\t          if (styles === void 0) { styles = null; }\n\t          _super.call(this);\n\t          this.timings = timings;\n\t          this.styles = styles;\n\t      }\n\t      return CompileAnimationAnimateMetadata;\n\t  }(CompileAnimationMetadata));\n\t  var CompileAnimationWithStepsMetadata = (function (_super) {\n\t      __extends$7(CompileAnimationWithStepsMetadata, _super);\n\t      function CompileAnimationWithStepsMetadata(steps) {\n\t          if (steps === void 0) { steps = null; }\n\t          _super.call(this);\n\t          this.steps = steps;\n\t      }\n\t      return CompileAnimationWithStepsMetadata;\n\t  }(CompileAnimationMetadata));\n\t  var CompileAnimationSequenceMetadata = (function (_super) {\n\t      __extends$7(CompileAnimationSequenceMetadata, _super);\n\t      function CompileAnimationSequenceMetadata(steps) {\n\t          if (steps === void 0) { steps = null; }\n\t          _super.call(this, steps);\n\t      }\n\t      return CompileAnimationSequenceMetadata;\n\t  }(CompileAnimationWithStepsMetadata));\n\t  var CompileAnimationGroupMetadata = (function (_super) {\n\t      __extends$7(CompileAnimationGroupMetadata, _super);\n\t      function CompileAnimationGroupMetadata(steps) {\n\t          if (steps === void 0) { steps = null; }\n\t          _super.call(this, steps);\n\t      }\n\t      return CompileAnimationGroupMetadata;\n\t  }(CompileAnimationWithStepsMetadata));\n\t  var CompileIdentifierMetadata = (function () {\n\t      function CompileIdentifierMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, value = _b.value;\n\t          this.reference = reference;\n\t          this.name = name;\n\t          this.prefix = prefix;\n\t          this.moduleUrl = moduleUrl;\n\t          this.value = value;\n\t      }\n\t      Object.defineProperty(CompileIdentifierMetadata.prototype, \"identifier\", {\n\t          get: function () { return this; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompileIdentifierMetadata;\n\t  }());\n\t  var CompileDiDependencyMetadata = (function () {\n\t      function CompileDiDependencyMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, isAttribute = _b.isAttribute, isSelf = _b.isSelf, isHost = _b.isHost, isSkipSelf = _b.isSkipSelf, isOptional = _b.isOptional, isValue = _b.isValue, token = _b.token, value = _b.value;\n\t          this.isAttribute = !!isAttribute;\n\t          this.isSelf = !!isSelf;\n\t          this.isHost = !!isHost;\n\t          this.isSkipSelf = !!isSkipSelf;\n\t          this.isOptional = !!isOptional;\n\t          this.isValue = !!isValue;\n\t          this.token = token;\n\t          this.value = value;\n\t      }\n\t      return CompileDiDependencyMetadata;\n\t  }());\n\t  var CompileProviderMetadata = (function () {\n\t      function CompileProviderMetadata(_a) {\n\t          var token = _a.token, useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n\t          this.token = token;\n\t          this.useClass = useClass;\n\t          this.useValue = useValue;\n\t          this.useExisting = useExisting;\n\t          this.useFactory = useFactory;\n\t          this.deps = deps || null;\n\t          this.multi = !!multi;\n\t      }\n\t      return CompileProviderMetadata;\n\t  }());\n\t  var CompileFactoryMetadata = (function (_super) {\n\t      __extends$7(CompileFactoryMetadata, _super);\n\t      function CompileFactoryMetadata(_a) {\n\t          var reference = _a.reference, name = _a.name, moduleUrl = _a.moduleUrl, prefix = _a.prefix, diDeps = _a.diDeps, value = _a.value;\n\t          _super.call(this, { reference: reference, name: name, prefix: prefix, moduleUrl: moduleUrl, value: value });\n\t          this.diDeps = _normalizeArray(diDeps);\n\t      }\n\t      return CompileFactoryMetadata;\n\t  }(CompileIdentifierMetadata));\n\t  var CompileTokenMetadata = (function () {\n\t      function CompileTokenMetadata(_a) {\n\t          var value = _a.value, identifier = _a.identifier, identifierIsInstance = _a.identifierIsInstance;\n\t          this.value = value;\n\t          this.identifier = identifier;\n\t          this.identifierIsInstance = !!identifierIsInstance;\n\t      }\n\t      Object.defineProperty(CompileTokenMetadata.prototype, \"reference\", {\n\t          get: function () {\n\t              if (isPresent(this.identifier)) {\n\t                  return this.identifier.reference;\n\t              }\n\t              else {\n\t                  return this.value;\n\t              }\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(CompileTokenMetadata.prototype, \"name\", {\n\t          get: function () {\n\t              return isPresent(this.value) ? sanitizeIdentifier(this.value) : this.identifier.name;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompileTokenMetadata;\n\t  }());\n\t  /**\n\t   * Metadata regarding compilation of a type.\n\t   */\n\t  var CompileTypeMetadata = (function (_super) {\n\t      __extends$7(CompileTypeMetadata, _super);\n\t      function CompileTypeMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, isHost = _b.isHost, value = _b.value, diDeps = _b.diDeps, lifecycleHooks = _b.lifecycleHooks;\n\t          _super.call(this, { reference: reference, name: name, moduleUrl: moduleUrl, prefix: prefix, value: value });\n\t          this.isHost = !!isHost;\n\t          this.diDeps = _normalizeArray(diDeps);\n\t          this.lifecycleHooks = _normalizeArray(lifecycleHooks);\n\t      }\n\t      return CompileTypeMetadata;\n\t  }(CompileIdentifierMetadata));\n\t  var CompileQueryMetadata = (function () {\n\t      function CompileQueryMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, selectors = _b.selectors, descendants = _b.descendants, first = _b.first, propertyName = _b.propertyName, read = _b.read;\n\t          this.selectors = selectors;\n\t          this.descendants = !!descendants;\n\t          this.first = !!first;\n\t          this.propertyName = propertyName;\n\t          this.read = read;\n\t      }\n\t      return CompileQueryMetadata;\n\t  }());\n\t  /**\n\t   * Metadata about a stylesheet\n\t   */\n\t  var CompileStylesheetMetadata = (function () {\n\t      function CompileStylesheetMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n\t          this.moduleUrl = moduleUrl;\n\t          this.styles = _normalizeArray(styles);\n\t          this.styleUrls = _normalizeArray(styleUrls);\n\t      }\n\t      return CompileStylesheetMetadata;\n\t  }());\n\t  /**\n\t   * Metadata regarding compilation of a template.\n\t   */\n\t  var CompileTemplateMetadata = (function () {\n\t      function CompileTemplateMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, externalStylesheets = _b.externalStylesheets, animations = _b.animations, ngContentSelectors = _b.ngContentSelectors, interpolation = _b.interpolation;\n\t          this.encapsulation = encapsulation;\n\t          this.template = template;\n\t          this.templateUrl = templateUrl;\n\t          this.styles = _normalizeArray(styles);\n\t          this.styleUrls = _normalizeArray(styleUrls);\n\t          this.externalStylesheets = _normalizeArray(externalStylesheets);\n\t          this.animations = animations ? ListWrapper.flatten(animations) : [];\n\t          this.ngContentSelectors = ngContentSelectors || [];\n\t          if (interpolation && interpolation.length != 2) {\n\t              throw new Error(\"'interpolation' should have a start and an end symbol.\");\n\t          }\n\t          this.interpolation = interpolation;\n\t      }\n\t      CompileTemplateMetadata.prototype.toSummary = function () {\n\t          return {\n\t              isSummary: true,\n\t              animations: this.animations.map(function (anim) { return anim.name; }),\n\t              ngContentSelectors: this.ngContentSelectors,\n\t              encapsulation: this.encapsulation\n\t          };\n\t      };\n\t      return CompileTemplateMetadata;\n\t  }());\n\t  /**\n\t   * Metadata regarding compilation of a directive.\n\t   */\n\t  var CompileDirectiveMetadata = (function () {\n\t      function CompileDirectiveMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n\t          this.type = type;\n\t          this.isComponent = isComponent;\n\t          this.selector = selector;\n\t          this.exportAs = exportAs;\n\t          this.changeDetection = changeDetection;\n\t          this.inputs = inputs;\n\t          this.outputs = outputs;\n\t          this.hostListeners = hostListeners;\n\t          this.hostProperties = hostProperties;\n\t          this.hostAttributes = hostAttributes;\n\t          this.providers = _normalizeArray(providers);\n\t          this.viewProviders = _normalizeArray(viewProviders);\n\t          this.queries = _normalizeArray(queries);\n\t          this.viewQueries = _normalizeArray(viewQueries);\n\t          this.entryComponents = _normalizeArray(entryComponents);\n\t          this.template = template;\n\t      }\n\t      CompileDirectiveMetadata.create = function (_a) {\n\t          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n\t          var hostListeners = {};\n\t          var hostProperties = {};\n\t          var hostAttributes = {};\n\t          if (isPresent(host)) {\n\t              Object.keys(host).forEach(function (key) {\n\t                  var value = host[key];\n\t                  var matches = key.match(HOST_REG_EXP);\n\t                  if (matches === null) {\n\t                      hostAttributes[key] = value;\n\t                  }\n\t                  else if (isPresent(matches[1])) {\n\t                      hostProperties[matches[1]] = value;\n\t                  }\n\t                  else if (isPresent(matches[2])) {\n\t                      hostListeners[matches[2]] = value;\n\t                  }\n\t              });\n\t          }\n\t          var inputsMap = {};\n\t          if (isPresent(inputs)) {\n\t              inputs.forEach(function (bindConfig) {\n\t                  // canonical syntax: `dirProp: elProp`\n\t                  // if there is no `:`, use dirProp = elProp\n\t                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n\t                  inputsMap[parts[0]] = parts[1];\n\t              });\n\t          }\n\t          var outputsMap = {};\n\t          if (isPresent(outputs)) {\n\t              outputs.forEach(function (bindConfig) {\n\t                  // canonical syntax: `dirProp: elProp`\n\t                  // if there is no `:`, use dirProp = elProp\n\t                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n\t                  outputsMap[parts[0]] = parts[1];\n\t              });\n\t          }\n\t          return new CompileDirectiveMetadata({\n\t              type: type,\n\t              isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n\t              inputs: inputsMap,\n\t              outputs: outputsMap,\n\t              hostListeners: hostListeners,\n\t              hostProperties: hostProperties,\n\t              hostAttributes: hostAttributes,\n\t              providers: providers,\n\t              viewProviders: viewProviders,\n\t              queries: queries,\n\t              viewQueries: viewQueries,\n\t              entryComponents: entryComponents,\n\t              template: template,\n\t          });\n\t      };\n\t      Object.defineProperty(CompileDirectiveMetadata.prototype, \"identifier\", {\n\t          get: function () { return this.type; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      CompileDirectiveMetadata.prototype.toSummary = function () {\n\t          return {\n\t              isSummary: true,\n\t              type: this.type,\n\t              isComponent: this.isComponent,\n\t              selector: this.selector,\n\t              exportAs: this.exportAs,\n\t              inputs: this.inputs,\n\t              outputs: this.outputs,\n\t              hostListeners: this.hostListeners,\n\t              hostProperties: this.hostProperties,\n\t              hostAttributes: this.hostAttributes,\n\t              providers: this.providers,\n\t              viewProviders: this.viewProviders,\n\t              queries: this.queries,\n\t              entryComponents: this.entryComponents,\n\t              changeDetection: this.changeDetection,\n\t              template: this.template && this.template.toSummary()\n\t          };\n\t      };\n\t      return CompileDirectiveMetadata;\n\t  }());\n\t  /**\n\t   * Construct {@link CompileDirectiveMetadata} from {@link ComponentTypeMetadata} and a selector.\n\t   */\n\t  function createHostComponentMeta(compMeta) {\n\t      var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n\t      return CompileDirectiveMetadata.create({\n\t          type: new CompileTypeMetadata({\n\t              reference: Object,\n\t              name: compMeta.type.name + \"_Host\",\n\t              moduleUrl: compMeta.type.moduleUrl,\n\t              isHost: true\n\t          }),\n\t          template: new CompileTemplateMetadata({\n\t              encapsulation: _angular_core.ViewEncapsulation.None,\n\t              template: template,\n\t              templateUrl: '',\n\t              styles: [],\n\t              styleUrls: [],\n\t              ngContentSelectors: [],\n\t              animations: []\n\t          }),\n\t          changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n\t          inputs: [],\n\t          outputs: [],\n\t          host: {},\n\t          isComponent: true,\n\t          selector: '*',\n\t          providers: [],\n\t          viewProviders: [],\n\t          queries: [],\n\t          viewQueries: []\n\t      });\n\t  }\n\t  var CompilePipeMetadata = (function () {\n\t      function CompilePipeMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\n\t          this.type = type;\n\t          this.name = name;\n\t          this.pure = !!pure;\n\t      }\n\t      Object.defineProperty(CompilePipeMetadata.prototype, \"identifier\", {\n\t          get: function () { return this.type; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      CompilePipeMetadata.prototype.toSummary = function () {\n\t          return { isSummary: true, type: this.type, name: this.name, pure: this.pure };\n\t      };\n\t      return CompilePipeMetadata;\n\t  }());\n\t  /**\n\t   * Metadata regarding compilation of a module.\n\t   */\n\t  var CompileNgModuleMetadata = (function () {\n\t      function CompileNgModuleMetadata(_a) {\n\t          var _b = _a === void 0 ? {} : _a, type = _b.type, providers = _b.providers, declaredDirectives = _b.declaredDirectives, exportedDirectives = _b.exportedDirectives, declaredPipes = _b.declaredPipes, exportedPipes = _b.exportedPipes, entryComponents = _b.entryComponents, bootstrapComponents = _b.bootstrapComponents, importedModules = _b.importedModules, exportedModules = _b.exportedModules, schemas = _b.schemas, transitiveModule = _b.transitiveModule, id = _b.id;\n\t          this.type = type;\n\t          this.declaredDirectives = _normalizeArray(declaredDirectives);\n\t          this.exportedDirectives = _normalizeArray(exportedDirectives);\n\t          this.declaredPipes = _normalizeArray(declaredPipes);\n\t          this.exportedPipes = _normalizeArray(exportedPipes);\n\t          this.providers = _normalizeArray(providers);\n\t          this.entryComponents = _normalizeArray(entryComponents);\n\t          this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n\t          this.importedModules = _normalizeArray(importedModules);\n\t          this.exportedModules = _normalizeArray(exportedModules);\n\t          this.schemas = _normalizeArray(schemas);\n\t          this.id = id;\n\t          this.transitiveModule = transitiveModule;\n\t      }\n\t      Object.defineProperty(CompileNgModuleMetadata.prototype, \"identifier\", {\n\t          get: function () { return this.type; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      CompileNgModuleMetadata.prototype.toSummary = function () {\n\t          return {\n\t              isSummary: true,\n\t              type: this.type,\n\t              entryComponents: this.entryComponents,\n\t              providers: this.providers,\n\t              importedModules: this.importedModules,\n\t              exportedModules: this.exportedModules,\n\t              exportedDirectives: this.exportedDirectives,\n\t              exportedPipes: this.exportedPipes,\n\t              directiveLoaders: this.transitiveModule.directiveLoaders\n\t          };\n\t      };\n\t      CompileNgModuleMetadata.prototype.toInjectorSummary = function () {\n\t          return {\n\t              isSummary: true,\n\t              type: this.type,\n\t              entryComponents: this.entryComponents,\n\t              providers: this.providers,\n\t              importedModules: this.importedModules,\n\t              exportedModules: this.exportedModules\n\t          };\n\t      };\n\t      CompileNgModuleMetadata.prototype.toDirectiveSummary = function () {\n\t          return {\n\t              isSummary: true,\n\t              type: this.type,\n\t              exportedDirectives: this.exportedDirectives,\n\t              exportedPipes: this.exportedPipes,\n\t              exportedModules: this.exportedModules,\n\t              directiveLoaders: this.transitiveModule.directiveLoaders\n\t          };\n\t      };\n\t      return CompileNgModuleMetadata;\n\t  }());\n\t  var TransitiveCompileNgModuleMetadata = (function () {\n\t      function TransitiveCompileNgModuleMetadata(modules, providers, entryComponents, directives, pipes, directiveLoaders) {\n\t          var _this = this;\n\t          this.modules = modules;\n\t          this.providers = providers;\n\t          this.entryComponents = entryComponents;\n\t          this.directives = directives;\n\t          this.pipes = pipes;\n\t          this.directiveLoaders = directiveLoaders;\n\t          this.directivesSet = new Set();\n\t          this.pipesSet = new Set();\n\t          directives.forEach(function (dir) { return _this.directivesSet.add(dir.reference); });\n\t          pipes.forEach(function (pipe) { return _this.pipesSet.add(pipe.reference); });\n\t      }\n\t      return TransitiveCompileNgModuleMetadata;\n\t  }());\n\t  function removeIdentifierDuplicates(items) {\n\t      var map = new Map();\n\t      items.forEach(function (item) {\n\t          if (!map.get(item.identifier.reference)) {\n\t              map.set(item.identifier.reference, item);\n\t          }\n\t      });\n\t      return Array.from(map.values());\n\t  }\n\t  function _normalizeArray(obj) {\n\t      return obj || [];\n\t  }\n\t  function isStaticSymbol(value) {\n\t      return typeof value === 'object' && value !== null && value['name'] && value['filePath'];\n\t  }\n\t  var ProviderMeta = (function () {\n\t      function ProviderMeta(token, _a) {\n\t          var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n\t          this.token = token;\n\t          this.useClass = useClass;\n\t          this.useValue = useValue;\n\t          this.useExisting = useExisting;\n\t          this.useFactory = useFactory;\n\t          this.dependencies = deps;\n\t          this.multi = !!multi;\n\t      }\n\t      return ProviderMeta;\n\t  }());\n\t\n\t  var isDefaultChangeDetectionStrategy = _angular_core.__core_private__.isDefaultChangeDetectionStrategy;\n\t  var ChangeDetectorStatus = _angular_core.__core_private__.ChangeDetectorStatus;\n\t  var LifecycleHooks = _angular_core.__core_private__.LifecycleHooks;\n\t  var LIFECYCLE_HOOKS_VALUES = _angular_core.__core_private__.LIFECYCLE_HOOKS_VALUES;\n\t  var ReflectorReader = _angular_core.__core_private__.ReflectorReader;\n\t  var ViewContainer = _angular_core.__core_private__.ViewContainer;\n\t  var CodegenComponentFactoryResolver = _angular_core.__core_private__.CodegenComponentFactoryResolver;\n\t  var ComponentRef_ = _angular_core.__core_private__.ComponentRef_;\n\t  var AppView = _angular_core.__core_private__.AppView;\n\t  var DebugAppView = _angular_core.__core_private__.DebugAppView;\n\t  var NgModuleInjector = _angular_core.__core_private__.NgModuleInjector;\n\t  var registerModuleFactory = _angular_core.__core_private__.registerModuleFactory;\n\t  var ViewType = _angular_core.__core_private__.ViewType;\n\t  var view_utils = _angular_core.__core_private__.view_utils;\n\t  var DebugContext = _angular_core.__core_private__.DebugContext;\n\t  var StaticNodeDebugInfo = _angular_core.__core_private__.StaticNodeDebugInfo;\n\t  var devModeEqual = _angular_core.__core_private__.devModeEqual;\n\t  var UNINITIALIZED = _angular_core.__core_private__.UNINITIALIZED;\n\t  var ValueUnwrapper = _angular_core.__core_private__.ValueUnwrapper;\n\t  var TemplateRef_ = _angular_core.__core_private__.TemplateRef_;\n\t  var Console = _angular_core.__core_private__.Console;\n\t  var reflector = _angular_core.__core_private__.reflector;\n\t  var Reflector = _angular_core.__core_private__.Reflector;\n\t  var ReflectionCapabilities = _angular_core.__core_private__.ReflectionCapabilities;\n\t  var NoOpAnimationPlayer = _angular_core.__core_private__.NoOpAnimationPlayer;\n\t  var AnimationSequencePlayer = _angular_core.__core_private__.AnimationSequencePlayer;\n\t  var AnimationGroupPlayer = _angular_core.__core_private__.AnimationGroupPlayer;\n\t  var AnimationKeyframe = _angular_core.__core_private__.AnimationKeyframe;\n\t  var AnimationStyles = _angular_core.__core_private__.AnimationStyles;\n\t  var ANY_STATE = _angular_core.__core_private__.ANY_STATE;\n\t  var DEFAULT_STATE = _angular_core.__core_private__.DEFAULT_STATE;\n\t  var EMPTY_ANIMATION_STATE = _angular_core.__core_private__.EMPTY_STATE;\n\t  var FILL_STYLE_FLAG = _angular_core.__core_private__.FILL_STYLE_FLAG;\n\t  var prepareFinalAnimationStyles = _angular_core.__core_private__.prepareFinalAnimationStyles;\n\t  var balanceAnimationKeyframes = _angular_core.__core_private__.balanceAnimationKeyframes;\n\t  var clearStyles = _angular_core.__core_private__.clearStyles;\n\t  var collectAndResolveStyles = _angular_core.__core_private__.collectAndResolveStyles;\n\t  var renderStyles = _angular_core.__core_private__.renderStyles;\n\t  var ComponentStillLoadingError = _angular_core.__core_private__.ComponentStillLoadingError;\n\t  var AnimationTransition = _angular_core.__core_private__.AnimationTransition;\n\t\n\t  var APP_VIEW_MODULE_URL = assetUrl('core', 'linker/view');\n\t  var VIEW_UTILS_MODULE_URL = assetUrl('core', 'linker/view_utils');\n\t  var CD_MODULE_URL = assetUrl('core', 'change_detection/change_detection');\n\t  var ANIMATION_STYLE_UTIL_ASSET_URL = assetUrl('core', 'animation/animation_style_util');\n\t  var Identifiers = (function () {\n\t      function Identifiers() {\n\t      }\n\t      Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n\t          name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n\t          moduleUrl: assetUrl('core', 'metadata/di'),\n\t          runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n\t      };\n\t      Identifiers.ViewUtils = {\n\t          name: 'ViewUtils',\n\t          moduleUrl: assetUrl('core', 'linker/view_utils'),\n\t          runtime: view_utils.ViewUtils\n\t      };\n\t      Identifiers.AppView = { name: 'AppView', moduleUrl: APP_VIEW_MODULE_URL, runtime: AppView };\n\t      Identifiers.DebugAppView = {\n\t          name: 'DebugAppView',\n\t          moduleUrl: APP_VIEW_MODULE_URL,\n\t          runtime: DebugAppView\n\t      };\n\t      Identifiers.ViewContainer = {\n\t          name: 'ViewContainer',\n\t          moduleUrl: assetUrl('core', 'linker/view_container'),\n\t          runtime: ViewContainer\n\t      };\n\t      Identifiers.ElementRef = {\n\t          name: 'ElementRef',\n\t          moduleUrl: assetUrl('core', 'linker/element_ref'),\n\t          runtime: _angular_core.ElementRef\n\t      };\n\t      Identifiers.ViewContainerRef = {\n\t          name: 'ViewContainerRef',\n\t          moduleUrl: assetUrl('core', 'linker/view_container_ref'),\n\t          runtime: _angular_core.ViewContainerRef\n\t      };\n\t      Identifiers.ChangeDetectorRef = {\n\t          name: 'ChangeDetectorRef',\n\t          moduleUrl: assetUrl('core', 'change_detection/change_detector_ref'),\n\t          runtime: _angular_core.ChangeDetectorRef\n\t      };\n\t      Identifiers.RenderComponentType = {\n\t          name: 'RenderComponentType',\n\t          moduleUrl: assetUrl('core', 'render/api'),\n\t          runtime: _angular_core.RenderComponentType\n\t      };\n\t      Identifiers.QueryList = {\n\t          name: 'QueryList',\n\t          moduleUrl: assetUrl('core', 'linker/query_list'),\n\t          runtime: _angular_core.QueryList\n\t      };\n\t      Identifiers.TemplateRef = {\n\t          name: 'TemplateRef',\n\t          moduleUrl: assetUrl('core', 'linker/template_ref'),\n\t          runtime: _angular_core.TemplateRef\n\t      };\n\t      Identifiers.TemplateRef_ = {\n\t          name: 'TemplateRef_',\n\t          moduleUrl: assetUrl('core', 'linker/template_ref'),\n\t          runtime: TemplateRef_\n\t      };\n\t      Identifiers.CodegenComponentFactoryResolver = {\n\t          name: 'CodegenComponentFactoryResolver',\n\t          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n\t          runtime: CodegenComponentFactoryResolver\n\t      };\n\t      Identifiers.ComponentFactoryResolver = {\n\t          name: 'ComponentFactoryResolver',\n\t          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n\t          runtime: _angular_core.ComponentFactoryResolver\n\t      };\n\t      Identifiers.ComponentFactory = {\n\t          name: 'ComponentFactory',\n\t          runtime: _angular_core.ComponentFactory,\n\t          moduleUrl: assetUrl('core', 'linker/component_factory')\n\t      };\n\t      Identifiers.ComponentRef_ = {\n\t          name: 'ComponentRef_',\n\t          runtime: ComponentRef_,\n\t          moduleUrl: assetUrl('core', 'linker/component_factory')\n\t      };\n\t      Identifiers.ComponentRef = {\n\t          name: 'ComponentRef',\n\t          runtime: _angular_core.ComponentRef,\n\t          moduleUrl: assetUrl('core', 'linker/component_factory')\n\t      };\n\t      Identifiers.NgModuleFactory = {\n\t          name: 'NgModuleFactory',\n\t          runtime: _angular_core.NgModuleFactory,\n\t          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n\t      };\n\t      Identifiers.NgModuleInjector = {\n\t          name: 'NgModuleInjector',\n\t          runtime: NgModuleInjector,\n\t          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n\t      };\n\t      Identifiers.RegisterModuleFactoryFn = {\n\t          name: 'registerModuleFactory',\n\t          runtime: registerModuleFactory,\n\t          moduleUrl: assetUrl('core', 'linker/ng_module_factory_loader')\n\t      };\n\t      Identifiers.ValueUnwrapper = { name: 'ValueUnwrapper', moduleUrl: CD_MODULE_URL, runtime: ValueUnwrapper };\n\t      Identifiers.Injector = {\n\t          name: 'Injector',\n\t          moduleUrl: assetUrl('core', 'di/injector'),\n\t          runtime: _angular_core.Injector\n\t      };\n\t      Identifiers.ViewEncapsulation = {\n\t          name: 'ViewEncapsulation',\n\t          moduleUrl: assetUrl('core', 'metadata/view'),\n\t          runtime: _angular_core.ViewEncapsulation\n\t      };\n\t      Identifiers.ViewType = {\n\t          name: 'ViewType',\n\t          moduleUrl: assetUrl('core', 'linker/view_type'),\n\t          runtime: ViewType\n\t      };\n\t      Identifiers.ChangeDetectionStrategy = {\n\t          name: 'ChangeDetectionStrategy',\n\t          moduleUrl: CD_MODULE_URL,\n\t          runtime: _angular_core.ChangeDetectionStrategy\n\t      };\n\t      Identifiers.StaticNodeDebugInfo = {\n\t          name: 'StaticNodeDebugInfo',\n\t          moduleUrl: assetUrl('core', 'linker/debug_context'),\n\t          runtime: StaticNodeDebugInfo\n\t      };\n\t      Identifiers.DebugContext = {\n\t          name: 'DebugContext',\n\t          moduleUrl: assetUrl('core', 'linker/debug_context'),\n\t          runtime: DebugContext\n\t      };\n\t      Identifiers.Renderer = {\n\t          name: 'Renderer',\n\t          moduleUrl: assetUrl('core', 'render/api'),\n\t          runtime: _angular_core.Renderer\n\t      };\n\t      Identifiers.SimpleChange = { name: 'SimpleChange', moduleUrl: CD_MODULE_URL, runtime: _angular_core.SimpleChange };\n\t      Identifiers.UNINITIALIZED = { name: 'UNINITIALIZED', moduleUrl: CD_MODULE_URL, runtime: UNINITIALIZED };\n\t      Identifiers.ChangeDetectorStatus = {\n\t          name: 'ChangeDetectorStatus',\n\t          moduleUrl: CD_MODULE_URL,\n\t          runtime: ChangeDetectorStatus\n\t      };\n\t      Identifiers.checkBinding = {\n\t          name: 'checkBinding',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.checkBinding\n\t      };\n\t      Identifiers.devModeEqual = { name: 'devModeEqual', moduleUrl: CD_MODULE_URL, runtime: devModeEqual };\n\t      Identifiers.inlineInterpolate = {\n\t          name: 'inlineInterpolate',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.inlineInterpolate\n\t      };\n\t      Identifiers.interpolate = {\n\t          name: 'interpolate',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.interpolate\n\t      };\n\t      Identifiers.castByValue = {\n\t          name: 'castByValue',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.castByValue\n\t      };\n\t      Identifiers.EMPTY_ARRAY = {\n\t          name: 'EMPTY_ARRAY',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.EMPTY_ARRAY\n\t      };\n\t      Identifiers.EMPTY_MAP = {\n\t          name: 'EMPTY_MAP',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.EMPTY_MAP\n\t      };\n\t      Identifiers.createRenderElement = {\n\t          name: 'createRenderElement',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.createRenderElement\n\t      };\n\t      Identifiers.selectOrCreateRenderHostElement = {\n\t          name: 'selectOrCreateRenderHostElement',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.selectOrCreateRenderHostElement\n\t      };\n\t      Identifiers.pureProxies = [\n\t          null,\n\t          { name: 'pureProxy1', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy1 },\n\t          { name: 'pureProxy2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy2 },\n\t          { name: 'pureProxy3', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy3 },\n\t          { name: 'pureProxy4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy4 },\n\t          { name: 'pureProxy5', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy5 },\n\t          { name: 'pureProxy6', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy6 },\n\t          { name: 'pureProxy7', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy7 },\n\t          { name: 'pureProxy8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy8 },\n\t          { name: 'pureProxy9', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy9 },\n\t          { name: 'pureProxy10', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy10 },\n\t      ];\n\t      Identifiers.SecurityContext = {\n\t          name: 'SecurityContext',\n\t          moduleUrl: assetUrl('core', 'security'),\n\t          runtime: _angular_core.SecurityContext,\n\t      };\n\t      Identifiers.AnimationKeyframe = {\n\t          name: 'AnimationKeyframe',\n\t          moduleUrl: assetUrl('core', 'animation/animation_keyframe'),\n\t          runtime: AnimationKeyframe\n\t      };\n\t      Identifiers.AnimationStyles = {\n\t          name: 'AnimationStyles',\n\t          moduleUrl: assetUrl('core', 'animation/animation_styles'),\n\t          runtime: AnimationStyles\n\t      };\n\t      Identifiers.NoOpAnimationPlayer = {\n\t          name: 'NoOpAnimationPlayer',\n\t          moduleUrl: assetUrl('core', 'animation/animation_player'),\n\t          runtime: NoOpAnimationPlayer\n\t      };\n\t      Identifiers.AnimationGroupPlayer = {\n\t          name: 'AnimationGroupPlayer',\n\t          moduleUrl: assetUrl('core', 'animation/animation_group_player'),\n\t          runtime: AnimationGroupPlayer\n\t      };\n\t      Identifiers.AnimationSequencePlayer = {\n\t          name: 'AnimationSequencePlayer',\n\t          moduleUrl: assetUrl('core', 'animation/animation_sequence_player'),\n\t          runtime: AnimationSequencePlayer\n\t      };\n\t      Identifiers.prepareFinalAnimationStyles = {\n\t          name: 'prepareFinalAnimationStyles',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: prepareFinalAnimationStyles\n\t      };\n\t      Identifiers.balanceAnimationKeyframes = {\n\t          name: 'balanceAnimationKeyframes',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: balanceAnimationKeyframes\n\t      };\n\t      Identifiers.clearStyles = {\n\t          name: 'clearStyles',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: clearStyles\n\t      };\n\t      Identifiers.renderStyles = {\n\t          name: 'renderStyles',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: renderStyles\n\t      };\n\t      Identifiers.collectAndResolveStyles = {\n\t          name: 'collectAndResolveStyles',\n\t          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n\t          runtime: collectAndResolveStyles\n\t      };\n\t      Identifiers.LOCALE_ID = {\n\t          name: 'LOCALE_ID',\n\t          moduleUrl: assetUrl('core', 'i18n/tokens'),\n\t          runtime: _angular_core.LOCALE_ID\n\t      };\n\t      Identifiers.TRANSLATIONS_FORMAT = {\n\t          name: 'TRANSLATIONS_FORMAT',\n\t          moduleUrl: assetUrl('core', 'i18n/tokens'),\n\t          runtime: _angular_core.TRANSLATIONS_FORMAT\n\t      };\n\t      Identifiers.setBindingDebugInfo = {\n\t          name: 'setBindingDebugInfo',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.setBindingDebugInfo\n\t      };\n\t      Identifiers.setBindingDebugInfoForChanges = {\n\t          name: 'setBindingDebugInfoForChanges',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.setBindingDebugInfoForChanges\n\t      };\n\t      Identifiers.AnimationTransition = {\n\t          name: 'AnimationTransition',\n\t          moduleUrl: assetUrl('core', 'animation/animation_transition'),\n\t          runtime: AnimationTransition\n\t      };\n\t      // This is just the interface!\n\t      Identifiers.InlineArray = { name: 'InlineArray', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: null };\n\t      Identifiers.inlineArrays = [\n\t          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n\t          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n\t          { name: 'InlineArray4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray4 },\n\t          { name: 'InlineArray8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray8 },\n\t          { name: 'InlineArray16', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray16 },\n\t      ];\n\t      Identifiers.EMPTY_INLINE_ARRAY = {\n\t          name: 'EMPTY_INLINE_ARRAY',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.EMPTY_INLINE_ARRAY\n\t      };\n\t      Identifiers.InlineArrayDynamic = {\n\t          name: 'InlineArrayDynamic',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.InlineArrayDynamic\n\t      };\n\t      Identifiers.subscribeToRenderElement = {\n\t          name: 'subscribeToRenderElement',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.subscribeToRenderElement\n\t      };\n\t      Identifiers.createRenderComponentType = {\n\t          name: 'createRenderComponentType',\n\t          moduleUrl: VIEW_UTILS_MODULE_URL,\n\t          runtime: view_utils.createRenderComponentType\n\t      };\n\t      Identifiers.noop = { name: 'noop', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.noop };\n\t      return Identifiers;\n\t  }());\n\t  function assetUrl(pkg, path, type) {\n\t      if (path === void 0) { path = null; }\n\t      if (type === void 0) { type = 'src'; }\n\t      if (path == null) {\n\t          return \"asset:@angular/lib/\" + pkg + \"/index\";\n\t      }\n\t      else {\n\t          return \"asset:@angular/lib/\" + pkg + \"/src/\" + path;\n\t      }\n\t  }\n\t  function resolveIdentifier(identifier) {\n\t      return new CompileIdentifierMetadata({\n\t          name: identifier.name,\n\t          moduleUrl: identifier.moduleUrl,\n\t          reference: reflector.resolveIdentifier(identifier.name, identifier.moduleUrl, identifier.runtime)\n\t      });\n\t  }\n\t  function identifierToken(identifier) {\n\t      return new CompileTokenMetadata({ identifier: identifier });\n\t  }\n\t  function resolveIdentifierToken(identifier) {\n\t      return identifierToken(resolveIdentifier(identifier));\n\t  }\n\t  function resolveEnumIdentifier(enumType, name) {\n\t      var resolvedEnum = reflector.resolveEnum(enumType.reference, name);\n\t      return new CompileIdentifierMetadata({ name: enumType.name + \".\" + name, moduleUrl: enumType.moduleUrl, reference: resolvedEnum });\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$8 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var HtmlParser = (function (_super) {\n\t      __extends$8(HtmlParser, _super);\n\t      function HtmlParser() {\n\t          _super.call(this, getHtmlTagDefinition);\n\t      }\n\t      HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n\t          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n\t          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n\t          return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n\t      };\n\t      HtmlParser.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      HtmlParser.ctorParameters = [];\n\t      return HtmlParser;\n\t  }(Parser$1));\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$9 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  // http://cldr.unicode.org/index/cldr-spec/plural-rules\n\t  var PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n\t  /**\n\t   * Expands special forms into elements.\n\t   *\n\t   * For example,\n\t   *\n\t   * ```\n\t   * { messages.length, plural,\n\t   *   =0 {zero}\n\t   *   =1 {one}\n\t   *   other {more than one}\n\t   * }\n\t   * ```\n\t   *\n\t   * will be expanded into\n\t   *\n\t   * ```\n\t   * <ng-container [ngPlural]=\"messages.length\">\n\t   *   <template ngPluralCase=\"=0\">zero</ng-container>\n\t   *   <template ngPluralCase=\"=1\">one</ng-container>\n\t   *   <template ngPluralCase=\"other\">more than one</ng-container>\n\t   * </ng-container>\n\t   * ```\n\t   */\n\t  function expandNodes(nodes) {\n\t      var expander = new _Expander();\n\t      return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n\t  }\n\t  var ExpansionResult = (function () {\n\t      function ExpansionResult(nodes, expanded, errors) {\n\t          this.nodes = nodes;\n\t          this.expanded = expanded;\n\t          this.errors = errors;\n\t      }\n\t      return ExpansionResult;\n\t  }());\n\t  var ExpansionError = (function (_super) {\n\t      __extends$9(ExpansionError, _super);\n\t      function ExpansionError(span, errorMsg) {\n\t          _super.call(this, span, errorMsg);\n\t      }\n\t      return ExpansionError;\n\t  }(ParseError));\n\t  /**\n\t   * Expand expansion forms (plural, select) to directives\n\t   *\n\t   * @internal\n\t   */\n\t  var _Expander = (function () {\n\t      function _Expander() {\n\t          this.isExpanded = false;\n\t          this.errors = [];\n\t      }\n\t      _Expander.prototype.visitElement = function (element, context) {\n\t          return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n\t      };\n\t      _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n\t      _Expander.prototype.visitText = function (text, context) { return text; };\n\t      _Expander.prototype.visitComment = function (comment, context) { return comment; };\n\t      _Expander.prototype.visitExpansion = function (icu, context) {\n\t          this.isExpanded = true;\n\t          return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n\t              _expandDefaultForm(icu, this.errors);\n\t      };\n\t      _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n\t          throw new Error('Should not be reached');\n\t      };\n\t      return _Expander;\n\t  }());\n\t  function _expandPluralForm(ast, errors) {\n\t      var children = ast.cases.map(function (c) {\n\t          if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n\t              errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n\t          }\n\t          var expansionResult = expandNodes(c.expression);\n\t          errors.push.apply(errors, expansionResult.errors);\n\t          return new Element(\"template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n\t      });\n\t      var switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n\t      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n\t  }\n\t  function _expandDefaultForm(ast, errors) {\n\t      var children = ast.cases.map(function (c) {\n\t          var expansionResult = expandNodes(c.expression);\n\t          errors.push.apply(errors, expansionResult.errors);\n\t          if (c.value === 'other') {\n\t              // other is the default case when no values match\n\t              return new Element(\"template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n\t          }\n\t          return new Element(\"template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n\t      });\n\t      var switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n\t      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$10 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var ProviderError = (function (_super) {\n\t      __extends$10(ProviderError, _super);\n\t      function ProviderError(message, span) {\n\t          _super.call(this, span, message);\n\t      }\n\t      return ProviderError;\n\t  }(ParseError));\n\t  var ProviderViewContext = (function () {\n\t      function ProviderViewContext(component, sourceSpan) {\n\t          var _this = this;\n\t          this.component = component;\n\t          this.sourceSpan = sourceSpan;\n\t          this.errors = [];\n\t          this.viewQueries = _getViewQueries(component);\n\t          this.viewProviders = new Map();\n\t          _normalizeProviders(component.viewProviders, sourceSpan, this.errors).forEach(function (provider) {\n\t              if (isBlank(_this.viewProviders.get(provider.token.reference))) {\n\t                  _this.viewProviders.set(provider.token.reference, true);\n\t              }\n\t          });\n\t      }\n\t      return ProviderViewContext;\n\t  }());\n\t  var ProviderElementContext = (function () {\n\t      function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, _sourceSpan) {\n\t          var _this = this;\n\t          this.viewContext = viewContext;\n\t          this._parent = _parent;\n\t          this._isViewRoot = _isViewRoot;\n\t          this._directiveAsts = _directiveAsts;\n\t          this._sourceSpan = _sourceSpan;\n\t          this._transformedProviders = new Map();\n\t          this._seenProviders = new Map();\n\t          this._hasViewContainer = false;\n\t          this._attrs = {};\n\t          attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n\t          var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n\t          this._allProviders =\n\t              _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n\t          this._contentQueries = _getContentQueries(directivesMeta);\n\t          var queriedTokens = new Map();\n\t          Array.from(this._allProviders.values()).forEach(function (provider) {\n\t              _this._addQueryReadsTo(provider.token, queriedTokens);\n\t          });\n\t          refs.forEach(function (refAst) {\n\t              _this._addQueryReadsTo(new CompileTokenMetadata({ value: refAst.name }), queriedTokens);\n\t          });\n\t          if (isPresent(queriedTokens.get(resolveIdentifierToken(Identifiers.ViewContainerRef).reference))) {\n\t              this._hasViewContainer = true;\n\t          }\n\t          // create the providers that we know are eager first\n\t          Array.from(this._allProviders.values()).forEach(function (provider) {\n\t              var eager = provider.eager || isPresent(queriedTokens.get(provider.token.reference));\n\t              if (eager) {\n\t                  _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n\t              }\n\t          });\n\t      }\n\t      ProviderElementContext.prototype.afterElement = function () {\n\t          var _this = this;\n\t          // collect lazy providers\n\t          Array.from(this._allProviders.values()).forEach(function (provider) {\n\t              _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n\t          });\n\t      };\n\t      Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n\t          get: function () {\n\t              return Array.from(this._transformedProviders.values());\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n\t          get: function () {\n\t              var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n\t              var sortedDirectives = this._directiveAsts.slice();\n\t              sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n\t                  sortedProviderTypes.indexOf(dir2.directive.type); });\n\t              return sortedDirectives;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n\t          get: function () { return this._hasViewContainer; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      ProviderElementContext.prototype._addQueryReadsTo = function (token, queryReadTokens) {\n\t          this._getQueriesFor(token).forEach(function (query) {\n\t              var queryReadToken = query.read || token;\n\t              if (isBlank(queryReadTokens.get(queryReadToken.reference))) {\n\t                  queryReadTokens.set(queryReadToken.reference, true);\n\t              }\n\t          });\n\t      };\n\t      ProviderElementContext.prototype._getQueriesFor = function (token) {\n\t          var result = [];\n\t          var currentEl = this;\n\t          var distance = 0;\n\t          var queries;\n\t          while (currentEl !== null) {\n\t              queries = currentEl._contentQueries.get(token.reference);\n\t              if (isPresent(queries)) {\n\t                  result.push.apply(result, queries.filter(function (query) { return query.descendants || distance <= 1; }));\n\t              }\n\t              if (currentEl._directiveAsts.length > 0) {\n\t                  distance++;\n\t              }\n\t              currentEl = currentEl._parent;\n\t          }\n\t          queries = this.viewContext.viewQueries.get(token.reference);\n\t          if (isPresent(queries)) {\n\t              result.push.apply(result, queries);\n\t          }\n\t          return result;\n\t      };\n\t      ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n\t          var _this = this;\n\t          var resolvedProvider = this._allProviders.get(token.reference);\n\t          if (!resolvedProvider || ((requestingProviderType === exports.ProviderAstType.Directive ||\n\t              requestingProviderType === exports.ProviderAstType.PublicService) &&\n\t              resolvedProvider.providerType === exports.ProviderAstType.PrivateService) ||\n\t              ((requestingProviderType === exports.ProviderAstType.PrivateService ||\n\t                  requestingProviderType === exports.ProviderAstType.PublicService) &&\n\t                  resolvedProvider.providerType === exports.ProviderAstType.Builtin)) {\n\t              return null;\n\t          }\n\t          var transformedProviderAst = this._transformedProviders.get(token.reference);\n\t          if (isPresent(transformedProviderAst)) {\n\t              return transformedProviderAst;\n\t          }\n\t          if (isPresent(this._seenProviders.get(token.reference))) {\n\t              this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, this._sourceSpan));\n\t              return null;\n\t          }\n\t          this._seenProviders.set(token.reference, true);\n\t          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n\t              var transformedUseValue = provider.useValue;\n\t              var transformedUseExisting = provider.useExisting;\n\t              var transformedDeps;\n\t              if (isPresent(provider.useExisting)) {\n\t                  var existingDiDep = _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }), eager);\n\t                  if (isPresent(existingDiDep.token)) {\n\t                      transformedUseExisting = existingDiDep.token;\n\t                  }\n\t                  else {\n\t                      transformedUseExisting = null;\n\t                      transformedUseValue = existingDiDep.value;\n\t                  }\n\t              }\n\t              else if (isPresent(provider.useFactory)) {\n\t                  var deps = provider.deps || provider.useFactory.diDeps;\n\t                  transformedDeps =\n\t                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n\t              }\n\t              else if (isPresent(provider.useClass)) {\n\t                  var deps = provider.deps || provider.useClass.diDeps;\n\t                  transformedDeps =\n\t                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n\t              }\n\t              return _transformProvider(provider, {\n\t                  useExisting: transformedUseExisting,\n\t                  useValue: transformedUseValue,\n\t                  deps: transformedDeps\n\t              });\n\t          });\n\t          transformedProviderAst =\n\t              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n\t          this._transformedProviders.set(token.reference, transformedProviderAst);\n\t          return transformedProviderAst;\n\t      };\n\t      ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n\t          if (eager === void 0) { eager = null; }\n\t          if (dep.isAttribute) {\n\t              var attrValue = this._attrs[dep.token.value];\n\t              return new CompileDiDependencyMetadata({ isValue: true, value: attrValue == null ? null : attrValue });\n\t          }\n\t          if (isPresent(dep.token)) {\n\t              // access builtints\n\t              if ((requestingProviderType === exports.ProviderAstType.Directive ||\n\t                  requestingProviderType === exports.ProviderAstType.Component)) {\n\t                  if (dep.token.reference === resolveIdentifierToken(Identifiers.Renderer).reference ||\n\t                      dep.token.reference === resolveIdentifierToken(Identifiers.ElementRef).reference ||\n\t                      dep.token.reference ===\n\t                          resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference ||\n\t                      dep.token.reference === resolveIdentifierToken(Identifiers.TemplateRef).reference) {\n\t                      return dep;\n\t                  }\n\t                  if (dep.token.reference ===\n\t                      resolveIdentifierToken(Identifiers.ViewContainerRef).reference) {\n\t                      this._hasViewContainer = true;\n\t                  }\n\t              }\n\t              // access the injector\n\t              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference) {\n\t                  return dep;\n\t              }\n\t              // access providers\n\t              if (isPresent(this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager))) {\n\t                  return dep;\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n\t          if (eager === void 0) { eager = null; }\n\t          var currElement = this;\n\t          var currEager = eager;\n\t          var result = null;\n\t          if (!dep.isSkipSelf) {\n\t              result = this._getLocalDependency(requestingProviderType, dep, eager);\n\t          }\n\t          if (dep.isSelf) {\n\t              if (!result && dep.isOptional) {\n\t                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n\t              }\n\t          }\n\t          else {\n\t              // check parent elements\n\t              while (!result && isPresent(currElement._parent)) {\n\t                  var prevElement = currElement;\n\t                  currElement = currElement._parent;\n\t                  if (prevElement._isViewRoot) {\n\t                      currEager = false;\n\t                  }\n\t                  result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, dep, currEager);\n\t              }\n\t              // check @Host restriction\n\t              if (!result) {\n\t                  if (!dep.isHost || this.viewContext.component.type.isHost ||\n\t                      this.viewContext.component.type.reference === dep.token.reference ||\n\t                      isPresent(this.viewContext.viewProviders.get(dep.token.reference))) {\n\t                      result = dep;\n\t                  }\n\t                  else {\n\t                      result = dep.isOptional ?\n\t                          result = new CompileDiDependencyMetadata({ isValue: true, value: null }) :\n\t                          null;\n\t                  }\n\t              }\n\t          }\n\t          if (!result) {\n\t              this.viewContext.errors.push(new ProviderError(\"No provider for \" + dep.token.name, this._sourceSpan));\n\t          }\n\t          return result;\n\t      };\n\t      return ProviderElementContext;\n\t  }());\n\t  var NgModuleProviderAnalyzer = (function () {\n\t      function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n\t          var _this = this;\n\t          this._transformedProviders = new Map();\n\t          this._seenProviders = new Map();\n\t          this._errors = [];\n\t          this._allProviders = new Map();\n\t          var ngModuleTypes = ngModule.transitiveModule.modules.map(function (moduleMeta) { return moduleMeta.type; });\n\t          ngModuleTypes.forEach(function (ngModuleType) {\n\t              var ngModuleProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: ngModuleType }), useClass: ngModuleType });\n\t              _resolveProviders([ngModuleProvider], exports.ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n\t          });\n\t          _resolveProviders(_normalizeProviders(ngModule.transitiveModule.providers.concat(extraProviders), sourceSpan, this._errors), exports.ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n\t      }\n\t      NgModuleProviderAnalyzer.prototype.parse = function () {\n\t          var _this = this;\n\t          Array.from(this._allProviders.values()).forEach(function (provider) {\n\t              _this._getOrCreateLocalProvider(provider.token, provider.eager);\n\t          });\n\t          if (this._errors.length > 0) {\n\t              var errorString = this._errors.join('\\n');\n\t              throw new Error(\"Provider parse errors:\\n\" + errorString);\n\t          }\n\t          return Array.from(this._transformedProviders.values());\n\t      };\n\t      NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n\t          var _this = this;\n\t          var resolvedProvider = this._allProviders.get(token.reference);\n\t          if (!resolvedProvider) {\n\t              return null;\n\t          }\n\t          var transformedProviderAst = this._transformedProviders.get(token.reference);\n\t          if (isPresent(transformedProviderAst)) {\n\t              return transformedProviderAst;\n\t          }\n\t          if (isPresent(this._seenProviders.get(token.reference))) {\n\t              this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, resolvedProvider.sourceSpan));\n\t              return null;\n\t          }\n\t          this._seenProviders.set(token.reference, true);\n\t          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n\t              var transformedUseValue = provider.useValue;\n\t              var transformedUseExisting = provider.useExisting;\n\t              var transformedDeps;\n\t              if (isPresent(provider.useExisting)) {\n\t                  var existingDiDep = _this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }), eager, resolvedProvider.sourceSpan);\n\t                  if (isPresent(existingDiDep.token)) {\n\t                      transformedUseExisting = existingDiDep.token;\n\t                  }\n\t                  else {\n\t                      transformedUseExisting = null;\n\t                      transformedUseValue = existingDiDep.value;\n\t                  }\n\t              }\n\t              else if (isPresent(provider.useFactory)) {\n\t                  var deps = provider.deps || provider.useFactory.diDeps;\n\t                  transformedDeps =\n\t                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n\t              }\n\t              else if (isPresent(provider.useClass)) {\n\t                  var deps = provider.deps || provider.useClass.diDeps;\n\t                  transformedDeps =\n\t                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n\t              }\n\t              return _transformProvider(provider, {\n\t                  useExisting: transformedUseExisting,\n\t                  useValue: transformedUseValue,\n\t                  deps: transformedDeps\n\t              });\n\t          });\n\t          transformedProviderAst =\n\t              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n\t          this._transformedProviders.set(token.reference, transformedProviderAst);\n\t          return transformedProviderAst;\n\t      };\n\t      NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n\t          if (eager === void 0) { eager = null; }\n\t          var foundLocal = false;\n\t          if (!dep.isSkipSelf && isPresent(dep.token)) {\n\t              // access the injector\n\t              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n\t                  dep.token.reference ===\n\t                      resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference) {\n\t                  foundLocal = true;\n\t              }\n\t              else if (isPresent(this._getOrCreateLocalProvider(dep.token, eager))) {\n\t                  foundLocal = true;\n\t              }\n\t          }\n\t          var result = dep;\n\t          if (dep.isSelf && !foundLocal) {\n\t              if (dep.isOptional) {\n\t                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n\t              }\n\t              else {\n\t                  this._errors.push(new ProviderError(\"No provider for \" + dep.token.name, requestorSourceSpan));\n\t              }\n\t          }\n\t          return result;\n\t      };\n\t      return NgModuleProviderAnalyzer;\n\t  }());\n\t  function _transformProvider(provider, _a) {\n\t      var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n\t      return new CompileProviderMetadata({\n\t          token: provider.token,\n\t          useClass: provider.useClass,\n\t          useExisting: useExisting,\n\t          useFactory: provider.useFactory,\n\t          useValue: useValue,\n\t          deps: deps,\n\t          multi: provider.multi\n\t      });\n\t  }\n\t  function _transformProviderAst(provider, _a) {\n\t      var eager = _a.eager, providers = _a.providers;\n\t      return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n\t  }\n\t  function _normalizeProviders(providers, sourceSpan, targetErrors, targetProviders) {\n\t      if (targetProviders === void 0) { targetProviders = null; }\n\t      if (!targetProviders) {\n\t          targetProviders = [];\n\t      }\n\t      if (isPresent(providers)) {\n\t          providers.forEach(function (provider) {\n\t              if (Array.isArray(provider)) {\n\t                  _normalizeProviders(provider, sourceSpan, targetErrors, targetProviders);\n\t              }\n\t              else {\n\t                  var normalizeProvider = void 0;\n\t                  if (provider instanceof CompileProviderMetadata) {\n\t                      normalizeProvider = provider;\n\t                  }\n\t                  else if (provider instanceof CompileTypeMetadata) {\n\t                      normalizeProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: provider }), useClass: provider });\n\t                  }\n\t                  else {\n\t                      targetErrors.push(new ProviderError(\"Unknown provider type \" + provider, sourceSpan));\n\t                  }\n\t                  if (isPresent(normalizeProvider)) {\n\t                      targetProviders.push(normalizeProvider);\n\t                  }\n\t              }\n\t          });\n\t      }\n\t      return targetProviders;\n\t  }\n\t  function _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n\t      var providersByToken = new Map();\n\t      directives.forEach(function (directive) {\n\t          var dirProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: directive.type }), useClass: directive.type });\n\t          _resolveProviders([dirProvider], directive.isComponent ? exports.ProviderAstType.Component : exports.ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n\t      });\n\t      // Note: directives need to be able to overwrite providers of a component!\n\t      var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n\t      directivesWithComponentFirst.forEach(function (directive) {\n\t          _resolveProviders(_normalizeProviders(directive.providers, sourceSpan, targetErrors), exports.ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n\t          _resolveProviders(_normalizeProviders(directive.viewProviders, sourceSpan, targetErrors), exports.ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n\t      });\n\t      return providersByToken;\n\t  }\n\t  function _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n\t      providers.forEach(function (provider) {\n\t          var resolvedProvider = targetProvidersByToken.get(provider.token.reference);\n\t          if (isPresent(resolvedProvider) && resolvedProvider.multiProvider !== provider.multi) {\n\t              targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + resolvedProvider.token.name, sourceSpan));\n\t          }\n\t          if (!resolvedProvider) {\n\t              var lifecycleHooks = provider.token.identifier && provider.token.identifier instanceof CompileTypeMetadata ?\n\t                  provider.token.identifier.lifecycleHooks :\n\t                  [];\n\t              resolvedProvider = new ProviderAst(provider.token, provider.multi, eager || lifecycleHooks.length > 0, [provider], providerType, lifecycleHooks, sourceSpan);\n\t              targetProvidersByToken.set(provider.token.reference, resolvedProvider);\n\t          }\n\t          else {\n\t              if (!provider.multi) {\n\t                  resolvedProvider.providers.length = 0;\n\t              }\n\t              resolvedProvider.providers.push(provider);\n\t          }\n\t      });\n\t  }\n\t  function _getViewQueries(component) {\n\t      var viewQueries = new Map();\n\t      if (isPresent(component.viewQueries)) {\n\t          component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, query); });\n\t      }\n\t      return viewQueries;\n\t  }\n\t  function _getContentQueries(directives) {\n\t      var contentQueries = new Map();\n\t      directives.forEach(function (directive) {\n\t          if (isPresent(directive.queries)) {\n\t              directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, query); });\n\t          }\n\t      });\n\t      return contentQueries;\n\t  }\n\t  function _addQueryToTokenMap(map, query) {\n\t      query.selectors.forEach(function (token) {\n\t          var entry = map.get(token.reference);\n\t          if (!entry) {\n\t              entry = [];\n\t              map.set(token.reference, entry);\n\t          }\n\t          entry.push(query);\n\t      });\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var ElementSchemaRegistry = (function () {\n\t      function ElementSchemaRegistry() {\n\t      }\n\t      return ElementSchemaRegistry;\n\t  }());\n\t\n\t  var StyleWithImports = (function () {\n\t      function StyleWithImports(style, styleUrls) {\n\t          this.style = style;\n\t          this.styleUrls = styleUrls;\n\t      }\n\t      return StyleWithImports;\n\t  }());\n\t  function isStyleUrlResolvable(url) {\n\t      if (isBlank(url) || url.length === 0 || url[0] == '/')\n\t          return false;\n\t      var schemeMatch = url.match(_urlWithSchemaRe);\n\t      return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n\t  }\n\t  /**\n\t   * Rewrites stylesheets by resolving and removing the @import urls that\n\t   * are either relative or don't have a `package:` scheme\n\t   */\n\t  function extractStyleUrls(resolver, baseUrl, cssText) {\n\t      var foundUrls = [];\n\t      var modifiedCssText = cssText.replace(_cssImportRe, function () {\n\t          var m = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              m[_i - 0] = arguments[_i];\n\t          }\n\t          var url = m[1] || m[2];\n\t          if (!isStyleUrlResolvable(url)) {\n\t              // Do not attempt to resolve non-package absolute URLs with URI scheme\n\t              return m[0];\n\t          }\n\t          foundUrls.push(resolver.resolve(baseUrl, url));\n\t          return '';\n\t      });\n\t      return new StyleWithImports(modifiedCssText, foundUrls);\n\t  }\n\t  var _cssImportRe = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n\t  var _urlWithSchemaRe = /^([^:/?#]+):/;\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$11 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var PROPERTY_PARTS_SEPARATOR = '.';\n\t  var ATTRIBUTE_PREFIX = 'attr';\n\t  var CLASS_PREFIX = 'class';\n\t  var STYLE_PREFIX = 'style';\n\t  var ANIMATE_PROP_PREFIX = 'animate-';\n\t  var BoundPropertyType;\n\t  (function (BoundPropertyType) {\n\t      BoundPropertyType[BoundPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n\t      BoundPropertyType[BoundPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n\t      BoundPropertyType[BoundPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n\t  })(BoundPropertyType || (BoundPropertyType = {}));\n\t  /**\n\t   * Represents a parsed property.\n\t   */\n\t  var BoundProperty = (function () {\n\t      function BoundProperty(name, expression, type, sourceSpan) {\n\t          this.name = name;\n\t          this.expression = expression;\n\t          this.type = type;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n\t          get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n\t          get: function () { return this.type === BoundPropertyType.ANIMATION; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return BoundProperty;\n\t  }());\n\t  /**\n\t   * Parses bindings in templates and in the directive host area.\n\t   */\n\t  var BindingParser = (function () {\n\t      function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n\t          var _this = this;\n\t          this._exprParser = _exprParser;\n\t          this._interpolationConfig = _interpolationConfig;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._targetErrors = _targetErrors;\n\t          this.pipesByName = new Map();\n\t          pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n\t      }\n\t      BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, sourceSpan) {\n\t          var _this = this;\n\t          if (dirMeta.hostProperties) {\n\t              var boundProps_1 = [];\n\t              Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n\t                  var expression = dirMeta.hostProperties[propName];\n\t                  if (typeof expression === 'string') {\n\t                      _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n\t                  }\n\t                  else {\n\t                      _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n\t                  }\n\t              });\n\t              return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(dirMeta.selector, prop); });\n\t          }\n\t      };\n\t      BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n\t          var _this = this;\n\t          if (dirMeta.hostListeners) {\n\t              var targetEventAsts_1 = [];\n\t              Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n\t                  var expression = dirMeta.hostListeners[propName];\n\t                  if (typeof expression === 'string') {\n\t                      _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n\t                  }\n\t                  else {\n\t                      _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n\t                  }\n\t              });\n\t              return targetEventAsts_1;\n\t          }\n\t      };\n\t      BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n\t          var sourceInfo = sourceSpan.start.toString();\n\t          try {\n\t              var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n\t              if (ast)\n\t                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n\t              this._checkPipes(ast, sourceSpan);\n\t              return ast;\n\t          }\n\t          catch (e) {\n\t              this._reportError(\"\" + e, sourceSpan);\n\t              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n\t          }\n\t      };\n\t      BindingParser.prototype.parseInlineTemplateBinding = function (name, prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n\t          var bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n\t          for (var i = 0; i < bindings.length; i++) {\n\t              var binding = bindings[i];\n\t              if (binding.keyIsVar) {\n\t                  targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n\t              }\n\t              else if (isPresent(binding.expression)) {\n\t                  this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t              else {\n\t                  targetMatchableAttrs.push([binding.key, '']);\n\t                  this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t          }\n\t      };\n\t      BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n\t          var _this = this;\n\t          var sourceInfo = sourceSpan.start.toString();\n\t          try {\n\t              var bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n\t              this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n\t              bindingsResult.templateBindings.forEach(function (binding) {\n\t                  if (isPresent(binding.expression)) {\n\t                      _this._checkPipes(binding.expression, sourceSpan);\n\t                  }\n\t              });\n\t              bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, exports.ParseErrorLevel.WARNING); });\n\t              return bindingsResult.templateBindings;\n\t          }\n\t          catch (e) {\n\t              this._reportError(\"\" + e, sourceSpan);\n\t              return [];\n\t          }\n\t      };\n\t      BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          if (_isAnimationLabel(name)) {\n\t              name = name.substring(1);\n\t              if (value) {\n\t                  this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n\t                      \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, exports.ParseErrorLevel.FATAL);\n\t              }\n\t              this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t          else {\n\t              targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n\t          }\n\t      };\n\t      BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          var isAnimationProp = false;\n\t          if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n\t              isAnimationProp = true;\n\t              name = name.substring(ANIMATE_PROP_PREFIX.length);\n\t          }\n\t          else if (_isAnimationLabel(name)) {\n\t              isAnimationProp = true;\n\t              name = name.substring(1);\n\t          }\n\t          if (isAnimationProp) {\n\t              this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t          else {\n\t              this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t      };\n\t      BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          var expr = this.parseInterpolation(value, sourceSpan);\n\t          if (isPresent(expr)) {\n\t              this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n\t              return true;\n\t          }\n\t          return false;\n\t      };\n\t      BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          targetMatchableAttrs.push([name, ast.source]);\n\t          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n\t      };\n\t      BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n\t          // This will occur when a @trigger is not paired with an expression.\n\t          // For animations it is valid to not have an expression since */void\n\t          // states will be applied by angular when the element is attached/detached\n\t          var ast = this._parseBinding(expression || 'null', false, sourceSpan);\n\t          targetMatchableAttrs.push([name, ast.source]);\n\t          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n\t      };\n\t      BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n\t          var sourceInfo = sourceSpan.start.toString();\n\t          try {\n\t              var ast = isHostBinding ?\n\t                  this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n\t                  this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n\t              if (ast)\n\t                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n\t              this._checkPipes(ast, sourceSpan);\n\t              return ast;\n\t          }\n\t          catch (e) {\n\t              this._reportError(\"\" + e, sourceSpan);\n\t              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n\t          }\n\t      };\n\t      BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n\t          if (boundProp.isAnimation) {\n\t              return new BoundElementPropertyAst(boundProp.name, exports.PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, false, boundProp.expression, null, boundProp.sourceSpan);\n\t          }\n\t          var unit = null;\n\t          var bindingType;\n\t          var boundPropertyName;\n\t          var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n\t          var securityContexts;\n\t          if (parts.length === 1) {\n\t              var partValue = parts[0];\n\t              boundPropertyName = this._schemaRegistry.getMappedPropName(partValue);\n\t              securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n\t              bindingType = exports.PropertyBindingType.Property;\n\t              this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n\t          }\n\t          else {\n\t              if (parts[0] == ATTRIBUTE_PREFIX) {\n\t                  boundPropertyName = parts[1];\n\t                  this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n\t                  securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n\t                  var nsSeparatorIdx = boundPropertyName.indexOf(':');\n\t                  if (nsSeparatorIdx > -1) {\n\t                      var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n\t                      var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n\t                      boundPropertyName = mergeNsAndName(ns, name_1);\n\t                  }\n\t                  bindingType = exports.PropertyBindingType.Attribute;\n\t              }\n\t              else if (parts[0] == CLASS_PREFIX) {\n\t                  boundPropertyName = parts[1];\n\t                  bindingType = exports.PropertyBindingType.Class;\n\t                  securityContexts = [_angular_core.SecurityContext.NONE];\n\t              }\n\t              else if (parts[0] == STYLE_PREFIX) {\n\t                  unit = parts.length > 2 ? parts[2] : null;\n\t                  boundPropertyName = parts[1];\n\t                  bindingType = exports.PropertyBindingType.Style;\n\t                  securityContexts = [_angular_core.SecurityContext.STYLE];\n\t              }\n\t              else {\n\t                  this._reportError(\"Invalid property name '\" + boundProp.name + \"'\", boundProp.sourceSpan);\n\t                  bindingType = null;\n\t                  securityContexts = [];\n\t              }\n\t          }\n\t          return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts.length === 1 ? securityContexts[0] : null, securityContexts.length > 1, boundProp.expression, unit, boundProp.sourceSpan);\n\t      };\n\t      BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n\t          if (_isAnimationLabel(name)) {\n\t              name = name.substr(1);\n\t              this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n\t          }\n\t          else {\n\t              this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n\t          }\n\t      };\n\t      BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n\t          var matches = splitAtPeriod(name, [name, '']);\n\t          var eventName = matches[0];\n\t          var phase = matches[1].toLowerCase();\n\t          if (phase) {\n\t              switch (phase) {\n\t                  case 'start':\n\t                  case 'done':\n\t                      var ast = this._parseAction(expression, sourceSpan);\n\t                      targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n\t                      break;\n\t                  default:\n\t                      this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n\t                      break;\n\t              }\n\t          }\n\t          else {\n\t              this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n\t          }\n\t      };\n\t      BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n\t          // long format: 'target: eventName'\n\t          var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n\t          var ast = this._parseAction(expression, sourceSpan);\n\t          targetMatchableAttrs.push([name, ast.source]);\n\t          targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n\t          // Don't detect directives for event names for now,\n\t          // so don't add the event name to the matchableAttrs\n\t      };\n\t      BindingParser.prototype._parseAction = function (value, sourceSpan) {\n\t          var sourceInfo = sourceSpan.start.toString();\n\t          try {\n\t              var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n\t              if (ast) {\n\t                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n\t              }\n\t              if (!ast || ast.ast instanceof EmptyExpr) {\n\t                  this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n\t                  return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n\t              }\n\t              this._checkPipes(ast, sourceSpan);\n\t              return ast;\n\t          }\n\t          catch (e) {\n\t              this._reportError(\"\" + e, sourceSpan);\n\t              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n\t          }\n\t      };\n\t      BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n\t          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n\t          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n\t      };\n\t      BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n\t          for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n\t              var error = errors_1[_i];\n\t              this._reportError(error.message, sourceSpan);\n\t          }\n\t      };\n\t      BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n\t          var _this = this;\n\t          if (isPresent(ast)) {\n\t              var collector = new PipeCollector();\n\t              ast.visit(collector);\n\t              collector.pipes.forEach(function (pipeName) {\n\t                  if (!_this.pipesByName.has(pipeName)) {\n\t                      _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", sourceSpan);\n\t                  }\n\t              });\n\t          }\n\t      };\n\t      /**\n\t       * @param propName the name of the property / attribute\n\t       * @param sourceSpan\n\t       * @param isAttr true when binding to an attribute\n\t       * @private\n\t       */\n\t      BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n\t          var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n\t              this._schemaRegistry.validateProperty(propName);\n\t          if (report.error) {\n\t              this._reportError(report.msg, sourceSpan, exports.ParseErrorLevel.FATAL);\n\t          }\n\t      };\n\t      return BindingParser;\n\t  }());\n\t  var PipeCollector = (function (_super) {\n\t      __extends$11(PipeCollector, _super);\n\t      function PipeCollector() {\n\t          _super.apply(this, arguments);\n\t          this.pipes = new Set();\n\t      }\n\t      PipeCollector.prototype.visitPipe = function (ast, context) {\n\t          this.pipes.add(ast.name);\n\t          ast.exp.visit(this);\n\t          this.visitAll(ast.args, context);\n\t          return null;\n\t      };\n\t      return PipeCollector;\n\t  }(RecursiveAstVisitor));\n\t  function _isAnimationLabel(name) {\n\t      return name[0] == '@';\n\t  }\n\t  function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n\t      var ctxs = [];\n\t      CssSelector.parse(selector).forEach(function (selector) {\n\t          var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n\t          var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n\t              .map(function (selector) { return selector.element; }));\n\t          var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n\t          ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n\t      });\n\t      return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n\t  }\n\t\n\t  var NG_CONTENT_SELECT_ATTR = 'select';\n\t  var NG_CONTENT_ELEMENT = 'ng-content';\n\t  var LINK_ELEMENT = 'link';\n\t  var LINK_STYLE_REL_ATTR = 'rel';\n\t  var LINK_STYLE_HREF_ATTR = 'href';\n\t  var LINK_STYLE_REL_VALUE = 'stylesheet';\n\t  var STYLE_ELEMENT = 'style';\n\t  var SCRIPT_ELEMENT = 'script';\n\t  var NG_NON_BINDABLE_ATTR = 'ngNonBindable';\n\t  var NG_PROJECT_AS = 'ngProjectAs';\n\t  function preparseElement(ast) {\n\t      var selectAttr = null;\n\t      var hrefAttr = null;\n\t      var relAttr = null;\n\t      var nonBindable = false;\n\t      var projectAs = null;\n\t      ast.attrs.forEach(function (attr) {\n\t          var lcAttrName = attr.name.toLowerCase();\n\t          if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n\t              selectAttr = attr.value;\n\t          }\n\t          else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n\t              hrefAttr = attr.value;\n\t          }\n\t          else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n\t              relAttr = attr.value;\n\t          }\n\t          else if (attr.name == NG_NON_BINDABLE_ATTR) {\n\t              nonBindable = true;\n\t          }\n\t          else if (attr.name == NG_PROJECT_AS) {\n\t              if (attr.value.length > 0) {\n\t                  projectAs = attr.value;\n\t              }\n\t          }\n\t      });\n\t      selectAttr = normalizeNgContentSelect(selectAttr);\n\t      var nodeName = ast.name.toLowerCase();\n\t      var type = PreparsedElementType.OTHER;\n\t      if (splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\n\t          type = PreparsedElementType.NG_CONTENT;\n\t      }\n\t      else if (nodeName == STYLE_ELEMENT) {\n\t          type = PreparsedElementType.STYLE;\n\t      }\n\t      else if (nodeName == SCRIPT_ELEMENT) {\n\t          type = PreparsedElementType.SCRIPT;\n\t      }\n\t      else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n\t          type = PreparsedElementType.STYLESHEET;\n\t      }\n\t      return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n\t  }\n\t  var PreparsedElementType;\n\t  (function (PreparsedElementType) {\n\t      PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n\t      PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n\t      PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n\t      PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n\t      PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n\t  })(PreparsedElementType || (PreparsedElementType = {}));\n\t  var PreparsedElement = (function () {\n\t      function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n\t          this.type = type;\n\t          this.selectAttr = selectAttr;\n\t          this.hrefAttr = hrefAttr;\n\t          this.nonBindable = nonBindable;\n\t          this.projectAs = projectAs;\n\t      }\n\t      return PreparsedElement;\n\t  }());\n\t  function normalizeNgContentSelect(selectAttr) {\n\t      if (selectAttr === null || selectAttr.length === 0) {\n\t          return '*';\n\t      }\n\t      return selectAttr;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  // Group 1 = \"bind-\"\n\t  // Group 2 = \"let-\"\n\t  // Group 3 = \"ref-/#\"\n\t  // Group 4 = \"on-\"\n\t  // Group 5 = \"bindon-\"\n\t  // Group 6 = \"@\"\n\t  // Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n\t  // Group 8 = identifier inside [()]\n\t  // Group 9 = identifier inside []\n\t  // Group 10 = identifier inside ()\n\t  var BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\t  var KW_BIND_IDX = 1;\n\t  var KW_LET_IDX = 2;\n\t  var KW_REF_IDX = 3;\n\t  var KW_ON_IDX = 4;\n\t  var KW_BINDON_IDX = 5;\n\t  var KW_AT_IDX = 6;\n\t  var IDENT_KW_IDX = 7;\n\t  var IDENT_BANANA_BOX_IDX = 8;\n\t  var IDENT_PROPERTY_IDX = 9;\n\t  var IDENT_EVENT_IDX = 10;\n\t  var TEMPLATE_ELEMENT = 'template';\n\t  var TEMPLATE_ATTR = 'template';\n\t  var TEMPLATE_ATTR_PREFIX = '*';\n\t  var CLASS_ATTR = 'class';\n\t  var TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\t  /**\n\t   * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n\t   * parsed templates before compilation is invoked, allowing custom expression syntax\n\t   * and other advanced transformations.\n\t   *\n\t   * This is currently an internal-only feature and not meant for general use.\n\t   */\n\t  var TEMPLATE_TRANSFORMS = new _angular_core.OpaqueToken('TemplateTransforms');\n\t  var TemplateParseError = (function (_super) {\n\t      __extends(TemplateParseError, _super);\n\t      function TemplateParseError(message, span, level) {\n\t          _super.call(this, span, message, level);\n\t      }\n\t      return TemplateParseError;\n\t  }(ParseError));\n\t  var TemplateParseResult = (function () {\n\t      function TemplateParseResult(templateAst, errors) {\n\t          this.templateAst = templateAst;\n\t          this.errors = errors;\n\t      }\n\t      return TemplateParseResult;\n\t  }());\n\t  var TemplateParser = (function () {\n\t      function TemplateParser(_exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n\t          this._exprParser = _exprParser;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._htmlParser = _htmlParser;\n\t          this._console = _console;\n\t          this.transforms = transforms;\n\t      }\n\t      TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n\t          var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n\t          var warnings = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n\t          var errors = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n\t          if (warnings.length > 0) {\n\t              this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n\t          }\n\t          if (errors.length > 0) {\n\t              var errorString = errors.join('\\n');\n\t              throw new Error(\"Template parse errors:\\n\" + errorString);\n\t          }\n\t          return result.templateAst;\n\t      };\n\t      TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n\t          return this.tryParseHtml(this.expandHtml(this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, template, directives, pipes, schemas, templateUrl);\n\t      };\n\t      TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, template, directives, pipes, schemas, templateUrl) {\n\t          var result;\n\t          var errors = htmlAstWithErrors.errors;\n\t          if (htmlAstWithErrors.rootNodes.length > 0) {\n\t              var uniqDirectives = removeSummaryDuplicates(directives);\n\t              var uniqPipes = removeSummaryDuplicates(pipes);\n\t              var providerViewContext = new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n\t              var interpolationConfig = void 0;\n\t              if (component.template && component.template.interpolation) {\n\t                  interpolationConfig = {\n\t                      start: component.template.interpolation[0],\n\t                      end: component.template.interpolation[1]\n\t                  };\n\t              }\n\t              var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n\t              var parseVisitor = new TemplateParseVisitor(providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n\t              result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n\t              errors.push.apply(errors, providerViewContext.errors);\n\t          }\n\t          else {\n\t              result = [];\n\t          }\n\t          this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\t          if (errors.length > 0) {\n\t              return new TemplateParseResult(result, errors);\n\t          }\n\t          if (isPresent(this.transforms)) {\n\t              this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n\t          }\n\t          return new TemplateParseResult(result, errors);\n\t      };\n\t      TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n\t          if (forced === void 0) { forced = false; }\n\t          var errors = htmlAstWithErrors.errors;\n\t          if (errors.length == 0 || forced) {\n\t              // Transform ICU messages to angular directives\n\t              var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n\t              errors.push.apply(errors, expandedHtmlAst.errors);\n\t              htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n\t          }\n\t          return htmlAstWithErrors;\n\t      };\n\t      TemplateParser.prototype.getInterpolationConfig = function (component) {\n\t          if (component.template) {\n\t              return InterpolationConfig.fromArray(component.template.interpolation);\n\t          }\n\t      };\n\t      /** @internal */\n\t      TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n\t          var existingReferences = [];\n\t          result.filter(function (element) { return !!element.references; })\n\t              .forEach(function (element) { return element.references.forEach(function (reference) {\n\t              var name = reference.name;\n\t              if (existingReferences.indexOf(name) < 0) {\n\t                  existingReferences.push(name);\n\t              }\n\t              else {\n\t                  var error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, exports.ParseErrorLevel.FATAL);\n\t                  errors.push(error);\n\t              }\n\t          }); });\n\t      };\n\t      TemplateParser.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      TemplateParser.ctorParameters = [\n\t          { type: Parser, },\n\t          { type: ElementSchemaRegistry, },\n\t          { type: I18NHtmlParser, },\n\t          { type: Console, },\n\t          { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n\t      ];\n\t      return TemplateParser;\n\t  }());\n\t  var TemplateParseVisitor = (function () {\n\t      function TemplateParseVisitor(providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n\t          var _this = this;\n\t          this.providerViewContext = providerViewContext;\n\t          this._bindingParser = _bindingParser;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._schemas = _schemas;\n\t          this._targetErrors = _targetErrors;\n\t          this.selectorMatcher = new SelectorMatcher();\n\t          this.directivesIndex = new Map();\n\t          this.ngContentCount = 0;\n\t          directives.forEach(function (directive, index) {\n\t              var selector = CssSelector.parse(directive.selector);\n\t              _this.selectorMatcher.addSelectables(selector, directive);\n\t              _this.directivesIndex.set(directive, index);\n\t          });\n\t      }\n\t      TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n\t      TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n\t      TemplateParseVisitor.prototype.visitText = function (text, parent) {\n\t          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n\t          var expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n\t          if (isPresent(expr)) {\n\t              return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n\t          }\n\t          else {\n\t              return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n\t          }\n\t      };\n\t      TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n\t          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n\t      };\n\t      TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n\t      TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n\t          var _this = this;\n\t          var nodeName = element.name;\n\t          var preparsedElement = preparseElement(element);\n\t          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n\t              preparsedElement.type === PreparsedElementType.STYLE) {\n\t              // Skipping <script> for security reasons\n\t              // Skipping <style> as we already processed them\n\t              // in the StyleCompiler\n\t              return null;\n\t          }\n\t          if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n\t              isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n\t              // Skipping stylesheets with either relative urls or package scheme as we already processed\n\t              // them in the StyleCompiler\n\t              return null;\n\t          }\n\t          var matchableAttrs = [];\n\t          var elementOrDirectiveProps = [];\n\t          var elementOrDirectiveRefs = [];\n\t          var elementVars = [];\n\t          var events = [];\n\t          var templateElementOrDirectiveProps = [];\n\t          var templateMatchableAttrs = [];\n\t          var templateElementVars = [];\n\t          var hasInlineTemplates = false;\n\t          var attrs = [];\n\t          var lcElName = splitNsName(nodeName.toLowerCase())[1];\n\t          var isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n\t          element.attrs.forEach(function (attr) {\n\t              var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n\t              var templateBindingsSource = undefined;\n\t              var prefixToken = undefined;\n\t              if (_this._normalizeAttributeName(attr.name) == TEMPLATE_ATTR) {\n\t                  templateBindingsSource = attr.value;\n\t              }\n\t              else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n\t                  templateBindingsSource = attr.value;\n\t                  prefixToken = attr.name.substring(TEMPLATE_ATTR_PREFIX.length); // remove the star\n\t              }\n\t              var hasTemplateBinding = isPresent(templateBindingsSource);\n\t              if (hasTemplateBinding) {\n\t                  if (hasInlineTemplates) {\n\t                      _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n\t                  }\n\t                  hasInlineTemplates = true;\n\t                  _this._bindingParser.parseInlineTemplateBinding(attr.name, prefixToken, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n\t              }\n\t              if (!hasBinding && !hasTemplateBinding) {\n\t                  // don't include the bindings as attributes as well in the AST\n\t                  attrs.push(_this.visitAttribute(attr, null));\n\t                  matchableAttrs.push([attr.name, attr.value]);\n\t              }\n\t          });\n\t          var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n\t          var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n\t          var references = [];\n\t          var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references);\n\t          var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);\n\t          var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n\t          var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, element.sourceSpan);\n\t          var children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n\t          providerContext.afterElement();\n\t          // Override the actual selector when the `ngProjectAs` attribute is provided\n\t          var projectionSelector = isPresent(preparsedElement.projectAs) ?\n\t              CssSelector.parse(preparsedElement.projectAs)[0] :\n\t              elementCssSelector;\n\t          var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n\t          var parsedElement;\n\t          if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n\t              if (element.children && !element.children.every(_isEmptyTextNode)) {\n\t                  this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n\t              }\n\t              parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n\t          }\n\t          else if (isTemplateElement) {\n\t              this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n\t              this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n\t              parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n\t          }\n\t          else {\n\t              this._assertElementExists(matchElement, element);\n\t              this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n\t              var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n\t              parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan);\n\t              this._findComponentDirectives(directiveAsts)\n\t                  .forEach(function (componentDirectiveAst) { return _this._validateElementAnimationInputOutputs(componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents, componentDirectiveAst.directive.template); });\n\t              var componentTemplate = providerContext.viewContext.component.template;\n\t              this._validateElementAnimationInputOutputs(elementProps, events, componentTemplate.toSummary());\n\t          }\n\t          if (hasInlineTemplates) {\n\t              var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n\t              var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateCssSelector).directives;\n\t              var templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], element.sourceSpan, []);\n\t              var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n\t              this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n\t              var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], element.sourceSpan);\n\t              templateProviderContext.afterElement();\n\t              parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, [parsedElement], ngContentIndex, element.sourceSpan);\n\t          }\n\t          return parsedElement;\n\t      };\n\t      TemplateParseVisitor.prototype._validateElementAnimationInputOutputs = function (inputs, outputs, template) {\n\t          var _this = this;\n\t          var triggerLookup = new Set();\n\t          template.animations.forEach(function (entry) { triggerLookup.add(entry); });\n\t          var animationInputs = inputs.filter(function (input) { return input.isAnimation; });\n\t          animationInputs.forEach(function (input) {\n\t              var name = input.name;\n\t              if (!triggerLookup.has(name)) {\n\t                  _this._reportError(\"Couldn't find an animation entry for \\\"\" + name + \"\\\"\", input.sourceSpan);\n\t              }\n\t          });\n\t          outputs.forEach(function (output) {\n\t              if (output.isAnimation) {\n\t                  var found = animationInputs.find(function (input) { return input.name == output.name; });\n\t                  if (!found) {\n\t                      _this._reportError(\"Unable to listen on (@\" + output.name + \".\" + output.phase + \") because the animation trigger [@\" + output.name + \"] isn't being used on the same element\", output.sourceSpan);\n\t                  }\n\t              }\n\t          });\n\t      };\n\t      TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n\t          var name = this._normalizeAttributeName(attr.name);\n\t          var value = attr.value;\n\t          var srcSpan = attr.sourceSpan;\n\t          var bindParts = name.match(BIND_NAME_REGEXP);\n\t          var hasBinding = false;\n\t          if (bindParts !== null) {\n\t              hasBinding = true;\n\t              if (isPresent(bindParts[KW_BIND_IDX])) {\n\t                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t              else if (bindParts[KW_LET_IDX]) {\n\t                  if (isTemplateElement) {\n\t                      var identifier = bindParts[IDENT_KW_IDX];\n\t                      this._parseVariable(identifier, value, srcSpan, targetVars);\n\t                  }\n\t                  else {\n\t                      this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n\t                  }\n\t              }\n\t              else if (bindParts[KW_REF_IDX]) {\n\t                  var identifier = bindParts[IDENT_KW_IDX];\n\t                  this._parseReference(identifier, value, srcSpan, targetRefs);\n\t              }\n\t              else if (bindParts[KW_ON_IDX]) {\n\t                  this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\t              }\n\t              else if (bindParts[KW_BINDON_IDX]) {\n\t                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\t                  this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\t              }\n\t              else if (bindParts[KW_AT_IDX]) {\n\t                  this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t              else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n\t                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\t                  this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\t              }\n\t              else if (bindParts[IDENT_PROPERTY_IDX]) {\n\t                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\t              }\n\t              else if (bindParts[IDENT_EVENT_IDX]) {\n\t                  this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\t              }\n\t          }\n\t          else {\n\t              hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t          if (!hasBinding) {\n\t              this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n\t          }\n\t          return hasBinding;\n\t      };\n\t      TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n\t          return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n\t      };\n\t      TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n\t          if (identifier.indexOf('-') > -1) {\n\t              this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n\t          }\n\t          targetVars.push(new VariableAst(identifier, value, sourceSpan));\n\t      };\n\t      TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n\t          if (identifier.indexOf('-') > -1) {\n\t              this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n\t          }\n\t          targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n\t      };\n\t      TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n\t          this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n\t      };\n\t      TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n\t          var _this = this;\n\t          // Need to sort the directives so that we get consistent results throughout,\n\t          // as selectorMatcher uses Maps inside.\n\t          // Also deduplicate directives as they might match more than one time!\n\t          var directives = new Array(this.directivesIndex.size);\n\t          // Whether any directive selector matches on the element name\n\t          var matchElement = false;\n\t          selectorMatcher.match(elementCssSelector, function (selector, directive) {\n\t              directives[_this.directivesIndex.get(directive)] = directive;\n\t              matchElement = matchElement || selector.hasElementSelector();\n\t          });\n\t          return {\n\t              directives: directives.filter(function (dir) { return !!dir; }),\n\t              matchElement: matchElement,\n\t          };\n\t      };\n\t      TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences) {\n\t          var _this = this;\n\t          var matchedReferences = new Set();\n\t          var component = null;\n\t          var directiveAsts = directives.map(function (directive) {\n\t              var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + directive.type.name);\n\t              if (directive.isComponent) {\n\t                  component = directive;\n\t              }\n\t              var directiveProperties = [];\n\t              var hostProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, sourceSpan);\n\t              // Note: We need to check the host properties here as well,\n\t              // as we don't know the element name in the DirectiveWrapperCompiler yet.\n\t              _this._checkPropertiesInSchema(elementName, hostProperties);\n\t              var hostEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n\t              _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n\t              elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n\t                  if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n\t                      (directive.exportAs == elOrDirRef.value)) {\n\t                      targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n\t                      matchedReferences.add(elOrDirRef.name);\n\t                  }\n\t              });\n\t              return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, sourceSpan);\n\t          });\n\t          elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n\t              if (elOrDirRef.value.length > 0) {\n\t                  if (!matchedReferences.has(elOrDirRef.name)) {\n\t                      _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n\t                  }\n\t              }\n\t              else if (!component) {\n\t                  var refToken = null;\n\t                  if (isTemplateElement) {\n\t                      refToken = resolveIdentifierToken(Identifiers.TemplateRef);\n\t                  }\n\t                  targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n\t              }\n\t          }); // fix syntax highlighting issue: `\n\t          return directiveAsts;\n\t      };\n\t      TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps) {\n\t          if (directiveProperties) {\n\t              var boundPropsByName_1 = new Map();\n\t              boundProps.forEach(function (boundProp) {\n\t                  var prevValue = boundPropsByName_1.get(boundProp.name);\n\t                  if (!prevValue || prevValue.isLiteral) {\n\t                      // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n\t                      boundPropsByName_1.set(boundProp.name, boundProp);\n\t                  }\n\t              });\n\t              Object.keys(directiveProperties).forEach(function (dirProp) {\n\t                  var elProp = directiveProperties[dirProp];\n\t                  var boundProp = boundPropsByName_1.get(elProp);\n\t                  // Bindings are optional, so this binding only needs to be set up if an expression is given.\n\t                  if (boundProp) {\n\t                      targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n\t                  }\n\t              });\n\t          }\n\t      };\n\t      TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, directives) {\n\t          var _this = this;\n\t          var boundElementProps = [];\n\t          var boundDirectivePropsIndex = new Map();\n\t          directives.forEach(function (directive) {\n\t              directive.inputs.forEach(function (prop) {\n\t                  boundDirectivePropsIndex.set(prop.templateName, prop);\n\t              });\n\t          });\n\t          props.forEach(function (prop) {\n\t              if (!prop.isLiteral && !boundDirectivePropsIndex.get(prop.name)) {\n\t                  boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n\t              }\n\t          });\n\t          this._checkPropertiesInSchema(elementName, boundElementProps);\n\t          return boundElementProps;\n\t      };\n\t      TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n\t          return directives.filter(function (directive) { return directive.directive.isComponent; });\n\t      };\n\t      TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n\t          return this._findComponentDirectives(directives)\n\t              .map(function (directive) { return directive.directive.type.name; });\n\t      };\n\t      TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n\t          var componentTypeNames = this._findComponentDirectiveNames(directives);\n\t          if (componentTypeNames.length > 1) {\n\t              this._reportError(\"More than one component matched on this element.\\n\" +\n\t                  \"Make sure that only one component's selector can match a given element.\\n\" +\n\t                  (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n\t          }\n\t      };\n\t      /**\n\t       * Make sure that non-angular tags conform to the schemas.\n\t       *\n\t       * Note: An element is considered an angular tag when at least one directive selector matches the\n\t       * tag name.\n\t       *\n\t       * @param matchElement Whether any directive has matched on the tag name\n\t       * @param element the html element\n\t       */\n\t      TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n\t          var elName = element.name.replace(/^:xhtml:/, '');\n\t          if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n\t              var errorMsg = (\"'\" + elName + \"' is not a known element:\\n\") +\n\t                  (\"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\") +\n\t                  (\"2. If '\" + elName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\");\n\t              this._reportError(errorMsg, element.sourceSpan);\n\t          }\n\t      };\n\t      TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n\t          var _this = this;\n\t          var componentTypeNames = this._findComponentDirectiveNames(directives);\n\t          if (componentTypeNames.length > 0) {\n\t              this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n\t          }\n\t          elementProps.forEach(function (prop) {\n\t              _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", sourceSpan);\n\t          });\n\t      };\n\t      TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n\t          var _this = this;\n\t          var allDirectiveEvents = new Set();\n\t          directives.forEach(function (directive) {\n\t              Object.keys(directive.directive.outputs).forEach(function (k) {\n\t                  var eventName = directive.directive.outputs[k];\n\t                  allDirectiveEvents.add(eventName);\n\t              });\n\t          });\n\t          events.forEach(function (event) {\n\t              if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n\t                  _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", event.sourceSpan);\n\t              }\n\t          });\n\t      };\n\t      TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n\t          var _this = this;\n\t          boundProps.forEach(function (boundProp) {\n\t              if (boundProp.type === exports.PropertyBindingType.Property &&\n\t                  !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n\t                  var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n\t                  if (elementName.indexOf('-') > -1) {\n\t                      errorMsg +=\n\t                          (\"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\") +\n\t                              (\"\\n2. If '\" + elementName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\\n\");\n\t                  }\n\t                  _this._reportError(errorMsg, boundProp.sourceSpan);\n\t              }\n\t          });\n\t      };\n\t      TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n\t          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n\t          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n\t      };\n\t      return TemplateParseVisitor;\n\t  }());\n\t  var NonBindableVisitor = (function () {\n\t      function NonBindableVisitor() {\n\t      }\n\t      NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n\t          var preparsedElement = preparseElement(ast);\n\t          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n\t              preparsedElement.type === PreparsedElementType.STYLE ||\n\t              preparsedElement.type === PreparsedElementType.STYLESHEET) {\n\t              // Skipping <script> for security reasons\n\t              // Skipping <style> and stylesheets as we already processed them\n\t              // in the StyleCompiler\n\t              return null;\n\t          }\n\t          var attrNameAndValues = ast.attrs.map(function (attrAst) { return [attrAst.name, attrAst.value]; });\n\t          var selector = createElementCssSelector(ast.name, attrNameAndValues);\n\t          var ngContentIndex = parent.findNgContentIndex(selector);\n\t          var children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n\t          return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n\t      };\n\t      NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n\t      NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n\t          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n\t      };\n\t      NonBindableVisitor.prototype.visitText = function (text, parent) {\n\t          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n\t          return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n\t      };\n\t      NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n\t      NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n\t      return NonBindableVisitor;\n\t  }());\n\t  var ElementOrDirectiveRef = (function () {\n\t      function ElementOrDirectiveRef(name, value, sourceSpan) {\n\t          this.name = name;\n\t          this.value = value;\n\t          this.sourceSpan = sourceSpan;\n\t      }\n\t      return ElementOrDirectiveRef;\n\t  }());\n\t  function splitClasses(classAttrValue) {\n\t      return classAttrValue.trim().split(/\\s+/g);\n\t  }\n\t  var ElementContext = (function () {\n\t      function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n\t          this.isTemplateElement = isTemplateElement;\n\t          this._ngContentIndexMatcher = _ngContentIndexMatcher;\n\t          this._wildcardNgContentIndex = _wildcardNgContentIndex;\n\t          this.providerContext = providerContext;\n\t      }\n\t      ElementContext.create = function (isTemplateElement, directives, providerContext) {\n\t          var matcher = new SelectorMatcher();\n\t          var wildcardNgContentIndex = null;\n\t          var component = directives.find(function (directive) { return directive.directive.isComponent; });\n\t          if (component) {\n\t              var ngContentSelectors = component.directive.template.ngContentSelectors;\n\t              for (var i = 0; i < ngContentSelectors.length; i++) {\n\t                  var selector = ngContentSelectors[i];\n\t                  if (selector === '*') {\n\t                      wildcardNgContentIndex = i;\n\t                  }\n\t                  else {\n\t                      matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n\t                  }\n\t              }\n\t          }\n\t          return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n\t      };\n\t      ElementContext.prototype.findNgContentIndex = function (selector) {\n\t          var ngContentIndices = [];\n\t          this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n\t          ngContentIndices.sort();\n\t          if (isPresent(this._wildcardNgContentIndex)) {\n\t              ngContentIndices.push(this._wildcardNgContentIndex);\n\t          }\n\t          return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n\t      };\n\t      return ElementContext;\n\t  }());\n\t  function createElementCssSelector(elementName, matchableAttrs) {\n\t      var cssSelector = new CssSelector();\n\t      var elNameNoNs = splitNsName(elementName)[1];\n\t      cssSelector.setElement(elNameNoNs);\n\t      for (var i = 0; i < matchableAttrs.length; i++) {\n\t          var attrName = matchableAttrs[i][0];\n\t          var attrNameNoNs = splitNsName(attrName)[1];\n\t          var attrValue = matchableAttrs[i][1];\n\t          cssSelector.addAttribute(attrNameNoNs, attrValue);\n\t          if (attrName.toLowerCase() == CLASS_ATTR) {\n\t              var classes = splitClasses(attrValue);\n\t              classes.forEach(function (className) { return cssSelector.addClassName(className); });\n\t          }\n\t      }\n\t      return cssSelector;\n\t  }\n\t  var EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\n\t  var NON_BINDABLE_VISITOR = new NonBindableVisitor();\n\t  function _isEmptyTextNode(node) {\n\t      return node instanceof Text && node.value.trim().length == 0;\n\t  }\n\t  function removeSummaryDuplicates(items) {\n\t      var map = new Map();\n\t      items.forEach(function (item) {\n\t          if (!map.get(item.type.reference)) {\n\t              map.set(item.type.reference, item);\n\t          }\n\t      });\n\t      return Array.from(map.values());\n\t  }\n\t\n\t  function unimplemented$1() {\n\t      throw new Error('unimplemented');\n\t  }\n\t  var CompilerConfig = (function () {\n\t      function CompilerConfig(_a) {\n\t          var _b = _a === void 0 ? {} : _a, _c = _b.renderTypes, renderTypes = _c === void 0 ? new DefaultRenderTypes() : _c, _d = _b.defaultEncapsulation, defaultEncapsulation = _d === void 0 ? _angular_core.ViewEncapsulation.Emulated : _d, genDebugInfo = _b.genDebugInfo, logBindingUpdate = _b.logBindingUpdate, _e = _b.useJit, useJit = _e === void 0 ? true : _e;\n\t          this.renderTypes = renderTypes;\n\t          this.defaultEncapsulation = defaultEncapsulation;\n\t          this._genDebugInfo = genDebugInfo;\n\t          this._logBindingUpdate = logBindingUpdate;\n\t          this.useJit = useJit;\n\t      }\n\t      Object.defineProperty(CompilerConfig.prototype, \"genDebugInfo\", {\n\t          get: function () {\n\t              return this._genDebugInfo === void 0 ? _angular_core.isDevMode() : this._genDebugInfo;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(CompilerConfig.prototype, \"logBindingUpdate\", {\n\t          get: function () {\n\t              return this._logBindingUpdate === void 0 ? _angular_core.isDevMode() : this._logBindingUpdate;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return CompilerConfig;\n\t  }());\n\t  /**\n\t   * Types used for the renderer.\n\t   * Can be replaced to specialize the generated output to a specific renderer\n\t   * to help tree shaking.\n\t   */\n\t  var RenderTypes = (function () {\n\t      function RenderTypes() {\n\t      }\n\t      Object.defineProperty(RenderTypes.prototype, \"renderer\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderText\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderElement\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderComment\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderNode\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      Object.defineProperty(RenderTypes.prototype, \"renderEvent\", {\n\t          get: function () { return unimplemented$1(); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      return RenderTypes;\n\t  }());\n\t  var DefaultRenderTypes = (function () {\n\t      function DefaultRenderTypes() {\n\t          this.renderText = null;\n\t          this.renderElement = null;\n\t          this.renderComment = null;\n\t          this.renderNode = null;\n\t          this.renderEvent = null;\n\t      }\n\t      Object.defineProperty(DefaultRenderTypes.prototype, \"renderer\", {\n\t          get: function () { return resolveIdentifier(Identifiers.Renderer); },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      ;\n\t      return DefaultRenderTypes;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$12 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  //// Types\n\t  var TypeModifier;\n\t  (function (TypeModifier) {\n\t      TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n\t  })(TypeModifier || (TypeModifier = {}));\n\t  var Type$1 = (function () {\n\t      function Type(modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          this.modifiers = modifiers;\n\t          if (!modifiers) {\n\t              this.modifiers = [];\n\t          }\n\t      }\n\t      Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n\t      return Type;\n\t  }());\n\t  var BuiltinTypeName;\n\t  (function (BuiltinTypeName) {\n\t      BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n\t      BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n\t      BuiltinTypeName[BuiltinTypeName[\"Null\"] = 6] = \"Null\";\n\t  })(BuiltinTypeName || (BuiltinTypeName = {}));\n\t  var BuiltinType = (function (_super) {\n\t      __extends$12(BuiltinType, _super);\n\t      function BuiltinType(name, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.name = name;\n\t      }\n\t      BuiltinType.prototype.visitType = function (visitor, context) {\n\t          return visitor.visitBuiltintType(this, context);\n\t      };\n\t      return BuiltinType;\n\t  }(Type$1));\n\t  var ExternalType = (function (_super) {\n\t      __extends$12(ExternalType, _super);\n\t      function ExternalType(value, typeParams, modifiers) {\n\t          if (typeParams === void 0) { typeParams = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.value = value;\n\t          this.typeParams = typeParams;\n\t      }\n\t      ExternalType.prototype.visitType = function (visitor, context) {\n\t          return visitor.visitExternalType(this, context);\n\t      };\n\t      return ExternalType;\n\t  }(Type$1));\n\t  var ArrayType = (function (_super) {\n\t      __extends$12(ArrayType, _super);\n\t      function ArrayType(of, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.of = of;\n\t      }\n\t      ArrayType.prototype.visitType = function (visitor, context) {\n\t          return visitor.visitArrayType(this, context);\n\t      };\n\t      return ArrayType;\n\t  }(Type$1));\n\t  var MapType = (function (_super) {\n\t      __extends$12(MapType, _super);\n\t      function MapType(valueType, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.valueType = valueType;\n\t      }\n\t      MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n\t      return MapType;\n\t  }(Type$1));\n\t  var DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\n\t  var BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\n\t  var INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\n\t  var NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\n\t  var STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\n\t  var FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n\t  var NULL_TYPE = new BuiltinType(BuiltinTypeName.Null);\n\t  ///// Expressions\n\t  var BinaryOperator;\n\t  (function (BinaryOperator) {\n\t      BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n\t      BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n\t      BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n\t      BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n\t      BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n\t      BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n\t      BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n\t      BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n\t      BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n\t      BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n\t      BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n\t      BinaryOperator[BinaryOperator[\"Lower\"] = 11] = \"Lower\";\n\t      BinaryOperator[BinaryOperator[\"LowerEquals\"] = 12] = \"LowerEquals\";\n\t      BinaryOperator[BinaryOperator[\"Bigger\"] = 13] = \"Bigger\";\n\t      BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 14] = \"BiggerEquals\";\n\t  })(BinaryOperator || (BinaryOperator = {}));\n\t  var Expression = (function () {\n\t      function Expression(type) {\n\t          this.type = type;\n\t      }\n\t      Expression.prototype.prop = function (name) { return new ReadPropExpr(this, name); };\n\t      Expression.prototype.key = function (index, type) {\n\t          if (type === void 0) { type = null; }\n\t          return new ReadKeyExpr(this, index, type);\n\t      };\n\t      Expression.prototype.callMethod = function (name, params) {\n\t          return new InvokeMethodExpr(this, name, params);\n\t      };\n\t      Expression.prototype.callFn = function (params) { return new InvokeFunctionExpr(this, params); };\n\t      Expression.prototype.instantiate = function (params, type) {\n\t          if (type === void 0) { type = null; }\n\t          return new InstantiateExpr(this, params, type);\n\t      };\n\t      Expression.prototype.conditional = function (trueCase, falseCase) {\n\t          if (falseCase === void 0) { falseCase = null; }\n\t          return new ConditionalExpr(this, trueCase, falseCase);\n\t      };\n\t      Expression.prototype.equals = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs);\n\t      };\n\t      Expression.prototype.notEquals = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs);\n\t      };\n\t      Expression.prototype.identical = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs);\n\t      };\n\t      Expression.prototype.notIdentical = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs);\n\t      };\n\t      Expression.prototype.minus = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs);\n\t      };\n\t      Expression.prototype.plus = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs);\n\t      };\n\t      Expression.prototype.divide = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs);\n\t      };\n\t      Expression.prototype.multiply = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs);\n\t      };\n\t      Expression.prototype.modulo = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs);\n\t      };\n\t      Expression.prototype.and = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.And, this, rhs);\n\t      };\n\t      Expression.prototype.or = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs);\n\t      };\n\t      Expression.prototype.lower = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs);\n\t      };\n\t      Expression.prototype.lowerEquals = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs);\n\t      };\n\t      Expression.prototype.bigger = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs);\n\t      };\n\t      Expression.prototype.biggerEquals = function (rhs) {\n\t          return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs);\n\t      };\n\t      Expression.prototype.isBlank = function () {\n\t          // Note: We use equals by purpose here to compare to null and undefined in JS.\n\t          // We use the typed null to allow strictNullChecks to narrow types.\n\t          return this.equals(TYPED_NULL_EXPR);\n\t      };\n\t      Expression.prototype.cast = function (type) { return new CastExpr(this, type); };\n\t      Expression.prototype.toStmt = function () { return new ExpressionStatement(this); };\n\t      return Expression;\n\t  }());\n\t  var BuiltinVar;\n\t  (function (BuiltinVar) {\n\t      BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n\t      BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n\t      BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n\t      BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n\t  })(BuiltinVar || (BuiltinVar = {}));\n\t  var ReadVarExpr = (function (_super) {\n\t      __extends$12(ReadVarExpr, _super);\n\t      function ReadVarExpr(name, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          if (typeof name === 'string') {\n\t              this.name = name;\n\t              this.builtin = null;\n\t          }\n\t          else {\n\t              this.name = null;\n\t              this.builtin = name;\n\t          }\n\t      }\n\t      ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitReadVarExpr(this, context);\n\t      };\n\t      ReadVarExpr.prototype.set = function (value) { return new WriteVarExpr(this.name, value); };\n\t      return ReadVarExpr;\n\t  }(Expression));\n\t  var WriteVarExpr = (function (_super) {\n\t      __extends$12(WriteVarExpr, _super);\n\t      function WriteVarExpr(name, value, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || value.type);\n\t          this.name = name;\n\t          this.value = value;\n\t      }\n\t      WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitWriteVarExpr(this, context);\n\t      };\n\t      WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          return new DeclareVarStmt(this.name, this.value, type, modifiers);\n\t      };\n\t      return WriteVarExpr;\n\t  }(Expression));\n\t  var WriteKeyExpr = (function (_super) {\n\t      __extends$12(WriteKeyExpr, _super);\n\t      function WriteKeyExpr(receiver, index, value, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || value.type);\n\t          this.receiver = receiver;\n\t          this.index = index;\n\t          this.value = value;\n\t      }\n\t      WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitWriteKeyExpr(this, context);\n\t      };\n\t      return WriteKeyExpr;\n\t  }(Expression));\n\t  var WritePropExpr = (function (_super) {\n\t      __extends$12(WritePropExpr, _super);\n\t      function WritePropExpr(receiver, name, value, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || value.type);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t          this.value = value;\n\t      }\n\t      WritePropExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitWritePropExpr(this, context);\n\t      };\n\t      return WritePropExpr;\n\t  }(Expression));\n\t  var BuiltinMethod;\n\t  (function (BuiltinMethod) {\n\t      BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n\t      BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n\t      BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n\t  })(BuiltinMethod || (BuiltinMethod = {}));\n\t  var InvokeMethodExpr = (function (_super) {\n\t      __extends$12(InvokeMethodExpr, _super);\n\t      function InvokeMethodExpr(receiver, method, args, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.receiver = receiver;\n\t          this.args = args;\n\t          if (typeof method === 'string') {\n\t              this.name = method;\n\t              this.builtin = null;\n\t          }\n\t          else {\n\t              this.name = null;\n\t              this.builtin = method;\n\t          }\n\t      }\n\t      InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitInvokeMethodExpr(this, context);\n\t      };\n\t      return InvokeMethodExpr;\n\t  }(Expression));\n\t  var InvokeFunctionExpr = (function (_super) {\n\t      __extends$12(InvokeFunctionExpr, _super);\n\t      function InvokeFunctionExpr(fn, args, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.fn = fn;\n\t          this.args = args;\n\t      }\n\t      InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitInvokeFunctionExpr(this, context);\n\t      };\n\t      return InvokeFunctionExpr;\n\t  }(Expression));\n\t  var InstantiateExpr = (function (_super) {\n\t      __extends$12(InstantiateExpr, _super);\n\t      function InstantiateExpr(classExpr, args, type) {\n\t          _super.call(this, type);\n\t          this.classExpr = classExpr;\n\t          this.args = args;\n\t      }\n\t      InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitInstantiateExpr(this, context);\n\t      };\n\t      return InstantiateExpr;\n\t  }(Expression));\n\t  var LiteralExpr = (function (_super) {\n\t      __extends$12(LiteralExpr, _super);\n\t      function LiteralExpr(value, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.value = value;\n\t      }\n\t      LiteralExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitLiteralExpr(this, context);\n\t      };\n\t      return LiteralExpr;\n\t  }(Expression));\n\t  var ExternalExpr = (function (_super) {\n\t      __extends$12(ExternalExpr, _super);\n\t      function ExternalExpr(value, type, typeParams) {\n\t          if (type === void 0) { type = null; }\n\t          if (typeParams === void 0) { typeParams = null; }\n\t          _super.call(this, type);\n\t          this.value = value;\n\t          this.typeParams = typeParams;\n\t      }\n\t      ExternalExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitExternalExpr(this, context);\n\t      };\n\t      return ExternalExpr;\n\t  }(Expression));\n\t  var ConditionalExpr = (function (_super) {\n\t      __extends$12(ConditionalExpr, _super);\n\t      function ConditionalExpr(condition, trueCase, falseCase, type) {\n\t          if (falseCase === void 0) { falseCase = null; }\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || trueCase.type);\n\t          this.condition = condition;\n\t          this.falseCase = falseCase;\n\t          this.trueCase = trueCase;\n\t      }\n\t      ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitConditionalExpr(this, context);\n\t      };\n\t      return ConditionalExpr;\n\t  }(Expression));\n\t  var NotExpr = (function (_super) {\n\t      __extends$12(NotExpr, _super);\n\t      function NotExpr(condition) {\n\t          _super.call(this, BOOL_TYPE);\n\t          this.condition = condition;\n\t      }\n\t      NotExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitNotExpr(this, context);\n\t      };\n\t      return NotExpr;\n\t  }(Expression));\n\t  var CastExpr = (function (_super) {\n\t      __extends$12(CastExpr, _super);\n\t      function CastExpr(value, type) {\n\t          _super.call(this, type);\n\t          this.value = value;\n\t      }\n\t      CastExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitCastExpr(this, context);\n\t      };\n\t      return CastExpr;\n\t  }(Expression));\n\t  var FnParam = (function () {\n\t      function FnParam(name, type) {\n\t          if (type === void 0) { type = null; }\n\t          this.name = name;\n\t          this.type = type;\n\t      }\n\t      return FnParam;\n\t  }());\n\t  var FunctionExpr = (function (_super) {\n\t      __extends$12(FunctionExpr, _super);\n\t      function FunctionExpr(params, statements, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.params = params;\n\t          this.statements = statements;\n\t      }\n\t      FunctionExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitFunctionExpr(this, context);\n\t      };\n\t      FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers);\n\t      };\n\t      return FunctionExpr;\n\t  }(Expression));\n\t  var BinaryOperatorExpr = (function (_super) {\n\t      __extends$12(BinaryOperatorExpr, _super);\n\t      function BinaryOperatorExpr(operator, lhs, rhs, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type || lhs.type);\n\t          this.operator = operator;\n\t          this.rhs = rhs;\n\t          this.lhs = lhs;\n\t      }\n\t      BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitBinaryOperatorExpr(this, context);\n\t      };\n\t      return BinaryOperatorExpr;\n\t  }(Expression));\n\t  var ReadPropExpr = (function (_super) {\n\t      __extends$12(ReadPropExpr, _super);\n\t      function ReadPropExpr(receiver, name, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.receiver = receiver;\n\t          this.name = name;\n\t      }\n\t      ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitReadPropExpr(this, context);\n\t      };\n\t      ReadPropExpr.prototype.set = function (value) {\n\t          return new WritePropExpr(this.receiver, this.name, value);\n\t      };\n\t      return ReadPropExpr;\n\t  }(Expression));\n\t  var ReadKeyExpr = (function (_super) {\n\t      __extends$12(ReadKeyExpr, _super);\n\t      function ReadKeyExpr(receiver, index, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.receiver = receiver;\n\t          this.index = index;\n\t      }\n\t      ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitReadKeyExpr(this, context);\n\t      };\n\t      ReadKeyExpr.prototype.set = function (value) {\n\t          return new WriteKeyExpr(this.receiver, this.index, value);\n\t      };\n\t      return ReadKeyExpr;\n\t  }(Expression));\n\t  var LiteralArrayExpr = (function (_super) {\n\t      __extends$12(LiteralArrayExpr, _super);\n\t      function LiteralArrayExpr(entries, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.entries = entries;\n\t      }\n\t      LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitLiteralArrayExpr(this, context);\n\t      };\n\t      return LiteralArrayExpr;\n\t  }(Expression));\n\t  var LiteralMapExpr = (function (_super) {\n\t      __extends$12(LiteralMapExpr, _super);\n\t      function LiteralMapExpr(entries, type) {\n\t          if (type === void 0) { type = null; }\n\t          _super.call(this, type);\n\t          this.entries = entries;\n\t          this.valueType = null;\n\t          if (isPresent(type)) {\n\t              this.valueType = type.valueType;\n\t          }\n\t      }\n\t      LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n\t          return visitor.visitLiteralMapExpr(this, context);\n\t      };\n\t      return LiteralMapExpr;\n\t  }(Expression));\n\t  var THIS_EXPR = new ReadVarExpr(BuiltinVar.This);\n\t  var SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);\n\t  var CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);\n\t  var CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);\n\t  var NULL_EXPR = new LiteralExpr(null, null);\n\t  var TYPED_NULL_EXPR = new LiteralExpr(null, NULL_TYPE);\n\t  //// Statements\n\t  var StmtModifier;\n\t  (function (StmtModifier) {\n\t      StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n\t      StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n\t  })(StmtModifier || (StmtModifier = {}));\n\t  var Statement = (function () {\n\t      function Statement(modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          this.modifiers = modifiers;\n\t          if (!modifiers) {\n\t              this.modifiers = [];\n\t          }\n\t      }\n\t      Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n\t      return Statement;\n\t  }());\n\t  var DeclareVarStmt = (function (_super) {\n\t      __extends$12(DeclareVarStmt, _super);\n\t      function DeclareVarStmt(name, value, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.name = name;\n\t          this.value = value;\n\t          this.type = type || value.type;\n\t      }\n\t      DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitDeclareVarStmt(this, context);\n\t      };\n\t      return DeclareVarStmt;\n\t  }(Statement));\n\t  var DeclareFunctionStmt = (function (_super) {\n\t      __extends$12(DeclareFunctionStmt, _super);\n\t      function DeclareFunctionStmt(name, params, statements, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.name = name;\n\t          this.params = params;\n\t          this.statements = statements;\n\t          this.type = type;\n\t      }\n\t      DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitDeclareFunctionStmt(this, context);\n\t      };\n\t      return DeclareFunctionStmt;\n\t  }(Statement));\n\t  var ExpressionStatement = (function (_super) {\n\t      __extends$12(ExpressionStatement, _super);\n\t      function ExpressionStatement(expr) {\n\t          _super.call(this);\n\t          this.expr = expr;\n\t      }\n\t      ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitExpressionStmt(this, context);\n\t      };\n\t      return ExpressionStatement;\n\t  }(Statement));\n\t  var ReturnStatement = (function (_super) {\n\t      __extends$12(ReturnStatement, _super);\n\t      function ReturnStatement(value) {\n\t          _super.call(this);\n\t          this.value = value;\n\t      }\n\t      ReturnStatement.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitReturnStmt(this, context);\n\t      };\n\t      return ReturnStatement;\n\t  }(Statement));\n\t  var AbstractClassPart = (function () {\n\t      function AbstractClassPart(type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          this.type = type;\n\t          this.modifiers = modifiers;\n\t          if (!modifiers) {\n\t              this.modifiers = [];\n\t          }\n\t      }\n\t      AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n\t      return AbstractClassPart;\n\t  }());\n\t  var ClassField = (function (_super) {\n\t      __extends$12(ClassField, _super);\n\t      function ClassField(name, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, type, modifiers);\n\t          this.name = name;\n\t      }\n\t      return ClassField;\n\t  }(AbstractClassPart));\n\t  var ClassMethod = (function (_super) {\n\t      __extends$12(ClassMethod, _super);\n\t      function ClassMethod(name, params, body, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, type, modifiers);\n\t          this.name = name;\n\t          this.params = params;\n\t          this.body = body;\n\t      }\n\t      return ClassMethod;\n\t  }(AbstractClassPart));\n\t  var ClassGetter = (function (_super) {\n\t      __extends$12(ClassGetter, _super);\n\t      function ClassGetter(name, body, type, modifiers) {\n\t          if (type === void 0) { type = null; }\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, type, modifiers);\n\t          this.name = name;\n\t          this.body = body;\n\t      }\n\t      return ClassGetter;\n\t  }(AbstractClassPart));\n\t  var ClassStmt = (function (_super) {\n\t      __extends$12(ClassStmt, _super);\n\t      function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers) {\n\t          if (modifiers === void 0) { modifiers = null; }\n\t          _super.call(this, modifiers);\n\t          this.name = name;\n\t          this.parent = parent;\n\t          this.fields = fields;\n\t          this.getters = getters;\n\t          this.constructorMethod = constructorMethod;\n\t          this.methods = methods;\n\t      }\n\t      ClassStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitDeclareClassStmt(this, context);\n\t      };\n\t      return ClassStmt;\n\t  }(Statement));\n\t  var IfStmt = (function (_super) {\n\t      __extends$12(IfStmt, _super);\n\t      function IfStmt(condition, trueCase, falseCase) {\n\t          if (falseCase === void 0) { falseCase = []; }\n\t          _super.call(this);\n\t          this.condition = condition;\n\t          this.trueCase = trueCase;\n\t          this.falseCase = falseCase;\n\t      }\n\t      IfStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitIfStmt(this, context);\n\t      };\n\t      return IfStmt;\n\t  }(Statement));\n\t  var CommentStmt = (function (_super) {\n\t      __extends$12(CommentStmt, _super);\n\t      function CommentStmt(comment) {\n\t          _super.call(this);\n\t          this.comment = comment;\n\t      }\n\t      CommentStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitCommentStmt(this, context);\n\t      };\n\t      return CommentStmt;\n\t  }(Statement));\n\t  var TryCatchStmt = (function (_super) {\n\t      __extends$12(TryCatchStmt, _super);\n\t      function TryCatchStmt(bodyStmts, catchStmts) {\n\t          _super.call(this);\n\t          this.bodyStmts = bodyStmts;\n\t          this.catchStmts = catchStmts;\n\t      }\n\t      TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitTryCatchStmt(this, context);\n\t      };\n\t      return TryCatchStmt;\n\t  }(Statement));\n\t  var ThrowStmt = (function (_super) {\n\t      __extends$12(ThrowStmt, _super);\n\t      function ThrowStmt(error) {\n\t          _super.call(this);\n\t          this.error = error;\n\t      }\n\t      ThrowStmt.prototype.visitStatement = function (visitor, context) {\n\t          return visitor.visitThrowStmt(this, context);\n\t      };\n\t      return ThrowStmt;\n\t  }(Statement));\n\t  var ExpressionTransformer = (function () {\n\t      function ExpressionTransformer() {\n\t      }\n\t      ExpressionTransformer.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n\t      ExpressionTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n\t          return new WriteVarExpr(expr.name, expr.value.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n\t          return new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitWritePropExpr = function (expr, context) {\n\t          return new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n\t          var method = ast.builtin || ast.name;\n\t          return new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n\t          return new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n\t          return new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n\t      ExpressionTransformer.prototype.visitExternalExpr = function (ast, context) { return ast; };\n\t      ExpressionTransformer.prototype.visitConditionalExpr = function (ast, context) {\n\t          return new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitNotExpr = function (ast, context) {\n\t          return new NotExpr(ast.condition.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitCastExpr = function (ast, context) {\n\t          return new CastExpr(ast.value.visitExpression(this, context), context);\n\t      };\n\t      ExpressionTransformer.prototype.visitFunctionExpr = function (ast, context) {\n\t          // Don't descend into nested functions\n\t          return ast;\n\t      };\n\t      ExpressionTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n\t          return new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitReadPropExpr = function (ast, context) {\n\t          return new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n\t          return new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type);\n\t      };\n\t      ExpressionTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n\t          return new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n\t          var _this = this;\n\t          var entries = ast.entries.map(function (entry) { return [entry[0], entry[1].visitExpression(_this, context),]; });\n\t          return new LiteralMapExpr(entries);\n\t      };\n\t      ExpressionTransformer.prototype.visitAllExpressions = function (exprs, context) {\n\t          var _this = this;\n\t          return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n\t      };\n\t      ExpressionTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n\t          return new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers);\n\t      };\n\t      ExpressionTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n\t          // Don't descend into nested functions\n\t          return stmt;\n\t      };\n\t      ExpressionTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n\t          return new ExpressionStatement(stmt.expr.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitReturnStmt = function (stmt, context) {\n\t          return new ReturnStatement(stmt.value.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n\t          // Don't descend into nested functions\n\t          return stmt;\n\t      };\n\t      ExpressionTransformer.prototype.visitIfStmt = function (stmt, context) {\n\t          return new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n\t          return new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitThrowStmt = function (stmt, context) {\n\t          return new ThrowStmt(stmt.error.visitExpression(this, context));\n\t      };\n\t      ExpressionTransformer.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n\t      ExpressionTransformer.prototype.visitAllStatements = function (stmts, context) {\n\t          var _this = this;\n\t          return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n\t      };\n\t      return ExpressionTransformer;\n\t  }());\n\t  var RecursiveExpressionVisitor = (function () {\n\t      function RecursiveExpressionVisitor() {\n\t      }\n\t      RecursiveExpressionVisitor.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n\t      RecursiveExpressionVisitor.prototype.visitWriteVarExpr = function (expr, context) {\n\t          expr.value.visitExpression(this, context);\n\t          return expr;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitWriteKeyExpr = function (expr, context) {\n\t          expr.receiver.visitExpression(this, context);\n\t          expr.index.visitExpression(this, context);\n\t          expr.value.visitExpression(this, context);\n\t          return expr;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitWritePropExpr = function (expr, context) {\n\t          expr.receiver.visitExpression(this, context);\n\t          expr.value.visitExpression(this, context);\n\t          return expr;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n\t          ast.receiver.visitExpression(this, context);\n\t          this.visitAllExpressions(ast.args, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n\t          ast.fn.visitExpression(this, context);\n\t          this.visitAllExpressions(ast.args, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n\t          ast.classExpr.visitExpression(this, context);\n\t          this.visitAllExpressions(ast.args, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n\t      RecursiveExpressionVisitor.prototype.visitExternalExpr = function (ast, context) { return ast; };\n\t      RecursiveExpressionVisitor.prototype.visitConditionalExpr = function (ast, context) {\n\t          ast.condition.visitExpression(this, context);\n\t          ast.trueCase.visitExpression(this, context);\n\t          ast.falseCase.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitNotExpr = function (ast, context) {\n\t          ast.condition.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitCastExpr = function (ast, context) {\n\t          ast.value.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitFunctionExpr = function (ast, context) { return ast; };\n\t      RecursiveExpressionVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n\t          ast.lhs.visitExpression(this, context);\n\t          ast.rhs.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitReadPropExpr = function (ast, context) {\n\t          ast.receiver.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n\t          ast.receiver.visitExpression(this, context);\n\t          ast.index.visitExpression(this, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n\t          this.visitAllExpressions(ast.entries, context);\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n\t          var _this = this;\n\t          ast.entries.forEach(function (entry) { return entry[1].visitExpression(_this, context); });\n\t          return ast;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitAllExpressions = function (exprs, context) {\n\t          var _this = this;\n\t          exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n\t          stmt.value.visitExpression(this, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n\t          // Don't descend into nested functions\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n\t          stmt.expr.visitExpression(this, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitReturnStmt = function (stmt, context) {\n\t          stmt.value.visitExpression(this, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n\t          // Don't descend into nested functions\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitIfStmt = function (stmt, context) {\n\t          stmt.condition.visitExpression(this, context);\n\t          this.visitAllStatements(stmt.trueCase, context);\n\t          this.visitAllStatements(stmt.falseCase, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n\t          this.visitAllStatements(stmt.bodyStmts, context);\n\t          this.visitAllStatements(stmt.catchStmts, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitThrowStmt = function (stmt, context) {\n\t          stmt.error.visitExpression(this, context);\n\t          return stmt;\n\t      };\n\t      RecursiveExpressionVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n\t      RecursiveExpressionVisitor.prototype.visitAllStatements = function (stmts, context) {\n\t          var _this = this;\n\t          stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n\t      };\n\t      return RecursiveExpressionVisitor;\n\t  }());\n\t  function replaceVarInExpression(varName, newValue, expression) {\n\t      var transformer = new _ReplaceVariableTransformer(varName, newValue);\n\t      return expression.visitExpression(transformer, null);\n\t  }\n\t  var _ReplaceVariableTransformer = (function (_super) {\n\t      __extends$12(_ReplaceVariableTransformer, _super);\n\t      function _ReplaceVariableTransformer(_varName, _newValue) {\n\t          _super.call(this);\n\t          this._varName = _varName;\n\t          this._newValue = _newValue;\n\t      }\n\t      _ReplaceVariableTransformer.prototype.visitReadVarExpr = function (ast, context) {\n\t          return ast.name == this._varName ? this._newValue : ast;\n\t      };\n\t      return _ReplaceVariableTransformer;\n\t  }(ExpressionTransformer));\n\t  function findReadVarNames(stmts) {\n\t      var finder = new _VariableFinder();\n\t      finder.visitAllStatements(stmts, null);\n\t      return finder.varNames;\n\t  }\n\t  var _VariableFinder = (function (_super) {\n\t      __extends$12(_VariableFinder, _super);\n\t      function _VariableFinder() {\n\t          _super.apply(this, arguments);\n\t          this.varNames = new Set();\n\t      }\n\t      _VariableFinder.prototype.visitReadVarExpr = function (ast, context) {\n\t          this.varNames.add(ast.name);\n\t          return null;\n\t      };\n\t      return _VariableFinder;\n\t  }(RecursiveExpressionVisitor));\n\t  function variable(name, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new ReadVarExpr(name, type);\n\t  }\n\t  function importExpr(id, typeParams) {\n\t      if (typeParams === void 0) { typeParams = null; }\n\t      return new ExternalExpr(id, null, typeParams);\n\t  }\n\t  function importType(id, typeParams, typeModifiers) {\n\t      if (typeParams === void 0) { typeParams = null; }\n\t      if (typeModifiers === void 0) { typeModifiers = null; }\n\t      return isPresent(id) ? new ExternalType(id, typeParams, typeModifiers) : null;\n\t  }\n\t  function literalArr(values, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new LiteralArrayExpr(values, type);\n\t  }\n\t  function literalMap(values, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new LiteralMapExpr(values, type);\n\t  }\n\t  function not(expr) {\n\t      return new NotExpr(expr);\n\t  }\n\t  function fn(params, body, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new FunctionExpr(params, body, type);\n\t  }\n\t  function literal(value, type) {\n\t      if (type === void 0) { type = null; }\n\t      return new LiteralExpr(value, type);\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$13 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var AnimationAst = (function () {\n\t      function AnimationAst() {\n\t          this.startTime = 0;\n\t          this.playTime = 0;\n\t      }\n\t      return AnimationAst;\n\t  }());\n\t  var AnimationStateAst = (function (_super) {\n\t      __extends$13(AnimationStateAst, _super);\n\t      function AnimationStateAst() {\n\t          _super.apply(this, arguments);\n\t      }\n\t      return AnimationStateAst;\n\t  }(AnimationAst));\n\t  var AnimationEntryAst = (function (_super) {\n\t      __extends$13(AnimationEntryAst, _super);\n\t      function AnimationEntryAst(name, stateDeclarations, stateTransitions) {\n\t          _super.call(this);\n\t          this.name = name;\n\t          this.stateDeclarations = stateDeclarations;\n\t          this.stateTransitions = stateTransitions;\n\t      }\n\t      AnimationEntryAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationEntry(this, context);\n\t      };\n\t      return AnimationEntryAst;\n\t  }(AnimationAst));\n\t  var AnimationStateDeclarationAst = (function (_super) {\n\t      __extends$13(AnimationStateDeclarationAst, _super);\n\t      function AnimationStateDeclarationAst(stateName, styles) {\n\t          _super.call(this);\n\t          this.stateName = stateName;\n\t          this.styles = styles;\n\t      }\n\t      AnimationStateDeclarationAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationStateDeclaration(this, context);\n\t      };\n\t      return AnimationStateDeclarationAst;\n\t  }(AnimationStateAst));\n\t  var AnimationStateTransitionExpression = (function () {\n\t      function AnimationStateTransitionExpression(fromState, toState) {\n\t          this.fromState = fromState;\n\t          this.toState = toState;\n\t      }\n\t      return AnimationStateTransitionExpression;\n\t  }());\n\t  var AnimationStateTransitionAst = (function (_super) {\n\t      __extends$13(AnimationStateTransitionAst, _super);\n\t      function AnimationStateTransitionAst(stateChanges, animation) {\n\t          _super.call(this);\n\t          this.stateChanges = stateChanges;\n\t          this.animation = animation;\n\t      }\n\t      AnimationStateTransitionAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationStateTransition(this, context);\n\t      };\n\t      return AnimationStateTransitionAst;\n\t  }(AnimationStateAst));\n\t  var AnimationStepAst = (function (_super) {\n\t      __extends$13(AnimationStepAst, _super);\n\t      function AnimationStepAst(startingStyles, keyframes, duration, delay, easing) {\n\t          _super.call(this);\n\t          this.startingStyles = startingStyles;\n\t          this.keyframes = keyframes;\n\t          this.duration = duration;\n\t          this.delay = delay;\n\t          this.easing = easing;\n\t      }\n\t      AnimationStepAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationStep(this, context);\n\t      };\n\t      return AnimationStepAst;\n\t  }(AnimationAst));\n\t  var AnimationStylesAst = (function (_super) {\n\t      __extends$13(AnimationStylesAst, _super);\n\t      function AnimationStylesAst(styles) {\n\t          _super.call(this);\n\t          this.styles = styles;\n\t      }\n\t      AnimationStylesAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationStyles(this, context);\n\t      };\n\t      return AnimationStylesAst;\n\t  }(AnimationAst));\n\t  var AnimationKeyframeAst = (function (_super) {\n\t      __extends$13(AnimationKeyframeAst, _super);\n\t      function AnimationKeyframeAst(offset, styles) {\n\t          _super.call(this);\n\t          this.offset = offset;\n\t          this.styles = styles;\n\t      }\n\t      AnimationKeyframeAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationKeyframe(this, context);\n\t      };\n\t      return AnimationKeyframeAst;\n\t  }(AnimationAst));\n\t  var AnimationWithStepsAst = (function (_super) {\n\t      __extends$13(AnimationWithStepsAst, _super);\n\t      function AnimationWithStepsAst(steps) {\n\t          _super.call(this);\n\t          this.steps = steps;\n\t      }\n\t      return AnimationWithStepsAst;\n\t  }(AnimationAst));\n\t  var AnimationGroupAst = (function (_super) {\n\t      __extends$13(AnimationGroupAst, _super);\n\t      function AnimationGroupAst(steps) {\n\t          _super.call(this, steps);\n\t      }\n\t      AnimationGroupAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationGroup(this, context);\n\t      };\n\t      return AnimationGroupAst;\n\t  }(AnimationWithStepsAst));\n\t  var AnimationSequenceAst = (function (_super) {\n\t      __extends$13(AnimationSequenceAst, _super);\n\t      function AnimationSequenceAst(steps) {\n\t          _super.call(this, steps);\n\t      }\n\t      AnimationSequenceAst.prototype.visit = function (visitor, context) {\n\t          return visitor.visitAnimationSequence(this, context);\n\t      };\n\t      return AnimationSequenceAst;\n\t  }(AnimationWithStepsAst));\n\t\n\t  var AnimationEntryCompileResult = (function () {\n\t      function AnimationEntryCompileResult(name, statements, fnExp) {\n\t          this.name = name;\n\t          this.statements = statements;\n\t          this.fnExp = fnExp;\n\t      }\n\t      return AnimationEntryCompileResult;\n\t  }());\n\t  var AnimationCompiler = (function () {\n\t      function AnimationCompiler() {\n\t      }\n\t      AnimationCompiler.prototype.compile = function (factoryNamePrefix, parsedAnimations) {\n\t          return parsedAnimations.map(function (entry) {\n\t              var factoryName = factoryNamePrefix + \"_\" + entry.name;\n\t              var visitor = new _AnimationBuilder(entry.name, factoryName);\n\t              return visitor.build(entry);\n\t          });\n\t      };\n\t      return AnimationCompiler;\n\t  }());\n\t  var _ANIMATION_FACTORY_ELEMENT_VAR = variable('element');\n\t  var _ANIMATION_DEFAULT_STATE_VAR = variable('defaultStateStyles');\n\t  var _ANIMATION_FACTORY_VIEW_VAR = variable('view');\n\t  var _ANIMATION_FACTORY_VIEW_CONTEXT = _ANIMATION_FACTORY_VIEW_VAR.prop('animationContext');\n\t  var _ANIMATION_FACTORY_RENDERER_VAR = _ANIMATION_FACTORY_VIEW_VAR.prop('renderer');\n\t  var _ANIMATION_CURRENT_STATE_VAR = variable('currentState');\n\t  var _ANIMATION_NEXT_STATE_VAR = variable('nextState');\n\t  var _ANIMATION_PLAYER_VAR = variable('player');\n\t  var _ANIMATION_TIME_VAR = variable('totalTime');\n\t  var _ANIMATION_START_STATE_STYLES_VAR = variable('startStateStyles');\n\t  var _ANIMATION_END_STATE_STYLES_VAR = variable('endStateStyles');\n\t  var _ANIMATION_COLLECTED_STYLES = variable('collectedStyles');\n\t  var _PREVIOUS_ANIMATION_PLAYERS = variable('previousPlayers');\n\t  var _EMPTY_MAP = literalMap([]);\n\t  var _EMPTY_ARRAY = literalArr([]);\n\t  var _AnimationBuilder = (function () {\n\t      function _AnimationBuilder(animationName, factoryName) {\n\t          this.animationName = animationName;\n\t          this._fnVarName = factoryName + '_factory';\n\t          this._statesMapVarName = factoryName + '_states';\n\t          this._statesMapVar = variable(this._statesMapVarName);\n\t      }\n\t      _AnimationBuilder.prototype.visitAnimationStyles = function (ast, context) {\n\t          var stylesArr = [];\n\t          if (context.isExpectingFirstStyleStep) {\n\t              stylesArr.push(_ANIMATION_START_STATE_STYLES_VAR);\n\t              context.isExpectingFirstStyleStep = false;\n\t          }\n\t          ast.styles.forEach(function (entry) {\n\t              var entries = Object.keys(entry).map(function (key) { return [key, literal(entry[key])]; });\n\t              stylesArr.push(literalMap(entries));\n\t          });\n\t          return importExpr(resolveIdentifier(Identifiers.AnimationStyles)).instantiate([\n\t              importExpr(resolveIdentifier(Identifiers.collectAndResolveStyles)).callFn([\n\t                  _ANIMATION_COLLECTED_STYLES, literalArr(stylesArr)\n\t              ])\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationKeyframe = function (ast, context) {\n\t          return importExpr(resolveIdentifier(Identifiers.AnimationKeyframe)).instantiate([\n\t              literal(ast.offset), ast.styles.visit(this, context)\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationStep = function (ast, context) {\n\t          var _this = this;\n\t          if (context.endStateAnimateStep === ast) {\n\t              return this._visitEndStateAnimation(ast, context);\n\t          }\n\t          var startingStylesExpr = ast.startingStyles.visit(this, context);\n\t          var keyframeExpressions = ast.keyframes.map(function (keyframeEntry) { return keyframeEntry.visit(_this, context); });\n\t          return this._callAnimateMethod(ast, startingStylesExpr, literalArr(keyframeExpressions), context);\n\t      };\n\t      /** @internal */\n\t      _AnimationBuilder.prototype._visitEndStateAnimation = function (ast, context) {\n\t          var _this = this;\n\t          var startingStylesExpr = ast.startingStyles.visit(this, context);\n\t          var keyframeExpressions = ast.keyframes.map(function (keyframe) { return keyframe.visit(_this, context); });\n\t          var keyframesExpr = importExpr(resolveIdentifier(Identifiers.balanceAnimationKeyframes)).callFn([\n\t              _ANIMATION_COLLECTED_STYLES, _ANIMATION_END_STATE_STYLES_VAR,\n\t              literalArr(keyframeExpressions)\n\t          ]);\n\t          return this._callAnimateMethod(ast, startingStylesExpr, keyframesExpr, context);\n\t      };\n\t      /** @internal */\n\t      _AnimationBuilder.prototype._callAnimateMethod = function (ast, startingStylesExpr, keyframesExpr, context) {\n\t          var previousStylesValue = _EMPTY_ARRAY;\n\t          if (context.isExpectingFirstAnimateStep) {\n\t              previousStylesValue = _PREVIOUS_ANIMATION_PLAYERS;\n\t              context.isExpectingFirstAnimateStep = false;\n\t          }\n\t          context.totalTransitionTime += ast.duration + ast.delay;\n\t          return _ANIMATION_FACTORY_RENDERER_VAR.callMethod('animate', [\n\t              _ANIMATION_FACTORY_ELEMENT_VAR, startingStylesExpr, keyframesExpr, literal(ast.duration),\n\t              literal(ast.delay), literal(ast.easing), previousStylesValue\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationSequence = function (ast, context) {\n\t          var _this = this;\n\t          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n\t          return importExpr(resolveIdentifier(Identifiers.AnimationSequencePlayer)).instantiate([\n\t              literalArr(playerExprs)\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationGroup = function (ast, context) {\n\t          var _this = this;\n\t          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n\t          return importExpr(resolveIdentifier(Identifiers.AnimationGroupPlayer)).instantiate([\n\t              literalArr(playerExprs)\n\t          ]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationStateDeclaration = function (ast, context) {\n\t          var flatStyles = {};\n\t          _getStylesArray(ast).forEach(function (entry) { Object.keys(entry).forEach(function (key) { flatStyles[key] = entry[key]; }); });\n\t          context.stateMap.registerState(ast.stateName, flatStyles);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationStateTransition = function (ast, context) {\n\t          var steps = ast.animation.steps;\n\t          var lastStep = steps[steps.length - 1];\n\t          if (_isEndStateAnimateStep(lastStep)) {\n\t              context.endStateAnimateStep = lastStep;\n\t          }\n\t          context.totalTransitionTime = 0;\n\t          context.isExpectingFirstStyleStep = true;\n\t          context.isExpectingFirstAnimateStep = true;\n\t          var stateChangePreconditions = [];\n\t          ast.stateChanges.forEach(function (stateChange) {\n\t              stateChangePreconditions.push(_compareToAnimationStateExpr(_ANIMATION_CURRENT_STATE_VAR, stateChange.fromState)\n\t                  .and(_compareToAnimationStateExpr(_ANIMATION_NEXT_STATE_VAR, stateChange.toState)));\n\t              if (stateChange.fromState != ANY_STATE) {\n\t                  context.stateMap.registerState(stateChange.fromState);\n\t              }\n\t              if (stateChange.toState != ANY_STATE) {\n\t                  context.stateMap.registerState(stateChange.toState);\n\t              }\n\t          });\n\t          var animationPlayerExpr = ast.animation.visit(this, context);\n\t          var reducedStateChangesPrecondition = stateChangePreconditions.reduce(function (a, b) { return a.or(b); });\n\t          var precondition = _ANIMATION_PLAYER_VAR.equals(NULL_EXPR).and(reducedStateChangesPrecondition);\n\t          var animationStmt = _ANIMATION_PLAYER_VAR.set(animationPlayerExpr).toStmt();\n\t          var totalTimeStmt = _ANIMATION_TIME_VAR.set(literal(context.totalTransitionTime)).toStmt();\n\t          return new IfStmt(precondition, [animationStmt, totalTimeStmt]);\n\t      };\n\t      _AnimationBuilder.prototype.visitAnimationEntry = function (ast, context) {\n\t          var _this = this;\n\t          // visit each of the declarations first to build the context state map\n\t          ast.stateDeclarations.forEach(function (def) { return def.visit(_this, context); });\n\t          // this should always be defined even if the user overrides it\n\t          context.stateMap.registerState(DEFAULT_STATE, {});\n\t          var statements = [];\n\t          statements.push(_PREVIOUS_ANIMATION_PLAYERS\n\t              .set(_ANIMATION_FACTORY_VIEW_CONTEXT.callMethod('getAnimationPlayers', [\n\t              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n\t              _ANIMATION_NEXT_STATE_VAR.equals(literal(EMPTY_ANIMATION_STATE))\n\t          ]))\n\t              .toDeclStmt());\n\t          statements.push(_ANIMATION_COLLECTED_STYLES.set(_EMPTY_MAP).toDeclStmt());\n\t          statements.push(_ANIMATION_PLAYER_VAR.set(NULL_EXPR).toDeclStmt());\n\t          statements.push(_ANIMATION_TIME_VAR.set(literal(0)).toDeclStmt());\n\t          statements.push(_ANIMATION_DEFAULT_STATE_VAR.set(this._statesMapVar.key(literal(DEFAULT_STATE)))\n\t              .toDeclStmt());\n\t          statements.push(_ANIMATION_START_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_CURRENT_STATE_VAR))\n\t              .toDeclStmt());\n\t          statements.push(new IfStmt(_ANIMATION_START_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_START_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n\t          statements.push(_ANIMATION_END_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_NEXT_STATE_VAR))\n\t              .toDeclStmt());\n\t          statements.push(new IfStmt(_ANIMATION_END_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_END_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n\t          var RENDER_STYLES_FN = importExpr(resolveIdentifier(Identifiers.renderStyles));\n\t          ast.stateTransitions.forEach(function (transAst) { return statements.push(transAst.visit(_this, context)); });\n\t          // this check ensures that the animation factory always returns a player\n\t          // so that the onDone callback can be used for tracking\n\t          statements.push(new IfStmt(_ANIMATION_PLAYER_VAR.equals(NULL_EXPR), [_ANIMATION_PLAYER_VAR\n\t                  .set(importExpr(resolveIdentifier(Identifiers.NoOpAnimationPlayer)).instantiate([]))\n\t                  .toStmt()]));\n\t          // once complete we want to apply the styles on the element\n\t          // since the destination state's values should persist once\n\t          // the animation sequence has completed.\n\t          statements.push(_ANIMATION_PLAYER_VAR\n\t              .callMethod('onDone', [fn([], [\n\t                  _ANIMATION_PLAYER_VAR.callMethod('destroy', []).toStmt(),\n\t                  RENDER_STYLES_FN\n\t                      .callFn([\n\t                      _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n\t                      importExpr(resolveIdentifier(Identifiers.prepareFinalAnimationStyles))\n\t                          .callFn([\n\t                          _ANIMATION_START_STATE_STYLES_VAR,\n\t                          _ANIMATION_END_STATE_STYLES_VAR\n\t                      ])\n\t                  ])\n\t                      .toStmt()\n\t              ])])\n\t              .toStmt());\n\t          statements.push(importExpr(resolveIdentifier(Identifiers.AnimationSequencePlayer))\n\t              .instantiate([_PREVIOUS_ANIMATION_PLAYERS])\n\t              .callMethod('destroy', [])\n\t              .toStmt());\n\t          // before we start any animation we want to clear out the starting\n\t          // styles from the element's style property (since they were placed\n\t          // there at the end of the last animation\n\t          statements.push(RENDER_STYLES_FN\n\t              .callFn([\n\t              _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n\t              importExpr(resolveIdentifier(Identifiers.clearStyles))\n\t                  .callFn([_ANIMATION_START_STATE_STYLES_VAR])\n\t          ])\n\t              .toStmt());\n\t          statements.push(_ANIMATION_FACTORY_VIEW_CONTEXT\n\t              .callMethod('queueAnimation', [\n\t              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n\t              _ANIMATION_PLAYER_VAR\n\t          ])\n\t              .toStmt());\n\t          statements.push(new ReturnStatement(importExpr(resolveIdentifier(Identifiers.AnimationTransition)).instantiate([\n\t              _ANIMATION_PLAYER_VAR, _ANIMATION_CURRENT_STATE_VAR, _ANIMATION_NEXT_STATE_VAR,\n\t              _ANIMATION_TIME_VAR\n\t          ])));\n\t          return fn([\n\t              new FnParam(_ANIMATION_FACTORY_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t              new FnParam(_ANIMATION_FACTORY_ELEMENT_VAR.name, DYNAMIC_TYPE),\n\t              new FnParam(_ANIMATION_CURRENT_STATE_VAR.name, DYNAMIC_TYPE),\n\t              new FnParam(_ANIMATION_NEXT_STATE_VAR.name, DYNAMIC_TYPE)\n\t          ], statements, importType(resolveIdentifier(Identifiers.AnimationTransition)));\n\t      };\n\t      _AnimationBuilder.prototype.build = function (ast) {\n\t          var context = new _AnimationBuilderContext();\n\t          var fnStatement = ast.visit(this, context).toDeclStmt(this._fnVarName);\n\t          var fnVariable = variable(this._fnVarName);\n\t          var lookupMap = [];\n\t          Object.keys(context.stateMap.states).forEach(function (stateName) {\n\t              var value = context.stateMap.states[stateName];\n\t              var variableValue = _EMPTY_MAP;\n\t              if (isPresent(value)) {\n\t                  var styleMap_1 = [];\n\t                  Object.keys(value).forEach(function (key) { styleMap_1.push([key, literal(value[key])]); });\n\t                  variableValue = literalMap(styleMap_1);\n\t              }\n\t              lookupMap.push([stateName, variableValue]);\n\t          });\n\t          var compiledStatesMapStmt = this._statesMapVar.set(literalMap(lookupMap)).toDeclStmt();\n\t          var statements = [compiledStatesMapStmt, fnStatement];\n\t          return new AnimationEntryCompileResult(this.animationName, statements, fnVariable);\n\t      };\n\t      return _AnimationBuilder;\n\t  }());\n\t  var _AnimationBuilderContext = (function () {\n\t      function _AnimationBuilderContext() {\n\t          this.stateMap = new _AnimationBuilderStateMap();\n\t          this.endStateAnimateStep = null;\n\t          this.isExpectingFirstStyleStep = false;\n\t          this.isExpectingFirstAnimateStep = false;\n\t          this.totalTransitionTime = 0;\n\t      }\n\t      return _AnimationBuilderContext;\n\t  }());\n\t  var _AnimationBuilderStateMap = (function () {\n\t      function _AnimationBuilderStateMap() {\n\t          this._states = {};\n\t      }\n\t      Object.defineProperty(_AnimationBuilderStateMap.prototype, \"states\", {\n\t          get: function () { return this._states; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      _AnimationBuilderStateMap.prototype.registerState = function (name, value) {\n\t          if (value === void 0) { value = null; }\n\t          var existingEntry = this._states[name];\n\t          if (!existingEntry) {\n\t              this._states[name] = value;\n\t          }\n\t      };\n\t      return _AnimationBuilderStateMap;\n\t  }());\n\t  function _compareToAnimationStateExpr(value, animationState) {\n\t      var emptyStateLiteral = literal(EMPTY_ANIMATION_STATE);\n\t      switch (animationState) {\n\t          case EMPTY_ANIMATION_STATE:\n\t              return value.equals(emptyStateLiteral);\n\t          case ANY_STATE:\n\t              return literal(true);\n\t          default:\n\t              return value.equals(literal(animationState));\n\t      }\n\t  }\n\t  function _isEndStateAnimateStep(step) {\n\t      // the final animation step is characterized by having only TWO\n\t      // keyframe values and it must have zero styles for both keyframes\n\t      if (step instanceof AnimationStepAst && step.duration > 0 && step.keyframes.length == 2) {\n\t          var styles1 = _getStylesArray(step.keyframes[0])[0];\n\t          var styles2 = _getStylesArray(step.keyframes[1])[0];\n\t          return Object.keys(styles1).length === 0 && Object.keys(styles2).length === 0;\n\t      }\n\t      return false;\n\t  }\n\t  function _getStylesArray(obj) {\n\t      return obj.styles.styles;\n\t  }\n\t\n\t  function createDiTokenExpression(token) {\n\t      if (isPresent(token.value)) {\n\t          return literal(token.value);\n\t      }\n\t      else if (token.identifierIsInstance) {\n\t          return importExpr(token.identifier)\n\t              .instantiate([], importType(token.identifier, [], [TypeModifier.Const]));\n\t      }\n\t      else {\n\t          return importExpr(token.identifier);\n\t      }\n\t  }\n\t  function createInlineArray(values) {\n\t      if (values.length === 0) {\n\t          return importExpr(resolveIdentifier(Identifiers.EMPTY_INLINE_ARRAY));\n\t      }\n\t      var log2 = Math.log(values.length) / Math.log(2);\n\t      var index = Math.ceil(log2);\n\t      var identifierSpec = index < Identifiers.inlineArrays.length ? Identifiers.inlineArrays[index] :\n\t          Identifiers.InlineArrayDynamic;\n\t      var identifier = resolveIdentifier(identifierSpec);\n\t      return importExpr(identifier).instantiate([\n\t          literal(values.length)\n\t      ].concat(values));\n\t  }\n\t  function createPureProxy(fn, argCount, pureProxyProp, builder) {\n\t      builder.fields.push(new ClassField(pureProxyProp.name, null));\n\t      var pureProxyId = argCount < Identifiers.pureProxies.length ? Identifiers.pureProxies[argCount] : null;\n\t      if (!pureProxyId) {\n\t          throw new Error(\"Unsupported number of argument for pure functions: \" + argCount);\n\t      }\n\t      builder.ctorStmts.push(THIS_EXPR.prop(pureProxyProp.name)\n\t          .set(importExpr(resolveIdentifier(pureProxyId)).callFn([fn]))\n\t          .toStmt());\n\t  }\n\t  function createEnumExpression(enumType, enumValue) {\n\t      var enumName = Object.keys(enumType.runtime).find(function (propName) { return enumType.runtime[propName] === enumValue; });\n\t      if (!enumName) {\n\t          throw new Error(\"Unknown enum value \" + enumValue + \" in \" + enumType.name);\n\t      }\n\t      return importExpr(resolveEnumIdentifier(resolveIdentifier(enumType), enumName));\n\t  }\n\t\n\t  var CheckBindingField = (function () {\n\t      function CheckBindingField(expression, bindingId) {\n\t          this.expression = expression;\n\t          this.bindingId = bindingId;\n\t      }\n\t      return CheckBindingField;\n\t  }());\n\t  function createCheckBindingField(builder) {\n\t      var bindingId = \"\" + builder.fields.length;\n\t      var fieldExpr = createBindFieldExpr(bindingId);\n\t      // private is fine here as no child view will reference the cached value...\n\t      builder.fields.push(new ClassField(fieldExpr.name, null, [StmtModifier.Private]));\n\t      builder.ctorStmts.push(THIS_EXPR.prop(fieldExpr.name)\n\t          .set(importExpr(resolveIdentifier(Identifiers.UNINITIALIZED)))\n\t          .toStmt());\n\t      return new CheckBindingField(fieldExpr, bindingId);\n\t  }\n\t  function createCheckBindingStmt(evalResult, fieldExpr, throwOnChangeVar, actions) {\n\t      var condition = importExpr(resolveIdentifier(Identifiers.checkBinding)).callFn([\n\t          throwOnChangeVar, fieldExpr, evalResult.currValExpr\n\t      ]);\n\t      if (evalResult.forceUpdate) {\n\t          condition = evalResult.forceUpdate.or(condition);\n\t      }\n\t      return evalResult.stmts.concat([\n\t          new IfStmt(condition, actions.concat([\n\t              THIS_EXPR.prop(fieldExpr.name).set(evalResult.currValExpr).toStmt()\n\t          ]))\n\t      ]);\n\t  }\n\t  function createBindFieldExpr(bindingId) {\n\t      return THIS_EXPR.prop(\"_expr_\" + bindingId);\n\t  }\n\t\n\t  var VAL_UNWRAPPER_VAR = variable(\"valUnwrapper\");\n\t  var EventHandlerVars = (function () {\n\t      function EventHandlerVars() {\n\t      }\n\t      EventHandlerVars.event = variable('$event');\n\t      return EventHandlerVars;\n\t  }());\n\t  var ConvertPropertyBindingResult = (function () {\n\t      function ConvertPropertyBindingResult(stmts, currValExpr, forceUpdate) {\n\t          this.stmts = stmts;\n\t          this.currValExpr = currValExpr;\n\t          this.forceUpdate = forceUpdate;\n\t      }\n\t      return ConvertPropertyBindingResult;\n\t  }());\n\t  /**\n\t   * Converts the given expression AST into an executable output AST, assuming the expression is\n\t   * used in a property binding.\n\t   */\n\t  function convertPropertyBinding(builder, nameResolver, implicitReceiver, expression, bindingId) {\n\t      var currValExpr = createCurrValueExpr(bindingId);\n\t      var stmts = [];\n\t      if (!nameResolver) {\n\t          nameResolver = new DefaultNameResolver();\n\t      }\n\t      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, VAL_UNWRAPPER_VAR, bindingId, false);\n\t      var outputExpr = expression.visit(visitor, _Mode.Expression);\n\t      if (!outputExpr) {\n\t          // e.g. an empty expression was given\n\t          return null;\n\t      }\n\t      if (visitor.temporaryCount) {\n\t          for (var i = 0; i < visitor.temporaryCount; i++) {\n\t              stmts.push(temporaryDeclaration(bindingId, i));\n\t          }\n\t      }\n\t      if (visitor.needsValueUnwrapper) {\n\t          var initValueUnwrapperStmt = VAL_UNWRAPPER_VAR.callMethod('reset', []).toStmt();\n\t          stmts.push(initValueUnwrapperStmt);\n\t      }\n\t      stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n\t      if (visitor.needsValueUnwrapper) {\n\t          return new ConvertPropertyBindingResult(stmts, currValExpr, VAL_UNWRAPPER_VAR.prop('hasWrappedValue'));\n\t      }\n\t      else {\n\t          return new ConvertPropertyBindingResult(stmts, currValExpr, null);\n\t      }\n\t  }\n\t  var ConvertActionBindingResult = (function () {\n\t      function ConvertActionBindingResult(stmts, preventDefault) {\n\t          this.stmts = stmts;\n\t          this.preventDefault = preventDefault;\n\t      }\n\t      return ConvertActionBindingResult;\n\t  }());\n\t  /**\n\t   * Converts the given expression AST into an executable output AST, assuming the expression is\n\t   * used in an action binding (e.g. an event handler).\n\t   */\n\t  function convertActionBinding(builder, nameResolver, implicitReceiver, action, bindingId) {\n\t      if (!nameResolver) {\n\t          nameResolver = new DefaultNameResolver();\n\t      }\n\t      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, null, bindingId, true);\n\t      var actionStmts = [];\n\t      flattenStatements(action.visit(visitor, _Mode.Statement), actionStmts);\n\t      prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n\t      var lastIndex = actionStmts.length - 1;\n\t      var preventDefaultVar = null;\n\t      if (lastIndex >= 0) {\n\t          var lastStatement = actionStmts[lastIndex];\n\t          var returnExpr = convertStmtIntoExpression(lastStatement);\n\t          if (returnExpr) {\n\t              // Note: We need to cast the result of the method call to dynamic,\n\t              // as it might be a void method!\n\t              preventDefaultVar = createPreventDefaultVar(bindingId);\n\t              actionStmts[lastIndex] =\n\t                  preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n\t                      .toDeclStmt(null, [StmtModifier.Final]);\n\t          }\n\t      }\n\t      return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n\t  }\n\t  /**\n\t   * Creates variables that are shared by multiple calls to `convertActionBinding` /\n\t   * `convertPropertyBinding`\n\t   */\n\t  function createSharedBindingVariablesIfNeeded(stmts) {\n\t      var unwrapperStmts = [];\n\t      var readVars = findReadVarNames(stmts);\n\t      if (readVars.has(VAL_UNWRAPPER_VAR.name)) {\n\t          unwrapperStmts.push(VAL_UNWRAPPER_VAR\n\t              .set(importExpr(resolveIdentifier(Identifiers.ValueUnwrapper)).instantiate([]))\n\t              .toDeclStmt(null, [StmtModifier.Final]));\n\t      }\n\t      return unwrapperStmts;\n\t  }\n\t  function temporaryName(bindingId, temporaryNumber) {\n\t      return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n\t  }\n\t  function temporaryDeclaration(bindingId, temporaryNumber) {\n\t      return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n\t  }\n\t  function prependTemporaryDecls(temporaryCount, bindingId, statements) {\n\t      for (var i = temporaryCount - 1; i >= 0; i--) {\n\t          statements.unshift(temporaryDeclaration(bindingId, i));\n\t      }\n\t  }\n\t  var _Mode;\n\t  (function (_Mode) {\n\t      _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n\t      _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n\t  })(_Mode || (_Mode = {}));\n\t  function ensureStatementMode(mode, ast) {\n\t      if (mode !== _Mode.Statement) {\n\t          throw new Error(\"Expected a statement, but saw \" + ast);\n\t      }\n\t  }\n\t  function ensureExpressionMode(mode, ast) {\n\t      if (mode !== _Mode.Expression) {\n\t          throw new Error(\"Expected an expression, but saw \" + ast);\n\t      }\n\t  }\n\t  function convertToStatementIfNeeded(mode, expr) {\n\t      if (mode === _Mode.Statement) {\n\t          return expr.toStmt();\n\t      }\n\t      else {\n\t          return expr;\n\t      }\n\t  }\n\t  var _AstToIrVisitor = (function () {\n\t      function _AstToIrVisitor(_builder, _nameResolver, _implicitReceiver, _valueUnwrapper, bindingId, isAction) {\n\t          this._builder = _builder;\n\t          this._nameResolver = _nameResolver;\n\t          this._implicitReceiver = _implicitReceiver;\n\t          this._valueUnwrapper = _valueUnwrapper;\n\t          this.bindingId = bindingId;\n\t          this.isAction = isAction;\n\t          this._nodeMap = new Map();\n\t          this._resultMap = new Map();\n\t          this._currentTemporary = 0;\n\t          this.needsValueUnwrapper = false;\n\t          this.temporaryCount = 0;\n\t      }\n\t      _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n\t          var op;\n\t          switch (ast.operation) {\n\t              case '+':\n\t                  op = BinaryOperator.Plus;\n\t                  break;\n\t              case '-':\n\t                  op = BinaryOperator.Minus;\n\t                  break;\n\t              case '*':\n\t                  op = BinaryOperator.Multiply;\n\t                  break;\n\t              case '/':\n\t                  op = BinaryOperator.Divide;\n\t                  break;\n\t              case '%':\n\t                  op = BinaryOperator.Modulo;\n\t                  break;\n\t              case '&&':\n\t                  op = BinaryOperator.And;\n\t                  break;\n\t              case '||':\n\t                  op = BinaryOperator.Or;\n\t                  break;\n\t              case '==':\n\t                  op = BinaryOperator.Equals;\n\t                  break;\n\t              case '!=':\n\t                  op = BinaryOperator.NotEquals;\n\t                  break;\n\t              case '===':\n\t                  op = BinaryOperator.Identical;\n\t                  break;\n\t              case '!==':\n\t                  op = BinaryOperator.NotIdentical;\n\t                  break;\n\t              case '<':\n\t                  op = BinaryOperator.Lower;\n\t                  break;\n\t              case '>':\n\t                  op = BinaryOperator.Bigger;\n\t                  break;\n\t              case '<=':\n\t                  op = BinaryOperator.LowerEquals;\n\t                  break;\n\t              case '>=':\n\t                  op = BinaryOperator.BiggerEquals;\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unsupported operation \" + ast.operation);\n\t          }\n\t          return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this.visit(ast.left, _Mode.Expression), this.visit(ast.right, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n\t          ensureStatementMode(mode, ast);\n\t          return this.visitAll(ast.expressions, mode);\n\t      };\n\t      _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n\t          var value = this.visit(ast.condition, _Mode.Expression);\n\t          return convertToStatementIfNeeded(mode, value.conditional(this.visit(ast.trueExp, _Mode.Expression), this.visit(ast.falseExp, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n\t          var input = this.visit(ast.exp, _Mode.Expression);\n\t          var args = this.visitAll(ast.args, _Mode.Expression);\n\t          var value = this._nameResolver.callPipe(ast.name, input, args);\n\t          if (!value) {\n\t              throw new Error(\"Illegal state: Pipe \" + ast.name + \" is not allowed here!\");\n\t          }\n\t          this.needsValueUnwrapper = true;\n\t          return convertToStatementIfNeeded(mode, this._valueUnwrapper.callMethod('unwrap', [value]));\n\t      };\n\t      _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n\t          return convertToStatementIfNeeded(mode, this.visit(ast.target, _Mode.Expression).callFn(this.visitAll(ast.args, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n\t          ensureExpressionMode(mode, ast);\n\t          return this._implicitReceiver;\n\t      };\n\t      _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n\t          ensureExpressionMode(mode, ast);\n\t          var args = [literal(ast.expressions.length)];\n\t          for (var i = 0; i < ast.strings.length - 1; i++) {\n\t              args.push(literal(ast.strings[i]));\n\t              args.push(this.visit(ast.expressions[i], _Mode.Expression));\n\t          }\n\t          args.push(literal(ast.strings[ast.strings.length - 1]));\n\t          return ast.expressions.length <= 9 ?\n\t              importExpr(resolveIdentifier(Identifiers.inlineInterpolate)).callFn(args) :\n\t              importExpr(resolveIdentifier(Identifiers.interpolate)).callFn([\n\t                  args[0], literalArr(args.slice(1))\n\t              ]);\n\t      };\n\t      _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n\t          return convertToStatementIfNeeded(mode, this.visit(ast.obj, _Mode.Expression).key(this.visit(ast.key, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n\t          var obj = this.visit(ast.obj, _Mode.Expression);\n\t          var key = this.visit(ast.key, _Mode.Expression);\n\t          var value = this.visit(ast.value, _Mode.Expression);\n\t          return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n\t      };\n\t      _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n\t          var parts = this.visitAll(ast.expressions, mode);\n\t          var literalArr$$ = this.isAction ? literalArr(parts) : createCachedLiteralArray(this._builder, parts);\n\t          return convertToStatementIfNeeded(mode, literalArr$$);\n\t      };\n\t      _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n\t          var parts = [];\n\t          for (var i = 0; i < ast.keys.length; i++) {\n\t              parts.push([ast.keys[i], this.visit(ast.values[i], _Mode.Expression)]);\n\t          }\n\t          var literalMap$$ = this.isAction ? literalMap(parts) : createCachedLiteralMap(this._builder, parts);\n\t          return convertToStatementIfNeeded(mode, literalMap$$);\n\t      };\n\t      _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n\t          return convertToStatementIfNeeded(mode, literal(ast.value));\n\t      };\n\t      _AstToIrVisitor.prototype._getLocal = function (name) {\n\t          if (this.isAction && name == EventHandlerVars.event.name) {\n\t              return EventHandlerVars.event;\n\t          }\n\t          return this._nameResolver.getLocal(name);\n\t      };\n\t      _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n\t          var leftMostSafe = this.leftMostSafeNode(ast);\n\t          if (leftMostSafe) {\n\t              return this.convertSafeAccess(ast, leftMostSafe, mode);\n\t          }\n\t          else {\n\t              var args = this.visitAll(ast.args, _Mode.Expression);\n\t              var result = null;\n\t              var receiver = this.visit(ast.receiver, _Mode.Expression);\n\t              if (receiver === this._implicitReceiver) {\n\t                  var varExpr = this._getLocal(ast.name);\n\t                  if (isPresent(varExpr)) {\n\t                      result = varExpr.callFn(args);\n\t                  }\n\t              }\n\t              if (isBlank(result)) {\n\t                  result = receiver.callMethod(ast.name, args);\n\t              }\n\t              return convertToStatementIfNeeded(mode, result);\n\t          }\n\t      };\n\t      _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n\t          return convertToStatementIfNeeded(mode, not(this.visit(ast.expression, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n\t          var leftMostSafe = this.leftMostSafeNode(ast);\n\t          if (leftMostSafe) {\n\t              return this.convertSafeAccess(ast, leftMostSafe, mode);\n\t          }\n\t          else {\n\t              var result = null;\n\t              var receiver = this.visit(ast.receiver, _Mode.Expression);\n\t              if (receiver === this._implicitReceiver) {\n\t                  result = this._getLocal(ast.name);\n\t              }\n\t              if (isBlank(result)) {\n\t                  result = receiver.prop(ast.name);\n\t              }\n\t              return convertToStatementIfNeeded(mode, result);\n\t          }\n\t      };\n\t      _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n\t          var receiver = this.visit(ast.receiver, _Mode.Expression);\n\t          if (receiver === this._implicitReceiver) {\n\t              var varExpr = this._getLocal(ast.name);\n\t              if (isPresent(varExpr)) {\n\t                  throw new Error('Cannot assign to a reference or variable!');\n\t              }\n\t          }\n\t          return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this.visit(ast.value, _Mode.Expression)));\n\t      };\n\t      _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n\t          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n\t      };\n\t      _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n\t          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n\t      };\n\t      _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n\t          var _this = this;\n\t          return asts.map(function (ast) { return _this.visit(ast, mode); });\n\t      };\n\t      _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n\t          throw new Error('Quotes are not supported for evaluation!');\n\t      };\n\t      _AstToIrVisitor.prototype.visit = function (ast, mode) {\n\t          var result = this._resultMap.get(ast);\n\t          if (result)\n\t              return result;\n\t          return (this._nodeMap.get(ast) || ast).visit(this, mode);\n\t      };\n\t      _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n\t          // If the expression contains a safe access node on the left it needs to be converted to\n\t          // an expression that guards the access to the member by checking the receiver for blank. As\n\t          // execution proceeds from left to right, the left most part of the expression must be guarded\n\t          // first but, because member access is left associative, the right side of the expression is at\n\t          // the top of the AST. The desired result requires lifting a copy of the the left part of the\n\t          // expression up to test it for blank before generating the unguarded version.\n\t          // Consider, for example the following expression: a?.b.c?.d.e\n\t          // This results in the ast:\n\t          //         .\n\t          //        / \\\n\t          //       ?.   e\n\t          //      /  \\\n\t          //     .    d\n\t          //    / \\\n\t          //   ?.  c\n\t          //  /  \\\n\t          // a    b\n\t          // The following tree should be generated:\n\t          //\n\t          //        /---- ? ----\\\n\t          //       /      |      \\\n\t          //     a   /--- ? ---\\  null\n\t          //        /     |     \\\n\t          //       .      .     null\n\t          //      / \\    / \\\n\t          //     .  c   .   e\n\t          //    / \\    / \\\n\t          //   a   b  ,   d\n\t          //         / \\\n\t          //        .   c\n\t          //       / \\\n\t          //      a   b\n\t          //\n\t          // Notice that the first guard condition is the left hand of the left most safe access node\n\t          // which comes in as leftMostSafe to this routine.\n\t          var guardedExpression = this.visit(leftMostSafe.receiver, _Mode.Expression);\n\t          var temporary;\n\t          if (this.needsTemporary(leftMostSafe.receiver)) {\n\t              // If the expression has method calls or pipes then we need to save the result into a\n\t              // temporary variable to avoid calling stateful or impure code more than once.\n\t              temporary = this.allocateTemporary();\n\t              // Preserve the result in the temporary variable\n\t              guardedExpression = temporary.set(guardedExpression);\n\t              // Ensure all further references to the guarded expression refer to the temporary instead.\n\t              this._resultMap.set(leftMostSafe.receiver, temporary);\n\t          }\n\t          var condition = guardedExpression.isBlank();\n\t          // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n\t          // leftMostNode with its unguarded version in the call to `this.visit()`.\n\t          if (leftMostSafe instanceof SafeMethodCall) {\n\t              this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n\t          }\n\t          else {\n\t              this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n\t          }\n\t          // Recursively convert the node now without the guarded member access.\n\t          var access = this.visit(ast, _Mode.Expression);\n\t          // Remove the mapping. This is not strictly required as the converter only traverses each node\n\t          // once but is safer if the conversion is changed to traverse the nodes more than once.\n\t          this._nodeMap.delete(leftMostSafe);\n\t          // If we allcoated a temporary, release it.\n\t          if (temporary) {\n\t              this.releaseTemporary(temporary);\n\t          }\n\t          // Produce the conditional\n\t          return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n\t      };\n\t      // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n\t      // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n\t      // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n\t      // safe method call as this needs be transform initially to:\n\t      //   a == null ? null : a.c.b.c?.d.e\n\t      // then to:\n\t      //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n\t      _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n\t          var _this = this;\n\t          var visit = function (visitor, ast) {\n\t              return (_this._nodeMap.get(ast) || ast).visit(visitor);\n\t          };\n\t          return ast.visit({\n\t              visitBinary: function (ast) { return null; },\n\t              visitChain: function (ast) { return null; },\n\t              visitConditional: function (ast) { return null; },\n\t              visitFunctionCall: function (ast) { return null; },\n\t              visitImplicitReceiver: function (ast) { return null; },\n\t              visitInterpolation: function (ast) { return null; },\n\t              visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n\t              visitKeyedWrite: function (ast) { return null; },\n\t              visitLiteralArray: function (ast) { return null; },\n\t              visitLiteralMap: function (ast) { return null; },\n\t              visitLiteralPrimitive: function (ast) { return null; },\n\t              visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n\t              visitPipe: function (ast) { return null; },\n\t              visitPrefixNot: function (ast) { return null; },\n\t              visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n\t              visitPropertyWrite: function (ast) { return null; },\n\t              visitQuote: function (ast) { return null; },\n\t              visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n\t              visitSafePropertyRead: function (ast) {\n\t                  return visit(this, ast.receiver) || ast;\n\t              }\n\t          });\n\t      };\n\t      // Returns true of the AST includes a method or a pipe indicating that, if the\n\t      // expression is used as the target of a safe property or method access then\n\t      // the expression should be stored into a temporary variable.\n\t      _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n\t          var _this = this;\n\t          var visit = function (visitor, ast) {\n\t              return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n\t          };\n\t          var visitSome = function (visitor, ast) {\n\t              return ast.some(function (ast) { return visit(visitor, ast); });\n\t          };\n\t          return ast.visit({\n\t              visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n\t              visitChain: function (ast) { return false; },\n\t              visitConditional: function (ast) {\n\t                  return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n\t                      visit(this, ast.falseExp);\n\t              },\n\t              visitFunctionCall: function (ast) { return true; },\n\t              visitImplicitReceiver: function (ast) { return false; },\n\t              visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n\t              visitKeyedRead: function (ast) { return false; },\n\t              visitKeyedWrite: function (ast) { return false; },\n\t              visitLiteralArray: function (ast) { return true; },\n\t              visitLiteralMap: function (ast) { return true; },\n\t              visitLiteralPrimitive: function (ast) { return false; },\n\t              visitMethodCall: function (ast) { return true; },\n\t              visitPipe: function (ast) { return true; },\n\t              visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n\t              visitPropertyRead: function (ast) { return false; },\n\t              visitPropertyWrite: function (ast) { return false; },\n\t              visitQuote: function (ast) { return false; },\n\t              visitSafeMethodCall: function (ast) { return true; },\n\t              visitSafePropertyRead: function (ast) { return false; }\n\t          });\n\t      };\n\t      _AstToIrVisitor.prototype.allocateTemporary = function () {\n\t          var tempNumber = this._currentTemporary++;\n\t          this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n\t          return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n\t      };\n\t      _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n\t          this._currentTemporary--;\n\t          if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n\t              throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n\t          }\n\t      };\n\t      return _AstToIrVisitor;\n\t  }());\n\t  function flattenStatements(arg, output) {\n\t      if (Array.isArray(arg)) {\n\t          arg.forEach(function (entry) { return flattenStatements(entry, output); });\n\t      }\n\t      else {\n\t          output.push(arg);\n\t      }\n\t  }\n\t  function createCachedLiteralArray(builder, values) {\n\t      if (values.length === 0) {\n\t          return importExpr(resolveIdentifier(Identifiers.EMPTY_ARRAY));\n\t      }\n\t      var proxyExpr = THIS_EXPR.prop(\"_arr_\" + builder.fields.length);\n\t      var proxyParams = [];\n\t      var proxyReturnEntries = [];\n\t      for (var i = 0; i < values.length; i++) {\n\t          var paramName = \"p\" + i;\n\t          proxyParams.push(new FnParam(paramName));\n\t          proxyReturnEntries.push(variable(paramName));\n\t      }\n\t      createPureProxy(fn(proxyParams, [new ReturnStatement(literalArr(proxyReturnEntries))], new ArrayType(DYNAMIC_TYPE)), values.length, proxyExpr, builder);\n\t      return proxyExpr.callFn(values);\n\t  }\n\t  function createCachedLiteralMap(builder, entries) {\n\t      if (entries.length === 0) {\n\t          return importExpr(resolveIdentifier(Identifiers.EMPTY_MAP));\n\t      }\n\t      var proxyExpr = THIS_EXPR.prop(\"_map_\" + builder.fields.length);\n\t      var proxyParams = [];\n\t      var proxyReturnEntries = [];\n\t      var values = [];\n\t      for (var i = 0; i < entries.length; i++) {\n\t          var paramName = \"p\" + i;\n\t          proxyParams.push(new FnParam(paramName));\n\t          proxyReturnEntries.push([entries[i][0], variable(paramName)]);\n\t          values.push(entries[i][1]);\n\t      }\n\t      createPureProxy(fn(proxyParams, [new ReturnStatement(literalMap(proxyReturnEntries))], new MapType(DYNAMIC_TYPE)), entries.length, proxyExpr, builder);\n\t      return proxyExpr.callFn(values);\n\t  }\n\t  var DefaultNameResolver = (function () {\n\t      function DefaultNameResolver() {\n\t      }\n\t      DefaultNameResolver.prototype.callPipe = function (name, input, args) { return null; };\n\t      DefaultNameResolver.prototype.getLocal = function (name) { return null; };\n\t      return DefaultNameResolver;\n\t  }());\n\t  function createCurrValueExpr(bindingId) {\n\t      return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n\t  }\n\t  function createPreventDefaultVar(bindingId) {\n\t      return variable(\"pd_\" + bindingId);\n\t  }\n\t  function convertStmtIntoExpression(stmt) {\n\t      if (stmt instanceof ExpressionStatement) {\n\t          return stmt.expr;\n\t      }\n\t      else if (stmt instanceof ReturnStatement) {\n\t          return stmt.value;\n\t      }\n\t      return null;\n\t  }\n\t\n\t  function writeToRenderer(view, boundProp, renderElement, renderValue, logBindingUpdate, securityContextExpression) {\n\t      var updateStmts = [];\n\t      var renderer = view.prop('renderer');\n\t      renderValue = sanitizedValue(view, boundProp, renderValue, securityContextExpression);\n\t      switch (boundProp.type) {\n\t          case exports.PropertyBindingType.Property:\n\t              if (logBindingUpdate) {\n\t                  updateStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfo))\n\t                      .callFn([renderer, renderElement, literal(boundProp.name), renderValue])\n\t                      .toStmt());\n\t              }\n\t              updateStmts.push(renderer\n\t                  .callMethod('setElementProperty', [renderElement, literal(boundProp.name), renderValue])\n\t                  .toStmt());\n\t              break;\n\t          case exports.PropertyBindingType.Attribute:\n\t              renderValue =\n\t                  renderValue.isBlank().conditional(NULL_EXPR, renderValue.callMethod('toString', []));\n\t              updateStmts.push(renderer\n\t                  .callMethod('setElementAttribute', [renderElement, literal(boundProp.name), renderValue])\n\t                  .toStmt());\n\t              break;\n\t          case exports.PropertyBindingType.Class:\n\t              updateStmts.push(renderer\n\t                  .callMethod('setElementClass', [renderElement, literal(boundProp.name), renderValue])\n\t                  .toStmt());\n\t              break;\n\t          case exports.PropertyBindingType.Style:\n\t              var strValue = renderValue.callMethod('toString', []);\n\t              if (isPresent(boundProp.unit)) {\n\t                  strValue = strValue.plus(literal(boundProp.unit));\n\t              }\n\t              renderValue = renderValue.isBlank().conditional(NULL_EXPR, strValue);\n\t              updateStmts.push(renderer\n\t                  .callMethod('setElementStyle', [renderElement, literal(boundProp.name), renderValue])\n\t                  .toStmt());\n\t              break;\n\t          case exports.PropertyBindingType.Animation:\n\t              throw new Error('Illegal state: Should not come here!');\n\t      }\n\t      return updateStmts;\n\t  }\n\t  function sanitizedValue(view, boundProp, renderValue, securityContextExpression) {\n\t      if (boundProp.securityContext === _angular_core.SecurityContext.NONE) {\n\t          return renderValue; // No sanitization needed.\n\t      }\n\t      if (!boundProp.needsRuntimeSecurityContext) {\n\t          securityContextExpression =\n\t              createEnumExpression(Identifiers.SecurityContext, boundProp.securityContext);\n\t      }\n\t      if (!securityContextExpression) {\n\t          throw new Error(\"internal error, no SecurityContext given \" + boundProp.name);\n\t      }\n\t      var ctx = view.prop('viewUtils').prop('sanitizer');\n\t      var args = [securityContextExpression, renderValue];\n\t      return ctx.callMethod('sanitize', args);\n\t  }\n\t  function triggerAnimation(view, componentView, boundProp, eventListener, renderElement, renderValue, lastRenderValue) {\n\t      var detachStmts = [];\n\t      var updateStmts = [];\n\t      var animationName = boundProp.name;\n\t      var animationFnExpr = componentView.prop('componentType').prop('animations').key(literal(animationName));\n\t      // it's important to normalize the void value as `void` explicitly\n\t      // so that the styles data can be obtained from the stringmap\n\t      var emptyStateValue = literal(EMPTY_ANIMATION_STATE);\n\t      var unitializedValue = importExpr(resolveIdentifier(Identifiers.UNINITIALIZED));\n\t      var animationTransitionVar = variable('animationTransition_' + animationName);\n\t      updateStmts.push(animationTransitionVar\n\t          .set(animationFnExpr.callFn([\n\t          view, renderElement,\n\t          lastRenderValue.equals(unitializedValue).conditional(emptyStateValue, lastRenderValue),\n\t          renderValue.equals(unitializedValue).conditional(emptyStateValue, renderValue)\n\t      ]))\n\t          .toDeclStmt());\n\t      detachStmts.push(animationTransitionVar\n\t          .set(animationFnExpr.callFn([view, renderElement, lastRenderValue, emptyStateValue]))\n\t          .toDeclStmt());\n\t      var registerStmts = [\n\t          animationTransitionVar\n\t              .callMethod('onStart', [eventListener.callMethod(BuiltinMethod.Bind, [view, literal(BoundEventAst.calcFullName(animationName, null, 'start'))])])\n\t              .toStmt(),\n\t          animationTransitionVar\n\t              .callMethod('onDone', [eventListener.callMethod(BuiltinMethod.Bind, [view, literal(BoundEventAst.calcFullName(animationName, null, 'done'))])])\n\t              .toStmt(),\n\t      ];\n\t      updateStmts.push.apply(updateStmts, registerStmts);\n\t      detachStmts.push.apply(detachStmts, registerStmts);\n\t      return { updateStmts: updateStmts, detachStmts: detachStmts };\n\t  }\n\t\n\t  /**\n\t   * Create a new class stmts based on the given data.\n\t   */\n\t  function createClassStmt(config) {\n\t      var parentArgs = config.parentArgs || [];\n\t      var superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n\t      var builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n\t      var ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n\t      return new ClassStmt(config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || []);\n\t  }\n\t  function concatClassBuilderParts(builders) {\n\t      return {\n\t          fields: (_a = []).concat.apply(_a, builders.map(function (builder) { return builder.fields || []; })),\n\t          methods: (_b = []).concat.apply(_b, builders.map(function (builder) { return builder.methods || []; })),\n\t          getters: (_c = []).concat.apply(_c, builders.map(function (builder) { return builder.getters || []; })),\n\t          ctorStmts: (_d = []).concat.apply(_d, builders.map(function (builder) { return builder.ctorStmts || []; })),\n\t      };\n\t      var _a, _b, _c, _d;\n\t  }\n\t\n\t  var DirectiveWrapperCompileResult = (function () {\n\t      function DirectiveWrapperCompileResult(statements, dirWrapperClassVar) {\n\t          this.statements = statements;\n\t          this.dirWrapperClassVar = dirWrapperClassVar;\n\t      }\n\t      return DirectiveWrapperCompileResult;\n\t  }());\n\t  var CONTEXT_FIELD_NAME = 'context';\n\t  var CHANGES_FIELD_NAME = '_changes';\n\t  var CHANGED_FIELD_NAME = '_changed';\n\t  var EVENT_HANDLER_FIELD_NAME = '_eventHandler';\n\t  var CURR_VALUE_VAR = variable('currValue');\n\t  var THROW_ON_CHANGE_VAR = variable('throwOnChange');\n\t  var FORCE_UPDATE_VAR = variable('forceUpdate');\n\t  var VIEW_VAR = variable('view');\n\t  var COMPONENT_VIEW_VAR = variable('componentView');\n\t  var RENDER_EL_VAR = variable('el');\n\t  var EVENT_NAME_VAR = variable('eventName');\n\t  var RESET_CHANGES_STMT = THIS_EXPR.prop(CHANGES_FIELD_NAME).set(literalMap([])).toStmt();\n\t  /**\n\t   * We generate directive wrappers to prevent code bloat when a directive is used.\n\t   * A directive wrapper encapsulates\n\t   * the dirty checking for `@Input`, the handling of `@HostListener` / `@HostBinding`\n\t   * and calling the lifecyclehooks `ngOnInit`, `ngOnChanges`, `ngDoCheck`.\n\t   *\n\t   * So far, only `@Input` and the lifecycle hooks have been implemented.\n\t   */\n\t  var DirectiveWrapperCompiler = (function () {\n\t      function DirectiveWrapperCompiler(compilerConfig, _exprParser, _schemaRegistry, _console) {\n\t          this.compilerConfig = compilerConfig;\n\t          this._exprParser = _exprParser;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._console = _console;\n\t      }\n\t      DirectiveWrapperCompiler.dirWrapperClassName = function (id) { return \"Wrapper_\" + id.name; };\n\t      DirectiveWrapperCompiler.prototype.compile = function (dirMeta) {\n\t          var hostParseResult = parseHostBindings(dirMeta, this._exprParser, this._schemaRegistry);\n\t          reportParseErrors(hostParseResult.errors, this._console);\n\t          var builder = new DirectiveWrapperBuilder(this.compilerConfig, dirMeta);\n\t          Object.keys(dirMeta.inputs).forEach(function (inputFieldName) {\n\t              addCheckInputMethod(inputFieldName, builder);\n\t          });\n\t          addNgDoCheckMethod(builder);\n\t          addCheckHostMethod(hostParseResult.hostProps, builder);\n\t          addHandleEventMethod(hostParseResult.hostListeners, builder);\n\t          addSubscribeMethod(dirMeta, builder);\n\t          var classStmt = builder.build();\n\t          return new DirectiveWrapperCompileResult([classStmt], classStmt.name);\n\t      };\n\t      DirectiveWrapperCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      DirectiveWrapperCompiler.ctorParameters = [\n\t          { type: CompilerConfig, },\n\t          { type: Parser, },\n\t          { type: ElementSchemaRegistry, },\n\t          { type: Console, },\n\t      ];\n\t      return DirectiveWrapperCompiler;\n\t  }());\n\t  var DirectiveWrapperBuilder = (function () {\n\t      function DirectiveWrapperBuilder(compilerConfig, dirMeta) {\n\t          this.compilerConfig = compilerConfig;\n\t          this.dirMeta = dirMeta;\n\t          this.fields = [];\n\t          this.getters = [];\n\t          this.methods = [];\n\t          this.ctorStmts = [];\n\t          this.detachStmts = [];\n\t          this.destroyStmts = [];\n\t          var dirLifecycleHooks = dirMeta.type.lifecycleHooks;\n\t          this.genChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1 ||\n\t              this.compilerConfig.logBindingUpdate;\n\t          this.ngOnChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1;\n\t          this.ngOnInit = dirLifecycleHooks.indexOf(LifecycleHooks.OnInit) !== -1;\n\t          this.ngDoCheck = dirLifecycleHooks.indexOf(LifecycleHooks.DoCheck) !== -1;\n\t          this.ngOnDestroy = dirLifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1;\n\t          if (this.ngOnDestroy) {\n\t              this.destroyStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnDestroy', []).toStmt());\n\t          }\n\t      }\n\t      DirectiveWrapperBuilder.prototype.build = function () {\n\t          var dirDepParamNames = [];\n\t          for (var i = 0; i < this.dirMeta.type.diDeps.length; i++) {\n\t              dirDepParamNames.push(\"p\" + i);\n\t          }\n\t          var methods = [\n\t              new ClassMethod('ngOnDetach', [\n\t                  new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t                  new FnParam(COMPONENT_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t                  new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n\t              ], this.detachStmts),\n\t              new ClassMethod('ngOnDestroy', [], this.destroyStmts),\n\t          ];\n\t          var fields = [\n\t              new ClassField(EVENT_HANDLER_FIELD_NAME, FUNCTION_TYPE, [StmtModifier.Private]),\n\t              new ClassField(CONTEXT_FIELD_NAME, importType(this.dirMeta.type)),\n\t              new ClassField(CHANGED_FIELD_NAME, BOOL_TYPE, [StmtModifier.Private]),\n\t          ];\n\t          var ctorStmts = [THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt()];\n\t          if (this.genChanges) {\n\t              fields.push(new ClassField(CHANGES_FIELD_NAME, new MapType(DYNAMIC_TYPE), [StmtModifier.Private]));\n\t              ctorStmts.push(RESET_CHANGES_STMT);\n\t          }\n\t          ctorStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n\t              .set(importExpr(this.dirMeta.type)\n\t              .instantiate(dirDepParamNames.map(function (paramName) { return variable(paramName); })))\n\t              .toStmt());\n\t          return createClassStmt({\n\t              name: DirectiveWrapperCompiler.dirWrapperClassName(this.dirMeta.type),\n\t              ctorParams: dirDepParamNames.map(function (paramName) { return new FnParam(paramName, DYNAMIC_TYPE); }),\n\t              builders: [{ fields: fields, ctorStmts: ctorStmts, methods: methods }, this]\n\t          });\n\t      };\n\t      return DirectiveWrapperBuilder;\n\t  }());\n\t  function addNgDoCheckMethod(builder) {\n\t      var changedVar = variable('changed');\n\t      var stmts = [\n\t          changedVar.set(THIS_EXPR.prop(CHANGED_FIELD_NAME)).toDeclStmt(),\n\t          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt(),\n\t      ];\n\t      var lifecycleStmts = [];\n\t      if (builder.genChanges) {\n\t          var onChangesStmts = [];\n\t          if (builder.ngOnChanges) {\n\t              onChangesStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n\t                  .callMethod('ngOnChanges', [THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n\t                  .toStmt());\n\t          }\n\t          if (builder.compilerConfig.logBindingUpdate) {\n\t              onChangesStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfoForChanges))\n\t                  .callFn([VIEW_VAR.prop('renderer'), RENDER_EL_VAR, THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n\t                  .toStmt());\n\t          }\n\t          onChangesStmts.push(RESET_CHANGES_STMT);\n\t          lifecycleStmts.push(new IfStmt(changedVar, onChangesStmts));\n\t      }\n\t      if (builder.ngOnInit) {\n\t          lifecycleStmts.push(new IfStmt(VIEW_VAR.prop('numberOfChecks').identical(new LiteralExpr(0)), [THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnInit', []).toStmt()]));\n\t      }\n\t      if (builder.ngDoCheck) {\n\t          lifecycleStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngDoCheck', []).toStmt());\n\t      }\n\t      if (lifecycleStmts.length > 0) {\n\t          stmts.push(new IfStmt(not(THROW_ON_CHANGE_VAR), lifecycleStmts));\n\t      }\n\t      stmts.push(new ReturnStatement(changedVar));\n\t      builder.methods.push(new ClassMethod('ngDoCheck', [\n\t          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n\t          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n\t      ], stmts, BOOL_TYPE));\n\t  }\n\t  function addCheckInputMethod(input, builder) {\n\t      var field = createCheckBindingField(builder);\n\t      var onChangeStatements = [\n\t          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(true)).toStmt(),\n\t          THIS_EXPR.prop(CONTEXT_FIELD_NAME).prop(input).set(CURR_VALUE_VAR).toStmt(),\n\t      ];\n\t      if (builder.genChanges) {\n\t          onChangeStatements.push(THIS_EXPR.prop(CHANGES_FIELD_NAME)\n\t              .key(literal(input))\n\t              .set(importExpr(resolveIdentifier(Identifiers.SimpleChange))\n\t              .instantiate([field.expression, CURR_VALUE_VAR]))\n\t              .toStmt());\n\t      }\n\t      var methodBody = createCheckBindingStmt({ currValExpr: CURR_VALUE_VAR, forceUpdate: FORCE_UPDATE_VAR, stmts: [] }, field.expression, THROW_ON_CHANGE_VAR, onChangeStatements);\n\t      builder.methods.push(new ClassMethod(\"check_\" + input, [\n\t          new FnParam(CURR_VALUE_VAR.name, DYNAMIC_TYPE),\n\t          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n\t          new FnParam(FORCE_UPDATE_VAR.name, BOOL_TYPE),\n\t      ], methodBody));\n\t  }\n\t  function addCheckHostMethod(hostProps, builder) {\n\t      var stmts = [];\n\t      var methodParams = [\n\t          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t          new FnParam(COMPONENT_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n\t          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n\t      ];\n\t      hostProps.forEach(function (hostProp, hostPropIdx) {\n\t          var field = createCheckBindingField(builder);\n\t          var evalResult = convertPropertyBinding(builder, null, THIS_EXPR.prop(CONTEXT_FIELD_NAME), hostProp.value, field.bindingId);\n\t          if (!evalResult) {\n\t              return;\n\t          }\n\t          var securityContextExpr;\n\t          if (hostProp.needsRuntimeSecurityContext) {\n\t              securityContextExpr = variable(\"secCtx_\" + methodParams.length);\n\t              methodParams.push(new FnParam(securityContextExpr.name, importType(resolveIdentifier(Identifiers.SecurityContext))));\n\t          }\n\t          var checkBindingStmts;\n\t          if (hostProp.isAnimation) {\n\t              var _a = triggerAnimation(VIEW_VAR, COMPONENT_VIEW_VAR, hostProp, THIS_EXPR.prop(EVENT_HANDLER_FIELD_NAME)\n\t                  .or(importExpr(resolveIdentifier(Identifiers.noop))), RENDER_EL_VAR, evalResult.currValExpr, field.expression), updateStmts = _a.updateStmts, detachStmts = _a.detachStmts;\n\t              checkBindingStmts = updateStmts;\n\t              (_b = builder.detachStmts).push.apply(_b, detachStmts);\n\t          }\n\t          else {\n\t              checkBindingStmts = writeToRenderer(VIEW_VAR, hostProp, RENDER_EL_VAR, evalResult.currValExpr, builder.compilerConfig.logBindingUpdate, securityContextExpr);\n\t          }\n\t          stmts.push.apply(stmts, createCheckBindingStmt(evalResult, field.expression, THROW_ON_CHANGE_VAR, checkBindingStmts));\n\t          var _b;\n\t      });\n\t      builder.methods.push(new ClassMethod('checkHost', methodParams, stmts));\n\t  }\n\t  function addHandleEventMethod(hostListeners, builder) {\n\t      var resultVar = variable(\"result\");\n\t      var actionStmts = [resultVar.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n\t      hostListeners.forEach(function (hostListener, eventIdx) {\n\t          var evalResult = convertActionBinding(builder, null, THIS_EXPR.prop(CONTEXT_FIELD_NAME), hostListener.handler, \"sub_\" + eventIdx);\n\t          var trueStmts = evalResult.stmts;\n\t          if (evalResult.preventDefault) {\n\t              trueStmts.push(resultVar.set(evalResult.preventDefault.and(resultVar)).toStmt());\n\t          }\n\t          // TODO(tbosch): convert this into a `switch` once our OutputAst supports it.\n\t          actionStmts.push(new IfStmt(EVENT_NAME_VAR.equals(literal(hostListener.fullName)), trueStmts));\n\t      });\n\t      actionStmts.push(new ReturnStatement(resultVar));\n\t      builder.methods.push(new ClassMethod('handleEvent', [\n\t          new FnParam(EVENT_NAME_VAR.name, STRING_TYPE),\n\t          new FnParam(EventHandlerVars.event.name, DYNAMIC_TYPE)\n\t      ], actionStmts, BOOL_TYPE));\n\t  }\n\t  function addSubscribeMethod(dirMeta, builder) {\n\t      var methodParams = [\n\t          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t          new FnParam(EVENT_HANDLER_FIELD_NAME, DYNAMIC_TYPE)\n\t      ];\n\t      var stmts = [\n\t          THIS_EXPR.prop(EVENT_HANDLER_FIELD_NAME).set(variable(EVENT_HANDLER_FIELD_NAME)).toStmt()\n\t      ];\n\t      Object.keys(dirMeta.outputs).forEach(function (emitterPropName, emitterIdx) {\n\t          var eventName = dirMeta.outputs[emitterPropName];\n\t          var paramName = \"emit\" + emitterIdx;\n\t          methodParams.push(new FnParam(paramName, BOOL_TYPE));\n\t          var subscriptionFieldName = \"subscription\" + emitterIdx;\n\t          builder.fields.push(new ClassField(subscriptionFieldName, DYNAMIC_TYPE));\n\t          stmts.push(new IfStmt(variable(paramName), [\n\t              THIS_EXPR.prop(subscriptionFieldName)\n\t                  .set(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n\t                  .prop(emitterPropName)\n\t                  .callMethod(BuiltinMethod.SubscribeObservable, [variable(EVENT_HANDLER_FIELD_NAME)\n\t                      .callMethod(BuiltinMethod.Bind, [VIEW_VAR, literal(eventName)])]))\n\t                  .toStmt()\n\t          ]));\n\t          builder.destroyStmts.push(THIS_EXPR.prop(subscriptionFieldName)\n\t              .and(THIS_EXPR.prop(subscriptionFieldName).callMethod('unsubscribe', []))\n\t              .toStmt());\n\t      });\n\t      builder.methods.push(new ClassMethod('subscribe', methodParams, stmts));\n\t  }\n\t  var ParseResult = (function () {\n\t      function ParseResult(hostProps, hostListeners, errors) {\n\t          this.hostProps = hostProps;\n\t          this.hostListeners = hostListeners;\n\t          this.errors = errors;\n\t      }\n\t      return ParseResult;\n\t  }());\n\t  function parseHostBindings(dirMeta, exprParser, schemaRegistry) {\n\t      var errors = [];\n\t      var parser = new BindingParser(exprParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n\t      var sourceFileName = dirMeta.type.moduleUrl ?\n\t          \"in Directive \" + dirMeta.type.name + \" in \" + dirMeta.type.moduleUrl :\n\t          \"in Directive \" + dirMeta.type.name;\n\t      var sourceFile = new ParseSourceFile('', sourceFileName);\n\t      var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n\t      var parsedHostProps = parser.createDirectiveHostPropertyAsts(dirMeta.toSummary(), sourceSpan);\n\t      var parsedHostListeners = parser.createDirectiveHostEventAsts(dirMeta.toSummary(), sourceSpan);\n\t      return new ParseResult(parsedHostProps, parsedHostListeners, errors);\n\t  }\n\t  function reportParseErrors(parseErrors, console) {\n\t      var warnings = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n\t      var errors = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n\t      if (warnings.length > 0) {\n\t          this._console.warn(\"Directive parse warnings:\\n\" + warnings.join('\\n'));\n\t      }\n\t      if (errors.length > 0) {\n\t          throw new Error(\"Directive parse errors:\\n\" + errors.join('\\n'));\n\t      }\n\t  }\n\t  var DirectiveWrapperExpressions = (function () {\n\t      function DirectiveWrapperExpressions() {\n\t      }\n\t      DirectiveWrapperExpressions.create = function (dir, depsExpr) {\n\t          return importExpr(dir).instantiate(depsExpr, importType(dir));\n\t      };\n\t      DirectiveWrapperExpressions.context = function (dirWrapper) {\n\t          return dirWrapper.prop(CONTEXT_FIELD_NAME);\n\t      };\n\t      DirectiveWrapperExpressions.ngDoCheck = function (dirWrapper, view, renderElement, throwOnChange) {\n\t          return dirWrapper.callMethod('ngDoCheck', [view, renderElement, throwOnChange]);\n\t      };\n\t      DirectiveWrapperExpressions.checkHost = function (hostProps, dirWrapper, view, componentView, renderElement, throwOnChange, runtimeSecurityContexts) {\n\t          if (hostProps.length) {\n\t              return [dirWrapper\n\t                      .callMethod('checkHost', [view, componentView, renderElement, throwOnChange].concat(runtimeSecurityContexts))\n\t                      .toStmt()];\n\t          }\n\t          else {\n\t              return [];\n\t          }\n\t      };\n\t      DirectiveWrapperExpressions.ngOnDetach = function (hostProps, dirWrapper, view, componentView, renderEl) {\n\t          if (hostProps.some(function (prop) { return prop.isAnimation; })) {\n\t              return [dirWrapper\n\t                      .callMethod('ngOnDetach', [\n\t                      view,\n\t                      componentView,\n\t                      renderEl,\n\t                  ])\n\t                      .toStmt()];\n\t          }\n\t          else {\n\t              return [];\n\t          }\n\t      };\n\t      DirectiveWrapperExpressions.ngOnDestroy = function (dir, dirWrapper) {\n\t          if (dir.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1 ||\n\t              Object.keys(dir.outputs).length > 0) {\n\t              return [dirWrapper.callMethod('ngOnDestroy', []).toStmt()];\n\t          }\n\t          else {\n\t              return [];\n\t          }\n\t      };\n\t      DirectiveWrapperExpressions.subscribe = function (dirMeta, hostProps, usedEvents, dirWrapper, view, eventListener) {\n\t          var needsSubscribe = false;\n\t          var eventFlags = [];\n\t          Object.keys(dirMeta.outputs).forEach(function (propName) {\n\t              var eventName = dirMeta.outputs[propName];\n\t              var eventUsed = usedEvents.indexOf(eventName) > -1;\n\t              needsSubscribe = needsSubscribe || eventUsed;\n\t              eventFlags.push(literal(eventUsed));\n\t          });\n\t          hostProps.forEach(function (hostProp) {\n\t              if (hostProp.isAnimation && usedEvents.length > 0) {\n\t                  needsSubscribe = true;\n\t              }\n\t          });\n\t          if (needsSubscribe) {\n\t              return [\n\t                  dirWrapper.callMethod('subscribe', [view, eventListener].concat(eventFlags)).toStmt()\n\t              ];\n\t          }\n\t          else {\n\t              return [];\n\t          }\n\t      };\n\t      DirectiveWrapperExpressions.handleEvent = function (hostEvents, dirWrapper, eventName, event) {\n\t          return dirWrapper.callMethod('handleEvent', [eventName, event]);\n\t      };\n\t      return DirectiveWrapperExpressions;\n\t  }());\n\t\n\t  function convertValueToOutputAst(value, type) {\n\t      if (type === void 0) { type = null; }\n\t      return visitValue(value, new _ValueOutputAstTransformer(), type);\n\t  }\n\t  var _ValueOutputAstTransformer = (function () {\n\t      function _ValueOutputAstTransformer() {\n\t      }\n\t      _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n\t          var _this = this;\n\t          return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n\t      };\n\t      _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n\t          var _this = this;\n\t          var entries = [];\n\t          Object.keys(map).forEach(function (key) { entries.push([key, visitValue(map[key], _this, null)]); });\n\t          return literalMap(entries, type);\n\t      };\n\t      _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n\t      _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n\t          if (value instanceof CompileIdentifierMetadata) {\n\t              return importExpr(value);\n\t          }\n\t          else if (value instanceof Expression) {\n\t              return value;\n\t          }\n\t          else {\n\t              throw new Error(\"Illegal state: Don't now how to compile value \" + value);\n\t          }\n\t      };\n\t      return _ValueOutputAstTransformer;\n\t  }());\n\t\n\t  var _DebugState = (function () {\n\t      function _DebugState(nodeIndex, sourceAst) {\n\t          this.nodeIndex = nodeIndex;\n\t          this.sourceAst = sourceAst;\n\t      }\n\t      return _DebugState;\n\t  }());\n\t  var NULL_DEBUG_STATE = new _DebugState(null, null);\n\t  var CompileMethod = (function () {\n\t      function CompileMethod(_view) {\n\t          this._view = _view;\n\t          this._newState = NULL_DEBUG_STATE;\n\t          this._currState = NULL_DEBUG_STATE;\n\t          this._bodyStatements = [];\n\t          this._debugEnabled = this._view.genConfig.genDebugInfo;\n\t      }\n\t      CompileMethod.prototype._updateDebugContextIfNeeded = function () {\n\t          if (this._newState.nodeIndex !== this._currState.nodeIndex ||\n\t              this._newState.sourceAst !== this._currState.sourceAst) {\n\t              var expr = this._updateDebugContext(this._newState);\n\t              if (isPresent(expr)) {\n\t                  this._bodyStatements.push(expr.toStmt());\n\t              }\n\t          }\n\t      };\n\t      CompileMethod.prototype._updateDebugContext = function (newState) {\n\t          this._currState = this._newState = newState;\n\t          if (this._debugEnabled) {\n\t              var sourceLocation = isPresent(newState.sourceAst) ? newState.sourceAst.sourceSpan.start : null;\n\t              return THIS_EXPR.callMethod('debug', [\n\t                  literal(newState.nodeIndex),\n\t                  isPresent(sourceLocation) ? literal(sourceLocation.line) : NULL_EXPR,\n\t                  isPresent(sourceLocation) ? literal(sourceLocation.col) : NULL_EXPR\n\t              ]);\n\t          }\n\t          else {\n\t              return null;\n\t          }\n\t      };\n\t      CompileMethod.prototype.resetDebugInfoExpr = function (nodeIndex, templateAst) {\n\t          var res = this._updateDebugContext(new _DebugState(nodeIndex, templateAst));\n\t          return res || NULL_EXPR;\n\t      };\n\t      CompileMethod.prototype.resetDebugInfo = function (nodeIndex, templateAst) {\n\t          this._newState = new _DebugState(nodeIndex, templateAst);\n\t      };\n\t      CompileMethod.prototype.push = function () {\n\t          var stmts = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              stmts[_i - 0] = arguments[_i];\n\t          }\n\t          this.addStmts(stmts);\n\t      };\n\t      CompileMethod.prototype.addStmt = function (stmt) {\n\t          this._updateDebugContextIfNeeded();\n\t          this._bodyStatements.push(stmt);\n\t      };\n\t      CompileMethod.prototype.addStmts = function (stmts) {\n\t          this._updateDebugContextIfNeeded();\n\t          (_a = this._bodyStatements).push.apply(_a, stmts);\n\t          var _a;\n\t      };\n\t      CompileMethod.prototype.finish = function () { return this._bodyStatements; };\n\t      CompileMethod.prototype.isEmpty = function () { return this._bodyStatements.length === 0; };\n\t      return CompileMethod;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$15 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  function getPropertyInView(property, callingView, definedView) {\n\t      if (callingView === definedView) {\n\t          return property;\n\t      }\n\t      else {\n\t          var viewProp = THIS_EXPR;\n\t          var currView = callingView;\n\t          while (currView !== definedView && isPresent(currView.declarationElement.view)) {\n\t              currView = currView.declarationElement.view;\n\t              viewProp = viewProp.prop('parentView');\n\t          }\n\t          if (currView !== definedView) {\n\t              throw new Error(\"Internal error: Could not calculate a property in a parent view: \" + property);\n\t          }\n\t          return property.visitExpression(new _ReplaceViewTransformer(viewProp, definedView), null);\n\t      }\n\t  }\n\t  var _ReplaceViewTransformer = (function (_super) {\n\t      __extends$15(_ReplaceViewTransformer, _super);\n\t      function _ReplaceViewTransformer(_viewExpr, _view) {\n\t          _super.call(this);\n\t          this._viewExpr = _viewExpr;\n\t          this._view = _view;\n\t      }\n\t      _ReplaceViewTransformer.prototype._isThis = function (expr) {\n\t          return expr instanceof ReadVarExpr && expr.builtin === BuiltinVar.This;\n\t      };\n\t      _ReplaceViewTransformer.prototype.visitReadVarExpr = function (ast, context) {\n\t          return this._isThis(ast) ? this._viewExpr : ast;\n\t      };\n\t      _ReplaceViewTransformer.prototype.visitReadPropExpr = function (ast, context) {\n\t          if (this._isThis(ast.receiver)) {\n\t              // Note: Don't cast for members of the AppView base class...\n\t              if (this._view.fields.some(function (field) { return field.name == ast.name; }) ||\n\t                  this._view.getters.some(function (field) { return field.name == ast.name; })) {\n\t                  return this._viewExpr.cast(this._view.classType).prop(ast.name);\n\t              }\n\t          }\n\t          return _super.prototype.visitReadPropExpr.call(this, ast, context);\n\t      };\n\t      return _ReplaceViewTransformer;\n\t  }(ExpressionTransformer));\n\t  function injectFromViewParentInjector(view, token, optional) {\n\t      var viewExpr;\n\t      if (view.viewType === ViewType.HOST) {\n\t          viewExpr = THIS_EXPR;\n\t      }\n\t      else {\n\t          viewExpr = THIS_EXPR.prop('parentView');\n\t      }\n\t      var args = [createDiTokenExpression(token), THIS_EXPR.prop('parentIndex')];\n\t      if (optional) {\n\t          args.push(NULL_EXPR);\n\t      }\n\t      return viewExpr.callMethod('injectorGet', args);\n\t  }\n\t  function getViewClassName(component, embeddedTemplateIndex) {\n\t      return \"View_\" + component.type.name + embeddedTemplateIndex;\n\t  }\n\t  function getHandleEventMethodName(elementIndex) {\n\t      return \"handleEvent_\" + elementIndex;\n\t  }\n\t\n\t  var ViewQueryValues = (function () {\n\t      function ViewQueryValues(view, values) {\n\t          this.view = view;\n\t          this.values = values;\n\t      }\n\t      return ViewQueryValues;\n\t  }());\n\t  var CompileQuery = (function () {\n\t      function CompileQuery(meta, queryList, ownerDirectiveExpression, view) {\n\t          this.meta = meta;\n\t          this.queryList = queryList;\n\t          this.ownerDirectiveExpression = ownerDirectiveExpression;\n\t          this.view = view;\n\t          this._values = new ViewQueryValues(view, []);\n\t      }\n\t      CompileQuery.prototype.addValue = function (value, view) {\n\t          var currentView = view;\n\t          var elPath = [];\n\t          while (isPresent(currentView) && currentView !== this.view) {\n\t              var parentEl = currentView.declarationElement;\n\t              elPath.unshift(parentEl);\n\t              currentView = parentEl.view;\n\t          }\n\t          var queryListForDirtyExpr = getPropertyInView(this.queryList, view, this.view);\n\t          var viewValues = this._values;\n\t          elPath.forEach(function (el) {\n\t              var last = viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;\n\t              if (last instanceof ViewQueryValues && last.view === el.embeddedView) {\n\t                  viewValues = last;\n\t              }\n\t              else {\n\t                  var newViewValues = new ViewQueryValues(el.embeddedView, []);\n\t                  viewValues.values.push(newViewValues);\n\t                  viewValues = newViewValues;\n\t              }\n\t          });\n\t          viewValues.values.push(value);\n\t          if (elPath.length > 0) {\n\t              view.dirtyParentQueriesMethod.addStmt(queryListForDirtyExpr.callMethod('setDirty', []).toStmt());\n\t          }\n\t      };\n\t      CompileQuery.prototype._isStatic = function () {\n\t          return !this._values.values.some(function (value) { return value instanceof ViewQueryValues; });\n\t      };\n\t      CompileQuery.prototype.afterChildren = function (targetStaticMethod, targetDynamicMethod) {\n\t          var values = createQueryValues(this._values);\n\t          var updateStmts = [this.queryList.callMethod('reset', [literalArr(values)]).toStmt()];\n\t          if (isPresent(this.ownerDirectiveExpression)) {\n\t              var valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;\n\t              updateStmts.push(this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());\n\t          }\n\t          if (!this.meta.first) {\n\t              updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());\n\t          }\n\t          if (this.meta.first && this._isStatic()) {\n\t              // for queries that don't change and the user asked for a single element,\n\t              // set it immediately. That is e.g. needed for querying for ViewContainerRefs, ...\n\t              // we don't do this for QueryLists for now as this would break the timing when\n\t              // we call QueryList listeners...\n\t              targetStaticMethod.addStmts(updateStmts);\n\t          }\n\t          else {\n\t              targetDynamicMethod.addStmt(new IfStmt(this.queryList.prop('dirty'), updateStmts));\n\t          }\n\t      };\n\t      return CompileQuery;\n\t  }());\n\t  function createQueryValues(viewValues) {\n\t      return ListWrapper.flatten(viewValues.values.map(function (entry) {\n\t          if (entry instanceof ViewQueryValues) {\n\t              return mapNestedViews(entry.view.declarationElement.viewContainer, entry.view, createQueryValues(entry));\n\t          }\n\t          else {\n\t              return entry;\n\t          }\n\t      }));\n\t  }\n\t  function mapNestedViews(viewContainer, view, expressions) {\n\t      var adjustedExpressions = expressions.map(function (expr) { return replaceVarInExpression(THIS_EXPR.name, variable('nestedView'), expr); });\n\t      return viewContainer.callMethod('mapNestedViews', [\n\t          variable(view.className),\n\t          fn([new FnParam('nestedView', view.classType)], [new ReturnStatement(literalArr(adjustedExpressions))], DYNAMIC_TYPE)\n\t      ]);\n\t  }\n\t  function createQueryList(query, directiveInstance, propertyName, compileView) {\n\t      compileView.fields.push(new ClassField(propertyName, importType(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])));\n\t      var expr = THIS_EXPR.prop(propertyName);\n\t      compileView.createMethod.addStmt(THIS_EXPR.prop(propertyName)\n\t          .set(importExpr(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])\n\t          .instantiate([]))\n\t          .toStmt());\n\t      return expr;\n\t  }\n\t  function addQueryToTokenMap(map, query) {\n\t      query.meta.selectors.forEach(function (selector) {\n\t          var entry = map.get(selector.reference);\n\t          if (!entry) {\n\t              entry = [];\n\t              map.set(selector.reference, entry);\n\t          }\n\t          entry.push(query);\n\t      });\n\t  }\n\t\n\t  var ViewTypeEnum = (function () {\n\t      function ViewTypeEnum() {\n\t      }\n\t      ViewTypeEnum.fromValue = function (value) {\n\t          return createEnumExpression(Identifiers.ViewType, value);\n\t      };\n\t      return ViewTypeEnum;\n\t  }());\n\t  var ViewEncapsulationEnum = (function () {\n\t      function ViewEncapsulationEnum() {\n\t      }\n\t      ViewEncapsulationEnum.fromValue = function (value) {\n\t          return createEnumExpression(Identifiers.ViewEncapsulation, value);\n\t      };\n\t      return ViewEncapsulationEnum;\n\t  }());\n\t  var ChangeDetectorStatusEnum = (function () {\n\t      function ChangeDetectorStatusEnum() {\n\t      }\n\t      ChangeDetectorStatusEnum.fromValue = function (value) {\n\t          return createEnumExpression(Identifiers.ChangeDetectorStatus, value);\n\t      };\n\t      return ChangeDetectorStatusEnum;\n\t  }());\n\t  var ViewConstructorVars = (function () {\n\t      function ViewConstructorVars() {\n\t      }\n\t      ViewConstructorVars.viewUtils = variable('viewUtils');\n\t      ViewConstructorVars.parentView = variable('parentView');\n\t      ViewConstructorVars.parentIndex = variable('parentIndex');\n\t      ViewConstructorVars.parentElement = variable('parentElement');\n\t      return ViewConstructorVars;\n\t  }());\n\t  var ViewProperties = (function () {\n\t      function ViewProperties() {\n\t      }\n\t      ViewProperties.renderer = THIS_EXPR.prop('renderer');\n\t      ViewProperties.viewUtils = THIS_EXPR.prop('viewUtils');\n\t      return ViewProperties;\n\t  }());\n\t  var InjectMethodVars = (function () {\n\t      function InjectMethodVars() {\n\t      }\n\t      InjectMethodVars.token = variable('token');\n\t      InjectMethodVars.requestNodeIndex = variable('requestNodeIndex');\n\t      InjectMethodVars.notFoundResult = variable('notFoundResult');\n\t      return InjectMethodVars;\n\t  }());\n\t  var DetectChangesVars = (function () {\n\t      function DetectChangesVars() {\n\t      }\n\t      DetectChangesVars.throwOnChange = variable(\"throwOnChange\");\n\t      DetectChangesVars.changes = variable(\"changes\");\n\t      DetectChangesVars.changed = variable(\"changed\");\n\t      return DetectChangesVars;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var ViewClassDependency = (function () {\n\t      function ViewClassDependency(comp, placeholder) {\n\t          this.comp = comp;\n\t          this.placeholder = placeholder;\n\t      }\n\t      return ViewClassDependency;\n\t  }());\n\t  var ComponentFactoryDependency = (function () {\n\t      function ComponentFactoryDependency(comp, placeholder) {\n\t          this.comp = comp;\n\t          this.placeholder = placeholder;\n\t      }\n\t      return ComponentFactoryDependency;\n\t  }());\n\t  var DirectiveWrapperDependency = (function () {\n\t      function DirectiveWrapperDependency(dir, placeholder) {\n\t          this.dir = dir;\n\t          this.placeholder = placeholder;\n\t      }\n\t      return DirectiveWrapperDependency;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$14 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var CompileNode = (function () {\n\t      function CompileNode(parent, view, nodeIndex, renderNode, sourceAst) {\n\t          this.parent = parent;\n\t          this.view = view;\n\t          this.nodeIndex = nodeIndex;\n\t          this.renderNode = renderNode;\n\t          this.sourceAst = sourceAst;\n\t      }\n\t      CompileNode.prototype.isNull = function () { return !this.renderNode; };\n\t      CompileNode.prototype.isRootElement = function () { return this.view != this.parent.view; };\n\t      return CompileNode;\n\t  }());\n\t  var CompileElement = (function (_super) {\n\t      __extends$14(CompileElement, _super);\n\t      function CompileElement(parent, view, nodeIndex, renderNode, sourceAst, component, _directives, _resolvedProvidersArray, hasViewContainer, hasEmbeddedView, references, _targetDependencies) {\n\t          var _this = this;\n\t          _super.call(this, parent, view, nodeIndex, renderNode, sourceAst);\n\t          this.component = component;\n\t          this._directives = _directives;\n\t          this._resolvedProvidersArray = _resolvedProvidersArray;\n\t          this.hasViewContainer = hasViewContainer;\n\t          this.hasEmbeddedView = hasEmbeddedView;\n\t          this._targetDependencies = _targetDependencies;\n\t          this.compViewExpr = null;\n\t          this.instances = new Map();\n\t          this.directiveWrapperInstance = new Map();\n\t          this._queryCount = 0;\n\t          this._queries = new Map();\n\t          this.contentNodesByNgContentIndex = null;\n\t          this.referenceTokens = {};\n\t          references.forEach(function (ref) { return _this.referenceTokens[ref.name] = ref.value; });\n\t          this.elementRef =\n\t              importExpr(resolveIdentifier(Identifiers.ElementRef)).instantiate([this.renderNode]);\n\t          this.instances.set(resolveIdentifierToken(Identifiers.ElementRef).reference, this.elementRef);\n\t          this.instances.set(resolveIdentifierToken(Identifiers.Injector).reference, THIS_EXPR.callMethod('injector', [literal(this.nodeIndex)]));\n\t          this.instances.set(resolveIdentifierToken(Identifiers.Renderer).reference, THIS_EXPR.prop('renderer'));\n\t          if (this.hasViewContainer || this.hasEmbeddedView) {\n\t              this._createViewContainer();\n\t          }\n\t          if (this.component) {\n\t              this._createComponentFactoryResolver();\n\t          }\n\t      }\n\t      CompileElement.createNull = function () {\n\t          return new CompileElement(null, null, null, null, null, null, [], [], false, false, [], []);\n\t      };\n\t      CompileElement.prototype._createViewContainer = function () {\n\t          var fieldName = \"_vc_\" + this.nodeIndex;\n\t          var parentNodeIndex = this.isRootElement() ? null : this.parent.nodeIndex;\n\t          // private is fine here as no child view will reference a ViewContainer\n\t          this.view.fields.push(new ClassField(fieldName, importType(resolveIdentifier(Identifiers.ViewContainer)), [StmtModifier.Private]));\n\t          var statement = THIS_EXPR.prop(fieldName)\n\t              .set(importExpr(resolveIdentifier(Identifiers.ViewContainer)).instantiate([\n\t              literal(this.nodeIndex), literal(parentNodeIndex), THIS_EXPR, this.renderNode\n\t          ]))\n\t              .toStmt();\n\t          this.view.createMethod.addStmt(statement);\n\t          this.viewContainer = THIS_EXPR.prop(fieldName);\n\t          this.instances.set(resolveIdentifierToken(Identifiers.ViewContainer).reference, this.viewContainer);\n\t          this.view.viewContainers.push(this.viewContainer);\n\t      };\n\t      CompileElement.prototype._createComponentFactoryResolver = function () {\n\t          var _this = this;\n\t          var entryComponents = this.component.entryComponents.map(function (entryComponent) {\n\t              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n\t              _this._targetDependencies.push(new ComponentFactoryDependency(entryComponent, id));\n\t              return id;\n\t          });\n\t          if (!entryComponents || entryComponents.length === 0) {\n\t              return;\n\t          }\n\t          var createComponentFactoryResolverExpr = importExpr(resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)).instantiate([\n\t              literalArr(entryComponents.map(function (entryComponent) { return importExpr(entryComponent); })),\n\t              injectFromViewParentInjector(this.view, resolveIdentifierToken(Identifiers.ComponentFactoryResolver), false)\n\t          ]);\n\t          var provider = new CompileProviderMetadata({\n\t              token: resolveIdentifierToken(Identifiers.ComponentFactoryResolver),\n\t              useValue: createComponentFactoryResolverExpr\n\t          });\n\t          // Add ComponentFactoryResolver as first provider as it does not have deps on other providers\n\t          // ProviderAstType.PrivateService as only the component and its view can see it,\n\t          // but nobody else\n\t          this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.PrivateService, [], this.sourceAst.sourceSpan));\n\t      };\n\t      CompileElement.prototype.setComponentView = function (compViewExpr) {\n\t          this.compViewExpr = compViewExpr;\n\t          this.contentNodesByNgContentIndex =\n\t              new Array(this.component.template.ngContentSelectors.length);\n\t          for (var i = 0; i < this.contentNodesByNgContentIndex.length; i++) {\n\t              this.contentNodesByNgContentIndex[i] = [];\n\t          }\n\t      };\n\t      CompileElement.prototype.setEmbeddedView = function (embeddedView) {\n\t          this.embeddedView = embeddedView;\n\t          if (isPresent(embeddedView)) {\n\t              var createTemplateRefExpr = importExpr(resolveIdentifier(Identifiers.TemplateRef_)).instantiate([\n\t                  THIS_EXPR, literal(this.nodeIndex), this.renderNode\n\t              ]);\n\t              var provider = new CompileProviderMetadata({\n\t                  token: resolveIdentifierToken(Identifiers.TemplateRef),\n\t                  useValue: createTemplateRefExpr\n\t              });\n\t              // Add TemplateRef as first provider as it does not have deps on other providers\n\t              this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.Builtin, [], this.sourceAst.sourceSpan));\n\t          }\n\t      };\n\t      CompileElement.prototype.beforeChildren = function () {\n\t          var _this = this;\n\t          if (this.hasViewContainer) {\n\t              this.instances.set(resolveIdentifierToken(Identifiers.ViewContainerRef).reference, this.viewContainer.prop('vcRef'));\n\t          }\n\t          this._resolvedProviders = new Map();\n\t          this._resolvedProvidersArray.forEach(function (provider) { return _this._resolvedProviders.set(provider.token.reference, provider); });\n\t          // create all the provider instances, some in the view constructor,\n\t          // some as getters. We rely on the fact that they are already sorted topologically.\n\t          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n\t              var isDirectiveWrapper = resolvedProvider.providerType === exports.ProviderAstType.Component ||\n\t                  resolvedProvider.providerType === exports.ProviderAstType.Directive;\n\t              var providerValueExpressions = resolvedProvider.providers.map(function (provider) {\n\t                  if (provider.useExisting) {\n\t                      return _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }));\n\t                  }\n\t                  else if (provider.useFactory) {\n\t                      var deps = provider.deps || provider.useFactory.diDeps;\n\t                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n\t                      return importExpr(provider.useFactory).callFn(depsExpr);\n\t                  }\n\t                  else if (provider.useClass) {\n\t                      var deps = provider.deps || provider.useClass.diDeps;\n\t                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n\t                      if (isDirectiveWrapper) {\n\t                          var directiveWrapperIdentifier = new CompileIdentifierMetadata({ name: DirectiveWrapperCompiler.dirWrapperClassName(provider.useClass) });\n\t                          _this._targetDependencies.push(new DirectiveWrapperDependency(provider.useClass, directiveWrapperIdentifier));\n\t                          return DirectiveWrapperExpressions.create(directiveWrapperIdentifier, depsExpr);\n\t                      }\n\t                      else {\n\t                          return importExpr(provider.useClass)\n\t                              .instantiate(depsExpr, importType(provider.useClass));\n\t                      }\n\t                  }\n\t                  else {\n\t                      return convertValueToOutputAst(provider.useValue);\n\t                  }\n\t              });\n\t              var propName = \"_\" + resolvedProvider.token.name + \"_\" + _this.nodeIndex + \"_\" + _this.instances.size;\n\t              var instance = createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager, _this);\n\t              if (isDirectiveWrapper) {\n\t                  _this.directiveWrapperInstance.set(resolvedProvider.token.reference, instance);\n\t                  _this.instances.set(resolvedProvider.token.reference, DirectiveWrapperExpressions.context(instance));\n\t              }\n\t              else {\n\t                  _this.instances.set(resolvedProvider.token.reference, instance);\n\t              }\n\t          });\n\t          var _loop_1 = function(i) {\n\t              var directive = this_1._directives[i];\n\t              var directiveInstance = this_1.instances.get(identifierToken(directive.type).reference);\n\t              directive.queries.forEach(function (queryMeta) { _this._addQuery(queryMeta, directiveInstance); });\n\t          };\n\t          var this_1 = this;\n\t          for (var i = 0; i < this._directives.length; i++) {\n\t              _loop_1(i);\n\t          }\n\t          var queriesWithReads = [];\n\t          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n\t              var queriesForProvider = _this._getQueriesFor(resolvedProvider.token);\n\t              queriesWithReads.push.apply(queriesWithReads, queriesForProvider.map(function (query) { return new _QueryWithRead(query, resolvedProvider.token); }));\n\t          });\n\t          Object.keys(this.referenceTokens).forEach(function (varName) {\n\t              var token = _this.referenceTokens[varName];\n\t              var varValue;\n\t              if (token) {\n\t                  varValue = _this.instances.get(token.reference);\n\t              }\n\t              else {\n\t                  varValue = _this.renderNode;\n\t              }\n\t              _this.view.locals.set(varName, varValue);\n\t              var varToken = new CompileTokenMetadata({ value: varName });\n\t              queriesWithReads.push.apply(queriesWithReads, _this._getQueriesFor(varToken).map(function (query) { return new _QueryWithRead(query, varToken); }));\n\t          });\n\t          queriesWithReads.forEach(function (queryWithRead) {\n\t              var value;\n\t              if (isPresent(queryWithRead.read.identifier)) {\n\t                  // query for an identifier\n\t                  value = _this.instances.get(queryWithRead.read.reference);\n\t              }\n\t              else {\n\t                  // query for a reference\n\t                  var token = _this.referenceTokens[queryWithRead.read.value];\n\t                  if (isPresent(token)) {\n\t                      value = _this.instances.get(token.reference);\n\t                  }\n\t                  else {\n\t                      value = _this.elementRef;\n\t                  }\n\t              }\n\t              if (isPresent(value)) {\n\t                  queryWithRead.query.addValue(value, _this.view);\n\t              }\n\t          });\n\t      };\n\t      CompileElement.prototype.afterChildren = function (childNodeCount) {\n\t          var _this = this;\n\t          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n\t              // Note: afterChildren is called after recursing into children.\n\t              // This is good so that an injector match in an element that is closer to a requesting element\n\t              // matches first.\n\t              var providerExpr = _this.instances.get(resolvedProvider.token.reference);\n\t              // Note: view providers are only visible on the injector of that element.\n\t              // This is not fully correct as the rules during codegen don't allow a directive\n\t              // to get hold of a view provdier on the same element. We still do this semantic\n\t              // as it simplifies our model to having only one runtime injector per element.\n\t              var providerChildNodeCount = resolvedProvider.providerType === exports.ProviderAstType.PrivateService ? 0 : childNodeCount;\n\t              _this.view.injectorGetMethod.addStmt(createInjectInternalCondition(_this.nodeIndex, providerChildNodeCount, resolvedProvider, providerExpr));\n\t          });\n\t          Array.from(this._queries.values())\n\t              .forEach(function (queries) { return queries.forEach(function (q) {\n\t              return q.afterChildren(_this.view.createMethod, _this.view.updateContentQueriesMethod);\n\t          }); });\n\t      };\n\t      CompileElement.prototype.addContentNode = function (ngContentIndex, nodeExpr) {\n\t          this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);\n\t      };\n\t      CompileElement.prototype.getComponent = function () {\n\t          return isPresent(this.component) ?\n\t              this.instances.get(identifierToken(this.component.type).reference) :\n\t              null;\n\t      };\n\t      CompileElement.prototype.getProviderTokens = function () {\n\t          return Array.from(this._resolvedProviders.values())\n\t              .map(function (resolvedProvider) { return createDiTokenExpression(resolvedProvider.token); });\n\t      };\n\t      CompileElement.prototype._getQueriesFor = function (token) {\n\t          var result = [];\n\t          var currentEl = this;\n\t          var distance = 0;\n\t          var queries;\n\t          while (!currentEl.isNull()) {\n\t              queries = currentEl._queries.get(token.reference);\n\t              if (isPresent(queries)) {\n\t                  result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n\t              }\n\t              if (currentEl._directives.length > 0) {\n\t                  distance++;\n\t              }\n\t              currentEl = currentEl.parent;\n\t          }\n\t          queries = this.view.componentView.viewQueries.get(token.reference);\n\t          if (isPresent(queries)) {\n\t              result.push.apply(result, queries);\n\t          }\n\t          return result;\n\t      };\n\t      CompileElement.prototype._addQuery = function (queryMeta, directiveInstance) {\n\t          var propName = \"_query_\" + queryMeta.selectors[0].name + \"_\" + this.nodeIndex + \"_\" + this._queryCount++;\n\t          var queryList = createQueryList(queryMeta, directiveInstance, propName, this.view);\n\t          var query = new CompileQuery(queryMeta, queryList, directiveInstance, this.view);\n\t          addQueryToTokenMap(this._queries, query);\n\t          return query;\n\t      };\n\t      CompileElement.prototype._getLocalDependency = function (requestingProviderType, dep) {\n\t          var result = null;\n\t          if (isPresent(dep.token)) {\n\t              // access builtins with special visibility\n\t              if (!result) {\n\t                  if (dep.token.reference ===\n\t                      resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n\t                      if (requestingProviderType === exports.ProviderAstType.Component) {\n\t                          return this.compViewExpr.prop('ref');\n\t                      }\n\t                      else {\n\t                          return getPropertyInView(THIS_EXPR.prop('ref'), this.view, this.view.componentView);\n\t                      }\n\t                  }\n\t              }\n\t              // access regular providers on the element\n\t              if (!result) {\n\t                  var resolvedProvider = this._resolvedProviders.get(dep.token.reference);\n\t                  // don't allow directives / public services to access private services.\n\t                  // only components and private services can access private services.\n\t                  if (resolvedProvider && (requestingProviderType === exports.ProviderAstType.Directive ||\n\t                      requestingProviderType === exports.ProviderAstType.PublicService) &&\n\t                      resolvedProvider.providerType === exports.ProviderAstType.PrivateService) {\n\t                      return null;\n\t                  }\n\t                  result = this.instances.get(dep.token.reference);\n\t              }\n\t          }\n\t          return result;\n\t      };\n\t      CompileElement.prototype._getDependency = function (requestingProviderType, dep) {\n\t          var currElement = this;\n\t          var result = null;\n\t          if (dep.isValue) {\n\t              result = literal(dep.value);\n\t          }\n\t          if (!result && !dep.isSkipSelf) {\n\t              result = this._getLocalDependency(requestingProviderType, dep);\n\t          }\n\t          // check parent elements\n\t          while (!result && !currElement.parent.isNull()) {\n\t              currElement = currElement.parent;\n\t              result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, new CompileDiDependencyMetadata({ token: dep.token }));\n\t          }\n\t          if (!result) {\n\t              result = injectFromViewParentInjector(this.view, dep.token, dep.isOptional);\n\t          }\n\t          if (!result) {\n\t              result = NULL_EXPR;\n\t          }\n\t          return getPropertyInView(result, this.view, currElement.view);\n\t      };\n\t      return CompileElement;\n\t  }(CompileNode));\n\t  function createInjectInternalCondition(nodeIndex, childNodeCount, provider, providerExpr) {\n\t      var indexCondition;\n\t      if (childNodeCount > 0) {\n\t          indexCondition = literal(nodeIndex)\n\t              .lowerEquals(InjectMethodVars.requestNodeIndex)\n\t              .and(InjectMethodVars.requestNodeIndex.lowerEquals(literal(nodeIndex + childNodeCount)));\n\t      }\n\t      else {\n\t          indexCondition = literal(nodeIndex).identical(InjectMethodVars.requestNodeIndex);\n\t      }\n\t      return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(provider.token)).and(indexCondition), [new ReturnStatement(providerExpr)]);\n\t  }\n\t  function createProviderProperty(propName, provider, providerValueExpressions, isMulti, isEager, compileElement) {\n\t      var view = compileElement.view;\n\t      var resolvedProviderValueExpr;\n\t      var type;\n\t      if (isMulti) {\n\t          resolvedProviderValueExpr = literalArr(providerValueExpressions);\n\t          type = new ArrayType(DYNAMIC_TYPE);\n\t      }\n\t      else {\n\t          resolvedProviderValueExpr = providerValueExpressions[0];\n\t          type = providerValueExpressions[0].type;\n\t      }\n\t      if (!type) {\n\t          type = DYNAMIC_TYPE;\n\t      }\n\t      if (isEager) {\n\t          view.fields.push(new ClassField(propName, type));\n\t          view.createMethod.addStmt(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n\t      }\n\t      else {\n\t          var internalField = \"_\" + propName;\n\t          view.fields.push(new ClassField(internalField, type));\n\t          var getter = new CompileMethod(view);\n\t          getter.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t          // Note: Equals is important for JS so that it also checks the undefined case!\n\t          getter.addStmt(new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]));\n\t          getter.addStmt(new ReturnStatement(THIS_EXPR.prop(internalField)));\n\t          view.getters.push(new ClassGetter(propName, getter.finish(), type));\n\t      }\n\t      return THIS_EXPR.prop(propName);\n\t  }\n\t  var _QueryWithRead = (function () {\n\t      function _QueryWithRead(query, match) {\n\t          this.query = query;\n\t          this.read = query.meta.read || match;\n\t      }\n\t      return _QueryWithRead;\n\t  }());\n\t\n\t  var CompilePipe = (function () {\n\t      function CompilePipe(view, meta) {\n\t          var _this = this;\n\t          this.view = view;\n\t          this.meta = meta;\n\t          this._purePipeProxyCount = 0;\n\t          this.instance = THIS_EXPR.prop(\"_pipe_\" + meta.name + \"_\" + view.pipeCount++);\n\t          var deps = this.meta.type.diDeps.map(function (diDep) {\n\t              if (diDep.token.reference ===\n\t                  resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n\t                  return getPropertyInView(THIS_EXPR.prop('ref'), _this.view, _this.view.componentView);\n\t              }\n\t              return injectFromViewParentInjector(view, diDep.token, false);\n\t          });\n\t          this.view.fields.push(new ClassField(this.instance.name, importType(this.meta.type)));\n\t          this.view.createMethod.resetDebugInfo(null, null);\n\t          this.view.createMethod.addStmt(THIS_EXPR.prop(this.instance.name)\n\t              .set(importExpr(this.meta.type).instantiate(deps))\n\t              .toStmt());\n\t      }\n\t      CompilePipe.call = function (view, name, args) {\n\t          var compView = view.componentView;\n\t          var meta = _findPipeMeta(compView, name);\n\t          var pipe;\n\t          if (meta.pure) {\n\t              // pure pipes live on the component view\n\t              pipe = compView.purePipes.get(name);\n\t              if (!pipe) {\n\t                  pipe = new CompilePipe(compView, meta);\n\t                  compView.purePipes.set(name, pipe);\n\t                  compView.pipes.push(pipe);\n\t              }\n\t          }\n\t          else {\n\t              // Non pure pipes live on the view that called it\n\t              pipe = new CompilePipe(view, meta);\n\t              view.pipes.push(pipe);\n\t          }\n\t          return pipe._call(view, args);\n\t      };\n\t      Object.defineProperty(CompilePipe.prototype, \"pure\", {\n\t          get: function () { return this.meta.pure; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      CompilePipe.prototype._call = function (callingView, args) {\n\t          if (this.meta.pure) {\n\t              // PurePipeProxies live on the view that called them.\n\t              var purePipeProxyInstance = THIS_EXPR.prop(this.instance.name + \"_\" + this._purePipeProxyCount++);\n\t              var pipeInstanceSeenFromPureProxy = getPropertyInView(this.instance, callingView, this.view);\n\t              createPureProxy(pipeInstanceSeenFromPureProxy.prop('transform')\n\t                  .callMethod(BuiltinMethod.Bind, [pipeInstanceSeenFromPureProxy]), args.length, purePipeProxyInstance, { fields: callingView.fields, ctorStmts: callingView.createMethod });\n\t              return importExpr(resolveIdentifier(Identifiers.castByValue))\n\t                  .callFn([purePipeProxyInstance, pipeInstanceSeenFromPureProxy.prop('transform')])\n\t                  .callFn(args);\n\t          }\n\t          else {\n\t              return getPropertyInView(this.instance, callingView, this.view).callMethod('transform', args);\n\t          }\n\t      };\n\t      return CompilePipe;\n\t  }());\n\t  function _findPipeMeta(view, name) {\n\t      var pipeMeta = null;\n\t      for (var i = view.pipeMetas.length - 1; i >= 0; i--) {\n\t          var localPipeMeta = view.pipeMetas[i];\n\t          if (localPipeMeta.name == name) {\n\t              pipeMeta = localPipeMeta;\n\t              break;\n\t          }\n\t      }\n\t      if (!pipeMeta) {\n\t          throw new Error(\"Illegal state: Could not find pipe \" + name + \" although the parser should have detected this error!\");\n\t      }\n\t      return pipeMeta;\n\t  }\n\t\n\t  var CompileViewRootNodeType;\n\t  (function (CompileViewRootNodeType) {\n\t      CompileViewRootNodeType[CompileViewRootNodeType[\"Node\"] = 0] = \"Node\";\n\t      CompileViewRootNodeType[CompileViewRootNodeType[\"ViewContainer\"] = 1] = \"ViewContainer\";\n\t      CompileViewRootNodeType[CompileViewRootNodeType[\"NgContent\"] = 2] = \"NgContent\";\n\t  })(CompileViewRootNodeType || (CompileViewRootNodeType = {}));\n\t  var CompileViewRootNode = (function () {\n\t      function CompileViewRootNode(type, expr, ngContentIndex) {\n\t          this.type = type;\n\t          this.expr = expr;\n\t          this.ngContentIndex = ngContentIndex;\n\t      }\n\t      return CompileViewRootNode;\n\t  }());\n\t  var CompileView = (function () {\n\t      function CompileView(component, genConfig, pipeMetas, styles, animations, viewIndex, declarationElement, templateVariableBindings) {\n\t          var _this = this;\n\t          this.component = component;\n\t          this.genConfig = genConfig;\n\t          this.pipeMetas = pipeMetas;\n\t          this.styles = styles;\n\t          this.animations = animations;\n\t          this.viewIndex = viewIndex;\n\t          this.declarationElement = declarationElement;\n\t          this.templateVariableBindings = templateVariableBindings;\n\t          this.viewChildren = [];\n\t          this.nodes = [];\n\t          this.rootNodes = [];\n\t          this.lastRenderNode = NULL_EXPR;\n\t          this.viewContainers = [];\n\t          this.methods = [];\n\t          this.ctorStmts = [];\n\t          this.fields = [];\n\t          this.getters = [];\n\t          this.disposables = [];\n\t          this.purePipes = new Map();\n\t          this.pipes = [];\n\t          this.locals = new Map();\n\t          this.literalArrayCount = 0;\n\t          this.literalMapCount = 0;\n\t          this.pipeCount = 0;\n\t          this.createMethod = new CompileMethod(this);\n\t          this.animationBindingsMethod = new CompileMethod(this);\n\t          this.injectorGetMethod = new CompileMethod(this);\n\t          this.updateContentQueriesMethod = new CompileMethod(this);\n\t          this.dirtyParentQueriesMethod = new CompileMethod(this);\n\t          this.updateViewQueriesMethod = new CompileMethod(this);\n\t          this.detectChangesInInputsMethod = new CompileMethod(this);\n\t          this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n\t          this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n\t          this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n\t          this.destroyMethod = new CompileMethod(this);\n\t          this.detachMethod = new CompileMethod(this);\n\t          this.viewType = getViewType(component, viewIndex);\n\t          this.className = getViewClassName(component, viewIndex);\n\t          this.classType = importType(new CompileIdentifierMetadata({ name: this.className }));\n\t          this.classExpr = variable(this.className);\n\t          if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n\t              this.componentView = this;\n\t          }\n\t          else {\n\t              this.componentView = this.declarationElement.view.componentView;\n\t          }\n\t          this.componentContext =\n\t              getPropertyInView(THIS_EXPR.prop('context'), this, this.componentView);\n\t          var viewQueries = new Map();\n\t          if (this.viewType === ViewType.COMPONENT) {\n\t              var directiveInstance_1 = THIS_EXPR.prop('context');\n\t              this.component.viewQueries.forEach(function (queryMeta, queryIndex) {\n\t                  var propName = \"_viewQuery_\" + queryMeta.selectors[0].name + \"_\" + queryIndex;\n\t                  var queryList = createQueryList(queryMeta, directiveInstance_1, propName, _this);\n\t                  var query = new CompileQuery(queryMeta, queryList, directiveInstance_1, _this);\n\t                  addQueryToTokenMap(viewQueries, query);\n\t              });\n\t          }\n\t          this.viewQueries = viewQueries;\n\t          templateVariableBindings.forEach(function (entry) { _this.locals.set(entry[1], THIS_EXPR.prop('context').prop(entry[0])); });\n\t          if (!this.declarationElement.isNull()) {\n\t              this.declarationElement.setEmbeddedView(this);\n\t          }\n\t      }\n\t      CompileView.prototype.callPipe = function (name, input, args) {\n\t          return CompilePipe.call(this, name, [input].concat(args));\n\t      };\n\t      CompileView.prototype.getLocal = function (name) {\n\t          if (name == EventHandlerVars.event.name) {\n\t              return EventHandlerVars.event;\n\t          }\n\t          var currView = this;\n\t          var result = currView.locals.get(name);\n\t          while (!result && isPresent(currView.declarationElement.view)) {\n\t              currView = currView.declarationElement.view;\n\t              result = currView.locals.get(name);\n\t          }\n\t          if (isPresent(result)) {\n\t              return getPropertyInView(result, this, currView);\n\t          }\n\t          else {\n\t              return null;\n\t          }\n\t      };\n\t      CompileView.prototype.afterNodes = function () {\n\t          var _this = this;\n\t          Array.from(this.viewQueries.values())\n\t              .forEach(function (queries) { return queries.forEach(function (q) { return q.afterChildren(_this.createMethod, _this.updateViewQueriesMethod); }); });\n\t      };\n\t      return CompileView;\n\t  }());\n\t  function getViewType(component, embeddedTemplateIndex) {\n\t      if (embeddedTemplateIndex > 0) {\n\t          return ViewType.EMBEDDED;\n\t      }\n\t      if (component.type.isHost) {\n\t          return ViewType.HOST;\n\t      }\n\t      return ViewType.COMPONENT;\n\t  }\n\t\n\t  function bindOutputs(boundEvents, directives, compileElement, bindToRenderer) {\n\t      var usedEvents = collectEvents(boundEvents, directives);\n\t      if (!usedEvents.size) {\n\t          return false;\n\t      }\n\t      if (bindToRenderer) {\n\t          subscribeToRenderEvents(usedEvents, compileElement);\n\t      }\n\t      subscribeToDirectiveEvents(usedEvents, directives, compileElement);\n\t      generateHandleEventMethod(boundEvents, directives, compileElement);\n\t      return true;\n\t  }\n\t  function collectEvents(boundEvents, directives) {\n\t      var usedEvents = new Map();\n\t      boundEvents.forEach(function (event) { usedEvents.set(event.fullName, event); });\n\t      directives.forEach(function (dirAst) {\n\t          dirAst.hostEvents.forEach(function (event) { usedEvents.set(event.fullName, event); });\n\t      });\n\t      return usedEvents;\n\t  }\n\t  function subscribeToRenderEvents(usedEvents, compileElement) {\n\t      var eventAndTargetExprs = [];\n\t      usedEvents.forEach(function (event) {\n\t          if (!event.phase) {\n\t              eventAndTargetExprs.push(literal(event.name), literal(event.target));\n\t          }\n\t      });\n\t      if (eventAndTargetExprs.length) {\n\t          var disposableVar = variable(\"disposable_\" + compileElement.view.disposables.length);\n\t          compileElement.view.disposables.push(disposableVar);\n\t          compileElement.view.createMethod.addStmt(disposableVar\n\t              .set(importExpr(resolveIdentifier(Identifiers.subscribeToRenderElement)).callFn([\n\t              THIS_EXPR, compileElement.renderNode, createInlineArray(eventAndTargetExprs),\n\t              handleEventExpr(compileElement)\n\t          ]))\n\t              .toDeclStmt(FUNCTION_TYPE, [StmtModifier.Private]));\n\t      }\n\t  }\n\t  function subscribeToDirectiveEvents(usedEvents, directives, compileElement) {\n\t      var usedEventNames = Array.from(usedEvents.keys());\n\t      directives.forEach(function (dirAst) {\n\t          var dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n\t          compileElement.view.createMethod.addStmts(DirectiveWrapperExpressions.subscribe(dirAst.directive, dirAst.hostProperties, usedEventNames, dirWrapper, THIS_EXPR, handleEventExpr(compileElement)));\n\t      });\n\t  }\n\t  function generateHandleEventMethod(boundEvents, directives, compileElement) {\n\t      var hasComponentHostListener = directives.some(function (dirAst) { return dirAst.hostEvents.some(function (event) { return dirAst.directive.isComponent; }); });\n\t      var markPathToRootStart = hasComponentHostListener ? compileElement.compViewExpr : THIS_EXPR;\n\t      var handleEventStmts = new CompileMethod(compileElement.view);\n\t      handleEventStmts.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      handleEventStmts.push(markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt());\n\t      var eventNameVar = variable('eventName');\n\t      var resultVar = variable('result');\n\t      handleEventStmts.push(resultVar.set(literal(true)).toDeclStmt(BOOL_TYPE));\n\t      directives.forEach(function (dirAst, dirIdx) {\n\t          var dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n\t          if (dirAst.hostEvents.length > 0) {\n\t              handleEventStmts.push(resultVar\n\t                  .set(DirectiveWrapperExpressions\n\t                  .handleEvent(dirAst.hostEvents, dirWrapper, eventNameVar, EventHandlerVars.event)\n\t                  .and(resultVar))\n\t                  .toStmt());\n\t          }\n\t      });\n\t      boundEvents.forEach(function (renderEvent, renderEventIdx) {\n\t          var evalResult = convertActionBinding(compileElement.view, compileElement.view, compileElement.view.componentContext, renderEvent.handler, \"sub_\" + renderEventIdx);\n\t          var trueStmts = evalResult.stmts;\n\t          if (evalResult.preventDefault) {\n\t              trueStmts.push(resultVar.set(evalResult.preventDefault.and(resultVar)).toStmt());\n\t          }\n\t          // TODO(tbosch): convert this into a `switch` once our OutputAst supports it.\n\t          handleEventStmts.push(new IfStmt(eventNameVar.equals(literal(renderEvent.fullName)), trueStmts));\n\t      });\n\t      handleEventStmts.push(new ReturnStatement(resultVar));\n\t      compileElement.view.methods.push(new ClassMethod(getHandleEventMethodName(compileElement.nodeIndex), [\n\t          new FnParam(eventNameVar.name, STRING_TYPE),\n\t          new FnParam(EventHandlerVars.event.name, DYNAMIC_TYPE)\n\t      ], handleEventStmts.finish(), BOOL_TYPE));\n\t  }\n\t  function handleEventExpr(compileElement) {\n\t      var handleEventMethodName = getHandleEventMethodName(compileElement.nodeIndex);\n\t      return THIS_EXPR.callMethod('eventHandler', [THIS_EXPR.prop(handleEventMethodName)]);\n\t  }\n\t\n\t  var STATE_IS_NEVER_CHECKED = THIS_EXPR.prop('numberOfChecks').identical(new LiteralExpr(0));\n\t  var NOT_THROW_ON_CHANGES = not(DetectChangesVars.throwOnChange);\n\t  function bindDirectiveAfterContentLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n\t      var view = compileElement.view;\n\t      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n\t      var afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;\n\t      afterContentLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentInit) !== -1) {\n\t          afterContentLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));\n\t      }\n\t      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentChecked) !== -1) {\n\t          afterContentLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());\n\t      }\n\t  }\n\t  function bindDirectiveAfterViewLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n\t      var view = compileElement.view;\n\t      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n\t      var afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;\n\t      afterViewLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewInit) !== -1) {\n\t          afterViewLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));\n\t      }\n\t      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewChecked) !== -1) {\n\t          afterViewLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());\n\t      }\n\t  }\n\t  function bindDirectiveWrapperLifecycleCallbacks(dir, directiveWrapperIntance, compileElement) {\n\t      compileElement.view.destroyMethod.addStmts(DirectiveWrapperExpressions.ngOnDestroy(dir.directive, directiveWrapperIntance));\n\t      compileElement.view.detachMethod.addStmts(DirectiveWrapperExpressions.ngOnDetach(dir.hostProperties, directiveWrapperIntance, THIS_EXPR, compileElement.compViewExpr || THIS_EXPR, compileElement.renderNode));\n\t  }\n\t  function bindInjectableDestroyLifecycleCallbacks(provider, providerInstance, compileElement) {\n\t      var onDestroyMethod = compileElement.view.destroyMethod;\n\t      onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      if (provider.providerType !== exports.ProviderAstType.Directive &&\n\t          provider.providerType !== exports.ProviderAstType.Component &&\n\t          provider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n\t          onDestroyMethod.addStmt(providerInstance.callMethod('ngOnDestroy', []).toStmt());\n\t      }\n\t  }\n\t  function bindPipeDestroyLifecycleCallbacks(pipeMeta, pipeInstance, view) {\n\t      var onDestroyMethod = view.destroyMethod;\n\t      if (pipeMeta.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n\t          onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());\n\t      }\n\t  }\n\t\n\t  function bindRenderText(boundText, compileNode, view) {\n\t      var valueField = createCheckBindingField(view);\n\t      var evalResult = convertPropertyBinding(view, view, view.componentContext, boundText.value, valueField.bindingId);\n\t      if (!evalResult) {\n\t          return null;\n\t      }\n\t      view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);\n\t      view.detectChangesRenderPropertiesMethod.addStmts(createCheckBindingStmt(evalResult, valueField.expression, DetectChangesVars.throwOnChange, [THIS_EXPR.prop('renderer')\n\t              .callMethod('setText', [compileNode.renderNode, evalResult.currValExpr])\n\t              .toStmt()]));\n\t  }\n\t  function bindRenderInputs(boundProps, hasEvents, compileElement) {\n\t      var view = compileElement.view;\n\t      var renderNode = compileElement.renderNode;\n\t      boundProps.forEach(function (boundProp) {\n\t          var bindingField = createCheckBindingField(view);\n\t          view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);\n\t          var evalResult = convertPropertyBinding(view, view, compileElement.view.componentContext, boundProp.value, bindingField.bindingId);\n\t          if (!evalResult) {\n\t              return;\n\t          }\n\t          var checkBindingStmts = [];\n\t          var compileMethod = view.detectChangesRenderPropertiesMethod;\n\t          switch (boundProp.type) {\n\t              case exports.PropertyBindingType.Property:\n\t              case exports.PropertyBindingType.Attribute:\n\t              case exports.PropertyBindingType.Class:\n\t              case exports.PropertyBindingType.Style:\n\t                  checkBindingStmts.push.apply(checkBindingStmts, writeToRenderer(THIS_EXPR, boundProp, renderNode, evalResult.currValExpr, view.genConfig.logBindingUpdate));\n\t                  break;\n\t              case exports.PropertyBindingType.Animation:\n\t                  compileMethod = view.animationBindingsMethod;\n\t                  var _a = triggerAnimation(THIS_EXPR, THIS_EXPR, boundProp, (hasEvents ? THIS_EXPR.prop(getHandleEventMethodName(compileElement.nodeIndex)) :\n\t                      importExpr(resolveIdentifier(Identifiers.noop)))\n\t                      .callMethod(BuiltinMethod.Bind, [THIS_EXPR]), compileElement.renderNode, evalResult.currValExpr, bindingField.expression), updateStmts = _a.updateStmts, detachStmts = _a.detachStmts;\n\t                  checkBindingStmts.push.apply(checkBindingStmts, updateStmts);\n\t                  view.detachMethod.addStmts(detachStmts);\n\t                  break;\n\t          }\n\t          compileMethod.addStmts(createCheckBindingStmt(evalResult, bindingField.expression, DetectChangesVars.throwOnChange, checkBindingStmts));\n\t      });\n\t  }\n\t  function bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, elementName, schemaRegistry) {\n\t      // We need to provide the SecurityContext for properties that could need sanitization.\n\t      var runtimeSecurityCtxExprs = directiveAst.hostProperties.filter(function (boundProp) { return boundProp.needsRuntimeSecurityContext; })\n\t          .map(function (boundProp) {\n\t          var ctx;\n\t          switch (boundProp.type) {\n\t              case exports.PropertyBindingType.Property:\n\t                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, false);\n\t                  break;\n\t              case exports.PropertyBindingType.Attribute:\n\t                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, true);\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Illegal state: Only property / attribute bindings can have an unknown security context! Binding \" + boundProp.name);\n\t          }\n\t          return createEnumExpression(Identifiers.SecurityContext, ctx);\n\t      });\n\t      compileElement.view.detectChangesRenderPropertiesMethod.addStmts(DirectiveWrapperExpressions.checkHost(directiveAst.hostProperties, directiveWrapperInstance, THIS_EXPR, compileElement.compViewExpr || THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange, runtimeSecurityCtxExprs));\n\t  }\n\t  function bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement) {\n\t      var view = compileElement.view;\n\t      var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n\t      detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\t      directiveAst.inputs.forEach(function (input, inputIdx) {\n\t          // Note: We can't use `fields.length` here, as we are not adding a field!\n\t          var bindingId = compileElement.nodeIndex + \"_\" + dirIndex + \"_\" + inputIdx;\n\t          detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);\n\t          var evalResult = convertPropertyBinding(view, view, view.componentContext, input.value, bindingId);\n\t          if (!evalResult) {\n\t              return;\n\t          }\n\t          detectChangesInInputsMethod.addStmts(evalResult.stmts);\n\t          detectChangesInInputsMethod.addStmt(directiveWrapperInstance\n\t              .callMethod(\"check_\" + input.directiveName, [\n\t              evalResult.currValExpr, DetectChangesVars.throwOnChange,\n\t              evalResult.forceUpdate || literal(false)\n\t          ])\n\t              .toStmt());\n\t      });\n\t      var isOnPushComp = directiveAst.directive.isComponent &&\n\t          !isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);\n\t      var directiveDetectChangesExpr = DirectiveWrapperExpressions.ngDoCheck(directiveWrapperInstance, THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange);\n\t      var directiveDetectChangesStmt = isOnPushComp ?\n\t          new IfStmt(directiveDetectChangesExpr, [compileElement.compViewExpr.callMethod('markAsCheckOnce', []).toStmt()]) :\n\t          directiveDetectChangesExpr.toStmt();\n\t      detectChangesInInputsMethod.addStmt(directiveDetectChangesStmt);\n\t  }\n\t\n\t  function bindView(view, parsedTemplate, schemaRegistry) {\n\t      var visitor = new ViewBinderVisitor(view, schemaRegistry);\n\t      templateVisitAll(visitor, parsedTemplate);\n\t      view.pipes.forEach(function (pipe) { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n\t  }\n\t  var ViewBinderVisitor = (function () {\n\t      function ViewBinderVisitor(view, _schemaRegistry) {\n\t          this.view = view;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._nodeIndex = 0;\n\t      }\n\t      ViewBinderVisitor.prototype.visitBoundText = function (ast, parent) {\n\t          var node = this.view.nodes[this._nodeIndex++];\n\t          bindRenderText(ast, node, this.view);\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitText = function (ast, parent) {\n\t          this._nodeIndex++;\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitNgContent = function (ast, parent) { return null; };\n\t      ViewBinderVisitor.prototype.visitElement = function (ast, parent) {\n\t          var _this = this;\n\t          var compileElement = this.view.nodes[this._nodeIndex++];\n\t          var hasEvents = bindOutputs(ast.outputs, ast.directives, compileElement, true);\n\t          bindRenderInputs(ast.inputs, hasEvents, compileElement);\n\t          ast.directives.forEach(function (directiveAst, dirIndex) {\n\t              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n\t              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n\t              bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, ast.name, _this._schemaRegistry);\n\t          });\n\t          templateVisitAll(this, ast.children, compileElement);\n\t          // afterContent and afterView lifecycles need to be called bottom up\n\t          // so that children are notified before parents\n\t          ast.directives.forEach(function (directiveAst) {\n\t              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n\t              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n\t              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n\t              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n\t              bindDirectiveWrapperLifecycleCallbacks(directiveAst, directiveWrapperInstance, compileElement);\n\t          });\n\t          ast.providers.forEach(function (providerAst) {\n\t              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n\t              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n\t          });\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n\t          var compileElement = this.view.nodes[this._nodeIndex++];\n\t          bindOutputs(ast.outputs, ast.directives, compileElement, false);\n\t          ast.directives.forEach(function (directiveAst, dirIndex) {\n\t              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n\t              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n\t              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n\t              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n\t              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n\t              bindDirectiveWrapperLifecycleCallbacks(directiveAst, directiveWrapperInstance, compileElement);\n\t          });\n\t          ast.providers.forEach(function (providerAst) {\n\t              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n\t              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n\t          });\n\t          bindView(compileElement.embeddedView, ast.children, this._schemaRegistry);\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n\t      ViewBinderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n\t      ViewBinderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n\t          return null;\n\t      };\n\t      ViewBinderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n\t      ViewBinderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n\t      ViewBinderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n\t      ViewBinderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n\t      return ViewBinderVisitor;\n\t  }());\n\t\n\t  var IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n\t  var CLASS_ATTR$1 = 'class';\n\t  var STYLE_ATTR = 'style';\n\t  var NG_CONTAINER_TAG = 'ng-container';\n\t  var parentRenderNodeVar = variable('parentRenderNode');\n\t  var rootSelectorVar = variable('rootSelector');\n\t  function buildView(view, template, targetDependencies) {\n\t      var builderVisitor = new ViewBuilderVisitor(view, targetDependencies);\n\t      var parentEl = view.declarationElement.isNull() ? view.declarationElement : view.declarationElement.parent;\n\t      templateVisitAll(builderVisitor, template, parentEl);\n\t      if (view.viewType === ViewType.EMBEDDED || view.viewType === ViewType.HOST) {\n\t          view.lastRenderNode = builderVisitor.getOrCreateLastRenderNode();\n\t      }\n\t      return builderVisitor.nestedViewCount;\n\t  }\n\t  function finishView(view, targetStatements) {\n\t      view.afterNodes();\n\t      createViewTopLevelStmts(view, targetStatements);\n\t      view.nodes.forEach(function (node) {\n\t          if (node instanceof CompileElement && node.hasEmbeddedView) {\n\t              finishView(node.embeddedView, targetStatements);\n\t          }\n\t      });\n\t  }\n\t  var ViewBuilderVisitor = (function () {\n\t      function ViewBuilderVisitor(view, targetDependencies) {\n\t          this.view = view;\n\t          this.targetDependencies = targetDependencies;\n\t          this.nestedViewCount = 0;\n\t      }\n\t      ViewBuilderVisitor.prototype._isRootNode = function (parent) { return parent.view !== this.view; };\n\t      ViewBuilderVisitor.prototype._addRootNodeAndProject = function (node) {\n\t          var projectedNode = _getOuterContainerOrSelf(node);\n\t          var parent = projectedNode.parent;\n\t          var ngContentIndex = projectedNode.sourceAst.ngContentIndex;\n\t          var viewContainer = (node instanceof CompileElement && node.hasViewContainer) ? node.viewContainer : null;\n\t          if (this._isRootNode(parent)) {\n\t              if (this.view.viewType !== ViewType.COMPONENT) {\n\t                  this.view.rootNodes.push(new CompileViewRootNode(viewContainer ? CompileViewRootNodeType.ViewContainer : CompileViewRootNodeType.Node, viewContainer || node.renderNode));\n\t              }\n\t          }\n\t          else if (isPresent(parent.component) && isPresent(ngContentIndex)) {\n\t              parent.addContentNode(ngContentIndex, new CompileViewRootNode(viewContainer ? CompileViewRootNodeType.ViewContainer : CompileViewRootNodeType.Node, viewContainer || node.renderNode));\n\t          }\n\t      };\n\t      ViewBuilderVisitor.prototype._getParentRenderNode = function (parent) {\n\t          parent = _getOuterContainerParentOrSelf(parent);\n\t          if (this._isRootNode(parent)) {\n\t              if (this.view.viewType === ViewType.COMPONENT) {\n\t                  return parentRenderNodeVar;\n\t              }\n\t              else {\n\t                  // root node of an embedded/host view\n\t                  return NULL_EXPR;\n\t              }\n\t          }\n\t          else {\n\t              return isPresent(parent.component) &&\n\t                  parent.component.template.encapsulation !== _angular_core.ViewEncapsulation.Native ?\n\t                  NULL_EXPR :\n\t                  parent.renderNode;\n\t          }\n\t      };\n\t      ViewBuilderVisitor.prototype.getOrCreateLastRenderNode = function () {\n\t          var view = this.view;\n\t          if (view.rootNodes.length === 0 ||\n\t              view.rootNodes[view.rootNodes.length - 1].type !== CompileViewRootNodeType.Node) {\n\t              var fieldName = \"_el_\" + view.nodes.length;\n\t              view.fields.push(new ClassField(fieldName, importType(view.genConfig.renderTypes.renderElement)));\n\t              view.createMethod.addStmt(THIS_EXPR.prop(fieldName)\n\t                  .set(ViewProperties.renderer.callMethod('createTemplateAnchor', [NULL_EXPR, NULL_EXPR]))\n\t                  .toStmt());\n\t              view.rootNodes.push(new CompileViewRootNode(CompileViewRootNodeType.Node, THIS_EXPR.prop(fieldName)));\n\t          }\n\t          return view.rootNodes[view.rootNodes.length - 1].expr;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitBoundText = function (ast, parent) {\n\t          return this._visitText(ast, '', parent);\n\t      };\n\t      ViewBuilderVisitor.prototype.visitText = function (ast, parent) {\n\t          return this._visitText(ast, ast.value, parent);\n\t      };\n\t      ViewBuilderVisitor.prototype._visitText = function (ast, value, parent) {\n\t          var fieldName = \"_text_\" + this.view.nodes.length;\n\t          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderText)));\n\t          var renderNode = THIS_EXPR.prop(fieldName);\n\t          var compileNode = new CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);\n\t          var createRenderNode = THIS_EXPR.prop(fieldName)\n\t              .set(ViewProperties.renderer.callMethod('createText', [\n\t              this._getParentRenderNode(parent), literal(value),\n\t              this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)\n\t          ]))\n\t              .toStmt();\n\t          this.view.nodes.push(compileNode);\n\t          this.view.createMethod.addStmt(createRenderNode);\n\t          this._addRootNodeAndProject(compileNode);\n\t          return renderNode;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitNgContent = function (ast, parent) {\n\t          // the projected nodes originate from a different view, so we don't\n\t          // have debug information for them...\n\t          this.view.createMethod.resetDebugInfo(null, ast);\n\t          var parentRenderNode = this._getParentRenderNode(parent);\n\t          if (parentRenderNode !== NULL_EXPR) {\n\t              this.view.createMethod.addStmt(THIS_EXPR.callMethod('projectNodes', [parentRenderNode, literal(ast.index)])\n\t                  .toStmt());\n\t          }\n\t          else if (this._isRootNode(parent)) {\n\t              if (this.view.viewType !== ViewType.COMPONENT) {\n\t                  // store root nodes only for embedded/host views\n\t                  this.view.rootNodes.push(new CompileViewRootNode(CompileViewRootNodeType.NgContent, null, ast.index));\n\t              }\n\t          }\n\t          else {\n\t              if (isPresent(parent.component) && isPresent(ast.ngContentIndex)) {\n\t                  parent.addContentNode(ast.ngContentIndex, new CompileViewRootNode(CompileViewRootNodeType.NgContent, null, ast.index));\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitElement = function (ast, parent) {\n\t          var nodeIndex = this.view.nodes.length;\n\t          var createRenderNodeExpr;\n\t          var debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);\n\t          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n\t          var component = directives.find(function (directive) { return directive.isComponent; });\n\t          if (ast.name === NG_CONTAINER_TAG) {\n\t              createRenderNodeExpr = ViewProperties.renderer.callMethod('createTemplateAnchor', [this._getParentRenderNode(parent), debugContextExpr]);\n\t          }\n\t          else {\n\t              var htmlAttrs = _readHtmlAttrs(ast.attrs);\n\t              var attrNameAndValues = createInlineArray(_mergeHtmlAndDirectiveAttrs(htmlAttrs, directives).map(function (v) { return literal(v); }));\n\t              if (nodeIndex === 0 && this.view.viewType === ViewType.HOST) {\n\t                  createRenderNodeExpr =\n\t                      importExpr(resolveIdentifier(Identifiers.selectOrCreateRenderHostElement)).callFn([\n\t                          ViewProperties.renderer, literal(ast.name), attrNameAndValues, rootSelectorVar,\n\t                          debugContextExpr\n\t                      ]);\n\t              }\n\t              else {\n\t                  createRenderNodeExpr =\n\t                      importExpr(resolveIdentifier(Identifiers.createRenderElement)).callFn([\n\t                          ViewProperties.renderer, this._getParentRenderNode(parent), literal(ast.name),\n\t                          attrNameAndValues, debugContextExpr\n\t                      ]);\n\t              }\n\t          }\n\t          var fieldName = \"_el_\" + nodeIndex;\n\t          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderElement)));\n\t          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());\n\t          var renderNode = THIS_EXPR.prop(fieldName);\n\t          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, component, directives, ast.providers, ast.hasViewContainer, false, ast.references, this.targetDependencies);\n\t          this.view.nodes.push(compileElement);\n\t          var compViewExpr = null;\n\t          if (isPresent(component)) {\n\t              var nestedComponentIdentifier = new CompileIdentifierMetadata({ name: getViewClassName(component, 0) });\n\t              this.targetDependencies.push(new ViewClassDependency(component.type, nestedComponentIdentifier));\n\t              compViewExpr = THIS_EXPR.prop(\"compView_\" + nodeIndex); // fix highlighting: `\n\t              this.view.fields.push(new ClassField(compViewExpr.name, importType(resolveIdentifier(Identifiers.AppView), [importType(component.type)])));\n\t              this.view.viewChildren.push(compViewExpr);\n\t              compileElement.setComponentView(compViewExpr);\n\t              this.view.createMethod.addStmt(compViewExpr\n\t                  .set(importExpr(nestedComponentIdentifier).instantiate([\n\t                  ViewProperties.viewUtils, THIS_EXPR, literal(nodeIndex), renderNode\n\t              ]))\n\t                  .toStmt());\n\t          }\n\t          compileElement.beforeChildren();\n\t          this._addRootNodeAndProject(compileElement);\n\t          templateVisitAll(this, ast.children, compileElement);\n\t          compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);\n\t          if (isPresent(compViewExpr)) {\n\t              this.view.createMethod.addStmt(compViewExpr.callMethod('create', [compileElement.getComponent()]).toStmt());\n\t          }\n\t          return null;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n\t          var nodeIndex = this.view.nodes.length;\n\t          var fieldName = \"_anchor_\" + nodeIndex;\n\t          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderComment)));\n\t          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName)\n\t              .set(ViewProperties.renderer.callMethod('createTemplateAnchor', [\n\t              this._getParentRenderNode(parent),\n\t              this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)\n\t          ]))\n\t              .toStmt());\n\t          var renderNode = THIS_EXPR.prop(fieldName);\n\t          var templateVariableBindings = ast.variables.map(function (varAst) { return [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]; });\n\t          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n\t          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, null, directives, ast.providers, ast.hasViewContainer, true, ast.references, this.targetDependencies);\n\t          this.view.nodes.push(compileElement);\n\t          this.nestedViewCount++;\n\t          var embeddedView = new CompileView(this.view.component, this.view.genConfig, this.view.pipeMetas, NULL_EXPR, this.view.animations, this.view.viewIndex + this.nestedViewCount, compileElement, templateVariableBindings);\n\t          this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);\n\t          compileElement.beforeChildren();\n\t          this._addRootNodeAndProject(compileElement);\n\t          compileElement.afterChildren(0);\n\t          return null;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n\t      ViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n\t      ViewBuilderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n\t          return null;\n\t      };\n\t      ViewBuilderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n\t      ViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n\t      ViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n\t      ViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n\t      return ViewBuilderVisitor;\n\t  }());\n\t  /**\n\t   * Walks up the nodes while the direct parent is a container.\n\t   *\n\t   * Returns the outer container or the node itself when it is not a direct child of a container.\n\t   *\n\t   * @internal\n\t   */\n\t  function _getOuterContainerOrSelf(node) {\n\t      var view = node.view;\n\t      while (_isNgContainer(node.parent, view)) {\n\t          node = node.parent;\n\t      }\n\t      return node;\n\t  }\n\t  /**\n\t   * Walks up the nodes while they are container and returns the first parent which is not.\n\t   *\n\t   * Returns the parent of the outer container or the node itself when it is not a container.\n\t   *\n\t   * @internal\n\t   */\n\t  function _getOuterContainerParentOrSelf(el) {\n\t      var view = el.view;\n\t      while (_isNgContainer(el, view)) {\n\t          el = el.parent;\n\t      }\n\t      return el;\n\t  }\n\t  function _isNgContainer(node, view) {\n\t      return !node.isNull() && node.sourceAst.name === NG_CONTAINER_TAG &&\n\t          node.view === view;\n\t  }\n\t  function _mergeHtmlAndDirectiveAttrs(declaredHtmlAttrs, directives) {\n\t      var mapResult = {};\n\t      Object.keys(declaredHtmlAttrs).forEach(function (key) { mapResult[key] = declaredHtmlAttrs[key]; });\n\t      directives.forEach(function (directiveMeta) {\n\t          Object.keys(directiveMeta.hostAttributes).forEach(function (name) {\n\t              var value = directiveMeta.hostAttributes[name];\n\t              var prevValue = mapResult[name];\n\t              mapResult[name] = isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\n\t          });\n\t      });\n\t      var arrResult = [];\n\t      // Note: We need to sort to get a defined output order\n\t      // for tests and for caching generated artifacts...\n\t      Object.keys(mapResult).sort().forEach(function (attrName) { arrResult.push(attrName, mapResult[attrName]); });\n\t      return arrResult;\n\t  }\n\t  function _readHtmlAttrs(attrs) {\n\t      var htmlAttrs = {};\n\t      attrs.forEach(function (ast) { htmlAttrs[ast.name] = ast.value; });\n\t      return htmlAttrs;\n\t  }\n\t  function mergeAttributeValue(attrName, attrValue1, attrValue2) {\n\t      if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n\t          return attrValue1 + \" \" + attrValue2;\n\t      }\n\t      else {\n\t          return attrValue2;\n\t      }\n\t  }\n\t  function createViewTopLevelStmts(view, targetStatements) {\n\t      var nodeDebugInfosVar = NULL_EXPR;\n\t      if (view.genConfig.genDebugInfo) {\n\t          nodeDebugInfosVar = variable(\"nodeDebugInfos_\" + view.component.type.name + view.viewIndex); // fix highlighting: `\n\t          targetStatements.push(nodeDebugInfosVar\n\t              .set(literalArr(view.nodes.map(createStaticNodeDebugInfo), new ArrayType(new ExternalType(resolveIdentifier(Identifiers.StaticNodeDebugInfo)), [TypeModifier.Const])))\n\t              .toDeclStmt(null, [StmtModifier.Final]));\n\t      }\n\t      var renderCompTypeVar = variable(\"renderType_\" + view.component.type.name); // fix highlighting: `\n\t      if (view.viewIndex === 0) {\n\t          var templateUrlInfo = void 0;\n\t          if (view.component.template.templateUrl == view.component.type.moduleUrl) {\n\t              templateUrlInfo =\n\t                  view.component.type.moduleUrl + \" class \" + view.component.type.name + \" - inline template\";\n\t          }\n\t          else {\n\t              templateUrlInfo = view.component.template.templateUrl;\n\t          }\n\t          targetStatements.push(renderCompTypeVar\n\t              .set(importExpr(resolveIdentifier(Identifiers.createRenderComponentType)).callFn([\n\t              view.genConfig.genDebugInfo ? literal(templateUrlInfo) : literal(''),\n\t              literal(view.component.template.ngContentSelectors.length),\n\t              ViewEncapsulationEnum.fromValue(view.component.template.encapsulation),\n\t              view.styles,\n\t              literalMap(view.animations.map(function (entry) { return [entry.name, entry.fnExp]; })),\n\t          ]))\n\t              .toDeclStmt(importType(resolveIdentifier(Identifiers.RenderComponentType))));\n\t      }\n\t      var viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);\n\t      targetStatements.push(viewClass);\n\t  }\n\t  function createStaticNodeDebugInfo(node) {\n\t      var compileElement = node instanceof CompileElement ? node : null;\n\t      var providerTokens = [];\n\t      var componentToken = NULL_EXPR;\n\t      var varTokenEntries = [];\n\t      if (isPresent(compileElement)) {\n\t          providerTokens = compileElement.getProviderTokens();\n\t          if (isPresent(compileElement.component)) {\n\t              componentToken = createDiTokenExpression(identifierToken(compileElement.component.type));\n\t          }\n\t          Object.keys(compileElement.referenceTokens).forEach(function (varName) {\n\t              var token = compileElement.referenceTokens[varName];\n\t              varTokenEntries.push([varName, isPresent(token) ? createDiTokenExpression(token) : NULL_EXPR]);\n\t          });\n\t      }\n\t      return importExpr(resolveIdentifier(Identifiers.StaticNodeDebugInfo))\n\t          .instantiate([\n\t          literalArr(providerTokens, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])),\n\t          componentToken,\n\t          literalMap(varTokenEntries, new MapType(DYNAMIC_TYPE, [TypeModifier.Const]))\n\t      ], importType(resolveIdentifier(Identifiers.StaticNodeDebugInfo), null, [TypeModifier.Const]));\n\t  }\n\t  function createViewClass(view, renderCompTypeVar, nodeDebugInfosVar) {\n\t      var viewConstructorArgs = [\n\t          new FnParam(ViewConstructorVars.viewUtils.name, importType(resolveIdentifier(Identifiers.ViewUtils))),\n\t          new FnParam(ViewConstructorVars.parentView.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n\t          new FnParam(ViewConstructorVars.parentIndex.name, NUMBER_TYPE),\n\t          new FnParam(ViewConstructorVars.parentElement.name, DYNAMIC_TYPE)\n\t      ];\n\t      var superConstructorArgs = [\n\t          variable(view.className), renderCompTypeVar, ViewTypeEnum.fromValue(view.viewType),\n\t          ViewConstructorVars.viewUtils, ViewConstructorVars.parentView, ViewConstructorVars.parentIndex,\n\t          ViewConstructorVars.parentElement,\n\t          ChangeDetectorStatusEnum.fromValue(getChangeDetectionMode(view))\n\t      ];\n\t      if (view.genConfig.genDebugInfo) {\n\t          superConstructorArgs.push(nodeDebugInfosVar);\n\t      }\n\t      if (view.viewType === ViewType.EMBEDDED) {\n\t          viewConstructorArgs.push(new FnParam('declaredViewContainer', importType(resolveIdentifier(Identifiers.ViewContainer))));\n\t          superConstructorArgs.push(variable('declaredViewContainer'));\n\t      }\n\t      var viewMethods = [\n\t          new ClassMethod('createInternal', [new FnParam(rootSelectorVar.name, STRING_TYPE)], generateCreateMethod(view), importType(resolveIdentifier(Identifiers.ComponentRef), [DYNAMIC_TYPE])),\n\t          new ClassMethod('injectorGetInternal', [\n\t              new FnParam(InjectMethodVars.token.name, DYNAMIC_TYPE),\n\t              // Note: Can't use o.INT_TYPE here as the method in AppView uses number\n\t              new FnParam(InjectMethodVars.requestNodeIndex.name, NUMBER_TYPE),\n\t              new FnParam(InjectMethodVars.notFoundResult.name, DYNAMIC_TYPE)\n\t          ], addReturnValuefNotEmpty(view.injectorGetMethod.finish(), InjectMethodVars.notFoundResult), DYNAMIC_TYPE),\n\t          new ClassMethod('detectChangesInternal', [new FnParam(DetectChangesVars.throwOnChange.name, BOOL_TYPE)], generateDetectChangesMethod(view)),\n\t          new ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()),\n\t          new ClassMethod('destroyInternal', [], generateDestroyMethod(view)),\n\t          new ClassMethod('detachInternal', [], view.detachMethod.finish()),\n\t          generateVisitRootNodesMethod(view), generateVisitProjectableNodesMethod(view),\n\t          generateCreateEmbeddedViewsMethod(view)\n\t      ].filter(function (method) { return method.body.length > 0; });\n\t      var superClass = view.genConfig.genDebugInfo ? Identifiers.DebugAppView : Identifiers.AppView;\n\t      var viewClass = createClassStmt({\n\t          name: view.className,\n\t          parent: importExpr(resolveIdentifier(superClass), [getContextType(view)]),\n\t          parentArgs: superConstructorArgs,\n\t          ctorParams: viewConstructorArgs,\n\t          builders: [{ methods: viewMethods }, view]\n\t      });\n\t      return viewClass;\n\t  }\n\t  function generateDestroyMethod(view) {\n\t      var stmts = [];\n\t      view.viewContainers.forEach(function (viewContainer) {\n\t          stmts.push(viewContainer.callMethod('destroyNestedViews', []).toStmt());\n\t      });\n\t      view.viewChildren.forEach(function (viewChild) { stmts.push(viewChild.callMethod('destroy', []).toStmt()); });\n\t      stmts.push.apply(stmts, view.destroyMethod.finish());\n\t      return stmts;\n\t  }\n\t  function generateCreateMethod(view) {\n\t      var parentRenderNodeExpr = NULL_EXPR;\n\t      var parentRenderNodeStmts = [];\n\t      if (view.viewType === ViewType.COMPONENT) {\n\t          parentRenderNodeExpr =\n\t              ViewProperties.renderer.callMethod('createViewRoot', [THIS_EXPR.prop('parentElement')]);\n\t          parentRenderNodeStmts =\n\t              [parentRenderNodeVar.set(parentRenderNodeExpr)\n\t                      .toDeclStmt(importType(view.genConfig.renderTypes.renderNode), [StmtModifier.Final])];\n\t      }\n\t      var resultExpr;\n\t      if (view.viewType === ViewType.HOST) {\n\t          var hostEl = view.nodes[0];\n\t          resultExpr =\n\t              importExpr(resolveIdentifier(Identifiers.ComponentRef_), [DYNAMIC_TYPE]).instantiate([\n\t                  literal(hostEl.nodeIndex), THIS_EXPR, hostEl.renderNode, hostEl.getComponent()\n\t              ]);\n\t      }\n\t      else {\n\t          resultExpr = NULL_EXPR;\n\t      }\n\t      var allNodesExpr = ViewProperties.renderer.cast(DYNAMIC_TYPE)\n\t          .prop('directRenderer')\n\t          .conditional(NULL_EXPR, literalArr(view.nodes.map(function (node) { return node.renderNode; })));\n\t      return parentRenderNodeStmts.concat(view.createMethod.finish(), [\n\t          THIS_EXPR\n\t              .callMethod('init', [\n\t              view.lastRenderNode,\n\t              allNodesExpr,\n\t              view.disposables.length ? literalArr(view.disposables) : NULL_EXPR,\n\t          ])\n\t              .toStmt(),\n\t          new ReturnStatement(resultExpr)\n\t      ]);\n\t  }\n\t  function generateDetectChangesMethod(view) {\n\t      var stmts = [];\n\t      if (view.animationBindingsMethod.isEmpty() && view.detectChangesInInputsMethod.isEmpty() &&\n\t          view.updateContentQueriesMethod.isEmpty() &&\n\t          view.afterContentLifecycleCallbacksMethod.isEmpty() &&\n\t          view.detectChangesRenderPropertiesMethod.isEmpty() &&\n\t          view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty() &&\n\t          view.viewContainers.length === 0 && view.viewChildren.length === 0) {\n\t          return stmts;\n\t      }\n\t      stmts.push.apply(stmts, view.animationBindingsMethod.finish());\n\t      stmts.push.apply(stmts, view.detectChangesInInputsMethod.finish());\n\t      view.viewContainers.forEach(function (viewContainer) {\n\t          stmts.push(viewContainer.callMethod('detectChangesInNestedViews', [DetectChangesVars.throwOnChange])\n\t              .toStmt());\n\t      });\n\t      var afterContentStmts = view.updateContentQueriesMethod.finish().concat(view.afterContentLifecycleCallbacksMethod.finish());\n\t      if (afterContentStmts.length > 0) {\n\t          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterContentStmts));\n\t      }\n\t      stmts.push.apply(stmts, view.detectChangesRenderPropertiesMethod.finish());\n\t      view.viewChildren.forEach(function (viewChild) {\n\t          stmts.push(viewChild.callMethod('detectChanges', [DetectChangesVars.throwOnChange]).toStmt());\n\t      });\n\t      var afterViewStmts = view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());\n\t      if (afterViewStmts.length > 0) {\n\t          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterViewStmts));\n\t      }\n\t      var varStmts = [];\n\t      var readVars = findReadVarNames(stmts);\n\t      if (readVars.has(DetectChangesVars.changed.name)) {\n\t          varStmts.push(DetectChangesVars.changed.set(literal(true)).toDeclStmt(BOOL_TYPE));\n\t      }\n\t      if (readVars.has(DetectChangesVars.changes.name)) {\n\t          varStmts.push(DetectChangesVars.changes.set(NULL_EXPR)\n\t              .toDeclStmt(new MapType(importType(resolveIdentifier(Identifiers.SimpleChange)))));\n\t      }\n\t      varStmts.push.apply(varStmts, createSharedBindingVariablesIfNeeded(stmts));\n\t      return varStmts.concat(stmts);\n\t  }\n\t  function addReturnValuefNotEmpty(statements, value) {\n\t      if (statements.length > 0) {\n\t          return statements.concat([new ReturnStatement(value)]);\n\t      }\n\t      else {\n\t          return statements;\n\t      }\n\t  }\n\t  function getContextType(view) {\n\t      if (view.viewType === ViewType.COMPONENT) {\n\t          return importType(view.component.type);\n\t      }\n\t      return DYNAMIC_TYPE;\n\t  }\n\t  function getChangeDetectionMode(view) {\n\t      var mode;\n\t      if (view.viewType === ViewType.COMPONENT) {\n\t          mode = isDefaultChangeDetectionStrategy(view.component.changeDetection) ?\n\t              ChangeDetectorStatus.CheckAlways :\n\t              ChangeDetectorStatus.CheckOnce;\n\t      }\n\t      else {\n\t          mode = ChangeDetectorStatus.CheckAlways;\n\t      }\n\t      return mode;\n\t  }\n\t  function generateVisitRootNodesMethod(view) {\n\t      var cbVar = variable('cb');\n\t      var ctxVar = variable('ctx');\n\t      var stmts = generateVisitNodesStmts(view.rootNodes, cbVar, ctxVar);\n\t      return new ClassMethod('visitRootNodesInternal', [new FnParam(cbVar.name, DYNAMIC_TYPE), new FnParam(ctxVar.name, DYNAMIC_TYPE)], stmts);\n\t  }\n\t  function generateVisitProjectableNodesMethod(view) {\n\t      var nodeIndexVar = variable('nodeIndex');\n\t      var ngContentIndexVar = variable('ngContentIndex');\n\t      var cbVar = variable('cb');\n\t      var ctxVar = variable('ctx');\n\t      var stmts = [];\n\t      view.nodes.forEach(function (node) {\n\t          if (node instanceof CompileElement && node.component) {\n\t              node.contentNodesByNgContentIndex.forEach(function (projectedNodes, ngContentIndex) {\n\t                  stmts.push(new IfStmt(nodeIndexVar.equals(literal(node.nodeIndex))\n\t                      .and(ngContentIndexVar.equals(literal(ngContentIndex))), generateVisitNodesStmts(projectedNodes, cbVar, ctxVar)));\n\t              });\n\t          }\n\t      });\n\t      return new ClassMethod('visitProjectableNodesInternal', [\n\t          new FnParam(nodeIndexVar.name, NUMBER_TYPE),\n\t          new FnParam(ngContentIndexVar.name, NUMBER_TYPE),\n\t          new FnParam(cbVar.name, DYNAMIC_TYPE), new FnParam(ctxVar.name, DYNAMIC_TYPE)\n\t      ], stmts);\n\t  }\n\t  function generateVisitNodesStmts(nodes, cb, ctx) {\n\t      var stmts = [];\n\t      nodes.forEach(function (node) {\n\t          switch (node.type) {\n\t              case CompileViewRootNodeType.Node:\n\t                  stmts.push(cb.callFn([node.expr, ctx]).toStmt());\n\t                  break;\n\t              case CompileViewRootNodeType.ViewContainer:\n\t                  stmts.push(cb.callFn([node.expr.prop('nativeElement'), ctx]).toStmt());\n\t                  stmts.push(node.expr.callMethod('visitNestedViewRootNodes', [cb, ctx]).toStmt());\n\t                  break;\n\t              case CompileViewRootNodeType.NgContent:\n\t                  stmts.push(THIS_EXPR.callMethod('visitProjectedNodes', [literal(node.ngContentIndex), cb, ctx])\n\t                      .toStmt());\n\t                  break;\n\t          }\n\t      });\n\t      return stmts;\n\t  }\n\t  function generateCreateEmbeddedViewsMethod(view) {\n\t      var nodeIndexVar = variable('nodeIndex');\n\t      var stmts = [];\n\t      view.nodes.forEach(function (node) {\n\t          if (node instanceof CompileElement) {\n\t              if (node.embeddedView) {\n\t                  var parentNodeIndex = node.isRootElement() ? null : node.parent.nodeIndex;\n\t                  stmts.push(new IfStmt(nodeIndexVar.equals(literal(node.nodeIndex)), [new ReturnStatement(node.embeddedView.classExpr.instantiate([\n\t                          ViewProperties.viewUtils, THIS_EXPR, literal(node.nodeIndex), node.renderNode,\n\t                          node.viewContainer\n\t                      ]))]));\n\t              }\n\t          }\n\t      });\n\t      if (stmts.length > 0) {\n\t          stmts.push(new ReturnStatement(NULL_EXPR));\n\t      }\n\t      return new ClassMethod('createEmbeddedViewInternal', [new FnParam(nodeIndexVar.name, NUMBER_TYPE)], stmts, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE]));\n\t  }\n\t\n\t  var ViewCompileResult = (function () {\n\t      function ViewCompileResult(statements, viewClassVar, dependencies) {\n\t          this.statements = statements;\n\t          this.viewClassVar = viewClassVar;\n\t          this.dependencies = dependencies;\n\t      }\n\t      return ViewCompileResult;\n\t  }());\n\t  var ViewCompiler = (function () {\n\t      function ViewCompiler(_genConfig, _schemaRegistry) {\n\t          this._genConfig = _genConfig;\n\t          this._schemaRegistry = _schemaRegistry;\n\t      }\n\t      ViewCompiler.prototype.compileComponent = function (component, template, styles, pipes, compiledAnimations) {\n\t          var dependencies = [];\n\t          var view = new CompileView(component, this._genConfig, pipes, styles, compiledAnimations, 0, CompileElement.createNull(), []);\n\t          var statements = [];\n\t          buildView(view, template, dependencies);\n\t          // Need to separate binding from creation to be able to refer to\n\t          // variables that have been declared after usage.\n\t          bindView(view, template, this._schemaRegistry);\n\t          finishView(view, statements);\n\t          return new ViewCompileResult(statements, view.classExpr.name, dependencies);\n\t      };\n\t      ViewCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      ViewCompiler.ctorParameters = [\n\t          { type: CompilerConfig, },\n\t          { type: ElementSchemaRegistry, },\n\t      ];\n\t      return ViewCompiler;\n\t  }());\n\t\n\t  var SourceModule = (function () {\n\t      function SourceModule(fileUrl, moduleUrl, source) {\n\t          this.fileUrl = fileUrl;\n\t          this.moduleUrl = moduleUrl;\n\t          this.source = source;\n\t      }\n\t      return SourceModule;\n\t  }());\n\t  // Returns all the source files and a mapping from modules to directives\n\t  function analyzeNgModules(programStaticSymbols, options, metadataResolver) {\n\t      var _a = _createNgModules(programStaticSymbols, options, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n\t      return _analyzeNgModules(ngModules, symbolsMissingModule);\n\t  }\n\t  function analyzeAndValidateNgModules(programStaticSymbols, options, metadataResolver) {\n\t      var result = analyzeNgModules(programStaticSymbols, options, metadataResolver);\n\t      if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n\t          var messages = result.symbolsMissingModule.map(function (s) { return (\"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"!\"); });\n\t          throw new Error(messages.join('\\n'));\n\t      }\n\t      return result;\n\t  }\n\t  // Wait for the directives in the given modules have been loaded\n\t  function loadNgModuleDirectives(ngModules) {\n\t      return Promise\n\t          .all(ListWrapper.flatten(ngModules.map(function (ngModule) { return ngModule.transitiveModule.directiveLoaders.map(function (loader) { return loader(); }); })))\n\t          .then(function () { });\n\t  }\n\t  function _analyzeNgModules(ngModuleMetas, symbolsMissingModule) {\n\t      var moduleMetasByRef = new Map();\n\t      ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n\t      var ngModuleByPipeOrDirective = new Map();\n\t      var ngModulesByFile = new Map();\n\t      var ngDirectivesByFile = new Map();\n\t      var filePaths = new Set();\n\t      // Looping over all modules to construct:\n\t      // - a map from file to modules `ngModulesByFile`,\n\t      // - a map from file to directives `ngDirectivesByFile`,\n\t      // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n\t      ngModuleMetas.forEach(function (ngModuleMeta) {\n\t          var srcFileUrl = ngModuleMeta.type.reference.filePath;\n\t          filePaths.add(srcFileUrl);\n\t          ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n\t          ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n\t              var fileUrl = dirIdentifier.reference.filePath;\n\t              filePaths.add(fileUrl);\n\t              ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n\t              ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n\t          });\n\t          ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n\t              var fileUrl = pipeIdentifier.reference.filePath;\n\t              filePaths.add(fileUrl);\n\t              ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n\t          });\n\t      });\n\t      var files = [];\n\t      filePaths.forEach(function (srcUrl) {\n\t          var directives = ngDirectivesByFile.get(srcUrl) || [];\n\t          var ngModules = ngModulesByFile.get(srcUrl) || [];\n\t          files.push({ srcUrl: srcUrl, directives: directives, ngModules: ngModules });\n\t      });\n\t      return {\n\t          // map directive/pipe to module\n\t          ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n\t          // list modules and directives for every source file\n\t          files: files,\n\t          ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n\t      };\n\t  }\n\t  var OfflineCompiler = (function () {\n\t      function OfflineCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _dirWrapperCompiler, _ngModuleCompiler, _outputEmitter, _localeId, _translationFormat, _animationParser) {\n\t          this._metadataResolver = _metadataResolver;\n\t          this._templateParser = _templateParser;\n\t          this._styleCompiler = _styleCompiler;\n\t          this._viewCompiler = _viewCompiler;\n\t          this._dirWrapperCompiler = _dirWrapperCompiler;\n\t          this._ngModuleCompiler = _ngModuleCompiler;\n\t          this._outputEmitter = _outputEmitter;\n\t          this._localeId = _localeId;\n\t          this._translationFormat = _translationFormat;\n\t          this._animationParser = _animationParser;\n\t          this._animationCompiler = new AnimationCompiler();\n\t      }\n\t      OfflineCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n\t      OfflineCompiler.prototype.compileModules = function (staticSymbols, options) {\n\t          var _this = this;\n\t          var _a = analyzeAndValidateNgModules(staticSymbols, options, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n\t          return loadNgModuleDirectives(ngModules).then(function () {\n\t              var sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.ngModules); });\n\t              return ListWrapper.flatten(sourceModules);\n\t          });\n\t      };\n\t      OfflineCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, ngModules) {\n\t          var _this = this;\n\t          var fileSuffix = _splitTypescriptSuffix(srcFileUrl)[1];\n\t          var statements = [];\n\t          var exportedVars = [];\n\t          var outputSourceModules = [];\n\t          // compile all ng modules\n\t          exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n\t          // compile directive wrappers\n\t          exportedVars.push.apply(exportedVars, directives.map(function (directiveType) { return _this._compileDirectiveWrapper(directiveType, statements); }));\n\t          // compile components\n\t          directives.forEach(function (dirType) {\n\t              var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n\t              if (!compMeta.isComponent) {\n\t                  return Promise.resolve(null);\n\t              }\n\t              var ngModule = ngModuleByPipeOrDirective.get(dirType);\n\t              if (!ngModule) {\n\t                  throw new Error(\"Internal Error: cannot determine the module for component \" + compMeta.type.name + \"!\");\n\t              }\n\t              _assertComponent(compMeta);\n\t              // compile styles\n\t              var stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n\t              stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n\t                  outputSourceModules.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n\t              });\n\t              // compile components\n\t              exportedVars.push(_this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements), _this._compileComponent(compMeta, ngModule, ngModule.transitiveModule.directives, stylesCompileResults.componentStylesheet, fileSuffix, statements));\n\t          });\n\t          if (statements.length > 0) {\n\t              var srcModule = this._codegenSourceModule(srcFileUrl, _ngfactoryModuleUrl(srcFileUrl), statements, exportedVars);\n\t              outputSourceModules.unshift(srcModule);\n\t          }\n\t          return outputSourceModules;\n\t      };\n\t      OfflineCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n\t          var ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n\t          var providers = [];\n\t          if (this._localeId) {\n\t              providers.push(new CompileProviderMetadata({\n\t                  token: resolveIdentifierToken(Identifiers.LOCALE_ID),\n\t                  useValue: this._localeId,\n\t              }));\n\t          }\n\t          if (this._translationFormat) {\n\t              providers.push(new CompileProviderMetadata({\n\t                  token: resolveIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n\t                  useValue: this._translationFormat\n\t              }));\n\t          }\n\t          var appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n\t          appCompileResult.dependencies.forEach(function (dep) {\n\t              dep.placeholder.name = _componentFactoryName(dep.comp);\n\t              dep.placeholder.moduleUrl = _ngfactoryModuleUrl(dep.comp.moduleUrl);\n\t          });\n\t          targetStatements.push.apply(targetStatements, appCompileResult.statements);\n\t          return appCompileResult.ngModuleFactoryVar;\n\t      };\n\t      OfflineCompiler.prototype._compileDirectiveWrapper = function (directiveType, targetStatements) {\n\t          var dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n\t          var dirCompileResult = this._dirWrapperCompiler.compile(dirMeta);\n\t          targetStatements.push.apply(targetStatements, dirCompileResult.statements);\n\t          return dirCompileResult.dirWrapperClassVar;\n\t      };\n\t      OfflineCompiler.prototype._compileComponentFactory = function (compMeta, ngModule, fileSuffix, targetStatements) {\n\t          var hostMeta = createHostComponentMeta(compMeta);\n\t          var hostViewFactoryVar = this._compileComponent(hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements);\n\t          var compFactoryVar = _componentFactoryName(compMeta.type);\n\t          targetStatements.push(variable(compFactoryVar)\n\t              .set(importExpr(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)])\n\t              .instantiate([\n\t              literal(compMeta.selector),\n\t              variable(hostViewFactoryVar),\n\t              importExpr(compMeta.type),\n\t          ], importType(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)], [TypeModifier.Const])))\n\t              .toDeclStmt(null, [StmtModifier.Final]));\n\t          return compFactoryVar;\n\t      };\n\t      OfflineCompiler.prototype._compileComponent = function (compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix, targetStatements) {\n\t          var _this = this;\n\t          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n\t          var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n\t          var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n\t          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, ngModule.schemas, compMeta.type.name);\n\t          var stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n\t          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n\t          var viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, pipes, compiledAnimations);\n\t          if (componentStyles) {\n\t              targetStatements.push.apply(targetStatements, _resolveStyleStatements(componentStyles, fileSuffix));\n\t          }\n\t          compiledAnimations.forEach(function (entry) { return targetStatements.push.apply(targetStatements, entry.statements); });\n\t          targetStatements.push.apply(targetStatements, _resolveViewStatements(viewResult));\n\t          return viewResult.viewClassVar;\n\t      };\n\t      OfflineCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n\t          _resolveStyleStatements(stylesCompileResult, fileSuffix);\n\t          return this._codegenSourceModule(fileUrl, _stylesModuleUrl(stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n\t      };\n\t      OfflineCompiler.prototype._codegenSourceModule = function (fileUrl, moduleUrl, statements, exportedVars) {\n\t          return new SourceModule(fileUrl, moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));\n\t      };\n\t      return OfflineCompiler;\n\t  }());\n\t  function _resolveViewStatements(compileResult) {\n\t      compileResult.dependencies.forEach(function (dep) {\n\t          if (dep instanceof ViewClassDependency) {\n\t              var vfd = dep;\n\t              vfd.placeholder.moduleUrl = _ngfactoryModuleUrl(vfd.comp.moduleUrl);\n\t          }\n\t          else if (dep instanceof ComponentFactoryDependency) {\n\t              var cfd = dep;\n\t              cfd.placeholder.name = _componentFactoryName(cfd.comp);\n\t              cfd.placeholder.moduleUrl = _ngfactoryModuleUrl(cfd.comp.moduleUrl);\n\t          }\n\t          else if (dep instanceof DirectiveWrapperDependency) {\n\t              var dwd = dep;\n\t              dwd.placeholder.moduleUrl = _ngfactoryModuleUrl(dwd.dir.moduleUrl);\n\t          }\n\t      });\n\t      return compileResult.statements;\n\t  }\n\t  function _resolveStyleStatements(compileResult, fileSuffix) {\n\t      compileResult.dependencies.forEach(function (dep) {\n\t          dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix);\n\t      });\n\t      return compileResult.statements;\n\t  }\n\t  function _ngfactoryModuleUrl(dirUrl) {\n\t      var urlWithSuffix = _splitTypescriptSuffix(dirUrl);\n\t      return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n\t  }\n\t  function _componentFactoryName(comp) {\n\t      return comp.name + \"NgFactory\";\n\t  }\n\t  function _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n\t      return shim ? stylesheetUrl + \".shim\" + suffix : \"\" + stylesheetUrl + suffix;\n\t  }\n\t  function _assertComponent(meta) {\n\t      if (!meta.isComponent) {\n\t          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n\t      }\n\t  }\n\t  function _splitTypescriptSuffix(path) {\n\t      if (path.endsWith('.d.ts')) {\n\t          return [path.slice(0, -5), '.ts'];\n\t      }\n\t      var lastDot = path.lastIndexOf('.');\n\t      if (lastDot !== -1) {\n\t          return [path.substring(0, lastDot), path.substring(lastDot)];\n\t      }\n\t      return [path, ''];\n\t  }\n\t  // Load the NgModules and check\n\t  // that all directives / pipes that are present in the program\n\t  // are also declared by a module.\n\t  function _createNgModules(programStaticSymbols, options, metadataResolver) {\n\t      var ngModules = new Map();\n\t      var programPipesAndDirectives = [];\n\t      var ngModulePipesAndDirective = new Set();\n\t      var addNgModule = function (staticSymbol) {\n\t          if (ngModules.has(staticSymbol)) {\n\t              return false;\n\t          }\n\t          var ngModule = metadataResolver.getUnloadedNgModuleMetadata(staticSymbol, false, false);\n\t          if (ngModule) {\n\t              ngModules.set(ngModule.type.reference, ngModule);\n\t              ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n\t              ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n\t              if (options.transitiveModules) {\n\t                  // For every input modules add the list of transitively included modules\n\t                  ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.type.reference); });\n\t              }\n\t          }\n\t          return !!ngModule;\n\t      };\n\t      programStaticSymbols.forEach(function (staticSymbol) {\n\t          if (!addNgModule(staticSymbol) &&\n\t              (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n\t              programPipesAndDirectives.push(staticSymbol);\n\t          }\n\t      });\n\t      // Throw an error if any of the program pipe or directives is not declared by a module\n\t      var symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n\t      return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n\t  }\n\t\n\t  var StylesCollectionEntry = (function () {\n\t      function StylesCollectionEntry(time, value) {\n\t          this.time = time;\n\t          this.value = value;\n\t      }\n\t      StylesCollectionEntry.prototype.matches = function (time, value) {\n\t          return time == this.time && value == this.value;\n\t      };\n\t      return StylesCollectionEntry;\n\t  }());\n\t  var StylesCollection = (function () {\n\t      function StylesCollection() {\n\t          this.styles = {};\n\t      }\n\t      StylesCollection.prototype.insertAtTime = function (property, time, value) {\n\t          var tuple = new StylesCollectionEntry(time, value);\n\t          var entries = this.styles[property];\n\t          if (!isPresent(entries)) {\n\t              entries = this.styles[property] = [];\n\t          }\n\t          // insert this at the right stop in the array\n\t          // this way we can keep it sorted\n\t          var insertionIndex = 0;\n\t          for (var i = entries.length - 1; i >= 0; i--) {\n\t              if (entries[i].time <= time) {\n\t                  insertionIndex = i + 1;\n\t                  break;\n\t              }\n\t          }\n\t          entries.splice(insertionIndex, 0, tuple);\n\t      };\n\t      StylesCollection.prototype.getByIndex = function (property, index) {\n\t          var items = this.styles[property];\n\t          if (isPresent(items)) {\n\t              return index >= items.length ? null : items[index];\n\t          }\n\t          return null;\n\t      };\n\t      StylesCollection.prototype.indexOfAtOrBeforeTime = function (property, time) {\n\t          var entries = this.styles[property];\n\t          if (isPresent(entries)) {\n\t              for (var i = entries.length - 1; i >= 0; i--) {\n\t                  if (entries[i].time <= time)\n\t                      return i;\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      return StylesCollection;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$16 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var _INITIAL_KEYFRAME = 0;\n\t  var _TERMINAL_KEYFRAME = 1;\n\t  var _ONE_SECOND = 1000;\n\t  var AnimationParseError = (function (_super) {\n\t      __extends$16(AnimationParseError, _super);\n\t      function AnimationParseError(message) {\n\t          _super.call(this, null, message);\n\t      }\n\t      AnimationParseError.prototype.toString = function () { return \"\" + this.msg; };\n\t      return AnimationParseError;\n\t  }(ParseError));\n\t  var AnimationEntryParseResult = (function () {\n\t      function AnimationEntryParseResult(ast, errors) {\n\t          this.ast = ast;\n\t          this.errors = errors;\n\t      }\n\t      return AnimationEntryParseResult;\n\t  }());\n\t  var AnimationParser = (function () {\n\t      function AnimationParser(_schema) {\n\t          this._schema = _schema;\n\t      }\n\t      AnimationParser.prototype.parseComponent = function (component) {\n\t          var _this = this;\n\t          var errors = [];\n\t          var componentName = component.type.name;\n\t          var animationTriggerNames = new Set();\n\t          var asts = component.template.animations.map(function (entry) {\n\t              var result = _this.parseEntry(entry);\n\t              var ast = result.ast;\n\t              var triggerName = ast.name;\n\t              if (animationTriggerNames.has(triggerName)) {\n\t                  result.errors.push(new AnimationParseError(\"The animation trigger \\\"\" + triggerName + \"\\\" has already been registered for the \" + componentName + \" component\"));\n\t              }\n\t              else {\n\t                  animationTriggerNames.add(triggerName);\n\t              }\n\t              if (result.errors.length > 0) {\n\t                  var errorMessage_1 = \"- Unable to parse the animation sequence for \\\"\" + triggerName + \"\\\" on the \" + componentName + \" component due to the following errors:\";\n\t                  result.errors.forEach(function (error) { errorMessage_1 += '\\n-- ' + error.msg; });\n\t                  errors.push(errorMessage_1);\n\t              }\n\t              return ast;\n\t          });\n\t          if (errors.length > 0) {\n\t              var errorString = errors.join('\\n');\n\t              throw new Error(\"Animation parse errors:\\n\" + errorString);\n\t          }\n\t          return asts;\n\t      };\n\t      AnimationParser.prototype.parseEntry = function (entry) {\n\t          var _this = this;\n\t          var errors = [];\n\t          var stateStyles = {};\n\t          var transitions = [];\n\t          var stateDeclarationAsts = [];\n\t          entry.definitions.forEach(function (def) {\n\t              if (def instanceof CompileAnimationStateDeclarationMetadata) {\n\t                  _parseAnimationDeclarationStates(def, _this._schema, errors).forEach(function (ast) {\n\t                      stateDeclarationAsts.push(ast);\n\t                      stateStyles[ast.stateName] = ast.styles;\n\t                  });\n\t              }\n\t              else {\n\t                  transitions.push(def);\n\t              }\n\t          });\n\t          var stateTransitionAsts = transitions.map(function (transDef) { return _parseAnimationStateTransition(transDef, stateStyles, _this._schema, errors); });\n\t          var ast = new AnimationEntryAst(entry.name, stateDeclarationAsts, stateTransitionAsts);\n\t          return new AnimationEntryParseResult(ast, errors);\n\t      };\n\t      AnimationParser.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      AnimationParser.ctorParameters = [\n\t          { type: ElementSchemaRegistry, },\n\t      ];\n\t      return AnimationParser;\n\t  }());\n\t  function _parseAnimationDeclarationStates(stateMetadata, schema, errors) {\n\t      var normalizedStyles = _normalizeStyleMetadata(stateMetadata.styles, {}, schema, errors, false);\n\t      var defStyles = new AnimationStylesAst(normalizedStyles);\n\t      var states = stateMetadata.stateNameExpr.split(/\\s*,\\s*/);\n\t      return states.map(function (state) { return new AnimationStateDeclarationAst(state, defStyles); });\n\t  }\n\t  function _parseAnimationStateTransition(transitionStateMetadata, stateStyles, schema, errors) {\n\t      var styles = new StylesCollection();\n\t      var transitionExprs = [];\n\t      var transitionStates = transitionStateMetadata.stateChangeExpr.split(/\\s*,\\s*/);\n\t      transitionStates.forEach(function (expr) { transitionExprs.push.apply(transitionExprs, _parseAnimationTransitionExpr(expr, errors)); });\n\t      var entry = _normalizeAnimationEntry(transitionStateMetadata.steps);\n\t      var animation = _normalizeStyleSteps(entry, stateStyles, schema, errors);\n\t      var animationAst = _parseTransitionAnimation(animation, 0, styles, stateStyles, errors);\n\t      if (errors.length == 0) {\n\t          _fillAnimationAstStartingKeyframes(animationAst, styles, errors);\n\t      }\n\t      var stepsAst = (animationAst instanceof AnimationWithStepsAst) ?\n\t          animationAst :\n\t          new AnimationSequenceAst([animationAst]);\n\t      return new AnimationStateTransitionAst(transitionExprs, stepsAst);\n\t  }\n\t  function _parseAnimationAlias(alias, errors) {\n\t      switch (alias) {\n\t          case ':enter':\n\t              return 'void => *';\n\t          case ':leave':\n\t              return '* => void';\n\t          default:\n\t              errors.push(new AnimationParseError(\"the transition alias value \\\"\" + alias + \"\\\" is not supported\"));\n\t              return '* => *';\n\t      }\n\t  }\n\t  function _parseAnimationTransitionExpr(eventStr, errors) {\n\t      var expressions = [];\n\t      if (eventStr[0] == ':') {\n\t          eventStr = _parseAnimationAlias(eventStr, errors);\n\t      }\n\t      var match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n\t      if (!isPresent(match) || match.length < 4) {\n\t          errors.push(new AnimationParseError(\"the provided \" + eventStr + \" is not of a supported format\"));\n\t          return expressions;\n\t      }\n\t      var fromState = match[1];\n\t      var separator = match[2];\n\t      var toState = match[3];\n\t      expressions.push(new AnimationStateTransitionExpression(fromState, toState));\n\t      var isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n\t      if (separator[0] == '<' && !isFullAnyStateExpr) {\n\t          expressions.push(new AnimationStateTransitionExpression(toState, fromState));\n\t      }\n\t      return expressions;\n\t  }\n\t  function _normalizeAnimationEntry(entry) {\n\t      return Array.isArray(entry) ? new CompileAnimationSequenceMetadata(entry) : entry;\n\t  }\n\t  function _normalizeStyleMetadata(entry, stateStyles, schema, errors, permitStateReferences) {\n\t      var normalizedStyles = [];\n\t      entry.styles.forEach(function (styleEntry) {\n\t          if (typeof styleEntry === 'string') {\n\t              if (permitStateReferences) {\n\t                  normalizedStyles.push.apply(normalizedStyles, _resolveStylesFromState(styleEntry, stateStyles, errors));\n\t              }\n\t              else {\n\t                  errors.push(new AnimationParseError(\"State based animations cannot contain references to other states\"));\n\t              }\n\t          }\n\t          else {\n\t              var stylesObj_1 = styleEntry;\n\t              var normalizedStylesObj_1 = {};\n\t              Object.keys(stylesObj_1).forEach(function (propName) {\n\t                  var normalizedProp = schema.normalizeAnimationStyleProperty(propName);\n\t                  var normalizedOutput = schema.normalizeAnimationStyleValue(normalizedProp, propName, stylesObj_1[propName]);\n\t                  var normalizationError = normalizedOutput['error'];\n\t                  if (normalizationError) {\n\t                      errors.push(new AnimationParseError(normalizationError));\n\t                  }\n\t                  normalizedStylesObj_1[normalizedProp] = normalizedOutput['value'];\n\t              });\n\t              normalizedStyles.push(normalizedStylesObj_1);\n\t          }\n\t      });\n\t      return normalizedStyles;\n\t  }\n\t  function _normalizeStyleSteps(entry, stateStyles, schema, errors) {\n\t      var steps = _normalizeStyleStepEntry(entry, stateStyles, schema, errors);\n\t      return (entry instanceof CompileAnimationGroupMetadata) ?\n\t          new CompileAnimationGroupMetadata(steps) :\n\t          new CompileAnimationSequenceMetadata(steps);\n\t  }\n\t  function _mergeAnimationStyles(stylesList, newItem) {\n\t      if (typeof newItem === 'object' && newItem !== null && stylesList.length > 0) {\n\t          var lastIndex = stylesList.length - 1;\n\t          var lastItem = stylesList[lastIndex];\n\t          if (typeof lastItem === 'object' && lastItem !== null) {\n\t              stylesList[lastIndex] = StringMapWrapper.merge(lastItem, newItem);\n\t              return;\n\t          }\n\t      }\n\t      stylesList.push(newItem);\n\t  }\n\t  function _normalizeStyleStepEntry(entry, stateStyles, schema, errors) {\n\t      var steps;\n\t      if (entry instanceof CompileAnimationWithStepsMetadata) {\n\t          steps = entry.steps;\n\t      }\n\t      else {\n\t          return [entry];\n\t      }\n\t      var newSteps = [];\n\t      var combinedStyles;\n\t      steps.forEach(function (step) {\n\t          if (step instanceof CompileAnimationStyleMetadata) {\n\t              // this occurs when a style step is followed by a previous style step\n\t              // or when the first style step is run. We want to concatenate all subsequent\n\t              // style steps together into a single style step such that we have the correct\n\t              // starting keyframe data to pass into the animation player.\n\t              if (!isPresent(combinedStyles)) {\n\t                  combinedStyles = [];\n\t              }\n\t              _normalizeStyleMetadata(step, stateStyles, schema, errors, true)\n\t                  .forEach(function (entry) { _mergeAnimationStyles(combinedStyles, entry); });\n\t          }\n\t          else {\n\t              // it is important that we create a metadata entry of the combined styles\n\t              // before we go on an process the animate, sequence or group metadata steps.\n\t              // This will ensure that the AST will have the previous styles painted on\n\t              // screen before any further animations that use the styles take place.\n\t              if (isPresent(combinedStyles)) {\n\t                  newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n\t                  combinedStyles = null;\n\t              }\n\t              if (step instanceof CompileAnimationAnimateMetadata) {\n\t                  // we do not recurse into CompileAnimationAnimateMetadata since\n\t                  // those style steps are not going to be squashed\n\t                  var animateStyleValue = step.styles;\n\t                  if (animateStyleValue instanceof CompileAnimationStyleMetadata) {\n\t                      animateStyleValue.styles =\n\t                          _normalizeStyleMetadata(animateStyleValue, stateStyles, schema, errors, true);\n\t                  }\n\t                  else if (animateStyleValue instanceof CompileAnimationKeyframesSequenceMetadata) {\n\t                      animateStyleValue.steps.forEach(function (step) {\n\t                          step.styles = _normalizeStyleMetadata(step, stateStyles, schema, errors, true);\n\t                      });\n\t                  }\n\t              }\n\t              else if (step instanceof CompileAnimationWithStepsMetadata) {\n\t                  var innerSteps = _normalizeStyleStepEntry(step, stateStyles, schema, errors);\n\t                  step = step instanceof CompileAnimationGroupMetadata ?\n\t                      new CompileAnimationGroupMetadata(innerSteps) :\n\t                      new CompileAnimationSequenceMetadata(innerSteps);\n\t              }\n\t              newSteps.push(step);\n\t          }\n\t      });\n\t      // this happens when only styles were animated within the sequence\n\t      if (isPresent(combinedStyles)) {\n\t          newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n\t      }\n\t      return newSteps;\n\t  }\n\t  function _resolveStylesFromState(stateName, stateStyles, errors) {\n\t      var styles = [];\n\t      if (stateName[0] != ':') {\n\t          errors.push(new AnimationParseError(\"Animation states via styles must be prefixed with a \\\":\\\"\"));\n\t      }\n\t      else {\n\t          var normalizedStateName = stateName.substring(1);\n\t          var value = stateStyles[normalizedStateName];\n\t          if (!isPresent(value)) {\n\t              errors.push(new AnimationParseError(\"Unable to apply styles due to missing a state: \\\"\" + normalizedStateName + \"\\\"\"));\n\t          }\n\t          else {\n\t              value.styles.forEach(function (stylesEntry) {\n\t                  if (typeof stylesEntry === 'object' && stylesEntry !== null) {\n\t                      styles.push(stylesEntry);\n\t                  }\n\t              });\n\t          }\n\t      }\n\t      return styles;\n\t  }\n\t  var _AnimationTimings = (function () {\n\t      function _AnimationTimings(duration, delay, easing) {\n\t          this.duration = duration;\n\t          this.delay = delay;\n\t          this.easing = easing;\n\t      }\n\t      return _AnimationTimings;\n\t  }());\n\t  function _parseAnimationKeyframes(keyframeSequence, currentTime, collectedStyles, stateStyles, errors) {\n\t      var totalEntries = keyframeSequence.steps.length;\n\t      var totalOffsets = 0;\n\t      keyframeSequence.steps.forEach(function (step) { return totalOffsets += (isPresent(step.offset) ? 1 : 0); });\n\t      if (totalOffsets > 0 && totalOffsets < totalEntries) {\n\t          errors.push(new AnimationParseError(\"Not all style() entries contain an offset for the provided keyframe()\"));\n\t          totalOffsets = totalEntries;\n\t      }\n\t      var limit = totalEntries - 1;\n\t      var margin = totalOffsets == 0 ? (1 / limit) : 0;\n\t      var rawKeyframes = [];\n\t      var index = 0;\n\t      var doSortKeyframes = false;\n\t      var lastOffset = 0;\n\t      keyframeSequence.steps.forEach(function (styleMetadata) {\n\t          var offset = styleMetadata.offset;\n\t          var keyframeStyles = {};\n\t          styleMetadata.styles.forEach(function (entry) {\n\t              Object.keys(entry).forEach(function (prop) {\n\t                  if (prop != 'offset') {\n\t                      keyframeStyles[prop] = entry[prop];\n\t                  }\n\t              });\n\t          });\n\t          if (isPresent(offset)) {\n\t              doSortKeyframes = doSortKeyframes || (offset < lastOffset);\n\t          }\n\t          else {\n\t              offset = index == limit ? _TERMINAL_KEYFRAME : (margin * index);\n\t          }\n\t          rawKeyframes.push([offset, keyframeStyles]);\n\t          lastOffset = offset;\n\t          index++;\n\t      });\n\t      if (doSortKeyframes) {\n\t          rawKeyframes.sort(function (a, b) { return a[0] <= b[0] ? -1 : 1; });\n\t      }\n\t      var firstKeyframe = rawKeyframes[0];\n\t      if (firstKeyframe[0] != _INITIAL_KEYFRAME) {\n\t          rawKeyframes.splice(0, 0, firstKeyframe = [_INITIAL_KEYFRAME, {}]);\n\t      }\n\t      var firstKeyframeStyles = firstKeyframe[1];\n\t      limit = rawKeyframes.length - 1;\n\t      var lastKeyframe = rawKeyframes[limit];\n\t      if (lastKeyframe[0] != _TERMINAL_KEYFRAME) {\n\t          rawKeyframes.push(lastKeyframe = [_TERMINAL_KEYFRAME, {}]);\n\t          limit++;\n\t      }\n\t      var lastKeyframeStyles = lastKeyframe[1];\n\t      for (var i = 1; i <= limit; i++) {\n\t          var entry = rawKeyframes[i];\n\t          var styles = entry[1];\n\t          Object.keys(styles).forEach(function (prop) {\n\t              if (!isPresent(firstKeyframeStyles[prop])) {\n\t                  firstKeyframeStyles[prop] = FILL_STYLE_FLAG;\n\t              }\n\t          });\n\t      }\n\t      var _loop_1 = function(i) {\n\t          var entry = rawKeyframes[i];\n\t          var styles = entry[1];\n\t          Object.keys(styles).forEach(function (prop) {\n\t              if (!isPresent(lastKeyframeStyles[prop])) {\n\t                  lastKeyframeStyles[prop] = styles[prop];\n\t              }\n\t          });\n\t      };\n\t      for (var i = limit - 1; i >= 0; i--) {\n\t          _loop_1(i);\n\t      }\n\t      return rawKeyframes.map(function (entry) { return new AnimationKeyframeAst(entry[0], new AnimationStylesAst([entry[1]])); });\n\t  }\n\t  function _parseTransitionAnimation(entry, currentTime, collectedStyles, stateStyles, errors) {\n\t      var ast;\n\t      var playTime = 0;\n\t      var startingTime = currentTime;\n\t      if (entry instanceof CompileAnimationWithStepsMetadata) {\n\t          var maxDuration_1 = 0;\n\t          var steps_1 = [];\n\t          var isGroup_1 = entry instanceof CompileAnimationGroupMetadata;\n\t          var previousStyles_1;\n\t          entry.steps.forEach(function (entry) {\n\t              // these will get picked up by the next step...\n\t              var time = isGroup_1 ? startingTime : currentTime;\n\t              if (entry instanceof CompileAnimationStyleMetadata) {\n\t                  entry.styles.forEach(function (stylesEntry) {\n\t                      // by this point we know that we only have stringmap values\n\t                      var map = stylesEntry;\n\t                      Object.keys(map).forEach(function (prop) { collectedStyles.insertAtTime(prop, time, map[prop]); });\n\t                  });\n\t                  previousStyles_1 = entry.styles;\n\t                  return;\n\t              }\n\t              var innerAst = _parseTransitionAnimation(entry, time, collectedStyles, stateStyles, errors);\n\t              if (isPresent(previousStyles_1)) {\n\t                  if (entry instanceof CompileAnimationWithStepsMetadata) {\n\t                      var startingStyles = new AnimationStylesAst(previousStyles_1);\n\t                      steps_1.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n\t                  }\n\t                  else {\n\t                      var innerStep = innerAst;\n\t                      (_a = innerStep.startingStyles.styles).push.apply(_a, previousStyles_1);\n\t                  }\n\t                  previousStyles_1 = null;\n\t              }\n\t              var astDuration = innerAst.playTime;\n\t              currentTime += astDuration;\n\t              playTime += astDuration;\n\t              maxDuration_1 = Math.max(astDuration, maxDuration_1);\n\t              steps_1.push(innerAst);\n\t              var _a;\n\t          });\n\t          if (isPresent(previousStyles_1)) {\n\t              var startingStyles = new AnimationStylesAst(previousStyles_1);\n\t              steps_1.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n\t          }\n\t          if (isGroup_1) {\n\t              ast = new AnimationGroupAst(steps_1);\n\t              playTime = maxDuration_1;\n\t              currentTime = startingTime + playTime;\n\t          }\n\t          else {\n\t              ast = new AnimationSequenceAst(steps_1);\n\t          }\n\t      }\n\t      else if (entry instanceof CompileAnimationAnimateMetadata) {\n\t          var timings = _parseTimeExpression(entry.timings, errors);\n\t          var styles = entry.styles;\n\t          var keyframes = void 0;\n\t          if (styles instanceof CompileAnimationKeyframesSequenceMetadata) {\n\t              keyframes =\n\t                  _parseAnimationKeyframes(styles, currentTime, collectedStyles, stateStyles, errors);\n\t          }\n\t          else {\n\t              var styleData = styles;\n\t              var offset = _TERMINAL_KEYFRAME;\n\t              var styleAst = new AnimationStylesAst(styleData.styles);\n\t              var keyframe = new AnimationKeyframeAst(offset, styleAst);\n\t              keyframes = [keyframe];\n\t          }\n\t          ast = new AnimationStepAst(new AnimationStylesAst([]), keyframes, timings.duration, timings.delay, timings.easing);\n\t          playTime = timings.duration + timings.delay;\n\t          currentTime += playTime;\n\t          keyframes.forEach(function (keyframe /** TODO #9100 */) { return keyframe.styles.styles.forEach(function (entry /** TODO #9100 */) { return Object.keys(entry).forEach(function (prop) { collectedStyles.insertAtTime(prop, currentTime, entry[prop]); }); }); });\n\t      }\n\t      else {\n\t          // if the code reaches this stage then an error\n\t          // has already been populated within the _normalizeStyleSteps()\n\t          // operation...\n\t          ast = new AnimationStepAst(null, [], 0, 0, '');\n\t      }\n\t      ast.playTime = playTime;\n\t      ast.startTime = startingTime;\n\t      return ast;\n\t  }\n\t  function _fillAnimationAstStartingKeyframes(ast, collectedStyles, errors) {\n\t      // steps that only contain style will not be filled\n\t      if ((ast instanceof AnimationStepAst) && ast.keyframes.length > 0) {\n\t          var keyframes = ast.keyframes;\n\t          if (keyframes.length == 1) {\n\t              var endKeyframe = keyframes[0];\n\t              var startKeyframe = _createStartKeyframeFromEndKeyframe(endKeyframe, ast.startTime, ast.playTime, collectedStyles, errors);\n\t              ast.keyframes = [startKeyframe, endKeyframe];\n\t          }\n\t      }\n\t      else if (ast instanceof AnimationWithStepsAst) {\n\t          ast.steps.forEach(function (entry) { return _fillAnimationAstStartingKeyframes(entry, collectedStyles, errors); });\n\t      }\n\t  }\n\t  function _parseTimeExpression(exp, errors) {\n\t      var regex = /^([\\.\\d]+)(m?s)(?:\\s+([\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?/i;\n\t      var duration;\n\t      var delay = 0;\n\t      var easing = null;\n\t      if (typeof exp === 'string') {\n\t          var matches = exp.match(regex);\n\t          if (matches === null) {\n\t              errors.push(new AnimationParseError(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\"));\n\t              return new _AnimationTimings(0, 0, null);\n\t          }\n\t          var durationMatch = parseFloat(matches[1]);\n\t          var durationUnit = matches[2];\n\t          if (durationUnit == 's') {\n\t              durationMatch *= _ONE_SECOND;\n\t          }\n\t          duration = Math.floor(durationMatch);\n\t          var delayMatch = matches[3];\n\t          var delayUnit = matches[4];\n\t          if (isPresent(delayMatch)) {\n\t              var delayVal = parseFloat(delayMatch);\n\t              if (isPresent(delayUnit) && delayUnit == 's') {\n\t                  delayVal *= _ONE_SECOND;\n\t              }\n\t              delay = Math.floor(delayVal);\n\t          }\n\t          var easingVal = matches[5];\n\t          if (!isBlank(easingVal)) {\n\t              easing = easingVal;\n\t          }\n\t      }\n\t      else {\n\t          duration = exp;\n\t      }\n\t      return new _AnimationTimings(duration, delay, easing);\n\t  }\n\t  function _createStartKeyframeFromEndKeyframe(endKeyframe, startTime, duration, collectedStyles, errors) {\n\t      var values = {};\n\t      var endTime = startTime + duration;\n\t      endKeyframe.styles.styles.forEach(function (styleData) {\n\t          Object.keys(styleData).forEach(function (prop) {\n\t              var val = styleData[prop];\n\t              if (prop == 'offset')\n\t                  return;\n\t              var resultIndex = collectedStyles.indexOfAtOrBeforeTime(prop, startTime);\n\t              var resultEntry /** TODO #9100 */, nextEntry /** TODO #9100 */, value;\n\t              if (isPresent(resultIndex)) {\n\t                  resultEntry = collectedStyles.getByIndex(prop, resultIndex);\n\t                  value = resultEntry.value;\n\t                  nextEntry = collectedStyles.getByIndex(prop, resultIndex + 1);\n\t              }\n\t              else {\n\t                  // this is a flag that the runtime code uses to pass\n\t                  // in a value either from the state declaration styles\n\t                  // or using the AUTO_STYLE value (e.g. getComputedStyle)\n\t                  value = FILL_STYLE_FLAG;\n\t              }\n\t              if (isPresent(nextEntry) && !nextEntry.matches(endTime, val)) {\n\t                  errors.push(new AnimationParseError(\"The animated CSS property \\\"\" + prop + \"\\\" unexpectedly changes between steps \\\"\" + resultEntry.time + \"ms\\\" and \\\"\" + endTime + \"ms\\\" at \\\"\" + nextEntry.time + \"ms\\\"\"));\n\t              }\n\t              values[prop] = value;\n\t          });\n\t      });\n\t      return new AnimationKeyframeAst(_INITIAL_KEYFRAME, new AnimationStylesAst([values]));\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  /**\n\t   * An interface for retrieving documents by URL that the compiler uses\n\t   * to load templates.\n\t   */\n\t  var ResourceLoader = (function () {\n\t      function ResourceLoader() {\n\t      }\n\t      ResourceLoader.prototype.get = function (url) { return null; };\n\t      return ResourceLoader;\n\t  }());\n\t\n\t  var _ASSET_SCHEME = 'asset:';\n\t  /**\n\t   * Create a {@link UrlResolver} with no package prefix.\n\t   */\n\t  function createUrlResolverWithoutPackagePrefix() {\n\t      return new UrlResolver();\n\t  }\n\t  function createOfflineCompileUrlResolver() {\n\t      return new UrlResolver(_ASSET_SCHEME);\n\t  }\n\t  /**\n\t   * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n\t   */\n\t  var DEFAULT_PACKAGE_URL_PROVIDER = {\n\t      provide: _angular_core.PACKAGE_ROOT_URL,\n\t      useValue: '/'\n\t  };\n\t  /**\n\t   * Used by the {@link Compiler} when resolving HTML and CSS template URLs.\n\t   *\n\t   * This class can be overridden by the application developer to create custom behavior.\n\t   *\n\t   * See {@link Compiler}\n\t   *\n\t   * ## Example\n\t   *\n\t   * {@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n\t   *\n\t   * @security  When compiling templates at runtime, you must\n\t   * ensure that the entire template comes from a trusted source.\n\t   * Attacker-controlled data introduced by a template could expose your\n\t   * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n\t   */\n\t  var UrlResolver = (function () {\n\t      function UrlResolver(_packagePrefix) {\n\t          if (_packagePrefix === void 0) { _packagePrefix = null; }\n\t          this._packagePrefix = _packagePrefix;\n\t      }\n\t      /**\n\t       * Resolves the `url` given the `baseUrl`:\n\t       * - when the `url` is null, the `baseUrl` is returned,\n\t       * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n\t       * `baseUrl` and `url`,\n\t       * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n\t       * returned as is (ignoring the `baseUrl`)\n\t       */\n\t      UrlResolver.prototype.resolve = function (baseUrl, url) {\n\t          var resolvedUrl = url;\n\t          if (isPresent(baseUrl) && baseUrl.length > 0) {\n\t              resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n\t          }\n\t          var resolvedParts = _split(resolvedUrl);\n\t          var prefix = this._packagePrefix;\n\t          if (isPresent(prefix) && isPresent(resolvedParts) &&\n\t              resolvedParts[_ComponentIndex.Scheme] == 'package') {\n\t              var path = resolvedParts[_ComponentIndex.Path];\n\t              if (this._packagePrefix === _ASSET_SCHEME) {\n\t                  var pathSegements = path.split(/\\//);\n\t                  resolvedUrl = \"asset:\" + pathSegements[0] + \"/lib/\" + pathSegements.slice(1).join('/');\n\t              }\n\t              else {\n\t                  prefix = prefix.replace(/\\/+$/, '');\n\t                  path = path.replace(/^\\/+/, '');\n\t                  return prefix + \"/\" + path;\n\t              }\n\t          }\n\t          return resolvedUrl;\n\t      };\n\t      UrlResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      UrlResolver.ctorParameters = [\n\t          { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n\t      ];\n\t      return UrlResolver;\n\t  }());\n\t  /**\n\t   * Extract the scheme of a URL.\n\t   */\n\t  function getUrlScheme(url) {\n\t      var match = _split(url);\n\t      return (match && match[_ComponentIndex.Scheme]) || '';\n\t  }\n\t  // The code below is adapted from Traceur:\n\t  // https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n\t  /**\n\t   * Builds a URI string from already-encoded parts.\n\t   *\n\t   * No encoding is performed.  Any component may be omitted as either null or\n\t   * undefined.\n\t   *\n\t   * @param opt_scheme The scheme such as 'http'.\n\t   * @param opt_userInfo The user name before the '@'.\n\t   * @param opt_domain The domain such as 'www.google.com', already\n\t   *     URI-encoded.\n\t   * @param opt_port The port number.\n\t   * @param opt_path The path, already URI-encoded.  If it is not\n\t   *     empty, it must begin with a slash.\n\t   * @param opt_queryData The URI-encoded query data.\n\t   * @param opt_fragment The URI-encoded fragment identifier.\n\t   * @return The fully combined URI.\n\t   */\n\t  function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n\t      var out = [];\n\t      if (isPresent(opt_scheme)) {\n\t          out.push(opt_scheme + ':');\n\t      }\n\t      if (isPresent(opt_domain)) {\n\t          out.push('//');\n\t          if (isPresent(opt_userInfo)) {\n\t              out.push(opt_userInfo + '@');\n\t          }\n\t          out.push(opt_domain);\n\t          if (isPresent(opt_port)) {\n\t              out.push(':' + opt_port);\n\t          }\n\t      }\n\t      if (isPresent(opt_path)) {\n\t          out.push(opt_path);\n\t      }\n\t      if (isPresent(opt_queryData)) {\n\t          out.push('?' + opt_queryData);\n\t      }\n\t      if (isPresent(opt_fragment)) {\n\t          out.push('#' + opt_fragment);\n\t      }\n\t      return out.join('');\n\t  }\n\t  /**\n\t   * A regular expression for breaking a URI into its component parts.\n\t   *\n\t   * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n\t   * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n\t   * disambiguation method used by POSIX regular expressions, it is natural and\n\t   * commonplace to use a regular expression for parsing the potential five\n\t   * components of a URI reference.\n\t   *\n\t   * The following line is the regular expression for breaking-down a\n\t   * well-formed URI reference into its components.\n\t   *\n\t   * <pre>\n\t   * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n\t   *  12            3  4          5       6  7        8 9\n\t   * </pre>\n\t   *\n\t   * The numbers in the second line above are only to assist readability; they\n\t   * indicate the reference points for each subexpression (i.e., each paired\n\t   * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n\t   * For example, matching the above expression to\n\t   * <pre>\n\t   *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n\t   * </pre>\n\t   * results in the following subexpression matches:\n\t   * <pre>\n\t   *    $1 = http:\n\t   *    $2 = http\n\t   *    $3 = //www.ics.uci.edu\n\t   *    $4 = www.ics.uci.edu\n\t   *    $5 = /pub/ietf/uri/\n\t   *    $6 = <undefined>\n\t   *    $7 = <undefined>\n\t   *    $8 = #Related\n\t   *    $9 = Related\n\t   * </pre>\n\t   * where <undefined> indicates that the component is not present, as is the\n\t   * case for the query component in the above example. Therefore, we can\n\t   * determine the value of the five components as\n\t   * <pre>\n\t   *    scheme    = $2\n\t   *    authority = $4\n\t   *    path      = $5\n\t   *    query     = $7\n\t   *    fragment  = $9\n\t   * </pre>\n\t   *\n\t   * The regular expression has been modified slightly to expose the\n\t   * userInfo, domain, and port separately from the authority.\n\t   * The modified version yields\n\t   * <pre>\n\t   *    $1 = http              scheme\n\t   *    $2 = <undefined>       userInfo -\\\n\t   *    $3 = www.ics.uci.edu   domain     | authority\n\t   *    $4 = <undefined>       port     -/\n\t   *    $5 = /pub/ietf/uri/    path\n\t   *    $6 = <undefined>       query without ?\n\t   *    $7 = Related           fragment without #\n\t   * </pre>\n\t   * @type {!RegExp}\n\t   * @internal\n\t   */\n\t  var _splitRe = new RegExp('^' +\n\t      '(?:' +\n\t      '([^:/?#.]+)' +\n\t      // used by other URL parts such as :,\n\t      // ?, /, #, and .\n\t      ':)?' +\n\t      '(?://' +\n\t      '(?:([^/?#]*)@)?' +\n\t      '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n\t      // digits, dashes, dots, percent\n\t      // escapes, and unicode characters.\n\t      '(?::([0-9]+))?' +\n\t      ')?' +\n\t      '([^?#]+)?' +\n\t      '(?:\\\\?([^#]*))?' +\n\t      '(?:#(.*))?' +\n\t      '$');\n\t  /**\n\t   * The index of each URI component in the return value of goog.uri.utils.split.\n\t   * @enum {number}\n\t   */\n\t  var _ComponentIndex;\n\t  (function (_ComponentIndex) {\n\t      _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n\t      _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n\t      _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n\t      _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n\t      _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n\t      _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n\t      _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n\t  })(_ComponentIndex || (_ComponentIndex = {}));\n\t  /**\n\t   * Splits a URI into its component parts.\n\t   *\n\t   * Each component can be accessed via the component indices; for example:\n\t   * <pre>\n\t   * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n\t   * </pre>\n\t   *\n\t   * @param uri The URI string to examine.\n\t   * @return Each component still URI-encoded.\n\t   *     Each component that is present will contain the encoded value, whereas\n\t   *     components that are not present will be undefined or empty, depending\n\t   *     on the browser's regular expression implementation.  Never null, since\n\t   *     arbitrary strings may still look like path names.\n\t   */\n\t  function _split(uri) {\n\t      return uri.match(_splitRe);\n\t  }\n\t  /**\n\t    * Removes dot segments in given path component, as described in\n\t    * RFC 3986, section 5.2.4.\n\t    *\n\t    * @param path A non-empty path component.\n\t    * @return Path component with removed dot segments.\n\t    */\n\t  function _removeDotSegments(path) {\n\t      if (path == '/')\n\t          return '/';\n\t      var leadingSlash = path[0] == '/' ? '/' : '';\n\t      var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n\t      var segments = path.split('/');\n\t      var out = [];\n\t      var up = 0;\n\t      for (var pos = 0; pos < segments.length; pos++) {\n\t          var segment = segments[pos];\n\t          switch (segment) {\n\t              case '':\n\t              case '.':\n\t                  break;\n\t              case '..':\n\t                  if (out.length > 0) {\n\t                      out.pop();\n\t                  }\n\t                  else {\n\t                      up++;\n\t                  }\n\t                  break;\n\t              default:\n\t                  out.push(segment);\n\t          }\n\t      }\n\t      if (leadingSlash == '') {\n\t          while (up-- > 0) {\n\t              out.unshift('..');\n\t          }\n\t          if (out.length === 0)\n\t              out.push('.');\n\t      }\n\t      return leadingSlash + out.join('/') + trailingSlash;\n\t  }\n\t  /**\n\t   * Takes an array of the parts from split and canonicalizes the path part\n\t   * and then joins all the parts.\n\t   */\n\t  function _joinAndCanonicalizePath(parts) {\n\t      var path = parts[_ComponentIndex.Path];\n\t      path = isBlank(path) ? '' : _removeDotSegments(path);\n\t      parts[_ComponentIndex.Path] = path;\n\t      return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n\t  }\n\t  /**\n\t   * Resolves a URL.\n\t   * @param base The URL acting as the base URL.\n\t   * @param to The URL to resolve.\n\t   */\n\t  function _resolveUrl(base, url) {\n\t      var parts = _split(encodeURI(url));\n\t      var baseParts = _split(base);\n\t      if (isPresent(parts[_ComponentIndex.Scheme])) {\n\t          return _joinAndCanonicalizePath(parts);\n\t      }\n\t      else {\n\t          parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n\t      }\n\t      for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n\t          if (isBlank(parts[i])) {\n\t              parts[i] = baseParts[i];\n\t          }\n\t      }\n\t      if (parts[_ComponentIndex.Path][0] == '/') {\n\t          return _joinAndCanonicalizePath(parts);\n\t      }\n\t      var path = baseParts[_ComponentIndex.Path];\n\t      if (isBlank(path))\n\t          path = '/';\n\t      var index = path.lastIndexOf('/');\n\t      path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n\t      parts[_ComponentIndex.Path] = path;\n\t      return _joinAndCanonicalizePath(parts);\n\t  }\n\t\n\t  var DirectiveNormalizer = (function () {\n\t      function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n\t          this._resourceLoader = _resourceLoader;\n\t          this._urlResolver = _urlResolver;\n\t          this._htmlParser = _htmlParser;\n\t          this._config = _config;\n\t          this._resourceLoaderCache = new Map();\n\t      }\n\t      DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n\t      DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n\t          var _this = this;\n\t          if (!normalizedDirective.isComponent) {\n\t              return;\n\t          }\n\t          this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);\n\t          normalizedDirective.template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n\t      };\n\t      DirectiveNormalizer.prototype._fetch = function (url) {\n\t          var result = this._resourceLoaderCache.get(url);\n\t          if (!result) {\n\t              result = this._resourceLoader.get(url);\n\t              this._resourceLoaderCache.set(url, result);\n\t          }\n\t          return result;\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n\t          var _this = this;\n\t          var normalizedTemplateSync = null;\n\t          var normalizedTemplateAsync;\n\t          if (isPresent(prenormData.template)) {\n\t              normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n\t              normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n\t          }\n\t          else if (prenormData.templateUrl) {\n\t              normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n\t          }\n\t          else {\n\t              throw new Error(\"No template specified for component \" + stringify(prenormData.componentType));\n\t          }\n\t          if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n\t              // sync case\n\t              return new SyncAsyncResult(normalizedTemplateSync);\n\t          }\n\t          else {\n\t              // async case\n\t              return new SyncAsyncResult(null, normalizedTemplateAsync.then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); }));\n\t          }\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeTemplateSync = function (prenomData) {\n\t          return this.normalizeLoadedTemplate(prenomData, prenomData.template, prenomData.moduleUrl);\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeTemplateAsync = function (prenomData) {\n\t          var _this = this;\n\t          var templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n\t          return this._fetch(templateUrl)\n\t              .then(function (value) { return _this.normalizeLoadedTemplate(prenomData, value, templateUrl); });\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenomData, template, templateAbsUrl) {\n\t          var interpolationConfig = InterpolationConfig.fromArray(prenomData.interpolation);\n\t          var rootNodesAndErrors = this._htmlParser.parse(template, stringify(prenomData.componentType), false, interpolationConfig);\n\t          if (rootNodesAndErrors.errors.length > 0) {\n\t              var errorString = rootNodesAndErrors.errors.join('\\n');\n\t              throw new Error(\"Template parse errors:\\n\" + errorString);\n\t          }\n\t          var templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n\t              styles: prenomData.styles,\n\t              styleUrls: prenomData.styleUrls,\n\t              moduleUrl: prenomData.moduleUrl\n\t          }));\n\t          var visitor = new TemplatePreparseVisitor();\n\t          visitAll(visitor, rootNodesAndErrors.rootNodes);\n\t          var templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n\t          var encapsulation = prenomData.encapsulation;\n\t          if (isBlank(encapsulation)) {\n\t              encapsulation = this._config.defaultEncapsulation;\n\t          }\n\t          var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n\t          var styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n\t          if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n\t              styleUrls.length === 0) {\n\t              encapsulation = _angular_core.ViewEncapsulation.None;\n\t          }\n\t          return new CompileTemplateMetadata({\n\t              encapsulation: encapsulation,\n\t              template: template,\n\t              templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n\t              ngContentSelectors: visitor.ngContentSelectors,\n\t              animations: prenomData.animations,\n\t              interpolation: prenomData.interpolation,\n\t          });\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n\t          return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n\t              .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n\t              encapsulation: templateMeta.encapsulation,\n\t              template: templateMeta.template,\n\t              templateUrl: templateMeta.templateUrl,\n\t              styles: templateMeta.styles,\n\t              styleUrls: templateMeta.styleUrls,\n\t              externalStylesheets: externalStylesheets,\n\t              ngContentSelectors: templateMeta.ngContentSelectors,\n\t              animations: templateMeta.animations,\n\t              interpolation: templateMeta.interpolation\n\t          }); });\n\t      };\n\t      DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n\t          var _this = this;\n\t          if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n\t          return Promise\n\t              .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n\t              .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n\t              var stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n\t              loadedStylesheets.set(styleUrl, stylesheet);\n\t              return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n\t          }); }))\n\t              .then(function (_) { return Array.from(loadedStylesheets.values()); });\n\t      };\n\t      DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n\t          var _this = this;\n\t          var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n\t              .map(function (url) { return _this._urlResolver.resolve(stylesheet.moduleUrl, url); });\n\t          var allStyles = stylesheet.styles.map(function (style) {\n\t              var styleWithImports = extractStyleUrls(_this._urlResolver, stylesheet.moduleUrl, style);\n\t              allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n\t              return styleWithImports.style;\n\t          });\n\t          return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl });\n\t      };\n\t      DirectiveNormalizer.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      DirectiveNormalizer.ctorParameters = [\n\t          { type: ResourceLoader, },\n\t          { type: UrlResolver, },\n\t          { type: HtmlParser, },\n\t          { type: CompilerConfig, },\n\t      ];\n\t      return DirectiveNormalizer;\n\t  }());\n\t  var TemplatePreparseVisitor = (function () {\n\t      function TemplatePreparseVisitor() {\n\t          this.ngContentSelectors = [];\n\t          this.styles = [];\n\t          this.styleUrls = [];\n\t          this.ngNonBindableStackCount = 0;\n\t      }\n\t      TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n\t          var preparsedElement = preparseElement(ast);\n\t          switch (preparsedElement.type) {\n\t              case PreparsedElementType.NG_CONTENT:\n\t                  if (this.ngNonBindableStackCount === 0) {\n\t                      this.ngContentSelectors.push(preparsedElement.selectAttr);\n\t                  }\n\t                  break;\n\t              case PreparsedElementType.STYLE:\n\t                  var textContent_1 = '';\n\t                  ast.children.forEach(function (child) {\n\t                      if (child instanceof Text) {\n\t                          textContent_1 += child.value;\n\t                      }\n\t                  });\n\t                  this.styles.push(textContent_1);\n\t                  break;\n\t              case PreparsedElementType.STYLESHEET:\n\t                  this.styleUrls.push(preparsedElement.hrefAttr);\n\t                  break;\n\t              default:\n\t                  break;\n\t          }\n\t          if (preparsedElement.nonBindable) {\n\t              this.ngNonBindableStackCount++;\n\t          }\n\t          visitAll(this, ast.children);\n\t          if (preparsedElement.nonBindable) {\n\t              this.ngNonBindableStackCount--;\n\t          }\n\t          return null;\n\t      };\n\t      TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n\t      TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n\t      TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n\t      TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { return null; };\n\t      TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) { return null; };\n\t      return TemplatePreparseVisitor;\n\t  }());\n\t\n\t  /*\n\t   * Resolve a `Type` for {@link Directive}.\n\t   *\n\t   * This interface can be overridden by the application developer to create custom behavior.\n\t   *\n\t   * See {@link Compiler}\n\t   */\n\t  var DirectiveResolver = (function () {\n\t      function DirectiveResolver(_reflector) {\n\t          if (_reflector === void 0) { _reflector = reflector; }\n\t          this._reflector = _reflector;\n\t      }\n\t      DirectiveResolver.prototype.isDirective = function (type) {\n\t          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n\t          return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n\t      };\n\t      /**\n\t       * Return {@link Directive} for a given `Type`.\n\t       */\n\t      DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n\t          if (typeMetadata) {\n\t              var metadata = typeMetadata.find(isDirectiveMetadata);\n\t              if (metadata) {\n\t                  var propertyMetadata = this._reflector.propMetadata(type);\n\t                  return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n\t              }\n\t          }\n\t          if (throwIfNotFound) {\n\t              throw new Error(\"No Directive annotation found on \" + stringify(type));\n\t          }\n\t          return null;\n\t      };\n\t      DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n\t          var inputs = [];\n\t          var outputs = [];\n\t          var host = {};\n\t          var queries = {};\n\t          Object.keys(propertyMetadata).forEach(function (propName) {\n\t              propertyMetadata[propName].forEach(function (a) {\n\t                  if (a instanceof _angular_core.Input) {\n\t                      if (a.bindingPropertyName) {\n\t                          inputs.push(propName + \": \" + a.bindingPropertyName);\n\t                      }\n\t                      else {\n\t                          inputs.push(propName);\n\t                      }\n\t                  }\n\t                  else if (a instanceof _angular_core.Output) {\n\t                      var output = a;\n\t                      if (output.bindingPropertyName) {\n\t                          outputs.push(propName + \": \" + output.bindingPropertyName);\n\t                      }\n\t                      else {\n\t                          outputs.push(propName);\n\t                      }\n\t                  }\n\t                  else if (a instanceof _angular_core.HostBinding) {\n\t                      var hostBinding = a;\n\t                      if (hostBinding.hostPropertyName) {\n\t                          var startWith = hostBinding.hostPropertyName[0];\n\t                          if (startWith === '(') {\n\t                              throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n\t                          }\n\t                          else if (startWith === '[') {\n\t                              throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n\t                          }\n\t                          host[(\"[\" + hostBinding.hostPropertyName + \"]\")] = propName;\n\t                      }\n\t                      else {\n\t                          host[(\"[\" + propName + \"]\")] = propName;\n\t                      }\n\t                  }\n\t                  else if (a instanceof _angular_core.HostListener) {\n\t                      var hostListener = a;\n\t                      var args = hostListener.args || [];\n\t                      host[(\"(\" + hostListener.eventName + \")\")] = propName + \"(\" + args.join(',') + \")\";\n\t                  }\n\t                  else if (a instanceof _angular_core.Query) {\n\t                      queries[propName] = a;\n\t                  }\n\t              });\n\t          });\n\t          return this._merge(dm, inputs, outputs, host, queries, directiveType);\n\t      };\n\t      DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n\t      DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n\t          var _this = this;\n\t          var mergedInputs = inputs;\n\t          if (directive.inputs) {\n\t              var inputNames_1 = directive.inputs.map(function (def) { return _this._extractPublicName(def); });\n\t              inputs.forEach(function (inputDef) {\n\t                  var publicName = _this._extractPublicName(inputDef);\n\t                  if (inputNames_1.indexOf(publicName) > -1) {\n\t                      throw new Error(\"Input '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n\t                  }\n\t              });\n\t              mergedInputs.unshift.apply(mergedInputs, directive.inputs);\n\t          }\n\t          var mergedOutputs = outputs;\n\t          if (directive.outputs) {\n\t              var outputNames_1 = directive.outputs.map(function (def) { return _this._extractPublicName(def); });\n\t              outputs.forEach(function (outputDef) {\n\t                  var publicName = _this._extractPublicName(outputDef);\n\t                  if (outputNames_1.indexOf(publicName) > -1) {\n\t                      throw new Error(\"Output event '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n\t                  }\n\t              });\n\t              mergedOutputs.unshift.apply(mergedOutputs, directive.outputs);\n\t          }\n\t          var mergedHost = directive.host ? StringMapWrapper.merge(directive.host, host) : host;\n\t          var mergedQueries = directive.queries ? StringMapWrapper.merge(directive.queries, queries) : queries;\n\t          if (directive instanceof _angular_core.Component) {\n\t              return new _angular_core.Component({\n\t                  selector: directive.selector,\n\t                  inputs: mergedInputs,\n\t                  outputs: mergedOutputs,\n\t                  host: mergedHost,\n\t                  exportAs: directive.exportAs,\n\t                  moduleId: directive.moduleId,\n\t                  queries: mergedQueries,\n\t                  changeDetection: directive.changeDetection,\n\t                  providers: directive.providers,\n\t                  viewProviders: directive.viewProviders,\n\t                  entryComponents: directive.entryComponents,\n\t                  template: directive.template,\n\t                  templateUrl: directive.templateUrl,\n\t                  styles: directive.styles,\n\t                  styleUrls: directive.styleUrls,\n\t                  encapsulation: directive.encapsulation,\n\t                  animations: directive.animations,\n\t                  interpolation: directive.interpolation\n\t              });\n\t          }\n\t          else {\n\t              return new _angular_core.Directive({\n\t                  selector: directive.selector,\n\t                  inputs: mergedInputs,\n\t                  outputs: mergedOutputs,\n\t                  host: mergedHost,\n\t                  exportAs: directive.exportAs,\n\t                  queries: mergedQueries,\n\t                  providers: directive.providers\n\t              });\n\t          }\n\t      };\n\t      DirectiveResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      DirectiveResolver.ctorParameters = [\n\t          { type: ReflectorReader, },\n\t      ];\n\t      return DirectiveResolver;\n\t  }());\n\t  function isDirectiveMetadata(type) {\n\t      return type instanceof _angular_core.Directive;\n\t  }\n\t\n\t  function hasLifecycleHook(hook, token) {\n\t      return reflector.hasLifecycleHook(token, getHookName(hook));\n\t  }\n\t  function getHookName(hook) {\n\t      switch (hook) {\n\t          case LifecycleHooks.OnInit:\n\t              return 'ngOnInit';\n\t          case LifecycleHooks.OnDestroy:\n\t              return 'ngOnDestroy';\n\t          case LifecycleHooks.DoCheck:\n\t              return 'ngDoCheck';\n\t          case LifecycleHooks.OnChanges:\n\t              return 'ngOnChanges';\n\t          case LifecycleHooks.AfterContentInit:\n\t              return 'ngAfterContentInit';\n\t          case LifecycleHooks.AfterContentChecked:\n\t              return 'ngAfterContentChecked';\n\t          case LifecycleHooks.AfterViewInit:\n\t              return 'ngAfterViewInit';\n\t          case LifecycleHooks.AfterViewChecked:\n\t              return 'ngAfterViewChecked';\n\t      }\n\t  }\n\t\n\t  function _isNgModuleMetadata(obj) {\n\t      return obj instanceof _angular_core.NgModule;\n\t  }\n\t  /**\n\t   * Resolves types to {@link NgModule}.\n\t   */\n\t  var NgModuleResolver = (function () {\n\t      function NgModuleResolver(_reflector) {\n\t          if (_reflector === void 0) { _reflector = reflector; }\n\t          this._reflector = _reflector;\n\t      }\n\t      NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n\t      NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          var ngModuleMeta = this._reflector.annotations(type).find(_isNgModuleMetadata);\n\t          if (isPresent(ngModuleMeta)) {\n\t              return ngModuleMeta;\n\t          }\n\t          else {\n\t              if (throwIfNotFound) {\n\t                  throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n\t              }\n\t              return null;\n\t          }\n\t      };\n\t      NgModuleResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      NgModuleResolver.ctorParameters = [\n\t          { type: ReflectorReader, },\n\t      ];\n\t      return NgModuleResolver;\n\t  }());\n\t\n\t  function _isPipeMetadata(type) {\n\t      return type instanceof _angular_core.Pipe;\n\t  }\n\t  /**\n\t   * Resolve a `Type` for {@link Pipe}.\n\t   *\n\t   * This interface can be overridden by the application developer to create custom behavior.\n\t   *\n\t   * See {@link Compiler}\n\t   */\n\t  var PipeResolver = (function () {\n\t      function PipeResolver(_reflector) {\n\t          if (_reflector === void 0) { _reflector = reflector; }\n\t          this._reflector = _reflector;\n\t      }\n\t      PipeResolver.prototype.isPipe = function (type) {\n\t          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n\t          return typeMetadata && typeMetadata.some(_isPipeMetadata);\n\t      };\n\t      /**\n\t       * Return {@link Pipe} for a given `Type`.\n\t       */\n\t      PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          var metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n\t          if (isPresent(metas)) {\n\t              var annotation = metas.find(_isPipeMetadata);\n\t              if (isPresent(annotation)) {\n\t                  return annotation;\n\t              }\n\t          }\n\t          if (throwIfNotFound) {\n\t              throw new Error(\"No Pipe decorator found on \" + stringify(type));\n\t          }\n\t          return null;\n\t      };\n\t      PipeResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      PipeResolver.ctorParameters = [\n\t          { type: ReflectorReader, },\n\t      ];\n\t      return PipeResolver;\n\t  }());\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$17 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  // Design notes:\n\t  // - don't lazily create metadata:\n\t  //   For some metadata, we need to do async work sometimes,\n\t  //   so the user has to kick off this loading.\n\t  //   But we want to report errors even when the async work is\n\t  //   not required to check that the user would have been able\n\t  //   to wait correctly.\n\t  var CompileMetadataResolver = (function () {\n\t      function CompileMetadataResolver(_ngModuleResolver, _directiveResolver, _pipeResolver, _schemaRegistry, _directiveNormalizer, _reflector) {\n\t          if (_reflector === void 0) { _reflector = reflector; }\n\t          this._ngModuleResolver = _ngModuleResolver;\n\t          this._directiveResolver = _directiveResolver;\n\t          this._pipeResolver = _pipeResolver;\n\t          this._schemaRegistry = _schemaRegistry;\n\t          this._directiveNormalizer = _directiveNormalizer;\n\t          this._reflector = _reflector;\n\t          this._directiveCache = new Map();\n\t          this._directiveSummaryCache = new Map();\n\t          this._pipeCache = new Map();\n\t          this._pipeSummaryCache = new Map();\n\t          this._ngModuleCache = new Map();\n\t          this._ngModuleOfTypes = new Map();\n\t          this._anonymousTypes = new Map();\n\t          this._anonymousTypeIndex = 0;\n\t      }\n\t      CompileMetadataResolver.prototype.sanitizeTokenName = function (token) {\n\t          var identifier = stringify(token);\n\t          if (identifier.indexOf('(') >= 0) {\n\t              // case: anonymous functions!\n\t              var found = this._anonymousTypes.get(token);\n\t              if (!found) {\n\t                  this._anonymousTypes.set(token, this._anonymousTypeIndex++);\n\t                  found = this._anonymousTypes.get(token);\n\t              }\n\t              identifier = \"anonymous_token_\" + found + \"_\";\n\t          }\n\t          return sanitizeIdentifier(identifier);\n\t      };\n\t      CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n\t          var dirMeta = this._directiveCache.get(type);\n\t          this._directiveCache.delete(type);\n\t          this._directiveSummaryCache.delete(type);\n\t          this._pipeCache.delete(type);\n\t          this._pipeSummaryCache.delete(type);\n\t          this._ngModuleOfTypes.delete(type);\n\t          // Clear all of the NgModule as they contain transitive information!\n\t          this._ngModuleCache.clear();\n\t          if (dirMeta) {\n\t              this._directiveNormalizer.clearCacheFor(dirMeta);\n\t          }\n\t      };\n\t      CompileMetadataResolver.prototype.clearCache = function () {\n\t          this._directiveCache.clear();\n\t          this._directiveSummaryCache.clear();\n\t          this._pipeCache.clear();\n\t          this._pipeSummaryCache.clear();\n\t          this._ngModuleCache.clear();\n\t          this._ngModuleOfTypes.clear();\n\t          this._directiveNormalizer.clearCache();\n\t      };\n\t      CompileMetadataResolver.prototype.getAnimationEntryMetadata = function (entry) {\n\t          var _this = this;\n\t          var defs = entry.definitions.map(function (def) { return _this._getAnimationStateMetadata(def); });\n\t          return new CompileAnimationEntryMetadata(entry.name, defs);\n\t      };\n\t      CompileMetadataResolver.prototype._getAnimationStateMetadata = function (value) {\n\t          if (value instanceof _angular_core.AnimationStateDeclarationMetadata) {\n\t              var styles = this._getAnimationStyleMetadata(value.styles);\n\t              return new CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n\t          }\n\t          if (value instanceof _angular_core.AnimationStateTransitionMetadata) {\n\t              return new CompileAnimationStateTransitionMetadata(value.stateChangeExpr, this._getAnimationMetadata(value.steps));\n\t          }\n\t          return null;\n\t      };\n\t      CompileMetadataResolver.prototype._getAnimationStyleMetadata = function (value) {\n\t          return new CompileAnimationStyleMetadata(value.offset, value.styles);\n\t      };\n\t      CompileMetadataResolver.prototype._getAnimationMetadata = function (value) {\n\t          var _this = this;\n\t          if (value instanceof _angular_core.AnimationStyleMetadata) {\n\t              return this._getAnimationStyleMetadata(value);\n\t          }\n\t          if (value instanceof _angular_core.AnimationKeyframesSequenceMetadata) {\n\t              return new CompileAnimationKeyframesSequenceMetadata(value.steps.map(function (entry) { return _this._getAnimationStyleMetadata(entry); }));\n\t          }\n\t          if (value instanceof _angular_core.AnimationAnimateMetadata) {\n\t              var animateData = this\n\t                  ._getAnimationMetadata(value.styles);\n\t              return new CompileAnimationAnimateMetadata(value.timings, animateData);\n\t          }\n\t          if (value instanceof _angular_core.AnimationWithStepsMetadata) {\n\t              var steps = value.steps.map(function (step) { return _this._getAnimationMetadata(step); });\n\t              if (value instanceof _angular_core.AnimationGroupMetadata) {\n\t                  return new CompileAnimationGroupMetadata(steps);\n\t              }\n\t              return new CompileAnimationSequenceMetadata(steps);\n\t          }\n\t          return null;\n\t      };\n\t      CompileMetadataResolver.prototype._loadDirectiveMetadata = function (directiveType, isSync) {\n\t          var _this = this;\n\t          if (this._directiveCache.has(directiveType)) {\n\t              return;\n\t          }\n\t          directiveType = _angular_core.resolveForwardRef(directiveType);\n\t          var nonNormalizedMetadata = this.getNonNormalizedDirectiveMetadata(directiveType);\n\t          var createDirectiveMetadata = function (templateMetadata) {\n\t              var normalizedDirMeta = new CompileDirectiveMetadata({\n\t                  type: nonNormalizedMetadata.type,\n\t                  isComponent: nonNormalizedMetadata.isComponent,\n\t                  selector: nonNormalizedMetadata.selector,\n\t                  exportAs: nonNormalizedMetadata.exportAs,\n\t                  changeDetection: nonNormalizedMetadata.changeDetection,\n\t                  inputs: nonNormalizedMetadata.inputs,\n\t                  outputs: nonNormalizedMetadata.outputs,\n\t                  hostListeners: nonNormalizedMetadata.hostListeners,\n\t                  hostProperties: nonNormalizedMetadata.hostProperties,\n\t                  hostAttributes: nonNormalizedMetadata.hostAttributes,\n\t                  providers: nonNormalizedMetadata.providers,\n\t                  viewProviders: nonNormalizedMetadata.viewProviders,\n\t                  queries: nonNormalizedMetadata.queries,\n\t                  viewQueries: nonNormalizedMetadata.viewQueries,\n\t                  entryComponents: nonNormalizedMetadata.entryComponents,\n\t                  template: templateMetadata\n\t              });\n\t              _this._directiveCache.set(directiveType, normalizedDirMeta);\n\t              _this._directiveSummaryCache.set(directiveType, normalizedDirMeta.toSummary());\n\t              return normalizedDirMeta;\n\t          };\n\t          if (nonNormalizedMetadata.isComponent) {\n\t              var templateMeta_1 = this._directiveNormalizer.normalizeTemplate({\n\t                  componentType: directiveType,\n\t                  moduleUrl: nonNormalizedMetadata.type.moduleUrl,\n\t                  encapsulation: nonNormalizedMetadata.template.encapsulation,\n\t                  template: nonNormalizedMetadata.template.template,\n\t                  templateUrl: nonNormalizedMetadata.template.templateUrl,\n\t                  styles: nonNormalizedMetadata.template.styles,\n\t                  styleUrls: nonNormalizedMetadata.template.styleUrls,\n\t                  animations: nonNormalizedMetadata.template.animations,\n\t                  interpolation: nonNormalizedMetadata.template.interpolation\n\t              });\n\t              if (templateMeta_1.syncResult) {\n\t                  createDirectiveMetadata(templateMeta_1.syncResult);\n\t                  return null;\n\t              }\n\t              else {\n\t                  if (isSync) {\n\t                      throw new ComponentStillLoadingError(directiveType);\n\t                  }\n\t                  return function () { return templateMeta_1.asyncResult.then(createDirectiveMetadata); };\n\t              }\n\t          }\n\t          else {\n\t              // directive\n\t              createDirectiveMetadata(null);\n\t              return null;\n\t          }\n\t      };\n\t      CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n\t          var _this = this;\n\t          directiveType = _angular_core.resolveForwardRef(directiveType);\n\t          var dirMeta = this._directiveResolver.resolve(directiveType);\n\t          if (!dirMeta) {\n\t              return null;\n\t          }\n\t          var moduleUrl = staticTypeModuleUrl(directiveType);\n\t          var nonNormalizedTemplateMetadata;\n\t          if (dirMeta instanceof _angular_core.Component) {\n\t              // component\n\t              moduleUrl = componentModuleUrl(this._reflector, directiveType, dirMeta);\n\t              assertArrayOfStrings('styles', dirMeta.styles);\n\t              assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n\t              assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\t              var animations = dirMeta.animations ?\n\t                  dirMeta.animations.map(function (e) { return _this.getAnimationEntryMetadata(e); }) :\n\t                  null;\n\t              nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n\t                  encapsulation: dirMeta.encapsulation,\n\t                  template: dirMeta.template,\n\t                  templateUrl: dirMeta.templateUrl,\n\t                  styles: dirMeta.styles,\n\t                  styleUrls: dirMeta.styleUrls,\n\t                  animations: animations,\n\t                  interpolation: dirMeta.interpolation\n\t              });\n\t          }\n\t          var changeDetectionStrategy = null;\n\t          var viewProviders = [];\n\t          var entryComponentMetadata = [];\n\t          var selector = dirMeta.selector;\n\t          if (dirMeta instanceof _angular_core.Component) {\n\t              // Component\n\t              changeDetectionStrategy = dirMeta.changeDetection;\n\t              if (dirMeta.viewProviders) {\n\t                  viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringify(directiveType) + \"\\\"\");\n\t              }\n\t              if (dirMeta.entryComponents) {\n\t                  entryComponentMetadata =\n\t                      flattenAndDedupeArray(dirMeta.entryComponents)\n\t                          .map(function (type) { return _this._getIdentifierMetadata(type, staticTypeModuleUrl(type)); })\n\t                          .concat(entryComponentMetadata);\n\t              }\n\t              if (!selector) {\n\t                  selector = this._schemaRegistry.getDefaultComponentElementName();\n\t              }\n\t          }\n\t          else {\n\t              // Directive\n\t              if (!selector) {\n\t                  throw new Error(\"Directive \" + stringify(directiveType) + \" has no selector, please add it!\");\n\t              }\n\t          }\n\t          var providers = [];\n\t          if (isPresent(dirMeta.providers)) {\n\t              providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringify(directiveType) + \"\\\"\");\n\t          }\n\t          var queries = [];\n\t          var viewQueries = [];\n\t          if (isPresent(dirMeta.queries)) {\n\t              queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n\t              viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n\t          }\n\t          return CompileDirectiveMetadata.create({\n\t              selector: selector,\n\t              exportAs: dirMeta.exportAs,\n\t              isComponent: !!nonNormalizedTemplateMetadata,\n\t              type: this._getTypeMetadata(directiveType, moduleUrl),\n\t              template: nonNormalizedTemplateMetadata,\n\t              changeDetection: changeDetectionStrategy,\n\t              inputs: dirMeta.inputs,\n\t              outputs: dirMeta.outputs,\n\t              host: dirMeta.host,\n\t              providers: providers,\n\t              viewProviders: viewProviders,\n\t              queries: queries,\n\t              viewQueries: viewQueries,\n\t              entryComponents: entryComponentMetadata\n\t          });\n\t      };\n\t      /**\n\t       * Gets the metadata for the given directive.\n\t       * This assumes `loadNgModuleMetadata` has been called first.\n\t       */\n\t      CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n\t          var dirMeta = this._directiveCache.get(directiveType);\n\t          if (!dirMeta) {\n\t              throw new Error(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleMetadata for a module that declares it. Directive \" + stringify(directiveType) + \".\");\n\t          }\n\t          return dirMeta;\n\t      };\n\t      CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n\t          var dirSummary = this._directiveSummaryCache.get(dirType);\n\t          if (!dirSummary) {\n\t              throw new Error(\"Illegal state: getDirectiveSummary can only be called after loadNgModuleMetadata for a module that imports it. Directive \" + stringify(dirType) + \".\");\n\t          }\n\t          return dirSummary;\n\t      };\n\t      CompileMetadataResolver.prototype.isDirective = function (type) { return this._directiveResolver.isDirective(type); };\n\t      CompileMetadataResolver.prototype.isPipe = function (type) { return this._pipeResolver.isPipe(type); };\n\t      /**\n\t       * Gets the metadata for the given module.\n\t       * This assumes `loadNgModuleMetadata` has been called first.\n\t       */\n\t      CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType) {\n\t          var modMeta = this._ngModuleCache.get(moduleType);\n\t          if (!modMeta) {\n\t              throw new Error(\"Illegal state: getNgModuleMetadata can only be called after loadNgModuleMetadata. Module \" + stringify(moduleType) + \".\");\n\t          }\n\t          return modMeta;\n\t      };\n\t      CompileMetadataResolver.prototype._loadNgModuleSummary = function (moduleType, isSync) {\n\t          // TODO(tbosch): add logic to read summary files!\n\t          // - needs to add directive / pipe summaries to this._directiveSummaryCache /\n\t          // this._pipeSummaryCache as well!\n\t          var moduleMeta = this._loadNgModuleMetadata(moduleType, isSync, false);\n\t          return moduleMeta ? moduleMeta.toSummary() : null;\n\t      };\n\t      /**\n\t       * Loads an NgModule and all of its directives. This includes loading the exported directives of\n\t       * imported modules,\n\t       * but not private directives of imported modules.\n\t       */\n\t      CompileMetadataResolver.prototype.loadNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          var ngModule = this._loadNgModuleMetadata(moduleType, isSync, throwIfNotFound);\n\t          var loading = ngModule ?\n\t              Promise.all(ngModule.transitiveModule.directiveLoaders.map(function (loader) { return loader(); })) :\n\t              Promise.resolve(null);\n\t          return { ngModule: ngModule, loading: loading };\n\t      };\n\t      /**\n\t       * Get the NgModule metadata without loading the directives.\n\t       */\n\t      CompileMetadataResolver.prototype.getUnloadedNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          return this._loadNgModuleMetadata(moduleType, isSync, throwIfNotFound);\n\t      };\n\t      CompileMetadataResolver.prototype._loadNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n\t          var _this = this;\n\t          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n\t          moduleType = _angular_core.resolveForwardRef(moduleType);\n\t          var compileMeta = this._ngModuleCache.get(moduleType);\n\t          if (compileMeta) {\n\t              return compileMeta;\n\t          }\n\t          var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n\t          if (!meta) {\n\t              return null;\n\t          }\n\t          var declaredDirectives = [];\n\t          var exportedNonModuleIdentifiers = [];\n\t          var declaredPipes = [];\n\t          var importedModules = [];\n\t          var exportedModules = [];\n\t          var providers = [];\n\t          var entryComponents = [];\n\t          var bootstrapComponents = [];\n\t          var schemas = [];\n\t          if (meta.imports) {\n\t              flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n\t                  var importedModuleType;\n\t                  if (isValidType(importedType)) {\n\t                      importedModuleType = importedType;\n\t                  }\n\t                  else if (importedType && importedType.ngModule) {\n\t                      var moduleWithProviders = importedType;\n\t                      importedModuleType = moduleWithProviders.ngModule;\n\t                      if (moduleWithProviders.providers) {\n\t                          providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringify(importedModuleType) + \"'\"));\n\t                      }\n\t                  }\n\t                  if (importedModuleType) {\n\t                      var importedModuleSummary = _this._loadNgModuleSummary(importedModuleType, isSync);\n\t                      if (!importedModuleSummary) {\n\t                          throw new Error(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n\t                      }\n\t                      importedModules.push(importedModuleSummary);\n\t                  }\n\t                  else {\n\t                      throw new Error(\"Unexpected value '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n\t                  }\n\t              });\n\t          }\n\t          if (meta.exports) {\n\t              flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n\t                  if (!isValidType(exportedType)) {\n\t                      throw new Error(\"Unexpected value '\" + stringify(exportedType) + \"' exported by the module '\" + stringify(moduleType) + \"'\");\n\t                  }\n\t                  var exportedModuleSummary = _this._loadNgModuleSummary(exportedType, isSync);\n\t                  if (exportedModuleSummary) {\n\t                      exportedModules.push(exportedModuleSummary);\n\t                  }\n\t                  else {\n\t                      exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType, staticTypeModuleUrl(exportedType)));\n\t                  }\n\t              });\n\t          }\n\t          // Note: This will be modified later, so we rely on\n\t          // getting a new instance every time!\n\t          var transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n\t          if (meta.declarations) {\n\t              flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n\t                  if (!isValidType(declaredType)) {\n\t                      throw new Error(\"Unexpected value '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n\t                  }\n\t                  var declaredIdentifier = _this._getIdentifierMetadata(declaredType, staticTypeModuleUrl(declaredType));\n\t                  if (_this._directiveResolver.isDirective(declaredType)) {\n\t                      transitiveModule.directivesSet.add(declaredType);\n\t                      transitiveModule.directives.push(declaredIdentifier);\n\t                      declaredDirectives.push(declaredIdentifier);\n\t                      _this._addTypeToModule(declaredType, moduleType);\n\t                      var loader = _this._loadDirectiveMetadata(declaredType, isSync);\n\t                      if (loader) {\n\t                          transitiveModule.directiveLoaders.push(loader);\n\t                      }\n\t                  }\n\t                  else if (_this._pipeResolver.isPipe(declaredType)) {\n\t                      transitiveModule.pipesSet.add(declaredType);\n\t                      transitiveModule.pipes.push(declaredIdentifier);\n\t                      declaredPipes.push(declaredIdentifier);\n\t                      _this._addTypeToModule(declaredType, moduleType);\n\t                      _this._loadPipeMetadata(declaredType);\n\t                  }\n\t                  else {\n\t                      throw new Error(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n\t                  }\n\t              });\n\t          }\n\t          var exportedDirectives = [];\n\t          var exportedPipes = [];\n\t          exportedNonModuleIdentifiers.forEach(function (exportedId) {\n\t              if (transitiveModule.directivesSet.has(exportedId.reference)) {\n\t                  exportedDirectives.push(exportedId);\n\t              }\n\t              else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n\t                  exportedPipes.push(exportedId);\n\t              }\n\t              else {\n\t                  throw new Error(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringify(exportedId.reference) + \" from \" + stringify(moduleType) + \" as it was neither declared nor imported!\");\n\t              }\n\t          });\n\t          // The providers of the module have to go last\n\t          // so that they overwrite any other provider we already added.\n\t          if (meta.providers) {\n\t              providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringify(moduleType) + \"'\"));\n\t          }\n\t          if (meta.entryComponents) {\n\t              entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n\t                  .map(function (type) { return _this._getTypeMetadata(type, staticTypeModuleUrl(type)); }));\n\t          }\n\t          if (meta.bootstrap) {\n\t              var typeMetadata = flattenAndDedupeArray(meta.bootstrap).map(function (type) {\n\t                  if (!isValidType(type)) {\n\t                      throw new Error(\"Unexpected value '\" + stringify(type) + \"' used in the bootstrap property of module '\" + stringify(moduleType) + \"'\");\n\t                  }\n\t                  return _this._getTypeMetadata(type, staticTypeModuleUrl(type));\n\t              });\n\t              bootstrapComponents.push.apply(bootstrapComponents, typeMetadata);\n\t          }\n\t          entryComponents.push.apply(entryComponents, bootstrapComponents);\n\t          if (meta.schemas) {\n\t              schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n\t          }\n\t          (_a = transitiveModule.entryComponents).push.apply(_a, entryComponents);\n\t          (_b = transitiveModule.providers).push.apply(_b, providers);\n\t          compileMeta = new CompileNgModuleMetadata({\n\t              type: this._getTypeMetadata(moduleType, staticTypeModuleUrl(moduleType)),\n\t              providers: providers,\n\t              entryComponents: entryComponents,\n\t              bootstrapComponents: bootstrapComponents,\n\t              schemas: schemas,\n\t              declaredDirectives: declaredDirectives,\n\t              exportedDirectives: exportedDirectives,\n\t              declaredPipes: declaredPipes,\n\t              exportedPipes: exportedPipes,\n\t              importedModules: importedModules,\n\t              exportedModules: exportedModules,\n\t              transitiveModule: transitiveModule,\n\t              id: meta.id,\n\t          });\n\t          transitiveModule.modules.push(compileMeta.toInjectorSummary());\n\t          this._ngModuleCache.set(moduleType, compileMeta);\n\t          return compileMeta;\n\t          var _a, _b;\n\t      };\n\t      CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n\t          if (this._directiveResolver.isDirective(type)) {\n\t              return 'directive';\n\t          }\n\t          if (this._pipeResolver.isPipe(type)) {\n\t              return 'pipe';\n\t          }\n\t          if (this._ngModuleResolver.isNgModule(type)) {\n\t              return 'module';\n\t          }\n\t          if (type.provide) {\n\t              return 'provider';\n\t          }\n\t          return 'value';\n\t      };\n\t      CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n\t          var oldModule = this._ngModuleOfTypes.get(type);\n\t          if (oldModule && oldModule !== moduleType) {\n\t              throw new Error((\"Type \" + stringify(type) + \" is part of the declarations of 2 modules: \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \"! \") +\n\t                  (\"Please consider moving \" + stringify(type) + \" to a higher module that imports \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \". \") +\n\t                  (\"You can also create a new NgModule that exports and includes \" + stringify(type) + \" then import that NgModule in \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \".\"));\n\t          }\n\t          this._ngModuleOfTypes.set(type, moduleType);\n\t      };\n\t      CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n\t          // collect `providers` / `entryComponents` from all imported and all exported modules\n\t          var transitiveModules = getTransitiveImportedModules(importedModules.concat(exportedModules));\n\t          var providers = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.providers; }));\n\t          var entryComponents = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.entryComponents; }));\n\t          var transitiveExportedModules = getTransitiveExportedModules(importedModules);\n\t          var directives = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedDirectives; }));\n\t          var pipes = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedPipes; }));\n\t          var directiveLoaders = ListWrapper.flatten(transitiveExportedModules.map(function (ngModule) { return ngModule.directiveLoaders; }));\n\t          return new TransitiveCompileNgModuleMetadata(transitiveModules, providers, entryComponents, directives, pipes, directiveLoaders);\n\t      };\n\t      CompileMetadataResolver.prototype._getIdentifierMetadata = function (type, moduleUrl) {\n\t          type = _angular_core.resolveForwardRef(type);\n\t          return new CompileIdentifierMetadata({ name: this.sanitizeTokenName(type), moduleUrl: moduleUrl, reference: type });\n\t      };\n\t      CompileMetadataResolver.prototype._getTypeMetadata = function (type, moduleUrl, dependencies) {\n\t          if (dependencies === void 0) { dependencies = null; }\n\t          var identifier = this._getIdentifierMetadata(type, moduleUrl);\n\t          return new CompileTypeMetadata({\n\t              name: identifier.name,\n\t              moduleUrl: identifier.moduleUrl,\n\t              reference: identifier.reference,\n\t              diDeps: this._getDependenciesMetadata(identifier.reference, dependencies),\n\t              lifecycleHooks: LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, identifier.reference); }),\n\t          });\n\t      };\n\t      CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, moduleUrl, dependencies) {\n\t          if (dependencies === void 0) { dependencies = null; }\n\t          factory = _angular_core.resolveForwardRef(factory);\n\t          return new CompileFactoryMetadata({\n\t              name: this.sanitizeTokenName(factory),\n\t              moduleUrl: moduleUrl,\n\t              reference: factory,\n\t              diDeps: this._getDependenciesMetadata(factory, dependencies)\n\t          });\n\t      };\n\t      /**\n\t       * Gets the metadata for the given pipe.\n\t       * This assumes `loadNgModuleMetadata` has been called first.\n\t       */\n\t      CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n\t          var pipeMeta = this._pipeCache.get(pipeType);\n\t          if (!pipeMeta) {\n\t              throw new Error(\"Illegal state: getPipeMetadata can only be called after loadNgModuleMetadata for a module that declares it. Pipe \" + stringify(pipeType) + \".\");\n\t          }\n\t          return pipeMeta;\n\t      };\n\t      CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n\t          var pipeSummary = this._pipeSummaryCache.get(pipeType);\n\t          if (!pipeSummary) {\n\t              throw new Error(\"Illegal state: getPipeSummary can only be called after loadNgModuleMetadata for a module that imports it. Pipe \" + stringify(pipeType) + \".\");\n\t          }\n\t          return pipeSummary;\n\t      };\n\t      CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n\t          var pipeMeta = this._pipeCache.get(pipeType);\n\t          if (!pipeMeta) {\n\t              pipeMeta = this._loadPipeMetadata(pipeType);\n\t          }\n\t          return pipeMeta;\n\t      };\n\t      CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n\t          pipeType = _angular_core.resolveForwardRef(pipeType);\n\t          var pipeAnnotation = this._pipeResolver.resolve(pipeType);\n\t          var pipeMeta = new CompilePipeMetadata({\n\t              type: this._getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),\n\t              name: pipeAnnotation.name,\n\t              pure: pipeAnnotation.pure\n\t          });\n\t          this._pipeCache.set(pipeType, pipeMeta);\n\t          this._pipeSummaryCache.set(pipeType, pipeMeta.toSummary());\n\t          return pipeMeta;\n\t      };\n\t      CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies) {\n\t          var _this = this;\n\t          var hasUnknownDeps = false;\n\t          var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\t          var dependenciesMetadata = params.map(function (param) {\n\t              var isAttribute = false;\n\t              var isHost = false;\n\t              var isSelf = false;\n\t              var isSkipSelf = false;\n\t              var isOptional = false;\n\t              var token = null;\n\t              if (Array.isArray(param)) {\n\t                  param.forEach(function (paramEntry) {\n\t                      if (paramEntry instanceof _angular_core.Host) {\n\t                          isHost = true;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Self) {\n\t                          isSelf = true;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.SkipSelf) {\n\t                          isSkipSelf = true;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Optional) {\n\t                          isOptional = true;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Attribute) {\n\t                          isAttribute = true;\n\t                          token = paramEntry.attributeName;\n\t                      }\n\t                      else if (paramEntry instanceof _angular_core.Inject) {\n\t                          token = paramEntry.token;\n\t                      }\n\t                      else if (isValidType(paramEntry) && isBlank(token)) {\n\t                          token = paramEntry;\n\t                      }\n\t                  });\n\t              }\n\t              else {\n\t                  token = param;\n\t              }\n\t              if (isBlank(token)) {\n\t                  hasUnknownDeps = true;\n\t                  return null;\n\t              }\n\t              return new CompileDiDependencyMetadata({\n\t                  isAttribute: isAttribute,\n\t                  isHost: isHost,\n\t                  isSelf: isSelf,\n\t                  isSkipSelf: isSkipSelf,\n\t                  isOptional: isOptional,\n\t                  token: _this._getTokenMetadata(token)\n\t              });\n\t          });\n\t          if (hasUnknownDeps) {\n\t              var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringify(dep.token) : '?'; }).join(', ');\n\t              throw new Error(\"Can't resolve all parameters for \" + stringify(typeOrFunc) + \": (\" + depsTokens + \").\");\n\t          }\n\t          return dependenciesMetadata;\n\t      };\n\t      CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n\t          token = _angular_core.resolveForwardRef(token);\n\t          var compileToken;\n\t          if (typeof token === 'string') {\n\t              compileToken = new CompileTokenMetadata({ value: token });\n\t          }\n\t          else {\n\t              compileToken = new CompileTokenMetadata({\n\t                  identifier: new CompileIdentifierMetadata({\n\t                      reference: token,\n\t                      name: this.sanitizeTokenName(token),\n\t                      moduleUrl: staticTypeModuleUrl(token)\n\t                  })\n\t              });\n\t          }\n\t          return compileToken;\n\t      };\n\t      CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo) {\n\t          var _this = this;\n\t          var compileProviders = [];\n\t          providers.forEach(function (provider, providerIdx) {\n\t              provider = _angular_core.resolveForwardRef(provider);\n\t              if (provider && typeof provider == 'object' && provider.hasOwnProperty('provide')) {\n\t                  provider = new ProviderMeta(provider.provide, provider);\n\t              }\n\t              var compileProvider;\n\t              if (Array.isArray(provider)) {\n\t                  compileProvider = _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo);\n\t              }\n\t              else if (provider instanceof ProviderMeta) {\n\t                  var tokenMeta = _this._getTokenMetadata(provider.token);\n\t                  if (tokenMeta.reference ===\n\t                      resolveIdentifierToken(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS).reference) {\n\t                      targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(provider));\n\t                  }\n\t                  else {\n\t                      compileProvider = _this.getProviderMetadata(provider);\n\t                  }\n\t              }\n\t              else if (isValidType(provider)) {\n\t                  compileProvider = _this._getTypeMetadata(provider, staticTypeModuleUrl(provider));\n\t              }\n\t              else {\n\t                  var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n\t                      if (seenProviderIdx < providerIdx) {\n\t                          soFar.push(\"\" + stringify(seenProvider));\n\t                      }\n\t                      else if (seenProviderIdx == providerIdx) {\n\t                          soFar.push(\"?\" + stringify(seenProvider) + \"?\");\n\t                      }\n\t                      else if (seenProviderIdx == providerIdx + 1) {\n\t                          soFar.push('...');\n\t                      }\n\t                      return soFar;\n\t                  }, [])\n\t                      .join(', ');\n\t                  throw new Error(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\");\n\t              }\n\t              if (compileProvider) {\n\t                  compileProviders.push(compileProvider);\n\t              }\n\t          });\n\t          return compileProviders;\n\t      };\n\t      CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider) {\n\t          var _this = this;\n\t          var components = [];\n\t          var collectedIdentifiers = [];\n\t          if (provider.useFactory || provider.useExisting || provider.useClass) {\n\t              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\");\n\t          }\n\t          if (!provider.multi) {\n\t              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\");\n\t          }\n\t          convertToCompileValue(provider.useValue, collectedIdentifiers);\n\t          collectedIdentifiers.forEach(function (identifier) {\n\t              if (_this._directiveResolver.isDirective(identifier.reference)) {\n\t                  components.push(identifier);\n\t              }\n\t          });\n\t          return components;\n\t      };\n\t      CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n\t          var compileDeps;\n\t          var compileTypeMetadata = null;\n\t          var compileFactoryMetadata = null;\n\t          if (provider.useClass) {\n\t              compileTypeMetadata = this._getTypeMetadata(provider.useClass, staticTypeModuleUrl(provider.useClass), provider.dependencies);\n\t              compileDeps = compileTypeMetadata.diDeps;\n\t          }\n\t          else if (provider.useFactory) {\n\t              compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, staticTypeModuleUrl(provider.useFactory), provider.dependencies);\n\t              compileDeps = compileFactoryMetadata.diDeps;\n\t          }\n\t          return new CompileProviderMetadata({\n\t              token: this._getTokenMetadata(provider.token),\n\t              useClass: compileTypeMetadata,\n\t              useValue: convertToCompileValue(provider.useValue, []),\n\t              useFactory: compileFactoryMetadata,\n\t              useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n\t              deps: compileDeps,\n\t              multi: provider.multi\n\t          });\n\t      };\n\t      CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n\t          var _this = this;\n\t          var res = [];\n\t          Object.keys(queries).forEach(function (propertyName) {\n\t              var query = queries[propertyName];\n\t              if (query.isViewQuery === isViewQuery) {\n\t                  res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n\t              }\n\t          });\n\t          return res;\n\t      };\n\t      CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n\t      CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n\t          var _this = this;\n\t          var selectors;\n\t          if (typeof q.selector === 'string') {\n\t              selectors =\n\t                  this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n\t          }\n\t          else {\n\t              if (!q.selector) {\n\t                  throw new Error(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringify(typeOrFunc) + \"\\\" since the query selector wasn't defined.\");\n\t              }\n\t              selectors = [this._getTokenMetadata(q.selector)];\n\t          }\n\t          return new CompileQueryMetadata({\n\t              selectors: selectors,\n\t              first: q.first,\n\t              descendants: q.descendants, propertyName: propertyName,\n\t              read: q.read ? this._getTokenMetadata(q.read) : null\n\t          });\n\t      };\n\t      CompileMetadataResolver.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      CompileMetadataResolver.ctorParameters = [\n\t          { type: NgModuleResolver, },\n\t          { type: DirectiveResolver, },\n\t          { type: PipeResolver, },\n\t          { type: ElementSchemaRegistry, },\n\t          { type: DirectiveNormalizer, },\n\t          { type: ReflectorReader, },\n\t      ];\n\t      return CompileMetadataResolver;\n\t  }());\n\t  function getTransitiveExportedModules(modules, targetModules, visitedModules) {\n\t      if (targetModules === void 0) { targetModules = []; }\n\t      if (visitedModules === void 0) { visitedModules = new Set(); }\n\t      modules.forEach(function (ngModule) {\n\t          if (!visitedModules.has(ngModule.type.reference)) {\n\t              visitedModules.add(ngModule.type.reference);\n\t              getTransitiveExportedModules(ngModule.exportedModules, targetModules, visitedModules);\n\t              // Add after recursing so imported/exported modules are before the module itself.\n\t              // This is important for overwriting providers of imported modules!\n\t              targetModules.push(ngModule);\n\t          }\n\t      });\n\t      return targetModules;\n\t  }\n\t  function getTransitiveImportedModules(modules, targetModules, visitedModules) {\n\t      if (targetModules === void 0) { targetModules = []; }\n\t      if (visitedModules === void 0) { visitedModules = new Set(); }\n\t      modules.forEach(function (ngModule) {\n\t          if (!visitedModules.has(ngModule.type.reference)) {\n\t              visitedModules.add(ngModule.type.reference);\n\t              var nestedModules = ngModule.importedModules.concat(ngModule.exportedModules);\n\t              getTransitiveImportedModules(nestedModules, targetModules, visitedModules);\n\t              // Add after recursing so imported/exported modules are before the module itself.\n\t              // This is important for overwriting providers of imported modules!\n\t              targetModules.push(ngModule);\n\t          }\n\t      });\n\t      return targetModules;\n\t  }\n\t  function flattenArray(tree, out) {\n\t      if (out === void 0) { out = []; }\n\t      if (tree) {\n\t          for (var i = 0; i < tree.length; i++) {\n\t              var item = _angular_core.resolveForwardRef(tree[i]);\n\t              if (Array.isArray(item)) {\n\t                  flattenArray(item, out);\n\t              }\n\t              else {\n\t                  out.push(item);\n\t              }\n\t          }\n\t      }\n\t      return out;\n\t  }\n\t  function dedupeArray(array) {\n\t      if (array) {\n\t          return Array.from(new Set(array));\n\t      }\n\t      return [];\n\t  }\n\t  function flattenAndDedupeArray(tree) {\n\t      return dedupeArray(flattenArray(tree));\n\t  }\n\t  function isValidType(value) {\n\t      return isStaticSymbol(value) || (value instanceof _angular_core.Type);\n\t  }\n\t  function staticTypeModuleUrl(value) {\n\t      return isStaticSymbol(value) ? value.filePath : null;\n\t  }\n\t  function componentModuleUrl(reflector, type, cmpMetadata) {\n\t      if (isStaticSymbol(type)) {\n\t          return staticTypeModuleUrl(type);\n\t      }\n\t      var moduleId = cmpMetadata.moduleId;\n\t      if (typeof moduleId === 'string') {\n\t          var scheme = getUrlScheme(moduleId);\n\t          return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n\t      }\n\t      else if (moduleId !== null && moduleId !== void 0) {\n\t          throw new Error((\"moduleId should be a string in \\\"\" + stringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\") +\n\t              \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n\t      }\n\t      return reflector.importUri(type);\n\t  }\n\t  function convertToCompileValue(value, targetIdentifiers) {\n\t      return visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n\t  }\n\t  var _CompileValueConverter = (function (_super) {\n\t      __extends$17(_CompileValueConverter, _super);\n\t      function _CompileValueConverter() {\n\t          _super.apply(this, arguments);\n\t      }\n\t      _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n\t          var identifier;\n\t          if (isStaticSymbol(value)) {\n\t              identifier = new CompileIdentifierMetadata({ name: value.name, moduleUrl: value.filePath, reference: value });\n\t          }\n\t          else {\n\t              identifier = new CompileIdentifierMetadata({ reference: value });\n\t          }\n\t          targetIdentifiers.push(identifier);\n\t          return identifier;\n\t      };\n\t      return _CompileValueConverter;\n\t  }(ValueTransformer));\n\t\n\t  var ComponentFactoryDependency$1 = (function () {\n\t      function ComponentFactoryDependency(comp, placeholder) {\n\t          this.comp = comp;\n\t          this.placeholder = placeholder;\n\t      }\n\t      return ComponentFactoryDependency;\n\t  }());\n\t  var NgModuleCompileResult = (function () {\n\t      function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n\t          this.statements = statements;\n\t          this.ngModuleFactoryVar = ngModuleFactoryVar;\n\t          this.dependencies = dependencies;\n\t      }\n\t      return NgModuleCompileResult;\n\t  }());\n\t  var NgModuleCompiler = (function () {\n\t      function NgModuleCompiler() {\n\t      }\n\t      NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n\t          var sourceFileName = isPresent(ngModuleMeta.type.moduleUrl) ?\n\t              \"in NgModule \" + ngModuleMeta.type.name + \" in \" + ngModuleMeta.type.moduleUrl :\n\t              \"in NgModule \" + ngModuleMeta.type.name;\n\t          var sourceFile = new ParseSourceFile('', sourceFileName);\n\t          var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n\t          var deps = [];\n\t          var bootstrapComponentFactories = [];\n\t          var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n\t              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n\t              if (ngModuleMeta.bootstrapComponents.indexOf(entryComponent) > -1) {\n\t                  bootstrapComponentFactories.push(id);\n\t              }\n\t              deps.push(new ComponentFactoryDependency$1(entryComponent, id));\n\t              return id;\n\t          });\n\t          var builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n\t          var providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n\t          providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n\t          var injectorClass = builder.build();\n\t          var ngModuleFactoryVar = ngModuleMeta.type.name + \"NgFactory\";\n\t          var ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n\t              .set(importExpr(resolveIdentifier(Identifiers.NgModuleFactory))\n\t              .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(resolveIdentifier(Identifiers.NgModuleFactory), [importType(ngModuleMeta.type)], [TypeModifier.Const])))\n\t              .toDeclStmt(null, [StmtModifier.Final]);\n\t          var stmts = [injectorClass, ngModuleFactoryStmt];\n\t          if (ngModuleMeta.id) {\n\t              var registerFactoryStmt = importExpr(resolveIdentifier(Identifiers.RegisterModuleFactoryFn))\n\t                  .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n\t                  .toStmt();\n\t              stmts.push(registerFactoryStmt);\n\t          }\n\t          return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n\t      };\n\t      NgModuleCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      NgModuleCompiler.ctorParameters = [];\n\t      return NgModuleCompiler;\n\t  }());\n\t  var _InjectorBuilder = (function () {\n\t      function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n\t          this._ngModuleMeta = _ngModuleMeta;\n\t          this._entryComponentFactories = _entryComponentFactories;\n\t          this._bootstrapComponentFactories = _bootstrapComponentFactories;\n\t          this._sourceSpan = _sourceSpan;\n\t          this.fields = [];\n\t          this.getters = [];\n\t          this.methods = [];\n\t          this.ctorStmts = [];\n\t          this._tokens = [];\n\t          this._instances = new Map();\n\t          this._createStmts = [];\n\t          this._destroyStmts = [];\n\t      }\n\t      _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n\t          var _this = this;\n\t          var providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n\t          var propName = \"_\" + resolvedProvider.token.name + \"_\" + this._instances.size;\n\t          var instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n\t          if (resolvedProvider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n\t              this._destroyStmts.push(instance.callMethod('ngOnDestroy', []).toStmt());\n\t          }\n\t          this._tokens.push(resolvedProvider.token);\n\t          this._instances.set(resolvedProvider.token.reference, instance);\n\t      };\n\t      _InjectorBuilder.prototype.build = function () {\n\t          var _this = this;\n\t          var getMethodStmts = this._tokens.map(function (token) {\n\t              var providerExpr = _this._instances.get(token.reference);\n\t              return new IfStmt(InjectMethodVars$1.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n\t          });\n\t          var methods = [\n\t              new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))), importType(this._ngModuleMeta.type)),\n\t              new ClassMethod('getInternal', [\n\t                  new FnParam(InjectMethodVars$1.token.name, DYNAMIC_TYPE),\n\t                  new FnParam(InjectMethodVars$1.notFoundResult.name, DYNAMIC_TYPE)\n\t              ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars$1.notFoundResult)]), DYNAMIC_TYPE),\n\t              new ClassMethod('destroyInternal', [], this._destroyStmts),\n\t          ];\n\t          var parentArgs = [\n\t              variable(InjectorProps.parent.name),\n\t              literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n\t              literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n\t          ];\n\t          var injClassName = this._ngModuleMeta.type.name + \"Injector\";\n\t          return createClassStmt({\n\t              name: injClassName,\n\t              ctorParams: [new FnParam(InjectorProps.parent.name, importType(resolveIdentifier(Identifiers.Injector)))],\n\t              parent: importExpr(resolveIdentifier(Identifiers.NgModuleInjector), [importType(this._ngModuleMeta.type)]),\n\t              parentArgs: parentArgs,\n\t              builders: [{ methods: methods }, this]\n\t          });\n\t      };\n\t      _InjectorBuilder.prototype._getProviderValue = function (provider) {\n\t          var _this = this;\n\t          var result;\n\t          if (isPresent(provider.useExisting)) {\n\t              result = this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }));\n\t          }\n\t          else if (isPresent(provider.useFactory)) {\n\t              var deps = provider.deps || provider.useFactory.diDeps;\n\t              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n\t              result = importExpr(provider.useFactory).callFn(depsExpr);\n\t          }\n\t          else if (isPresent(provider.useClass)) {\n\t              var deps = provider.deps || provider.useClass.diDeps;\n\t              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n\t              result =\n\t                  importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n\t          }\n\t          else {\n\t              result = convertValueToOutputAst(provider.useValue);\n\t          }\n\t          return result;\n\t      };\n\t      _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n\t          var resolvedProviderValueExpr;\n\t          var type;\n\t          if (isMulti) {\n\t              resolvedProviderValueExpr = literalArr(providerValueExpressions);\n\t              type = new ArrayType(DYNAMIC_TYPE);\n\t          }\n\t          else {\n\t              resolvedProviderValueExpr = providerValueExpressions[0];\n\t              type = providerValueExpressions[0].type;\n\t          }\n\t          if (!type) {\n\t              type = DYNAMIC_TYPE;\n\t          }\n\t          if (isEager) {\n\t              this.fields.push(new ClassField(propName, type));\n\t              this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n\t          }\n\t          else {\n\t              var internalField = \"_\" + propName;\n\t              this.fields.push(new ClassField(internalField, type));\n\t              // Note: Equals is important for JS so that it also checks the undefined case!\n\t              var getterStmts = [\n\t                  new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),\n\t                  new ReturnStatement(THIS_EXPR.prop(internalField))\n\t              ];\n\t              this.getters.push(new ClassGetter(propName, getterStmts, type));\n\t          }\n\t          return THIS_EXPR.prop(propName);\n\t      };\n\t      _InjectorBuilder.prototype._getDependency = function (dep) {\n\t          var result = null;\n\t          if (dep.isValue) {\n\t              result = literal(dep.value);\n\t          }\n\t          if (!dep.isSkipSelf) {\n\t              if (dep.token &&\n\t                  (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n\t                      dep.token.reference ===\n\t                          resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference)) {\n\t                  result = THIS_EXPR;\n\t              }\n\t              if (!result) {\n\t                  result = this._instances.get(dep.token.reference);\n\t              }\n\t          }\n\t          if (!result) {\n\t              var args = [createDiTokenExpression(dep.token)];\n\t              if (dep.isOptional) {\n\t                  args.push(NULL_EXPR);\n\t              }\n\t              result = InjectorProps.parent.callMethod('get', args);\n\t          }\n\t          return result;\n\t      };\n\t      return _InjectorBuilder;\n\t  }());\n\t  var InjectorProps = (function () {\n\t      function InjectorProps() {\n\t      }\n\t      InjectorProps.parent = THIS_EXPR.prop('parent');\n\t      return InjectorProps;\n\t  }());\n\t  var InjectMethodVars$1 = (function () {\n\t      function InjectMethodVars() {\n\t      }\n\t      InjectMethodVars.token = variable('token');\n\t      InjectMethodVars.notFoundResult = variable('notFoundResult');\n\t      return InjectMethodVars;\n\t  }());\n\t\n\t  var _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\n\t  var _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\n\t  var CATCH_ERROR_VAR$2 = variable('error');\n\t  var CATCH_STACK_VAR$2 = variable('stack');\n\t  var _EmittedLine = (function () {\n\t      function _EmittedLine(indent) {\n\t          this.indent = indent;\n\t          this.parts = [];\n\t      }\n\t      return _EmittedLine;\n\t  }());\n\t  var EmitterVisitorContext = (function () {\n\t      function EmitterVisitorContext(_exportedVars, _indent) {\n\t          this._exportedVars = _exportedVars;\n\t          this._indent = _indent;\n\t          this._classes = [];\n\t          this._lines = [new _EmittedLine(_indent)];\n\t      }\n\t      EmitterVisitorContext.createRoot = function (exportedVars) {\n\t          return new EmitterVisitorContext(exportedVars, 0);\n\t      };\n\t      Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n\t          get: function () { return this._lines[this._lines.length - 1]; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n\t      EmitterVisitorContext.prototype.println = function (lastPart) {\n\t          if (lastPart === void 0) { lastPart = ''; }\n\t          this.print(lastPart, true);\n\t      };\n\t      EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n\t      EmitterVisitorContext.prototype.print = function (part, newLine) {\n\t          if (newLine === void 0) { newLine = false; }\n\t          if (part.length > 0) {\n\t              this._currentLine.parts.push(part);\n\t          }\n\t          if (newLine) {\n\t              this._lines.push(new _EmittedLine(this._indent));\n\t          }\n\t      };\n\t      EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n\t          if (this.lineIsEmpty()) {\n\t              this._lines.pop();\n\t          }\n\t      };\n\t      EmitterVisitorContext.prototype.incIndent = function () {\n\t          this._indent++;\n\t          this._currentLine.indent = this._indent;\n\t      };\n\t      EmitterVisitorContext.prototype.decIndent = function () {\n\t          this._indent--;\n\t          this._currentLine.indent = this._indent;\n\t      };\n\t      EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n\t      EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n\t      Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n\t          get: function () {\n\t              return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n\t          },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      EmitterVisitorContext.prototype.toSource = function () {\n\t          var lines = this._lines;\n\t          if (lines[lines.length - 1].parts.length === 0) {\n\t              lines = lines.slice(0, lines.length - 1);\n\t          }\n\t          return lines\n\t              .map(function (line) {\n\t              if (line.parts.length > 0) {\n\t                  return _createIndent(line.indent) + line.parts.join('');\n\t              }\n\t              else {\n\t                  return '';\n\t              }\n\t          })\n\t              .join('\\n');\n\t      };\n\t      return EmitterVisitorContext;\n\t  }());\n\t  var AbstractEmitterVisitor = (function () {\n\t      function AbstractEmitterVisitor(_escapeDollarInStrings) {\n\t          this._escapeDollarInStrings = _escapeDollarInStrings;\n\t      }\n\t      AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n\t          stmt.expr.visitExpression(this, ctx);\n\t          ctx.println(';');\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n\t          ctx.print(\"return \");\n\t          stmt.value.visitExpression(this, ctx);\n\t          ctx.println(';');\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n\t          ctx.print(\"if (\");\n\t          stmt.condition.visitExpression(this, ctx);\n\t          ctx.print(\") {\");\n\t          var hasElseCase = isPresent(stmt.falseCase) && stmt.falseCase.length > 0;\n\t          if (stmt.trueCase.length <= 1 && !hasElseCase) {\n\t              ctx.print(\" \");\n\t              this.visitAllStatements(stmt.trueCase, ctx);\n\t              ctx.removeEmptyLastLine();\n\t              ctx.print(\" \");\n\t          }\n\t          else {\n\t              ctx.println();\n\t              ctx.incIndent();\n\t              this.visitAllStatements(stmt.trueCase, ctx);\n\t              ctx.decIndent();\n\t              if (hasElseCase) {\n\t                  ctx.println(\"} else {\");\n\t                  ctx.incIndent();\n\t                  this.visitAllStatements(stmt.falseCase, ctx);\n\t                  ctx.decIndent();\n\t              }\n\t          }\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n\t          ctx.print(\"throw \");\n\t          stmt.error.visitExpression(this, ctx);\n\t          ctx.println(\";\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n\t          var lines = stmt.comment.split('\\n');\n\t          lines.forEach(function (line) { ctx.println(\"// \" + line); });\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n\t          var lineWasEmpty = ctx.lineIsEmpty();\n\t          if (!lineWasEmpty) {\n\t              ctx.print('(');\n\t          }\n\t          ctx.print(expr.name + \" = \");\n\t          expr.value.visitExpression(this, ctx);\n\t          if (!lineWasEmpty) {\n\t              ctx.print(')');\n\t          }\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n\t          var lineWasEmpty = ctx.lineIsEmpty();\n\t          if (!lineWasEmpty) {\n\t              ctx.print('(');\n\t          }\n\t          expr.receiver.visitExpression(this, ctx);\n\t          ctx.print(\"[\");\n\t          expr.index.visitExpression(this, ctx);\n\t          ctx.print(\"] = \");\n\t          expr.value.visitExpression(this, ctx);\n\t          if (!lineWasEmpty) {\n\t              ctx.print(')');\n\t          }\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n\t          var lineWasEmpty = ctx.lineIsEmpty();\n\t          if (!lineWasEmpty) {\n\t              ctx.print('(');\n\t          }\n\t          expr.receiver.visitExpression(this, ctx);\n\t          ctx.print(\".\" + expr.name + \" = \");\n\t          expr.value.visitExpression(this, ctx);\n\t          if (!lineWasEmpty) {\n\t              ctx.print(')');\n\t          }\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n\t          expr.receiver.visitExpression(this, ctx);\n\t          var name = expr.name;\n\t          if (isPresent(expr.builtin)) {\n\t              name = this.getBuiltinMethodName(expr.builtin);\n\t              if (isBlank(name)) {\n\t                  // some builtins just mean to skip the call.\n\t                  return null;\n\t              }\n\t          }\n\t          ctx.print(\".\" + name + \"(\");\n\t          this.visitAllExpressions(expr.args, ctx, \",\");\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n\t          expr.fn.visitExpression(this, ctx);\n\t          ctx.print(\"(\");\n\t          this.visitAllExpressions(expr.args, ctx, ',');\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n\t          var varName = ast.name;\n\t          if (isPresent(ast.builtin)) {\n\t              switch (ast.builtin) {\n\t                  case BuiltinVar.Super:\n\t                      varName = 'super';\n\t                      break;\n\t                  case BuiltinVar.This:\n\t                      varName = 'this';\n\t                      break;\n\t                  case BuiltinVar.CatchError:\n\t                      varName = CATCH_ERROR_VAR$2.name;\n\t                      break;\n\t                  case BuiltinVar.CatchStack:\n\t                      varName = CATCH_STACK_VAR$2.name;\n\t                      break;\n\t                  default:\n\t                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n\t              }\n\t          }\n\t          ctx.print(varName);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n\t          ctx.print(\"new \");\n\t          ast.classExpr.visitExpression(this, ctx);\n\t          ctx.print(\"(\");\n\t          this.visitAllExpressions(ast.args, ctx, ',');\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n\t          var value = ast.value;\n\t          if (typeof value === 'string') {\n\t              ctx.print(escapeIdentifier(value, this._escapeDollarInStrings));\n\t          }\n\t          else {\n\t              ctx.print(\"\" + value);\n\t          }\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n\t          ctx.print(\"(\");\n\t          ast.condition.visitExpression(this, ctx);\n\t          ctx.print('? ');\n\t          ast.trueCase.visitExpression(this, ctx);\n\t          ctx.print(': ');\n\t          ast.falseCase.visitExpression(this, ctx);\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n\t          ctx.print('!');\n\t          ast.condition.visitExpression(this, ctx);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n\t          var opStr;\n\t          switch (ast.operator) {\n\t              case BinaryOperator.Equals:\n\t                  opStr = '==';\n\t                  break;\n\t              case BinaryOperator.Identical:\n\t                  opStr = '===';\n\t                  break;\n\t              case BinaryOperator.NotEquals:\n\t                  opStr = '!=';\n\t                  break;\n\t              case BinaryOperator.NotIdentical:\n\t                  opStr = '!==';\n\t                  break;\n\t              case BinaryOperator.And:\n\t                  opStr = '&&';\n\t                  break;\n\t              case BinaryOperator.Or:\n\t                  opStr = '||';\n\t                  break;\n\t              case BinaryOperator.Plus:\n\t                  opStr = '+';\n\t                  break;\n\t              case BinaryOperator.Minus:\n\t                  opStr = '-';\n\t                  break;\n\t              case BinaryOperator.Divide:\n\t                  opStr = '/';\n\t                  break;\n\t              case BinaryOperator.Multiply:\n\t                  opStr = '*';\n\t                  break;\n\t              case BinaryOperator.Modulo:\n\t                  opStr = '%';\n\t                  break;\n\t              case BinaryOperator.Lower:\n\t                  opStr = '<';\n\t                  break;\n\t              case BinaryOperator.LowerEquals:\n\t                  opStr = '<=';\n\t                  break;\n\t              case BinaryOperator.Bigger:\n\t                  opStr = '>';\n\t                  break;\n\t              case BinaryOperator.BiggerEquals:\n\t                  opStr = '>=';\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unknown operator \" + ast.operator);\n\t          }\n\t          ctx.print(\"(\");\n\t          ast.lhs.visitExpression(this, ctx);\n\t          ctx.print(\" \" + opStr + \" \");\n\t          ast.rhs.visitExpression(this, ctx);\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n\t          ast.receiver.visitExpression(this, ctx);\n\t          ctx.print(\".\");\n\t          ctx.print(ast.name);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n\t          ast.receiver.visitExpression(this, ctx);\n\t          ctx.print(\"[\");\n\t          ast.index.visitExpression(this, ctx);\n\t          ctx.print(\"]\");\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n\t          var useNewLine = ast.entries.length > 1;\n\t          ctx.print(\"[\", useNewLine);\n\t          ctx.incIndent();\n\t          this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n\t          ctx.decIndent();\n\t          ctx.print(\"]\", useNewLine);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n\t          var _this = this;\n\t          var useNewLine = ast.entries.length > 1;\n\t          ctx.print(\"{\", useNewLine);\n\t          ctx.incIndent();\n\t          this.visitAllObjects(function (entry) {\n\t              ctx.print(escapeIdentifier(entry[0], _this._escapeDollarInStrings, false) + \": \");\n\t              entry[1].visitExpression(_this, ctx);\n\t          }, ast.entries, ctx, ',', useNewLine);\n\t          ctx.decIndent();\n\t          ctx.print(\"}\", useNewLine);\n\t          return null;\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n\t          var _this = this;\n\t          if (newLine === void 0) { newLine = false; }\n\t          this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n\t          if (newLine === void 0) { newLine = false; }\n\t          for (var i = 0; i < expressions.length; i++) {\n\t              if (i > 0) {\n\t                  ctx.print(separator, newLine);\n\t              }\n\t              handler(expressions[i]);\n\t          }\n\t          if (newLine) {\n\t              ctx.println();\n\t          }\n\t      };\n\t      AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n\t          var _this = this;\n\t          statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n\t      };\n\t      return AbstractEmitterVisitor;\n\t  }());\n\t  function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n\t      if (alwaysQuote === void 0) { alwaysQuote = true; }\n\t      if (isBlank(input)) {\n\t          return null;\n\t      }\n\t      var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n\t          var match = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              match[_i - 0] = arguments[_i];\n\t          }\n\t          if (match[0] == '$') {\n\t              return escapeDollar ? '\\\\$' : '$';\n\t          }\n\t          else if (match[0] == '\\n') {\n\t              return '\\\\n';\n\t          }\n\t          else if (match[0] == '\\r') {\n\t              return '\\\\r';\n\t          }\n\t          else {\n\t              return \"\\\\\" + match[0];\n\t          }\n\t      });\n\t      var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n\t      return requiresQuotes ? \"'\" + body + \"'\" : body;\n\t  }\n\t  function _createIndent(count) {\n\t      var res = '';\n\t      for (var i = 0; i < count; i++) {\n\t          res += '  ';\n\t      }\n\t      return res;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$18 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var _debugModuleUrl = 'asset://debug/lib';\n\t  function debugOutputAstAsTypeScript(ast) {\n\t      var converter = new _TsEmitterVisitor(_debugModuleUrl);\n\t      var ctx = EmitterVisitorContext.createRoot([]);\n\t      var asts = Array.isArray(ast) ? ast : [ast];\n\t      asts.forEach(function (ast) {\n\t          if (ast instanceof Statement) {\n\t              ast.visitStatement(converter, ctx);\n\t          }\n\t          else if (ast instanceof Expression) {\n\t              ast.visitExpression(converter, ctx);\n\t          }\n\t          else if (ast instanceof Type$1) {\n\t              ast.visitType(converter, ctx);\n\t          }\n\t          else {\n\t              throw new Error(\"Don't know how to print debug info for \" + ast);\n\t          }\n\t      });\n\t      return ctx.toSource();\n\t  }\n\t  var TypeScriptEmitter = (function () {\n\t      function TypeScriptEmitter(_importGenerator) {\n\t          this._importGenerator = _importGenerator;\n\t      }\n\t      TypeScriptEmitter.prototype.emitStatements = function (moduleUrl, stmts, exportedVars) {\n\t          var _this = this;\n\t          var converter = new _TsEmitterVisitor(moduleUrl);\n\t          var ctx = EmitterVisitorContext.createRoot(exportedVars);\n\t          converter.visitAllStatements(stmts, ctx);\n\t          var srcParts = [];\n\t          converter.importsWithPrefixes.forEach(function (prefix, importedModuleUrl) {\n\t              // Note: can't write the real word for import as it screws up system.js auto detection...\n\t              srcParts.push(\"imp\" +\n\t                  (\"ort * as \" + prefix + \" from '\" + _this._importGenerator.getImportPath(moduleUrl, importedModuleUrl) + \"';\"));\n\t          });\n\t          srcParts.push(ctx.toSource());\n\t          return srcParts.join('\\n');\n\t      };\n\t      return TypeScriptEmitter;\n\t  }());\n\t  var _TsEmitterVisitor = (function (_super) {\n\t      __extends$18(_TsEmitterVisitor, _super);\n\t      function _TsEmitterVisitor(_moduleUrl) {\n\t          _super.call(this, false);\n\t          this._moduleUrl = _moduleUrl;\n\t          this.importsWithPrefixes = new Map();\n\t      }\n\t      _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n\t          if (defaultType === void 0) { defaultType = 'any'; }\n\t          if (isPresent(t)) {\n\t              t.visitType(this, ctx);\n\t          }\n\t          else {\n\t              ctx.print(defaultType);\n\t          }\n\t      };\n\t      _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n\t          var value = ast.value;\n\t          if (isBlank(value) && ast.type != NULL_TYPE) {\n\t              ctx.print(\"(\" + value + \" as any)\");\n\t              return null;\n\t          }\n\t          return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n\t      };\n\t      // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n\t      // In SNC mode, [] have the type never[], so we cast here to any[].\n\t      // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n\t      // start with [].concat. see https://github.com/angular/angular/pull/11846\n\t      _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n\t          if (ast.entries.length === 0) {\n\t              ctx.print('(');\n\t          }\n\t          var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n\t          if (ast.entries.length === 0) {\n\t              ctx.print(' as any[])');\n\t          }\n\t          return result;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n\t          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n\t          if (ctx.isExportedVar(stmt.name)) {\n\t              ctx.print(\"export \");\n\t          }\n\t          if (stmt.hasModifier(StmtModifier.Final)) {\n\t              ctx.print(\"const\");\n\t          }\n\t          else {\n\t              ctx.print(\"var\");\n\t          }\n\t          ctx.print(\" \" + stmt.name + \":\");\n\t          this.visitType(stmt.type, ctx);\n\t          ctx.print(\" = \");\n\t          stmt.value.visitExpression(this, ctx);\n\t          ctx.println(\";\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n\t          ctx.print(\"(<\");\n\t          ast.type.visitType(this, ctx);\n\t          ctx.print(\">\");\n\t          ast.value.visitExpression(this, ctx);\n\t          ctx.print(\")\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n\t          var _this = this;\n\t          ctx.pushClass(stmt);\n\t          if (ctx.isExportedVar(stmt.name)) {\n\t              ctx.print(\"export \");\n\t          }\n\t          ctx.print(\"class \" + stmt.name);\n\t          if (isPresent(stmt.parent)) {\n\t              ctx.print(\" extends \");\n\t              stmt.parent.visitExpression(this, ctx);\n\t          }\n\t          ctx.println(\" {\");\n\t          ctx.incIndent();\n\t          stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n\t          if (isPresent(stmt.constructorMethod)) {\n\t              this._visitClassConstructor(stmt, ctx);\n\t          }\n\t          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n\t          stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          ctx.popClass();\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n\t          if (field.hasModifier(StmtModifier.Private)) {\n\t              // comment out as a workaround for #10967\n\t              ctx.print(\"/*private*/ \");\n\t          }\n\t          ctx.print(field.name);\n\t          ctx.print(':');\n\t          this.visitType(field.type, ctx);\n\t          ctx.println(\";\");\n\t      };\n\t      _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n\t          if (getter.hasModifier(StmtModifier.Private)) {\n\t              ctx.print(\"private \");\n\t          }\n\t          ctx.print(\"get \" + getter.name + \"()\");\n\t          ctx.print(':');\n\t          this.visitType(getter.type, ctx);\n\t          ctx.println(\" {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(getter.body, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t      };\n\t      _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n\t          ctx.print(\"constructor(\");\n\t          this._visitParams(stmt.constructorMethod.params, ctx);\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.constructorMethod.body, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t      };\n\t      _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n\t          if (method.hasModifier(StmtModifier.Private)) {\n\t              ctx.print(\"private \");\n\t          }\n\t          ctx.print(method.name + \"(\");\n\t          this._visitParams(method.params, ctx);\n\t          ctx.print(\"):\");\n\t          this.visitType(method.type, ctx, 'void');\n\t          ctx.println(\" {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(method.body, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t      };\n\t      _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n\t          ctx.print(\"(\");\n\t          this._visitParams(ast.params, ctx);\n\t          ctx.print(\"):\");\n\t          this.visitType(ast.type, ctx, 'void');\n\t          ctx.println(\" => {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(ast.statements, ctx);\n\t          ctx.decIndent();\n\t          ctx.print(\"}\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n\t          if (ctx.isExportedVar(stmt.name)) {\n\t              ctx.print(\"export \");\n\t          }\n\t          ctx.print(\"function \" + stmt.name + \"(\");\n\t          this._visitParams(stmt.params, ctx);\n\t          ctx.print(\"):\");\n\t          this.visitType(stmt.type, ctx, 'void');\n\t          ctx.println(\" {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.statements, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n\t          ctx.println(\"try {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.bodyStmts, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n\t          ctx.incIndent();\n\t          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n\t                  StmtModifier.Final\n\t              ])].concat(stmt.catchStmts);\n\t          this.visitAllStatements(catchStmts, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n\t          var typeStr;\n\t          switch (type.name) {\n\t              case BuiltinTypeName.Bool:\n\t                  typeStr = 'boolean';\n\t                  break;\n\t              case BuiltinTypeName.Dynamic:\n\t                  typeStr = 'any';\n\t                  break;\n\t              case BuiltinTypeName.Function:\n\t                  typeStr = 'Function';\n\t                  break;\n\t              case BuiltinTypeName.Number:\n\t                  typeStr = 'number';\n\t                  break;\n\t              case BuiltinTypeName.Int:\n\t                  typeStr = 'number';\n\t                  break;\n\t              case BuiltinTypeName.String:\n\t                  typeStr = 'string';\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unsupported builtin type \" + type.name);\n\t          }\n\t          ctx.print(typeStr);\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitExternalType = function (ast, ctx) {\n\t          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n\t          this.visitType(type.of, ctx);\n\t          ctx.print(\"[]\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n\t          ctx.print(\"{[key: string]:\");\n\t          this.visitType(type.valueType, ctx);\n\t          ctx.print(\"}\");\n\t          return null;\n\t      };\n\t      _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n\t          var name;\n\t          switch (method) {\n\t              case BuiltinMethod.ConcatArray:\n\t                  name = 'concat';\n\t                  break;\n\t              case BuiltinMethod.SubscribeObservable:\n\t                  name = 'subscribe';\n\t                  break;\n\t              case BuiltinMethod.Bind:\n\t                  name = 'bind';\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unknown builtin method: \" + method);\n\t          }\n\t          return name;\n\t      };\n\t      _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n\t          var _this = this;\n\t          this.visitAllObjects(function (param) {\n\t              ctx.print(param.name);\n\t              ctx.print(':');\n\t              _this.visitType(param.type, ctx);\n\t          }, params, ctx, ',');\n\t      };\n\t      _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n\t          var _this = this;\n\t          if (isBlank(value.name)) {\n\t              throw new Error(\"Internal error: unknown identifier \" + value);\n\t          }\n\t          if (isPresent(value.moduleUrl) && value.moduleUrl != this._moduleUrl) {\n\t              var prefix = this.importsWithPrefixes.get(value.moduleUrl);\n\t              if (isBlank(prefix)) {\n\t                  prefix = \"import\" + this.importsWithPrefixes.size;\n\t                  this.importsWithPrefixes.set(value.moduleUrl, prefix);\n\t              }\n\t              ctx.print(prefix + \".\");\n\t          }\n\t          if (value.reference && value.reference.members) {\n\t              ctx.print(value.reference.name);\n\t              ctx.print('.');\n\t              ctx.print(value.reference.members.join('.'));\n\t          }\n\t          else {\n\t              ctx.print(value.name);\n\t          }\n\t          if (isPresent(typeParams) && typeParams.length > 0) {\n\t              ctx.print(\"<\");\n\t              this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n\t              ctx.print(\">\");\n\t          }\n\t      };\n\t      return _TsEmitterVisitor;\n\t  }(AbstractEmitterVisitor));\n\t\n\t  function interpretStatements(statements, resultVar) {\n\t      var stmtsWithReturn = statements.concat([new ReturnStatement(variable(resultVar))]);\n\t      var ctx = new _ExecutionContext(null, null, null, new Map());\n\t      var visitor = new StatementInterpreter();\n\t      var result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n\t      return isPresent(result) ? result.value : null;\n\t  }\n\t  function _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n\t      var childCtx = ctx.createChildWihtLocalVars();\n\t      for (var i = 0; i < varNames.length; i++) {\n\t          childCtx.vars.set(varNames[i], varValues[i]);\n\t      }\n\t      var result = visitor.visitAllStatements(statements, childCtx);\n\t      return isPresent(result) ? result.value : null;\n\t  }\n\t  var _ExecutionContext = (function () {\n\t      function _ExecutionContext(parent, instance, className, vars) {\n\t          this.parent = parent;\n\t          this.instance = instance;\n\t          this.className = className;\n\t          this.vars = vars;\n\t      }\n\t      _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n\t          return new _ExecutionContext(this, this.instance, this.className, new Map());\n\t      };\n\t      return _ExecutionContext;\n\t  }());\n\t  var ReturnValue = (function () {\n\t      function ReturnValue(value) {\n\t          this.value = value;\n\t      }\n\t      return ReturnValue;\n\t  }());\n\t  function createDynamicClass(_classStmt, _ctx, _visitor) {\n\t      var propertyDescriptors = {};\n\t      _classStmt.getters.forEach(function (getter) {\n\t          // Note: use `function` instead of arrow function to capture `this`\n\t          propertyDescriptors[getter.name] = {\n\t              configurable: false,\n\t              get: function () {\n\t                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n\t                  return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n\t              }\n\t          };\n\t      });\n\t      _classStmt.methods.forEach(function (method) {\n\t          var paramNames = method.params.map(function (param) { return param.name; });\n\t          // Note: use `function` instead of arrow function to capture `this`\n\t          propertyDescriptors[method.name] = {\n\t              writable: false,\n\t              configurable: false,\n\t              value: function () {\n\t                  var args = [];\n\t                  for (var _i = 0; _i < arguments.length; _i++) {\n\t                      args[_i - 0] = arguments[_i];\n\t                  }\n\t                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n\t                  return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n\t              }\n\t          };\n\t      });\n\t      var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n\t      // Note: use `function` instead of arrow function to capture `this`\n\t      var ctor = function () {\n\t          var _this = this;\n\t          var args = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              args[_i - 0] = arguments[_i];\n\t          }\n\t          var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n\t          _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n\t          _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n\t      };\n\t      var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n\t      ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n\t      return ctor;\n\t  }\n\t  var StatementInterpreter = (function () {\n\t      function StatementInterpreter() {\n\t      }\n\t      StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n\t      StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n\t          ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n\t          var value = expr.value.visitExpression(this, ctx);\n\t          var currCtx = ctx;\n\t          while (currCtx != null) {\n\t              if (currCtx.vars.has(expr.name)) {\n\t                  currCtx.vars.set(expr.name, value);\n\t                  return value;\n\t              }\n\t              currCtx = currCtx.parent;\n\t          }\n\t          throw new Error(\"Not declared variable \" + expr.name);\n\t      };\n\t      StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n\t          var varName = ast.name;\n\t          if (isPresent(ast.builtin)) {\n\t              switch (ast.builtin) {\n\t                  case BuiltinVar.Super:\n\t                      return ctx.instance.__proto__;\n\t                  case BuiltinVar.This:\n\t                      return ctx.instance;\n\t                  case BuiltinVar.CatchError:\n\t                      varName = CATCH_ERROR_VAR$1;\n\t                      break;\n\t                  case BuiltinVar.CatchStack:\n\t                      varName = CATCH_STACK_VAR$1;\n\t                      break;\n\t                  default:\n\t                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n\t              }\n\t          }\n\t          var currCtx = ctx;\n\t          while (currCtx != null) {\n\t              if (currCtx.vars.has(varName)) {\n\t                  return currCtx.vars.get(varName);\n\t              }\n\t              currCtx = currCtx.parent;\n\t          }\n\t          throw new Error(\"Not declared variable \" + varName);\n\t      };\n\t      StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n\t          var receiver = expr.receiver.visitExpression(this, ctx);\n\t          var index = expr.index.visitExpression(this, ctx);\n\t          var value = expr.value.visitExpression(this, ctx);\n\t          receiver[index] = value;\n\t          return value;\n\t      };\n\t      StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n\t          var receiver = expr.receiver.visitExpression(this, ctx);\n\t          var value = expr.value.visitExpression(this, ctx);\n\t          receiver[expr.name] = value;\n\t          return value;\n\t      };\n\t      StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n\t          var receiver = expr.receiver.visitExpression(this, ctx);\n\t          var args = this.visitAllExpressions(expr.args, ctx);\n\t          var result;\n\t          if (isPresent(expr.builtin)) {\n\t              switch (expr.builtin) {\n\t                  case BuiltinMethod.ConcatArray:\n\t                      result = receiver.concat.apply(receiver, args);\n\t                      break;\n\t                  case BuiltinMethod.SubscribeObservable:\n\t                      result = receiver.subscribe({ next: args[0] });\n\t                      break;\n\t                  case BuiltinMethod.Bind:\n\t                      result = receiver.bind.apply(receiver, args);\n\t                      break;\n\t                  default:\n\t                      throw new Error(\"Unknown builtin method \" + expr.builtin);\n\t              }\n\t          }\n\t          else {\n\t              result = receiver[expr.name].apply(receiver, args);\n\t          }\n\t          return result;\n\t      };\n\t      StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n\t          var args = this.visitAllExpressions(stmt.args, ctx);\n\t          var fnExpr = stmt.fn;\n\t          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n\t              ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n\t              return null;\n\t          }\n\t          else {\n\t              var fn = stmt.fn.visitExpression(this, ctx);\n\t              return fn.apply(null, args);\n\t          }\n\t      };\n\t      StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n\t          return new ReturnValue(stmt.value.visitExpression(this, ctx));\n\t      };\n\t      StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n\t          var clazz = createDynamicClass(stmt, ctx, this);\n\t          ctx.vars.set(stmt.name, clazz);\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n\t          return stmt.expr.visitExpression(this, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n\t          var condition = stmt.condition.visitExpression(this, ctx);\n\t          if (condition) {\n\t              return this.visitAllStatements(stmt.trueCase, ctx);\n\t          }\n\t          else if (isPresent(stmt.falseCase)) {\n\t              return this.visitAllStatements(stmt.falseCase, ctx);\n\t          }\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n\t          try {\n\t              return this.visitAllStatements(stmt.bodyStmts, ctx);\n\t          }\n\t          catch (e) {\n\t              var childCtx = ctx.createChildWihtLocalVars();\n\t              childCtx.vars.set(CATCH_ERROR_VAR$1, e);\n\t              childCtx.vars.set(CATCH_STACK_VAR$1, e.stack);\n\t              return this.visitAllStatements(stmt.catchStmts, childCtx);\n\t          }\n\t      };\n\t      StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n\t          throw stmt.error.visitExpression(this, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n\t      StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n\t          var args = this.visitAllExpressions(ast.args, ctx);\n\t          var clazz = ast.classExpr.visitExpression(this, ctx);\n\t          return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n\t      };\n\t      StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n\t      StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n\t          return ast.value.reference;\n\t      };\n\t      StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n\t          if (ast.condition.visitExpression(this, ctx)) {\n\t              return ast.trueCase.visitExpression(this, ctx);\n\t          }\n\t          else if (isPresent(ast.falseCase)) {\n\t              return ast.falseCase.visitExpression(this, ctx);\n\t          }\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n\t          return !ast.condition.visitExpression(this, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n\t          return ast.value.visitExpression(this, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n\t          var paramNames = ast.params.map(function (param) { return param.name; });\n\t          return _declareFn(paramNames, ast.statements, ctx, this);\n\t      };\n\t      StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n\t          var paramNames = stmt.params.map(function (param) { return param.name; });\n\t          ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n\t          return null;\n\t      };\n\t      StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n\t          var _this = this;\n\t          var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n\t          var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n\t          switch (ast.operator) {\n\t              case BinaryOperator.Equals:\n\t                  return lhs() == rhs();\n\t              case BinaryOperator.Identical:\n\t                  return lhs() === rhs();\n\t              case BinaryOperator.NotEquals:\n\t                  return lhs() != rhs();\n\t              case BinaryOperator.NotIdentical:\n\t                  return lhs() !== rhs();\n\t              case BinaryOperator.And:\n\t                  return lhs() && rhs();\n\t              case BinaryOperator.Or:\n\t                  return lhs() || rhs();\n\t              case BinaryOperator.Plus:\n\t                  return lhs() + rhs();\n\t              case BinaryOperator.Minus:\n\t                  return lhs() - rhs();\n\t              case BinaryOperator.Divide:\n\t                  return lhs() / rhs();\n\t              case BinaryOperator.Multiply:\n\t                  return lhs() * rhs();\n\t              case BinaryOperator.Modulo:\n\t                  return lhs() % rhs();\n\t              case BinaryOperator.Lower:\n\t                  return lhs() < rhs();\n\t              case BinaryOperator.LowerEquals:\n\t                  return lhs() <= rhs();\n\t              case BinaryOperator.Bigger:\n\t                  return lhs() > rhs();\n\t              case BinaryOperator.BiggerEquals:\n\t                  return lhs() >= rhs();\n\t              default:\n\t                  throw new Error(\"Unknown operator \" + ast.operator);\n\t          }\n\t      };\n\t      StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n\t          var result;\n\t          var receiver = ast.receiver.visitExpression(this, ctx);\n\t          result = receiver[ast.name];\n\t          return result;\n\t      };\n\t      StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n\t          var receiver = ast.receiver.visitExpression(this, ctx);\n\t          var prop = ast.index.visitExpression(this, ctx);\n\t          return receiver[prop];\n\t      };\n\t      StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n\t          return this.visitAllExpressions(ast.entries, ctx);\n\t      };\n\t      StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n\t          var _this = this;\n\t          var result = {};\n\t          ast.entries.forEach(function (entry) { return result[entry[0]] =\n\t              entry[1].visitExpression(_this, ctx); });\n\t          return result;\n\t      };\n\t      StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n\t          var _this = this;\n\t          return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n\t      };\n\t      StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n\t          for (var i = 0; i < statements.length; i++) {\n\t              var stmt = statements[i];\n\t              var val = stmt.visitStatement(this, ctx);\n\t              if (val instanceof ReturnValue) {\n\t                  return val;\n\t              }\n\t          }\n\t          return null;\n\t      };\n\t      return StatementInterpreter;\n\t  }());\n\t  function _declareFn(varNames, statements, ctx, visitor) {\n\t      return function () {\n\t          var args = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              args[_i - 0] = arguments[_i];\n\t          }\n\t          return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n\t      };\n\t  }\n\t  var CATCH_ERROR_VAR$1 = 'error';\n\t  var CATCH_STACK_VAR$1 = 'stack';\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$20 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var AbstractJsEmitterVisitor = (function (_super) {\n\t      __extends$20(AbstractJsEmitterVisitor, _super);\n\t      function AbstractJsEmitterVisitor() {\n\t          _super.call(this, false);\n\t      }\n\t      AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n\t          var _this = this;\n\t          ctx.pushClass(stmt);\n\t          this._visitClassConstructor(stmt, ctx);\n\t          if (isPresent(stmt.parent)) {\n\t              ctx.print(stmt.name + \".prototype = Object.create(\");\n\t              stmt.parent.visitExpression(this, ctx);\n\t              ctx.println(\".prototype);\");\n\t          }\n\t          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n\t          stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n\t          ctx.popClass();\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n\t          ctx.print(\"function \" + stmt.name + \"(\");\n\t          if (isPresent(stmt.constructorMethod)) {\n\t              this._visitParams(stmt.constructorMethod.params, ctx);\n\t          }\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          if (isPresent(stmt.constructorMethod)) {\n\t              if (stmt.constructorMethod.body.length > 0) {\n\t                  ctx.println(\"var self = this;\");\n\t                  this.visitAllStatements(stmt.constructorMethod.body, ctx);\n\t              }\n\t          }\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t      };\n\t      AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n\t          ctx.println(\"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n\t          ctx.incIndent();\n\t          if (getter.body.length > 0) {\n\t              ctx.println(\"var self = this;\");\n\t              this.visitAllStatements(getter.body, ctx);\n\t          }\n\t          ctx.decIndent();\n\t          ctx.println(\"}});\");\n\t      };\n\t      AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n\t          ctx.print(stmt.name + \".prototype.\" + method.name + \" = function(\");\n\t          this._visitParams(method.params, ctx);\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          if (method.body.length > 0) {\n\t              ctx.println(\"var self = this;\");\n\t              this.visitAllStatements(method.body, ctx);\n\t          }\n\t          ctx.decIndent();\n\t          ctx.println(\"};\");\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n\t          if (ast.builtin === BuiltinVar.This) {\n\t              ctx.print('self');\n\t          }\n\t          else if (ast.builtin === BuiltinVar.Super) {\n\t              throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n\t          }\n\t          else {\n\t              _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n\t          }\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n\t          ctx.print(\"var \" + stmt.name + \" = \");\n\t          stmt.value.visitExpression(this, ctx);\n\t          ctx.println(\";\");\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n\t          ast.value.visitExpression(this, ctx);\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n\t          var fnExpr = expr.fn;\n\t          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n\t              ctx.currentClass.parent.visitExpression(this, ctx);\n\t              ctx.print(\".call(this\");\n\t              if (expr.args.length > 0) {\n\t                  ctx.print(\", \");\n\t                  this.visitAllExpressions(expr.args, ctx, ',');\n\t              }\n\t              ctx.print(\")\");\n\t          }\n\t          else {\n\t              _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n\t          }\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n\t          ctx.print(\"function(\");\n\t          this._visitParams(ast.params, ctx);\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(ast.statements, ctx);\n\t          ctx.decIndent();\n\t          ctx.print(\"}\");\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n\t          ctx.print(\"function \" + stmt.name + \"(\");\n\t          this._visitParams(stmt.params, ctx);\n\t          ctx.println(\") {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.statements, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n\t          ctx.println(\"try {\");\n\t          ctx.incIndent();\n\t          this.visitAllStatements(stmt.bodyStmts, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n\t          ctx.incIndent();\n\t          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n\t                  StmtModifier.Final\n\t              ])].concat(stmt.catchStmts);\n\t          this.visitAllStatements(catchStmts, ctx);\n\t          ctx.decIndent();\n\t          ctx.println(\"}\");\n\t          return null;\n\t      };\n\t      AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n\t          this.visitAllObjects(function (param) { return ctx.print(param.name); }, params, ctx, ',');\n\t      };\n\t      AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n\t          var name;\n\t          switch (method) {\n\t              case BuiltinMethod.ConcatArray:\n\t                  name = 'concat';\n\t                  break;\n\t              case BuiltinMethod.SubscribeObservable:\n\t                  name = 'subscribe';\n\t                  break;\n\t              case BuiltinMethod.Bind:\n\t                  name = 'bind';\n\t                  break;\n\t              default:\n\t                  throw new Error(\"Unknown builtin method: \" + method);\n\t          }\n\t          return name;\n\t      };\n\t      return AbstractJsEmitterVisitor;\n\t  }(AbstractEmitterVisitor));\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$19 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  function evalExpression(sourceUrl, expr, declarations, vars) {\n\t      var fnBody = declarations + \"\\nreturn \" + expr + \"\\n//# sourceURL=\" + sourceUrl;\n\t      var fnArgNames = [];\n\t      var fnArgValues = [];\n\t      for (var argName in vars) {\n\t          fnArgNames.push(argName);\n\t          fnArgValues.push(vars[argName]);\n\t      }\n\t      return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n\t  }\n\t  function jitStatements(sourceUrl, statements, resultVar) {\n\t      var converter = new JitEmitterVisitor();\n\t      var ctx = EmitterVisitorContext.createRoot([resultVar]);\n\t      converter.visitAllStatements(statements, ctx);\n\t      return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n\t  }\n\t  var JitEmitterVisitor = (function (_super) {\n\t      __extends$19(JitEmitterVisitor, _super);\n\t      function JitEmitterVisitor() {\n\t          _super.apply(this, arguments);\n\t          this._evalArgNames = [];\n\t          this._evalArgValues = [];\n\t      }\n\t      JitEmitterVisitor.prototype.getArgs = function () {\n\t          var result = {};\n\t          for (var i = 0; i < this._evalArgNames.length; i++) {\n\t              result[this._evalArgNames[i]] = this._evalArgValues[i];\n\t          }\n\t          return result;\n\t      };\n\t      JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n\t          var value = ast.value.reference;\n\t          var id = this._evalArgValues.indexOf(value);\n\t          if (id === -1) {\n\t              id = this._evalArgValues.length;\n\t              this._evalArgValues.push(value);\n\t              var name_1 = isPresent(ast.value.name) ? sanitizeIdentifier(ast.value.name) : 'val';\n\t              this._evalArgNames.push(sanitizeIdentifier(\"jit_\" + name_1 + id));\n\t          }\n\t          ctx.print(this._evalArgNames[id]);\n\t          return null;\n\t      };\n\t      return JitEmitterVisitor;\n\t  }(AbstractJsEmitterVisitor));\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  /**\n\t   * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n\t   *\n\t   * Please make sure to keep to edits in sync with the source file.\n\t   *\n\t   * Source:\n\t   * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n\t   *\n\t   * The original file level comment is reproduced below\n\t   */\n\t  /*\n\t    This is a limited shim for ShadowDOM css styling.\n\t    https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\t\n\t    The intention here is to support only the styling features which can be\n\t    relatively simply implemented. The goal is to allow users to avoid the\n\t    most obvious pitfalls and do so without compromising performance significantly.\n\t    For ShadowDOM styling that's not covered here, a set of best practices\n\t    can be provided that should allow users to accomplish more complex styling.\n\t\n\t    The following is a list of specific ShadowDOM styling features and a brief\n\t    discussion of the approach used to shim.\n\t\n\t    Shimmed features:\n\t\n\t    * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n\t    element using the :host rule. To shim this feature, the :host styles are\n\t    reformatted and prefixed with a given scope name and promoted to a\n\t    document level stylesheet.\n\t    For example, given a scope name of .foo, a rule like this:\n\t\n\t      :host {\n\t          background: red;\n\t        }\n\t      }\n\t\n\t    becomes:\n\t\n\t      .foo {\n\t        background: red;\n\t      }\n\t\n\t    * encapsulation: Styles defined within ShadowDOM, apply only to\n\t    dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n\t    this feature.\n\t\n\t    By default, rules are prefixed with the host element tag name\n\t    as a descendant selector. This ensures styling does not leak out of the 'top'\n\t    of the element's ShadowDOM. For example,\n\t\n\t    div {\n\t        font-weight: bold;\n\t      }\n\t\n\t    becomes:\n\t\n\t    x-foo div {\n\t        font-weight: bold;\n\t      }\n\t\n\t    becomes:\n\t\n\t\n\t    Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n\t    selectors are scoped by adding an attribute selector suffix to each\n\t    simple selector that contains the host element tag name. Each element\n\t    in the element's ShadowDOM template is also given the scope attribute.\n\t    Thus, these rules match only elements that have the scope attribute.\n\t    For example, given a scope name of x-foo, a rule like this:\n\t\n\t      div {\n\t        font-weight: bold;\n\t      }\n\t\n\t    becomes:\n\t\n\t      div[x-foo] {\n\t        font-weight: bold;\n\t      }\n\t\n\t    Note that elements that are dynamically added to a scope must have the scope\n\t    selector added to them manually.\n\t\n\t    * upper/lower bound encapsulation: Styles which are defined outside a\n\t    shadowRoot should not cross the ShadowDOM boundary and should not apply\n\t    inside a shadowRoot.\n\t\n\t    This styling behavior is not emulated. Some possible ways to do this that\n\t    were rejected due to complexity and/or performance concerns include: (1) reset\n\t    every possible property for every possible selector for a given scope name;\n\t    (2) re-implement css in javascript.\n\t\n\t    As an alternative, users should make sure to use selectors\n\t    specific to the scope in which they are working.\n\t\n\t    * ::distributed: This behavior is not emulated. It's often not necessary\n\t    to style the contents of a specific insertion point and instead, descendants\n\t    of the host element can be styled selectively. Users can also create an\n\t    extra node around an insertion point and style that node's contents\n\t    via descendent selectors. For example, with a shadowRoot like this:\n\t\n\t      <style>\n\t        ::content(div) {\n\t          background: red;\n\t        }\n\t      </style>\n\t      <content></content>\n\t\n\t    could become:\n\t\n\t      <style>\n\t        / *@polyfill .content-container div * /\n\t        ::content(div) {\n\t          background: red;\n\t        }\n\t      </style>\n\t      <div class=\"content-container\">\n\t        <content></content>\n\t      </div>\n\t\n\t    Note the use of @polyfill in the comment above a ShadowDOM specific style\n\t    declaration. This is a directive to the styling shim to use the selector\n\t    in comments in lieu of the next selector when running under polyfill.\n\t  */\n\t  var ShadowCss = (function () {\n\t      function ShadowCss() {\n\t          this.strictStyling = true;\n\t      }\n\t      /*\n\t      * Shim some cssText with the given selector. Returns cssText that can\n\t      * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n\t      *\n\t      * When strictStyling is true:\n\t      * - selector is the attribute added to all elements inside the host,\n\t      * - hostSelector is the attribute added to the host itself.\n\t      */\n\t      ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n\t          if (hostSelector === void 0) { hostSelector = ''; }\n\t          var sourceMappingUrl = extractSourceMappingUrl(cssText);\n\t          cssText = stripComments(cssText);\n\t          cssText = this._insertDirectives(cssText);\n\t          return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n\t      };\n\t      ShadowCss.prototype._insertDirectives = function (cssText) {\n\t          cssText = this._insertPolyfillDirectivesInCssText(cssText);\n\t          return this._insertPolyfillRulesInCssText(cssText);\n\t      };\n\t      /*\n\t       * Process styles to convert native ShadowDOM rules that will trip\n\t       * up the css parser; we rely on decorating the stylesheet with inert rules.\n\t       *\n\t       * For example, we convert this rule:\n\t       *\n\t       * polyfill-next-selector { content: ':host menu-item'; }\n\t       * ::content menu-item {\n\t       *\n\t       * to this:\n\t       *\n\t       * scopeName menu-item {\n\t       *\n\t      **/\n\t      ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n\t          // Difference with webcomponents.js: does not handle comments\n\t          return cssText.replace(_cssContentNextSelectorRe, function () {\n\t              var m = [];\n\t              for (var _i = 0; _i < arguments.length; _i++) {\n\t                  m[_i - 0] = arguments[_i];\n\t              }\n\t              return m[2] + '{';\n\t          });\n\t      };\n\t      /*\n\t       * Process styles to add rules which will only apply under the polyfill\n\t       *\n\t       * For example, we convert this rule:\n\t       *\n\t       * polyfill-rule {\n\t       *   content: ':host menu-item';\n\t       * ...\n\t       * }\n\t       *\n\t       * to this:\n\t       *\n\t       * scopeName menu-item {...}\n\t       *\n\t      **/\n\t      ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n\t          // Difference with webcomponents.js: does not handle comments\n\t          return cssText.replace(_cssContentRuleRe, function () {\n\t              var m = [];\n\t              for (var _i = 0; _i < arguments.length; _i++) {\n\t                  m[_i - 0] = arguments[_i];\n\t              }\n\t              var rule = m[0].replace(m[1], '').replace(m[2], '');\n\t              return m[4] + rule;\n\t          });\n\t      };\n\t      /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n\t       *\n\t       *  .foo {... }\n\t       *\n\t       *  and converts this to\n\t       *\n\t       *  scopeName .foo { ... }\n\t      */\n\t      ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n\t          var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n\t          // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n\t          cssText = this._insertPolyfillHostInCssText(cssText);\n\t          cssText = this._convertColonHost(cssText);\n\t          cssText = this._convertColonHostContext(cssText);\n\t          cssText = this._convertShadowDOMSelectors(cssText);\n\t          if (scopeSelector) {\n\t              cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n\t          }\n\t          cssText = cssText + '\\n' + unscopedRules;\n\t          return cssText.trim();\n\t      };\n\t      /*\n\t       * Process styles to add rules which will only apply under the polyfill\n\t       * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n\t       * occasions, e.g. -webkit-calc on Safari.)\n\t       * For example, we convert this rule:\n\t       *\n\t       * @polyfill-unscoped-rule {\n\t       *   content: 'menu-item';\n\t       * ... }\n\t       *\n\t       * to this:\n\t       *\n\t       * menu-item {...}\n\t       *\n\t      **/\n\t      ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n\t          // Difference with webcomponents.js: does not handle comments\n\t          var r = '';\n\t          var m;\n\t          _cssContentUnscopedRuleRe.lastIndex = 0;\n\t          while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n\t              var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n\t              r += rule + '\\n\\n';\n\t          }\n\t          return r;\n\t      };\n\t      /*\n\t       * convert a rule like :host(.foo) > .bar { }\n\t       *\n\t       * to\n\t       *\n\t       * .foo<scopeName> > .bar\n\t      */\n\t      ShadowCss.prototype._convertColonHost = function (cssText) {\n\t          return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n\t      };\n\t      /*\n\t       * convert a rule like :host-context(.foo) > .bar { }\n\t       *\n\t       * to\n\t       *\n\t       * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n\t       *\n\t       * and\n\t       *\n\t       * :host-context(.foo:host) .bar { ... }\n\t       *\n\t       * to\n\t       *\n\t       * .foo<scopeName> .bar { ... }\n\t      */\n\t      ShadowCss.prototype._convertColonHostContext = function (cssText) {\n\t          return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n\t      };\n\t      ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n\t          // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n\t          return cssText.replace(regExp, function () {\n\t              var m = [];\n\t              for (var _i = 0; _i < arguments.length; _i++) {\n\t                  m[_i - 0] = arguments[_i];\n\t              }\n\t              if (m[2]) {\n\t                  var parts = m[2].split(',');\n\t                  var r = [];\n\t                  for (var i = 0; i < parts.length; i++) {\n\t                      var p = parts[i].trim();\n\t                      if (!p)\n\t                          break;\n\t                      r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n\t                  }\n\t                  return r.join(',');\n\t              }\n\t              else {\n\t                  return _polyfillHostNoCombinator + m[3];\n\t              }\n\t          });\n\t      };\n\t      ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n\t          if (part.indexOf(_polyfillHost) > -1) {\n\t              return this._colonHostPartReplacer(host, part, suffix);\n\t          }\n\t          else {\n\t              return host + part + suffix + ', ' + part + ' ' + host + suffix;\n\t          }\n\t      };\n\t      ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n\t          return host + part.replace(_polyfillHost, '') + suffix;\n\t      };\n\t      /*\n\t       * Convert combinators like ::shadow and pseudo-elements like ::content\n\t       * by replacing with space.\n\t      */\n\t      ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n\t          return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n\t      };\n\t      // change a selector like 'div' to 'name div'\n\t      ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n\t          var _this = this;\n\t          return processRules(cssText, function (rule) {\n\t              var selector = rule.selector;\n\t              var content = rule.content;\n\t              if (rule.selector[0] != '@') {\n\t                  selector =\n\t                      _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n\t              }\n\t              else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n\t                  rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n\t                  content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n\t              }\n\t              return new CssRule(selector, content);\n\t          });\n\t      };\n\t      ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n\t          var _this = this;\n\t          return selector.split(',')\n\t              .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n\t              .map(function (deepParts) {\n\t              var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n\t              var applyScope = function (shallowPart) {\n\t                  if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n\t                      return strict ?\n\t                          _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n\t                          _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n\t                  }\n\t                  else {\n\t                      return shallowPart;\n\t                  }\n\t              };\n\t              return [applyScope(shallowPart)].concat(otherParts).join(' ');\n\t          })\n\t              .join(', ');\n\t      };\n\t      ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n\t          var re = this._makeScopeMatcher(scopeSelector);\n\t          return !re.test(selector);\n\t      };\n\t      ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n\t          var lre = /\\[/g;\n\t          var rre = /\\]/g;\n\t          scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n\t          return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n\t      };\n\t      ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n\t          // Difference from webcomponents.js: scopeSelector could not be an array\n\t          return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n\t      };\n\t      // scope via name and [is=name]\n\t      ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n\t          // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n\t          _polyfillHostRe.lastIndex = 0;\n\t          if (_polyfillHostRe.test(selector)) {\n\t              var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n\t              return selector\n\t                  .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n\t                  return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n\t                      return before + replaceBy_1 + colon + after;\n\t                  });\n\t              })\n\t                  .replace(_polyfillHostRe, replaceBy_1 + ' ');\n\t          }\n\t          return scopeSelector + ' ' + selector;\n\t      };\n\t      // return a selector with [name] suffix on each simple selector\n\t      // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n\t      ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n\t          var _this = this;\n\t          var isRe = /\\[is=([^\\]]*)\\]/g;\n\t          scopeSelector = scopeSelector.replace(isRe, function (_) {\n\t              var parts = [];\n\t              for (var _i = 1; _i < arguments.length; _i++) {\n\t                  parts[_i - 1] = arguments[_i];\n\t              }\n\t              return parts[0];\n\t          });\n\t          var attrName = '[' + scopeSelector + ']';\n\t          var _scopeSelectorPart = function (p) {\n\t              var scopedP = p.trim();\n\t              if (!scopedP) {\n\t                  return '';\n\t              }\n\t              if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n\t                  scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n\t              }\n\t              else {\n\t                  // remove :host since it should be unnecessary\n\t                  var t = p.replace(_polyfillHostRe, '');\n\t                  if (t.length > 0) {\n\t                      var matches = t.match(/([^:]*)(:*)(.*)/);\n\t                      if (matches) {\n\t                          scopedP = matches[1] + attrName + matches[2] + matches[3];\n\t                      }\n\t                  }\n\t              }\n\t              return scopedP;\n\t          };\n\t          var safeContent = new SafeSelector(selector);\n\t          selector = safeContent.content();\n\t          var scopedSelector = '';\n\t          var startIndex = 0;\n\t          var res;\n\t          var sep = /( |>|\\+|~(?!=))\\s*/g;\n\t          var scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n\t          while ((res = sep.exec(selector)) !== null) {\n\t              var separator = res[1];\n\t              var part = selector.slice(startIndex, res.index).trim();\n\t              // if a selector appears before :host-context it should not be shimmed as it\n\t              // matches on ancestor elements and not on elements in the host's shadow\n\t              var scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n\t              scopedSelector += scopedPart + \" \" + separator + \" \";\n\t              startIndex = sep.lastIndex;\n\t          }\n\t          scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n\t          // replace the placeholders with their original values\n\t          return safeContent.restore(scopedSelector);\n\t      };\n\t      ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n\t          return selector.replace(_colonHostContextRe, _polyfillHostContext)\n\t              .replace(_colonHostRe, _polyfillHost);\n\t      };\n\t      return ShadowCss;\n\t  }());\n\t  var SafeSelector = (function () {\n\t      function SafeSelector(selector) {\n\t          var _this = this;\n\t          this.placeholders = [];\n\t          this.index = 0;\n\t          // Replaces attribute selectors with placeholders.\n\t          // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n\t          selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n\t              var replaceBy = \"__ph-\" + _this.index + \"__\";\n\t              _this.placeholders.push(keep);\n\t              _this.index++;\n\t              return replaceBy;\n\t          });\n\t          // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n\t          // WS and \"+\" would otherwise be interpreted as selector separators.\n\t          this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n\t              var replaceBy = \"__ph-\" + _this.index + \"__\";\n\t              _this.placeholders.push(exp);\n\t              _this.index++;\n\t              return pseudo + replaceBy;\n\t          });\n\t      }\n\t      ;\n\t      SafeSelector.prototype.restore = function (content) {\n\t          var _this = this;\n\t          return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n\t      };\n\t      SafeSelector.prototype.content = function () { return this._content; };\n\t      return SafeSelector;\n\t  }());\n\t  var _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\n\t  var _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n\t  var _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n\t  var _polyfillHost = '-shadowcsshost';\n\t  // note: :host-context pre-processed to -shadowcsshostcontext.\n\t  var _polyfillHostContext = '-shadowcsscontext';\n\t  var _parenSuffix = ')(?:\\\\((' +\n\t      '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n\t      ')\\\\))?([^,{]*)';\n\t  var _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n\t  var _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n\t  var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n\t  var _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\n\t  var _shadowDOMSelectorsRe = [\n\t      /::shadow/g,\n\t      /::content/g,\n\t      // Deprecated selectors\n\t      /\\/shadow-deep\\//g,\n\t      /\\/shadow\\//g,\n\t  ];\n\t  var _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\n\t  var _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\n\t  var _polyfillHostRe = /-shadowcsshost/gim;\n\t  var _colonHostRe = /:host/gim;\n\t  var _colonHostContextRe = /:host-context/gim;\n\t  var _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\t  function stripComments(input) {\n\t      return input.replace(_commentRe, '');\n\t  }\n\t  // all comments except inline source mapping\n\t  var _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n\t  function extractSourceMappingUrl(input) {\n\t      var matcher = input.match(_sourceMappingUrlRe);\n\t      return matcher ? matcher[0] : '';\n\t  }\n\t  var _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\n\t  var _curlyRe = /([{}])/g;\n\t  var OPEN_CURLY = '{';\n\t  var CLOSE_CURLY = '}';\n\t  var BLOCK_PLACEHOLDER = '%BLOCK%';\n\t  var CssRule = (function () {\n\t      function CssRule(selector, content) {\n\t          this.selector = selector;\n\t          this.content = content;\n\t      }\n\t      return CssRule;\n\t  }());\n\t  function processRules(input, ruleCallback) {\n\t      var inputWithEscapedBlocks = escapeBlocks(input);\n\t      var nextBlockIndex = 0;\n\t      return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n\t          var m = [];\n\t          for (var _i = 0; _i < arguments.length; _i++) {\n\t              m[_i - 0] = arguments[_i];\n\t          }\n\t          var selector = m[2];\n\t          var content = '';\n\t          var suffix = m[4];\n\t          var contentPrefix = '';\n\t          if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n\t              content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n\t              suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n\t              contentPrefix = '{';\n\t          }\n\t          var rule = ruleCallback(new CssRule(selector, content));\n\t          return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n\t      });\n\t  }\n\t  var StringWithEscapedBlocks = (function () {\n\t      function StringWithEscapedBlocks(escapedString, blocks) {\n\t          this.escapedString = escapedString;\n\t          this.blocks = blocks;\n\t      }\n\t      return StringWithEscapedBlocks;\n\t  }());\n\t  function escapeBlocks(input) {\n\t      var inputParts = input.split(_curlyRe);\n\t      var resultParts = [];\n\t      var escapedBlocks = [];\n\t      var bracketCount = 0;\n\t      var currentBlockParts = [];\n\t      for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n\t          var part = inputParts[partIndex];\n\t          if (part == CLOSE_CURLY) {\n\t              bracketCount--;\n\t          }\n\t          if (bracketCount > 0) {\n\t              currentBlockParts.push(part);\n\t          }\n\t          else {\n\t              if (currentBlockParts.length > 0) {\n\t                  escapedBlocks.push(currentBlockParts.join(''));\n\t                  resultParts.push(BLOCK_PLACEHOLDER);\n\t                  currentBlockParts = [];\n\t              }\n\t              resultParts.push(part);\n\t          }\n\t          if (part == OPEN_CURLY) {\n\t              bracketCount++;\n\t          }\n\t      }\n\t      if (currentBlockParts.length > 0) {\n\t          escapedBlocks.push(currentBlockParts.join(''));\n\t          resultParts.push(BLOCK_PLACEHOLDER);\n\t      }\n\t      return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n\t  }\n\t\n\t  var COMPONENT_VARIABLE = '%COMP%';\n\t  var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n\t  var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n\t  var StylesCompileDependency = (function () {\n\t      function StylesCompileDependency(moduleUrl, isShimmed, valuePlaceholder) {\n\t          this.moduleUrl = moduleUrl;\n\t          this.isShimmed = isShimmed;\n\t          this.valuePlaceholder = valuePlaceholder;\n\t      }\n\t      return StylesCompileDependency;\n\t  }());\n\t  var StylesCompileResult = (function () {\n\t      function StylesCompileResult(componentStylesheet, externalStylesheets) {\n\t          this.componentStylesheet = componentStylesheet;\n\t          this.externalStylesheets = externalStylesheets;\n\t      }\n\t      return StylesCompileResult;\n\t  }());\n\t  var CompiledStylesheet = (function () {\n\t      function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n\t          this.statements = statements;\n\t          this.stylesVar = stylesVar;\n\t          this.dependencies = dependencies;\n\t          this.isShimmed = isShimmed;\n\t          this.meta = meta;\n\t      }\n\t      return CompiledStylesheet;\n\t  }());\n\t  var StyleCompiler = (function () {\n\t      function StyleCompiler(_urlResolver) {\n\t          this._urlResolver = _urlResolver;\n\t          this._shadowCss = new ShadowCss();\n\t      }\n\t      StyleCompiler.prototype.compileComponent = function (comp) {\n\t          var _this = this;\n\t          var externalStylesheets = [];\n\t          var componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n\t              styles: comp.template.styles,\n\t              styleUrls: comp.template.styleUrls,\n\t              moduleUrl: comp.type.moduleUrl\n\t          }), true);\n\t          comp.template.externalStylesheets.forEach(function (stylesheetMeta) {\n\t              var compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n\t              externalStylesheets.push(compiledStylesheet);\n\t          });\n\t          return new StylesCompileResult(componentStylesheet, externalStylesheets);\n\t      };\n\t      StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n\t          var _this = this;\n\t          var shim = comp.template.encapsulation === _angular_core.ViewEncapsulation.Emulated;\n\t          var styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n\t          var dependencies = [];\n\t          for (var i = 0; i < stylesheet.styleUrls.length; i++) {\n\t              var identifier = new CompileIdentifierMetadata({ name: getStylesVarName(null) });\n\t              dependencies.push(new StylesCompileDependency(stylesheet.styleUrls[i], shim, identifier));\n\t              styleExpressions.push(new ExternalExpr(identifier));\n\t          }\n\t          // styles variable contains plain strings and arrays of other styles arrays (recursive),\n\t          // so we set its type to dynamic.\n\t          var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n\t          var stmt = variable(stylesVar)\n\t              .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n\t              .toDeclStmt(null, [StmtModifier.Final]);\n\t          return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n\t      };\n\t      StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n\t          return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n\t      };\n\t      StyleCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      StyleCompiler.ctorParameters = [\n\t          { type: UrlResolver, },\n\t      ];\n\t      return StyleCompiler;\n\t  }());\n\t  function getStylesVarName(component) {\n\t      var result = \"styles\";\n\t      if (component) {\n\t          result += \"_\" + component.type.name;\n\t      }\n\t      return result;\n\t  }\n\t\n\t  /**\n\t   * An internal module of the Angular compiler that begins with component types,\n\t   * extracts templates, and eventually produces a compiled version of the component\n\t   * ready for linking into an application.\n\t   *\n\t   * @security  When compiling templates at runtime, you must ensure that the entire template comes\n\t   * from a trusted source. Attacker-controlled data introduced by a template could expose your\n\t   * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n\t   */\n\t  var RuntimeCompiler = (function () {\n\t      function RuntimeCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _directiveWrapperCompiler, _compilerConfig, _animationParser) {\n\t          this._injector = _injector;\n\t          this._metadataResolver = _metadataResolver;\n\t          this._templateParser = _templateParser;\n\t          this._styleCompiler = _styleCompiler;\n\t          this._viewCompiler = _viewCompiler;\n\t          this._ngModuleCompiler = _ngModuleCompiler;\n\t          this._directiveWrapperCompiler = _directiveWrapperCompiler;\n\t          this._compilerConfig = _compilerConfig;\n\t          this._animationParser = _animationParser;\n\t          this._compiledTemplateCache = new Map();\n\t          this._compiledHostTemplateCache = new Map();\n\t          this._compiledDirectiveWrapperCache = new Map();\n\t          this._compiledNgModuleCache = new Map();\n\t          this._animationCompiler = new AnimationCompiler();\n\t      }\n\t      Object.defineProperty(RuntimeCompiler.prototype, \"injector\", {\n\t          get: function () { return this._injector; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      RuntimeCompiler.prototype.compileModuleSync = function (moduleType) {\n\t          return this._compileModuleAndComponents(moduleType, true).syncResult;\n\t      };\n\t      RuntimeCompiler.prototype.compileModuleAsync = function (moduleType) {\n\t          return this._compileModuleAndComponents(moduleType, false).asyncResult;\n\t      };\n\t      RuntimeCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t          return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n\t      };\n\t      RuntimeCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t          return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n\t      };\n\t      RuntimeCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n\t          var _this = this;\n\t          var loadingPromise = this._loadModules(moduleType, isSync);\n\t          var createResult = function () {\n\t              _this._compileComponents(moduleType, null);\n\t              return _this._compileModule(moduleType);\n\t          };\n\t          if (isSync) {\n\t              return new SyncAsyncResult(createResult());\n\t          }\n\t          else {\n\t              return new SyncAsyncResult(null, loadingPromise.then(createResult));\n\t          }\n\t      };\n\t      RuntimeCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n\t          var _this = this;\n\t          var loadingPromise = this._loadModules(moduleType, isSync);\n\t          var createResult = function () {\n\t              var componentFactories = [];\n\t              _this._compileComponents(moduleType, componentFactories);\n\t              return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n\t          };\n\t          if (isSync) {\n\t              return new SyncAsyncResult(createResult());\n\t          }\n\t          else {\n\t              return new SyncAsyncResult(null, loadingPromise.then(createResult));\n\t          }\n\t      };\n\t      RuntimeCompiler.prototype._loadModules = function (mainModule, isSync) {\n\t          var _this = this;\n\t          var loadingPromises = [];\n\t          var _a = this._metadataResolver.loadNgModuleMetadata(mainModule, isSync), ngModule = _a.ngModule, loading = _a.loading;\n\t          loadingPromises.push(loading);\n\t          // Note: the loadingPromise for a module only includes the loading of the exported directives\n\t          // of imported modules.\n\t          // However, for runtime compilation, we want to transitively compile all modules,\n\t          // so we also need to call loadNgModuleMetadata for all nested modules.\n\t          ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n\t              loadingPromises.push(_this._metadataResolver.loadNgModuleMetadata(localModuleMeta.type.reference, isSync)\n\t                  .loading);\n\t          });\n\t          return Promise.all(loadingPromises);\n\t      };\n\t      RuntimeCompiler.prototype._compileModule = function (moduleType) {\n\t          var _this = this;\n\t          var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n\t          if (!ngModuleFactory) {\n\t              var moduleMeta_1 = this._metadataResolver.getNgModuleMetadata(moduleType);\n\t              // Always provide a bound Compiler\n\t              var extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n\t              var compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n\t              compileResult.dependencies.forEach(function (dep) {\n\t                  dep.placeholder.reference =\n\t                      _this._assertComponentKnown(dep.comp.reference, true).proxyComponentFactory;\n\t                  dep.placeholder.name = \"compFactory_\" + dep.comp.name;\n\t              });\n\t              if (!this._compilerConfig.useJit) {\n\t                  ngModuleFactory =\n\t                      interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n\t              }\n\t              else {\n\t                  ngModuleFactory = jitStatements(\"/\" + moduleMeta_1.type.name + \"/module.ngfactory.js\", compileResult.statements, compileResult.ngModuleFactoryVar);\n\t              }\n\t              this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n\t          }\n\t          return ngModuleFactory;\n\t      };\n\t      /**\n\t       * @internal\n\t       */\n\t      RuntimeCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n\t          var _this = this;\n\t          var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n\t          var moduleByDirective = new Map();\n\t          var templates = new Set();\n\t          ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n\t              var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.type.reference);\n\t              localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n\t                  moduleByDirective.set(dirIdentifier.reference, localModuleMeta);\n\t                  var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n\t                  _this._compileDirectiveWrapper(dirMeta, localModuleMeta);\n\t                  if (dirMeta.isComponent) {\n\t                      templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n\t                      if (allComponentFactories) {\n\t                          var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n\t                          templates.add(template);\n\t                          allComponentFactories.push(template.proxyComponentFactory);\n\t                      }\n\t                  }\n\t              });\n\t          });\n\t          ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n\t              var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.type.reference);\n\t              localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n\t                  var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n\t                  if (dirMeta.isComponent) {\n\t                      dirMeta.entryComponents.forEach(function (entryComponentType) {\n\t                          var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n\t                          templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n\t                      });\n\t                  }\n\t              });\n\t              localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n\t                  var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n\t                  templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n\t              });\n\t          });\n\t          templates.forEach(function (template) { return _this._compileTemplate(template); });\n\t      };\n\t      RuntimeCompiler.prototype.clearCacheFor = function (type) {\n\t          this._compiledNgModuleCache.delete(type);\n\t          this._metadataResolver.clearCacheFor(type);\n\t          this._compiledHostTemplateCache.delete(type);\n\t          var compiledTemplate = this._compiledTemplateCache.get(type);\n\t          if (compiledTemplate) {\n\t              this._compiledTemplateCache.delete(type);\n\t          }\n\t      };\n\t      RuntimeCompiler.prototype.clearCache = function () {\n\t          this._metadataResolver.clearCache();\n\t          this._compiledTemplateCache.clear();\n\t          this._compiledHostTemplateCache.clear();\n\t          this._compiledNgModuleCache.clear();\n\t      };\n\t      RuntimeCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n\t          if (!ngModule) {\n\t              throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n\t          }\n\t          var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n\t          if (!compiledTemplate) {\n\t              var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n\t              assertComponent(compMeta);\n\t              var hostMeta = createHostComponentMeta(compMeta);\n\t              compiledTemplate = new CompiledTemplate(true, compMeta.selector, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n\t              this._compiledHostTemplateCache.set(compType, compiledTemplate);\n\t          }\n\t          return compiledTemplate;\n\t      };\n\t      RuntimeCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n\t          var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n\t          if (!compiledTemplate) {\n\t              assertComponent(compMeta);\n\t              compiledTemplate = new CompiledTemplate(false, compMeta.selector, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n\t              this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n\t          }\n\t          return compiledTemplate;\n\t      };\n\t      RuntimeCompiler.prototype._assertComponentKnown = function (compType, isHost) {\n\t          var compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n\t              this._compiledTemplateCache.get(compType);\n\t          if (!compiledTemplate) {\n\t              throw new Error(\"Illegal state: Compiled view for component \" + stringify(compType) + \" (host: \" + isHost + \") does not exist!\");\n\t          }\n\t          return compiledTemplate;\n\t      };\n\t      RuntimeCompiler.prototype._assertDirectiveWrapper = function (dirType) {\n\t          var dirWrapper = this._compiledDirectiveWrapperCache.get(dirType);\n\t          if (!dirWrapper) {\n\t              throw new Error(\"Illegal state: Directive wrapper for \" + stringify(dirType) + \" has not been compiled!\");\n\t          }\n\t          return dirWrapper;\n\t      };\n\t      RuntimeCompiler.prototype._compileDirectiveWrapper = function (dirMeta, moduleMeta) {\n\t          var compileResult = this._directiveWrapperCompiler.compile(dirMeta);\n\t          var statements = compileResult.statements;\n\t          var directiveWrapperClass;\n\t          if (!this._compilerConfig.useJit) {\n\t              directiveWrapperClass = interpretStatements(statements, compileResult.dirWrapperClassVar);\n\t          }\n\t          else {\n\t              directiveWrapperClass = jitStatements(\"/\" + moduleMeta.type.name + \"/\" + dirMeta.type.name + \"/wrapper.ngfactory.js\", statements, compileResult.dirWrapperClassVar);\n\t          }\n\t          this._compiledDirectiveWrapperCache.set(dirMeta.type.reference, directiveWrapperClass);\n\t      };\n\t      RuntimeCompiler.prototype._compileTemplate = function (template) {\n\t          var _this = this;\n\t          if (template.isCompiled) {\n\t              return;\n\t          }\n\t          var compMeta = template.compMeta;\n\t          var externalStylesheetsByModuleUrl = new Map();\n\t          var stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n\t          stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n\t          this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n\t          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n\t          var directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n\t          var pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n\t          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, template.ngModule.schemas, compMeta.type.name);\n\t          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n\t          var compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), pipes, compiledAnimations);\n\t          compileResult.dependencies.forEach(function (dep) {\n\t              var depTemplate;\n\t              if (dep instanceof ViewClassDependency) {\n\t                  var vfd = dep;\n\t                  depTemplate = _this._assertComponentKnown(vfd.comp.reference, false);\n\t                  vfd.placeholder.reference = depTemplate.proxyViewClass;\n\t                  vfd.placeholder.name = \"View_\" + vfd.comp.name;\n\t              }\n\t              else if (dep instanceof ComponentFactoryDependency) {\n\t                  var cfd = dep;\n\t                  depTemplate = _this._assertComponentKnown(cfd.comp.reference, true);\n\t                  cfd.placeholder.reference = depTemplate.proxyComponentFactory;\n\t                  cfd.placeholder.name = \"compFactory_\" + cfd.comp.name;\n\t              }\n\t              else if (dep instanceof DirectiveWrapperDependency) {\n\t                  var dwd = dep;\n\t                  dwd.placeholder.reference = _this._assertDirectiveWrapper(dwd.dir.reference);\n\t              }\n\t          });\n\t          var statements = (_a = stylesCompileResult.componentStylesheet.statements).concat.apply(_a, compiledAnimations.map(function (ca) { return ca.statements; }))\n\t              .concat(compileResult.statements);\n\t          var viewClass;\n\t          if (!this._compilerConfig.useJit) {\n\t              viewClass = interpretStatements(statements, compileResult.viewClassVar);\n\t          }\n\t          else {\n\t              viewClass = jitStatements(\"/\" + template.ngModule.type.name + \"/\" + template.compType.name + \"/\" + (template.isHost ? 'host' : 'component') + \".ngfactory.js\", statements, compileResult.viewClassVar);\n\t          }\n\t          template.compiled(viewClass);\n\t          var _a;\n\t      };\n\t      RuntimeCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n\t          var _this = this;\n\t          result.dependencies.forEach(function (dep, i) {\n\t              var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n\t              var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n\t              dep.valuePlaceholder.reference = nestedStylesArr;\n\t              dep.valuePlaceholder.name = \"importedStyles\" + i;\n\t          });\n\t      };\n\t      RuntimeCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n\t          this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n\t          if (!this._compilerConfig.useJit) {\n\t              return interpretStatements(result.statements, result.stylesVar);\n\t          }\n\t          else {\n\t              return jitStatements(\"/\" + result.meta.moduleUrl + \".css.js\", result.statements, result.stylesVar);\n\t          }\n\t      };\n\t      RuntimeCompiler.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      RuntimeCompiler.ctorParameters = [\n\t          { type: _angular_core.Injector, },\n\t          { type: CompileMetadataResolver, },\n\t          { type: TemplateParser, },\n\t          { type: StyleCompiler, },\n\t          { type: ViewCompiler, },\n\t          { type: NgModuleCompiler, },\n\t          { type: DirectiveWrapperCompiler, },\n\t          { type: CompilerConfig, },\n\t          { type: AnimationParser, },\n\t      ];\n\t      return RuntimeCompiler;\n\t  }());\n\t  var CompiledTemplate = (function () {\n\t      function CompiledTemplate(isHost, selector, compType, compMeta, ngModule, directives) {\n\t          this.isHost = isHost;\n\t          this.compType = compType;\n\t          this.compMeta = compMeta;\n\t          this.ngModule = ngModule;\n\t          this.directives = directives;\n\t          this._viewClass = null;\n\t          this.isCompiled = false;\n\t          var self = this;\n\t          this.proxyViewClass = function () {\n\t              if (!self._viewClass) {\n\t                  throw new Error(\"Illegal state: CompiledTemplate for \" + stringify(self.compType) + \" is not compiled yet!\");\n\t              }\n\t              return self._viewClass.apply(this, arguments);\n\t          };\n\t          this.proxyComponentFactory = isHost ?\n\t              new _angular_core.ComponentFactory(selector, this.proxyViewClass, compType.reference) :\n\t              null;\n\t      }\n\t      CompiledTemplate.prototype.compiled = function (viewClass) {\n\t          this._viewClass = viewClass;\n\t          this.proxyViewClass.prototype = viewClass.prototype;\n\t          this.isCompiled = true;\n\t      };\n\t      return CompiledTemplate;\n\t  }());\n\t  function assertComponent(meta) {\n\t      if (!meta.isComponent) {\n\t          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n\t      }\n\t  }\n\t  /**\n\t   * Implements `Compiler` by delegating to the RuntimeCompiler using a known module.\n\t   */\n\t  var ModuleBoundCompiler = (function () {\n\t      function ModuleBoundCompiler(_delegate, _ngModule) {\n\t          this._delegate = _delegate;\n\t          this._ngModule = _ngModule;\n\t      }\n\t      Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n\t          get: function () { return this._delegate.injector; },\n\t          enumerable: true,\n\t          configurable: true\n\t      });\n\t      ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n\t          return this._delegate.compileModuleSync(moduleType);\n\t      };\n\t      ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n\t          return this._delegate.compileModuleAsync(moduleType);\n\t      };\n\t      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t          return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n\t      };\n\t      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t          return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n\t      };\n\t      /**\n\t       * Clears all caches\n\t       */\n\t      ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n\t      /**\n\t       * Clears the cache for the given component/ngModule.\n\t       */\n\t      ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n\t      return ModuleBoundCompiler;\n\t  }());\n\t\n\t  // =================================================================================================\n\t  // =================================================================================================\n\t  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n\t  // =================================================================================================\n\t  // =================================================================================================\n\t  //\n\t  //        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n\t  //                               Reach out to mprobst for details.\n\t  //\n\t  // =================================================================================================\n\t  /** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\n\t  var SECURITY_SCHEMA = {};\n\t  function registerContext(ctx, specs) {\n\t      for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n\t          var spec = specs_1[_i];\n\t          SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n\t      }\n\t  }\n\t  // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n\t  registerContext(_angular_core.SecurityContext.HTML, [\n\t      'iframe|srcdoc',\n\t      '*|innerHTML',\n\t      '*|outerHTML',\n\t  ]);\n\t  registerContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n\t  // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n\t  registerContext(_angular_core.SecurityContext.URL, [\n\t      '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n\t      'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n\t      'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n\t      'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n\t  ]);\n\t  registerContext(_angular_core.SecurityContext.RESOURCE_URL, [\n\t      'applet|code',\n\t      'applet|codebase',\n\t      'base|href',\n\t      'embed|src',\n\t      'frame|src',\n\t      'head|profile',\n\t      'html|manifest',\n\t      'iframe|src',\n\t      'link|href',\n\t      'media|src',\n\t      'object|codebase',\n\t      'object|data',\n\t      'script|src',\n\t  ]);\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  var __extends$21 = (this && this.__extends) || function (d, b) {\n\t      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t      function __() { this.constructor = d; }\n\t      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t  };\n\t  var BOOLEAN = 'boolean';\n\t  var NUMBER = 'number';\n\t  var STRING = 'string';\n\t  var OBJECT = 'object';\n\t  /**\n\t   * This array represents the DOM schema. It encodes inheritance, properties, and events.\n\t   *\n\t   * ## Overview\n\t   *\n\t   * Each line represents one kind of element. The `element_inheritance` and properties are joined\n\t   * using `element_inheritance|properties` syntax.\n\t   *\n\t   * ## Element Inheritance\n\t   *\n\t   * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n\t   * Here the individual elements are separated by `,` (commas). Every element in the list\n\t   * has identical properties.\n\t   *\n\t   * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n\t   * specified then `\"\"` (blank) element is assumed.\n\t   *\n\t   * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n\t   * elements.\n\t   *\n\t   * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n\t   *\n\t   * ## Properties\n\t   *\n\t   * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n\t   * by a special character designating its type:\n\t   *\n\t   * - (no prefix): property is a string.\n\t   * - `*`: property represents an event.\n\t   * - `!`: property is a boolean.\n\t   * - `#`: property is a number.\n\t   * - `%`: property is an object.\n\t   *\n\t   * ## Query\n\t   *\n\t   * The class creates an internal squas representation which allows to easily answer the query of\n\t   * if a given property exist on a given element.\n\t   *\n\t   * NOTE: We don't yet support querying for types or events.\n\t   * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n\t   *       see dom_element_schema_registry_spec.ts\n\t   */\n\t  // =================================================================================================\n\t  // =================================================================================================\n\t  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n\t  // =================================================================================================\n\t  // =================================================================================================\n\t  //\n\t  //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n\t  //\n\t  // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n\t  // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n\t  //\n\t  // =================================================================================================\n\t  var SCHEMA = [\n\t      '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n\t      '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n\t      'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n\t      'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n\t      ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n\t      ':svg:graphics^:svg:|',\n\t      ':svg:animation^:svg:|*begin,*end,*repeat',\n\t      ':svg:geometry^:svg:|',\n\t      ':svg:componentTransferFunction^:svg:|',\n\t      ':svg:gradient^:svg:|',\n\t      ':svg:textContent^:svg:graphics|',\n\t      ':svg:textPositioning^:svg:textContent|',\n\t      'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n\t      'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n\t      'audio^media|',\n\t      'br^[HTMLElement]|clear',\n\t      'base^[HTMLElement]|href,target',\n\t      'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n\t      'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n\t      'canvas^[HTMLElement]|#height,#width',\n\t      'content^[HTMLElement]|select',\n\t      'dl^[HTMLElement]|!compact',\n\t      'datalist^[HTMLElement]|',\n\t      'details^[HTMLElement]|!open',\n\t      'dialog^[HTMLElement]|!open,returnValue',\n\t      'dir^[HTMLElement]|!compact',\n\t      'div^[HTMLElement]|align',\n\t      'embed^[HTMLElement]|align,height,name,src,type,width',\n\t      'fieldset^[HTMLElement]|!disabled,name',\n\t      'font^[HTMLElement]|color,face,size',\n\t      'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n\t      'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n\t      'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n\t      'hr^[HTMLElement]|align,color,!noShade,size,width',\n\t      'head^[HTMLElement]|',\n\t      'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n\t      'html^[HTMLElement]|version',\n\t      'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n\t      'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n\t      'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n\t      'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n\t      'li^[HTMLElement]|type,#value',\n\t      'label^[HTMLElement]|htmlFor',\n\t      'legend^[HTMLElement]|align',\n\t      'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n\t      'map^[HTMLElement]|name',\n\t      'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n\t      'menu^[HTMLElement]|!compact',\n\t      'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n\t      'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n\t      'ins,del^[HTMLElement]|cite,dateTime',\n\t      'ol^[HTMLElement]|!compact,!reversed,#start,type',\n\t      'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n\t      'optgroup^[HTMLElement]|!disabled,label',\n\t      'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n\t      'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n\t      'p^[HTMLElement]|align',\n\t      'param^[HTMLElement]|name,type,value,valueType',\n\t      'picture^[HTMLElement]|',\n\t      'pre^[HTMLElement]|#width',\n\t      'progress^[HTMLElement]|#max,#value',\n\t      'q,blockquote,cite^[HTMLElement]|',\n\t      'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n\t      'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n\t      'shadow^[HTMLElement]|',\n\t      'source^[HTMLElement]|media,sizes,src,srcset,type',\n\t      'span^[HTMLElement]|',\n\t      'style^[HTMLElement]|!disabled,media,type',\n\t      'caption^[HTMLElement]|align',\n\t      'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n\t      'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n\t      'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n\t      'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n\t      'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n\t      'template^[HTMLElement]|',\n\t      'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n\t      'title^[HTMLElement]|text',\n\t      'track^[HTMLElement]|!default,kind,label,src,srclang',\n\t      'ul^[HTMLElement]|!compact,type',\n\t      'unknown^[HTMLElement]|',\n\t      'video^media|#height,poster,#width',\n\t      ':svg:a^:svg:graphics|',\n\t      ':svg:animate^:svg:animation|',\n\t      ':svg:animateMotion^:svg:animation|',\n\t      ':svg:animateTransform^:svg:animation|',\n\t      ':svg:circle^:svg:geometry|',\n\t      ':svg:clipPath^:svg:graphics|',\n\t      ':svg:cursor^:svg:|',\n\t      ':svg:defs^:svg:graphics|',\n\t      ':svg:desc^:svg:|',\n\t      ':svg:discard^:svg:|',\n\t      ':svg:ellipse^:svg:geometry|',\n\t      ':svg:feBlend^:svg:|',\n\t      ':svg:feColorMatrix^:svg:|',\n\t      ':svg:feComponentTransfer^:svg:|',\n\t      ':svg:feComposite^:svg:|',\n\t      ':svg:feConvolveMatrix^:svg:|',\n\t      ':svg:feDiffuseLighting^:svg:|',\n\t      ':svg:feDisplacementMap^:svg:|',\n\t      ':svg:feDistantLight^:svg:|',\n\t      ':svg:feDropShadow^:svg:|',\n\t      ':svg:feFlood^:svg:|',\n\t      ':svg:feFuncA^:svg:componentTransferFunction|',\n\t      ':svg:feFuncB^:svg:componentTransferFunction|',\n\t      ':svg:feFuncG^:svg:componentTransferFunction|',\n\t      ':svg:feFuncR^:svg:componentTransferFunction|',\n\t      ':svg:feGaussianBlur^:svg:|',\n\t      ':svg:feImage^:svg:|',\n\t      ':svg:feMerge^:svg:|',\n\t      ':svg:feMergeNode^:svg:|',\n\t      ':svg:feMorphology^:svg:|',\n\t      ':svg:feOffset^:svg:|',\n\t      ':svg:fePointLight^:svg:|',\n\t      ':svg:feSpecularLighting^:svg:|',\n\t      ':svg:feSpotLight^:svg:|',\n\t      ':svg:feTile^:svg:|',\n\t      ':svg:feTurbulence^:svg:|',\n\t      ':svg:filter^:svg:|',\n\t      ':svg:foreignObject^:svg:graphics|',\n\t      ':svg:g^:svg:graphics|',\n\t      ':svg:image^:svg:graphics|',\n\t      ':svg:line^:svg:geometry|',\n\t      ':svg:linearGradient^:svg:gradient|',\n\t      ':svg:mpath^:svg:|',\n\t      ':svg:marker^:svg:|',\n\t      ':svg:mask^:svg:|',\n\t      ':svg:metadata^:svg:|',\n\t      ':svg:path^:svg:geometry|',\n\t      ':svg:pattern^:svg:|',\n\t      ':svg:polygon^:svg:geometry|',\n\t      ':svg:polyline^:svg:geometry|',\n\t      ':svg:radialGradient^:svg:gradient|',\n\t      ':svg:rect^:svg:geometry|',\n\t      ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n\t      ':svg:script^:svg:|type',\n\t      ':svg:set^:svg:animation|',\n\t      ':svg:stop^:svg:|',\n\t      ':svg:style^:svg:|!disabled,media,title,type',\n\t      ':svg:switch^:svg:graphics|',\n\t      ':svg:symbol^:svg:|',\n\t      ':svg:tspan^:svg:textPositioning|',\n\t      ':svg:text^:svg:textPositioning|',\n\t      ':svg:textPath^:svg:textContent|',\n\t      ':svg:title^:svg:|',\n\t      ':svg:use^:svg:graphics|',\n\t      ':svg:view^:svg:|#zoomAndPan',\n\t      'data^[HTMLElement]|value',\n\t      'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n\t      'summary^[HTMLElement]|',\n\t      'time^[HTMLElement]|dateTime',\n\t  ];\n\t  var _ATTR_TO_PROP = {\n\t      'class': 'className',\n\t      'for': 'htmlFor',\n\t      'formaction': 'formAction',\n\t      'innerHtml': 'innerHTML',\n\t      'readonly': 'readOnly',\n\t      'tabindex': 'tabIndex',\n\t  };\n\t  var DomElementSchemaRegistry = (function (_super) {\n\t      __extends$21(DomElementSchemaRegistry, _super);\n\t      function DomElementSchemaRegistry() {\n\t          var _this = this;\n\t          _super.call(this);\n\t          this._schema = {};\n\t          SCHEMA.forEach(function (encodedType) {\n\t              var type = {};\n\t              var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n\t              var properties = strProperties.split(',');\n\t              var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n\t              typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n\t              var superType = superName && _this._schema[superName.toLowerCase()];\n\t              if (superType) {\n\t                  Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n\t              }\n\t              properties.forEach(function (property) {\n\t                  if (property.length > 0) {\n\t                      switch (property[0]) {\n\t                          case '*':\n\t                              // We don't yet support events.\n\t                              // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n\t                              // will\n\t                              // almost certainly introduce bad XSS vulnerabilities.\n\t                              // type[property.substring(1)] = EVENT;\n\t                              break;\n\t                          case '!':\n\t                              type[property.substring(1)] = BOOLEAN;\n\t                              break;\n\t                          case '#':\n\t                              type[property.substring(1)] = NUMBER;\n\t                              break;\n\t                          case '%':\n\t                              type[property.substring(1)] = OBJECT;\n\t                              break;\n\t                          default:\n\t                              type[property] = STRING;\n\t                      }\n\t                  }\n\t              });\n\t          });\n\t      }\n\t      DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n\t          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n\t              return true;\n\t          }\n\t          if (tagName.indexOf('-') > -1) {\n\t              if (tagName === 'ng-container' || tagName === 'ng-content') {\n\t                  return false;\n\t              }\n\t              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n\t                  // Can't tell now as we don't know which properties a custom element will get\n\t                  // once it is instantiated\n\t                  return true;\n\t              }\n\t          }\n\t          var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n\t          return !!elementProperties[propName];\n\t      };\n\t      DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n\t          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n\t              return true;\n\t          }\n\t          if (tagName.indexOf('-') > -1) {\n\t              if (tagName === 'ng-container' || tagName === 'ng-content') {\n\t                  return true;\n\t              }\n\t              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n\t                  // Allow any custom elements\n\t                  return true;\n\t              }\n\t          }\n\t          return !!this._schema[tagName.toLowerCase()];\n\t      };\n\t      /**\n\t       * securityContext returns the security context for the given property on the given DOM tag.\n\t       *\n\t       * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n\t       * possible to bind a value into a changing attribute or tag name.\n\t       *\n\t       * The filtering is white list based. All attributes in the schema above are assumed to have the\n\t       * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n\t       * attack vectors are assigned their appropriate context.\n\t       */\n\t      DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n\t          if (isAttribute) {\n\t              // NB: For security purposes, use the mapped property name, not the attribute name.\n\t              propName = this.getMappedPropName(propName);\n\t          }\n\t          // Make sure comparisons are case insensitive, so that case differences between attribute and\n\t          // property names do not have a security impact.\n\t          tagName = tagName.toLowerCase();\n\t          propName = propName.toLowerCase();\n\t          var ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n\t          if (ctx) {\n\t              return ctx;\n\t          }\n\t          ctx = SECURITY_SCHEMA['*|' + propName];\n\t          return ctx ? ctx : _angular_core.SecurityContext.NONE;\n\t      };\n\t      DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n\t      DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n\t      DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n\t          if (name.toLowerCase().startsWith('on')) {\n\t              var msg = (\"Binding to event property '\" + name + \"' is disallowed for security reasons, \") +\n\t                  (\"please use (\" + name.slice(2) + \")=...\") +\n\t                  (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n\t                  \" current module.\";\n\t              return { error: true, msg: msg };\n\t          }\n\t          else {\n\t              return { error: false };\n\t          }\n\t      };\n\t      DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n\t          if (name.toLowerCase().startsWith('on')) {\n\t              var msg = (\"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \") +\n\t                  (\"please use (\" + name.slice(2) + \")=...\");\n\t              return { error: true, msg: msg };\n\t          }\n\t          else {\n\t              return { error: false };\n\t          }\n\t      };\n\t      DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n\t      DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n\t          return dashCaseToCamelCase(propName);\n\t      };\n\t      DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n\t          var unit = '';\n\t          var strVal = val.toString().trim();\n\t          var errorMsg = null;\n\t          if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n\t              if (typeof val === 'number') {\n\t                  unit = 'px';\n\t              }\n\t              else {\n\t                  var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n\t                  if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n\t                      errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n\t                  }\n\t              }\n\t          }\n\t          return { error: errorMsg, value: strVal + unit };\n\t      };\n\t      DomElementSchemaRegistry.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      DomElementSchemaRegistry.ctorParameters = [];\n\t      return DomElementSchemaRegistry;\n\t  }(ElementSchemaRegistry));\n\t  function _isPixelDimensionStyle(prop) {\n\t      switch (prop) {\n\t          case 'width':\n\t          case 'height':\n\t          case 'minWidth':\n\t          case 'minHeight':\n\t          case 'maxWidth':\n\t          case 'maxHeight':\n\t          case 'left':\n\t          case 'top':\n\t          case 'bottom':\n\t          case 'right':\n\t          case 'fontSize':\n\t          case 'outlineWidth':\n\t          case 'outlineOffset':\n\t          case 'paddingTop':\n\t          case 'paddingLeft':\n\t          case 'paddingBottom':\n\t          case 'paddingRight':\n\t          case 'marginTop':\n\t          case 'marginLeft':\n\t          case 'marginBottom':\n\t          case 'marginRight':\n\t          case 'borderRadius':\n\t          case 'borderWidth':\n\t          case 'borderTopWidth':\n\t          case 'borderLeftWidth':\n\t          case 'borderRightWidth':\n\t          case 'borderBottomWidth':\n\t          case 'textIndent':\n\t              return true;\n\t          default:\n\t              return false;\n\t      }\n\t  }\n\t\n\t  var _NO_RESOURCE_LOADER = {\n\t      get: function (url) {\n\t          throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n\t      }\n\t  };\n\t  /**\n\t   * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\n\t   * template compilation.\n\t   */\n\t  var COMPILER_PROVIDERS = [\n\t      { provide: Reflector, useValue: reflector },\n\t      { provide: ReflectorReader, useExisting: Reflector },\n\t      { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n\t      Console,\n\t      Lexer,\n\t      Parser,\n\t      HtmlParser,\n\t      {\n\t          provide: I18NHtmlParser,\n\t          useFactory: function (parser, translations, format) {\n\t              return new I18NHtmlParser(parser, translations, format);\n\t          },\n\t          deps: [\n\t              HtmlParser,\n\t              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n\t              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n\t          ]\n\t      },\n\t      TemplateParser,\n\t      DirectiveNormalizer,\n\t      CompileMetadataResolver,\n\t      DEFAULT_PACKAGE_URL_PROVIDER,\n\t      StyleCompiler,\n\t      ViewCompiler,\n\t      NgModuleCompiler,\n\t      DirectiveWrapperCompiler,\n\t      { provide: CompilerConfig, useValue: new CompilerConfig() },\n\t      RuntimeCompiler,\n\t      { provide: _angular_core.Compiler, useExisting: RuntimeCompiler },\n\t      DomElementSchemaRegistry,\n\t      { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n\t      UrlResolver,\n\t      DirectiveResolver,\n\t      PipeResolver,\n\t      NgModuleResolver,\n\t      AnimationParser\n\t  ];\n\t  var RuntimeCompilerFactory = (function () {\n\t      function RuntimeCompilerFactory(defaultOptions) {\n\t          this._defaultOptions = [{\n\t                  useDebug: _angular_core.isDevMode(),\n\t                  useJit: true,\n\t                  defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated\n\t              }].concat(defaultOptions);\n\t      }\n\t      RuntimeCompilerFactory.prototype.createCompiler = function (options) {\n\t          if (options === void 0) { options = []; }\n\t          var mergedOptions = _mergeOptions(this._defaultOptions.concat(options));\n\t          var injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n\t              COMPILER_PROVIDERS, {\n\t                  provide: CompilerConfig,\n\t                  useFactory: function () {\n\t                      return new CompilerConfig({\n\t                          // let explicit values from the compiler options overwrite options\n\t                          // from the app providers. E.g. important for the testing platform.\n\t                          genDebugInfo: mergedOptions.useDebug,\n\t                          // let explicit values from the compiler options overwrite options\n\t                          // from the app providers\n\t                          useJit: mergedOptions.useJit,\n\t                          // let explicit values from the compiler options overwrite options\n\t                          // from the app providers\n\t                          defaultEncapsulation: mergedOptions.defaultEncapsulation,\n\t                          logBindingUpdate: mergedOptions.useDebug\n\t                      });\n\t                  },\n\t                  deps: []\n\t              },\n\t              mergedOptions.providers\n\t          ]);\n\t          return injector.get(_angular_core.Compiler);\n\t      };\n\t      RuntimeCompilerFactory.decorators = [\n\t          { type: _angular_core.Injectable },\n\t      ];\n\t      /** @nocollapse */\n\t      RuntimeCompilerFactory.ctorParameters = [\n\t          { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n\t      ];\n\t      return RuntimeCompilerFactory;\n\t  }());\n\t  function _initReflector() {\n\t      reflector.reflectionCapabilities = new ReflectionCapabilities();\n\t  }\n\t  /**\n\t   * A platform that included corePlatform and the compiler.\n\t   *\n\t   * @experimental\n\t   */\n\t  var platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n\t      { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n\t      { provide: _angular_core.CompilerFactory, useClass: RuntimeCompilerFactory },\n\t      { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n\t  ]);\n\t  function _mergeOptions(optionsArr) {\n\t      return {\n\t          useDebug: _lastDefined(optionsArr.map(function (options) { return options.useDebug; })),\n\t          useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n\t          defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n\t          providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; }))\n\t      };\n\t  }\n\t  function _lastDefined(args) {\n\t      for (var i = args.length - 1; i >= 0; i--) {\n\t          if (args[i] !== undefined) {\n\t              return args[i];\n\t          }\n\t      }\n\t      return undefined;\n\t  }\n\t  function _mergeArrays(parts) {\n\t      var result = [];\n\t      parts.forEach(function (part) { return part && result.push.apply(result, part); });\n\t      return result;\n\t  }\n\t\n\t  /**\n\t   * @license\n\t   * Copyright Google Inc. All Rights Reserved.\n\t   *\n\t   * Use of this source code is governed by an MIT-style license that can be\n\t   * found in the LICENSE file at https://angular.io/license\n\t   */\n\t  // asset:<package-name>/<realm>/<path-to-module>\n\t  var _ASSET_URL_RE = /asset:([^\\/]+)\\/([^\\/]+)\\/(.+)/;\n\t  /**\n\t   * Interface that defines how import statements should be generated.\n\t   */\n\t  var ImportGenerator = (function () {\n\t      function ImportGenerator() {\n\t      }\n\t      ImportGenerator.parseAssetUrl = function (url) { return AssetUrl.parse(url); };\n\t      return ImportGenerator;\n\t  }());\n\t  var AssetUrl = (function () {\n\t      function AssetUrl(packageName, firstLevelDir, modulePath) {\n\t          this.packageName = packageName;\n\t          this.firstLevelDir = firstLevelDir;\n\t          this.modulePath = modulePath;\n\t      }\n\t      AssetUrl.parse = function (url, allowNonMatching) {\n\t          if (allowNonMatching === void 0) { allowNonMatching = true; }\n\t          var match = url.match(_ASSET_URL_RE);\n\t          if (match !== null) {\n\t              return new AssetUrl(match[1], match[2], match[3]);\n\t          }\n\t          if (allowNonMatching) {\n\t              return null;\n\t          }\n\t          throw new Error(\"Url \" + url + \" is not a valid asset: url\");\n\t      };\n\t      return AssetUrl;\n\t  }());\n\t\n\t  exports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\n\t  exports.CompilerConfig = CompilerConfig;\n\t  exports.RenderTypes = RenderTypes;\n\t  exports.RuntimeCompiler = RuntimeCompiler;\n\t  exports.DirectiveResolver = DirectiveResolver;\n\t  exports.PipeResolver = PipeResolver;\n\t  exports.NgModuleResolver = NgModuleResolver;\n\t  exports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\n\t  exports.InterpolationConfig = InterpolationConfig;\n\t  exports.NgModuleCompiler = NgModuleCompiler;\n\t  exports.DirectiveWrapperCompiler = DirectiveWrapperCompiler;\n\t  exports.ViewCompiler = ViewCompiler;\n\t  exports.AnimationParser = AnimationParser;\n\t  exports.TextAst = TextAst;\n\t  exports.BoundTextAst = BoundTextAst;\n\t  exports.AttrAst = AttrAst;\n\t  exports.BoundElementPropertyAst = BoundElementPropertyAst;\n\t  exports.BoundEventAst = BoundEventAst;\n\t  exports.ReferenceAst = ReferenceAst;\n\t  exports.VariableAst = VariableAst;\n\t  exports.ElementAst = ElementAst;\n\t  exports.EmbeddedTemplateAst = EmbeddedTemplateAst;\n\t  exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\n\t  exports.DirectiveAst = DirectiveAst;\n\t  exports.ProviderAst = ProviderAst;\n\t  exports.NgContentAst = NgContentAst;\n\t  exports.templateVisitAll = templateVisitAll;\n\t  exports.CompileMetadataWithIdentifier = CompileMetadataWithIdentifier;\n\t  exports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\n\t  exports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\n\t  exports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\n\t  exports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\n\t  exports.CompileAnimationMetadata = CompileAnimationMetadata;\n\t  exports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\n\t  exports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\n\t  exports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\n\t  exports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\n\t  exports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\n\t  exports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\n\t  exports.CompileIdentifierMetadata = CompileIdentifierMetadata;\n\t  exports.CompileDiDependencyMetadata = CompileDiDependencyMetadata;\n\t  exports.CompileProviderMetadata = CompileProviderMetadata;\n\t  exports.CompileFactoryMetadata = CompileFactoryMetadata;\n\t  exports.CompileTokenMetadata = CompileTokenMetadata;\n\t  exports.CompileTypeMetadata = CompileTypeMetadata;\n\t  exports.CompileQueryMetadata = CompileQueryMetadata;\n\t  exports.CompileStylesheetMetadata = CompileStylesheetMetadata;\n\t  exports.CompileTemplateMetadata = CompileTemplateMetadata;\n\t  exports.CompileDirectiveMetadata = CompileDirectiveMetadata;\n\t  exports.createHostComponentMeta = createHostComponentMeta;\n\t  exports.CompilePipeMetadata = CompilePipeMetadata;\n\t  exports.CompileNgModuleMetadata = CompileNgModuleMetadata;\n\t  exports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\n\t  exports.removeIdentifierDuplicates = removeIdentifierDuplicates;\n\t  exports.isStaticSymbol = isStaticSymbol;\n\t  exports.ProviderMeta = ProviderMeta;\n\t  exports.SourceModule = SourceModule;\n\t  exports.analyzeNgModules = analyzeNgModules;\n\t  exports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\n\t  exports.loadNgModuleDirectives = loadNgModuleDirectives;\n\t  exports.OfflineCompiler = OfflineCompiler;\n\t  exports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\n\t  exports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\n\t  exports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\n\t  exports.UrlResolver = UrlResolver;\n\t  exports.getUrlScheme = getUrlScheme;\n\t  exports.ResourceLoader = ResourceLoader;\n\t  exports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\n\t  exports.RuntimeCompilerFactory = RuntimeCompilerFactory;\n\t  exports.platformCoreDynamic = platformCoreDynamic;\n\t  exports.ElementSchemaRegistry = ElementSchemaRegistry;\n\t  exports.I18NHtmlParser = I18NHtmlParser;\n\t  exports.MessageBundle = MessageBundle;\n\t  exports.Xliff = Xliff;\n\t  exports.Xmb = Xmb;\n\t  exports.Xtb = Xtb;\n\t  exports.DirectiveNormalizer = DirectiveNormalizer;\n\t  exports.Lexer = Lexer;\n\t  exports.Token = Token;\n\t  exports.EOF = EOF;\n\t  exports.isIdentifier = isIdentifier;\n\t  exports.isQuote = isQuote;\n\t  exports.SplitInterpolation = SplitInterpolation;\n\t  exports.TemplateBindingParseResult = TemplateBindingParseResult;\n\t  exports.Parser = Parser;\n\t  exports._ParseAST = _ParseAST;\n\t  exports.CompileMetadataResolver = CompileMetadataResolver;\n\t  exports.HtmlParser = HtmlParser;\n\t  exports.ParseTreeResult = ParseTreeResult;\n\t  exports.TreeError = TreeError;\n\t  exports.ImportGenerator = ImportGenerator;\n\t  exports.AssetUrl = AssetUrl;\n\t  exports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\n\t  exports.TypeScriptEmitter = TypeScriptEmitter;\n\t  exports.ParseLocation = ParseLocation;\n\t  exports.ParseSourceFile = ParseSourceFile;\n\t  exports.ParseSourceSpan = ParseSourceSpan;\n\t  exports.ParseError = ParseError;\n\t  exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n\t  exports.CssSelector = CssSelector;\n\t  exports.SelectorMatcher = SelectorMatcher;\n\t  exports.SelectorListContext = SelectorListContext;\n\t  exports.SelectorContext = SelectorContext;\n\t  exports.StylesCompileDependency = StylesCompileDependency;\n\t  exports.StylesCompileResult = StylesCompileResult;\n\t  exports.CompiledStylesheet = CompiledStylesheet;\n\t  exports.StyleCompiler = StyleCompiler;\n\t  exports.TemplateParseError = TemplateParseError;\n\t  exports.TemplateParseResult = TemplateParseResult;\n\t  exports.TemplateParser = TemplateParser;\n\t  exports.splitClasses = splitClasses;\n\t  exports.removeSummaryDuplicates = removeSummaryDuplicates;\n\t\n\t}));\n\n/***/ },\n\n/***/ 109:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.2.4\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(108), __webpack_require__(5), __webpack_require__(22)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/compiler', '@angular/core', '@angular/platform-browser'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}),global.ng.compiler,global.ng.core,global.ng.platformBrowser));\n\t}(this, function (exports,_angular_compiler,_angular_core,_angular_platformBrowser) { 'use strict';\n\t\n\t    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = _angular_platformBrowser.__platform_browser_private__.INTERNAL_BROWSER_PLATFORM_PROVIDERS;\n\t\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var ResourceLoaderImpl = (function (_super) {\n\t        __extends(ResourceLoaderImpl, _super);\n\t        function ResourceLoaderImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        ResourceLoaderImpl.prototype.get = function (url) {\n\t            var resolve;\n\t            var reject;\n\t            var promise = new Promise(function (res, rej) {\n\t                resolve = res;\n\t                reject = rej;\n\t            });\n\t            var xhr = new XMLHttpRequest();\n\t            xhr.open('GET', url, true);\n\t            xhr.responseType = 'text';\n\t            xhr.onload = function () {\n\t                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n\t                // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n\t                // by IE10)\n\t                var response = xhr.response || xhr.responseText;\n\t                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n\t                var status = xhr.status === 1223 ? 204 : xhr.status;\n\t                // fix status code when it is 0 (0 status is undocumented).\n\t                // Occurs when accessing file resources or on Android 4.1 stock browser\n\t                // while retrieving files from application cache.\n\t                if (status === 0) {\n\t                    status = response ? 200 : 0;\n\t                }\n\t                if (200 <= status && status <= 300) {\n\t                    resolve(response);\n\t                }\n\t                else {\n\t                    reject(\"Failed to load \" + url);\n\t                }\n\t            };\n\t            xhr.onerror = function () { reject(\"Failed to load \" + url); };\n\t            xhr.send();\n\t            return promise;\n\t        };\n\t        ResourceLoaderImpl.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ResourceLoaderImpl.ctorParameters = [];\n\t        return ResourceLoaderImpl;\n\t    }(_angular_compiler.ResourceLoader));\n\t\n\t    var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n\t        INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n\t        {\n\t            provide: _angular_core.COMPILER_OPTIONS,\n\t            useValue: { providers: [{ provide: _angular_compiler.ResourceLoader, useClass: ResourceLoaderImpl }] },\n\t            multi: true\n\t        },\n\t    ];\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = self;\n\t        }\n\t        else {\n\t            globalScope = global;\n\t        }\n\t    }\n\t    else {\n\t        globalScope = window;\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var _global = globalScope;\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    _global.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n\t     * ResourceLoader.\n\t     *\n\t     * The template cache needs to be built and loaded into window.$templateCache\n\t     * via a separate mechanism.\n\t     */\n\t    var CachedResourceLoader = (function (_super) {\n\t        __extends$1(CachedResourceLoader, _super);\n\t        function CachedResourceLoader() {\n\t            _super.call(this);\n\t            this._cache = _global.$templateCache;\n\t            if (this._cache == null) {\n\t                throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n\t            }\n\t        }\n\t        CachedResourceLoader.prototype.get = function (url) {\n\t            if (this._cache.hasOwnProperty(url)) {\n\t                return Promise.resolve(this._cache[url]);\n\t            }\n\t            else {\n\t                return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n\t            }\n\t        };\n\t        return CachedResourceLoader;\n\t    }(_angular_compiler.ResourceLoader));\n\t\n\t    var __platform_browser_dynamic_private__ = {\n\t        INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS,\n\t        ResourceLoaderImpl: ResourceLoaderImpl\n\t    };\n\t\n\t    /**\n\t     * @experimental\n\t     */\n\t    var RESOURCE_CACHE_PROVIDER = [{ provide: _angular_compiler.ResourceLoader, useClass: CachedResourceLoader }];\n\t    /**\n\t     * @stable\n\t     */\n\t    var platformBrowserDynamic = _angular_core.createPlatformFactory(_angular_compiler.platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\t\n\t    exports.RESOURCE_CACHE_PROVIDER = RESOURCE_CACHE_PROVIDER;\n\t    exports.platformBrowserDynamic = platformBrowserDynamic;\n\t    exports.__platform_browser_dynamic_private__ = __platform_browser_dynamic_private__;\n\t\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 111:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar core_1 = __webpack_require__(5);\n\t/* tslint:disable-next-line */\n\tvar BaseChartDirective = (function () {\n\t    function BaseChartDirective(element) {\n\t        this.labels = [];\n\t        this.options = {};\n\t        this.chartClick = new core_1.EventEmitter();\n\t        this.chartHover = new core_1.EventEmitter();\n\t        this.initFlag = false;\n\t        this.element = element;\n\t    }\n\t    BaseChartDirective.prototype.ngOnInit = function () {\n\t        this.ctx = this.element.nativeElement.getContext('2d');\n\t        this.cvs = this.element.nativeElement;\n\t        this.initFlag = true;\n\t        if (this.data || this.datasets) {\n\t            this.refresh();\n\t        }\n\t    };\n\t    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n\t        if (this.initFlag) {\n\t            // Check if the changes are in the data or datasets\n\t            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n\t                this.chart.data.datasets = this.getDatasets();\n\t                if (changes.hasOwnProperty('labels')) {\n\t                    this.chart.data.labels = this.labels;\n\t                }\n\t                this.chart.update();\n\t            }\n\t            else {\n\t                this.refresh();\n\t            }\n\t        }\n\t    };\n\t    BaseChartDirective.prototype.ngOnDestroy = function () {\n\t        if (this.chart) {\n\t            this.chart.destroy();\n\t            this.chart = void 0;\n\t        }\n\t    };\n\t    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n\t        var _this = this;\n\t        var datasets = this.getDatasets();\n\t        var options = Object.assign({}, this.options);\n\t        if (this.legend === false) {\n\t            options.legend = { display: false };\n\t        }\n\t        // hock for onHover and onClick events\n\t        options.hover = options.hover || {};\n\t        if (!options.hover.onHover) {\n\t            options.hover.onHover = function (active) {\n\t                if (active && !active.length) {\n\t                    return;\n\t                }\n\t                _this.chartHover.emit({ active: active });\n\t            };\n\t        }\n\t        if (!options.onClick) {\n\t            options.onClick = function (event, active) {\n\t                _this.chartClick.emit({ event: event, active: active });\n\t            };\n\t        }\n\t        var opts = {\n\t            type: this.chartType,\n\t            data: {\n\t                labels: this.labels,\n\t                datasets: datasets\n\t            },\n\t            options: options\n\t        };\n\t        if (typeof Chart === 'undefined') {\n\t            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\n\t        }\n\t        return new Chart(ctx, opts);\n\t    };\n\t    BaseChartDirective.prototype.getDatasets = function () {\n\t        var _this = this;\n\t        var datasets = void 0;\n\t        // in case if datasets is not provided, but data is present\n\t        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n\t            if (Array.isArray(this.data[0])) {\n\t                datasets = this.data.map(function (data, index) {\n\t                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n\t                });\n\t            }\n\t            else {\n\t                datasets = [{ data: this.data, label: \"Label 0\" }];\n\t            }\n\t        }\n\t        if (this.datasets && this.datasets.length ||\n\t            (datasets && datasets.length)) {\n\t            datasets = (this.datasets || datasets)\n\t                .map(function (elm, index) {\n\t                var newElm = Object.assign({}, elm);\n\t                if (_this.colors && _this.colors.length) {\n\t                    Object.assign(newElm, _this.colors[index]);\n\t                }\n\t                else {\n\t                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n\t                }\n\t                return newElm;\n\t            });\n\t        }\n\t        if (!datasets) {\n\t            throw new Error(\"ng-charts configuration error, \\n      data or datasets field are required to render char \" + this.chartType);\n\t        }\n\t        return datasets;\n\t    };\n\t    BaseChartDirective.prototype.refresh = function () {\n\t        // if (this.options && this.options.responsive) {\n\t        //   setTimeout(() => this.refresh(), 50);\n\t        // }\n\t        // todo: remove this line, it is producing flickering\n\t        this.ngOnDestroy();\n\t        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n\t    };\n\t    BaseChartDirective.defaultColors = [\n\t        [255, 99, 132],\n\t        [54, 162, 235],\n\t        [255, 206, 86],\n\t        [231, 233, 237],\n\t        [75, 192, 192],\n\t        [151, 187, 205],\n\t        [220, 220, 220],\n\t        [247, 70, 74],\n\t        [70, 191, 189],\n\t        [253, 180, 92],\n\t        [148, 159, 177],\n\t        [77, 83, 96]\n\t    ];\n\t    BaseChartDirective.decorators = [\n\t        { type: core_1.Directive, args: [{ selector: 'canvas[baseChart]' },] },\n\t    ];\n\t    /** @nocollapse */\n\t    BaseChartDirective.ctorParameters = [\n\t        { type: core_1.ElementRef, },\n\t    ];\n\t    BaseChartDirective.propDecorators = {\n\t        'data': [{ type: core_1.Input },],\n\t        'datasets': [{ type: core_1.Input },],\n\t        'labels': [{ type: core_1.Input },],\n\t        'options': [{ type: core_1.Input },],\n\t        'chartType': [{ type: core_1.Input },],\n\t        'colors': [{ type: core_1.Input },],\n\t        'legend': [{ type: core_1.Input },],\n\t        'chartClick': [{ type: core_1.Output },],\n\t        'chartHover': [{ type: core_1.Output },],\n\t    };\n\t    return BaseChartDirective;\n\t}());\n\texports.BaseChartDirective = BaseChartDirective;\n\tfunction rgba(colour, alpha) {\n\t    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n\t}\n\tfunction getRandomInt(min, max) {\n\t    return Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\tfunction formatLineColor(colors) {\n\t    return {\n\t        backgroundColor: rgba(colors, 0.4),\n\t        borderColor: rgba(colors, 1),\n\t        pointBackgroundColor: rgba(colors, 1),\n\t        pointBorderColor: '#fff',\n\t        pointHoverBackgroundColor: '#fff',\n\t        pointHoverBorderColor: rgba(colors, 0.8)\n\t    };\n\t}\n\tfunction formatBarColor(colors) {\n\t    return {\n\t        backgroundColor: rgba(colors, 0.6),\n\t        borderColor: rgba(colors, 1),\n\t        hoverBackgroundColor: rgba(colors, 0.8),\n\t        hoverBorderColor: rgba(colors, 1)\n\t    };\n\t}\n\tfunction formatPieColors(colors) {\n\t    return {\n\t        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n\t        borderColor: colors.map(function () { return '#fff'; }),\n\t        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n\t        pointBorderColor: colors.map(function () { return '#fff'; }),\n\t        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n\t        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n\t    };\n\t}\n\tfunction formatPolarAreaColors(colors) {\n\t    return {\n\t        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n\t        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n\t        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n\t        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n\t    };\n\t}\n\tfunction getRandomColor() {\n\t    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n\t}\n\t/**\n\t * Generate colors for line|bar charts\n\t * @param index\n\t * @returns {number[]|Color}\n\t */\n\tfunction generateColor(index) {\n\t    return BaseChartDirective.defaultColors[index] || getRandomColor();\n\t}\n\t/**\n\t * Generate colors for pie|doughnut charts\n\t * @param count\n\t * @returns {Colors}\n\t */\n\tfunction generateColors(count) {\n\t    var colorsArr = new Array(count);\n\t    for (var i = 0; i < count; i++) {\n\t        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n\t    }\n\t    return colorsArr;\n\t}\n\t/**\n\t * Generate colors by chart type\n\t * @param chartType\n\t * @param index\n\t * @param count\n\t * @returns {Color}\n\t */\n\tfunction getColors(chartType, index, count) {\n\t    if (chartType === 'pie' || chartType === 'doughnut') {\n\t        return formatPieColors(generateColors(count));\n\t    }\n\t    if (chartType === 'polarArea') {\n\t        return formatPolarAreaColors(generateColors(count));\n\t    }\n\t    if (chartType === 'line' || chartType === 'radar') {\n\t        return formatLineColor(generateColor(index));\n\t    }\n\t    if (chartType === 'bar' || chartType === 'horizontalBar') {\n\t        return formatBarColor(generateColor(index));\n\t    }\n\t    return generateColor(index);\n\t}\n\tvar ChartsModule = (function () {\n\t    function ChartsModule() {\n\t    }\n\t    ChartsModule.decorators = [\n\t        { type: core_1.NgModule, args: [{\n\t                    declarations: [\n\t                        BaseChartDirective\n\t                    ],\n\t                    exports: [\n\t                        BaseChartDirective\n\t                    ],\n\t                    imports: []\n\t                },] },\n\t    ];\n\t    /** @nocollapse */\n\t    ChartsModule.ctorParameters = [];\n\t    return ChartsModule;\n\t}());\n\texports.ChartsModule = ChartsModule;\n\n\n/***/ },\n\n/***/ 112:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(111));\n\n\n/***/ },\n\n/***/ 113:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\"\n\n/***/ },\n\n/***/ 114:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>\\n    <input type=\\\"text\\\" #term (keyup)=\\\"search(term)\\\">\\n    <ul *ngIf=\\\"items\\\">\\n       <li *ngFor=\\\"let item of items\\\" (click)=\\\"select(item)\\\">\\n           item\\n       </li>\\n    </ul>\\n</div>\"\n\n/***/ },\n\n/***/ 115:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".loader{\\n    margin: 0 0 2em;\\n    height: 500px;\\n    width: 100%;\\n    text-align: center;\\n    padding: 1em;\\n    margin: 0 auto 1em;\\n    display: inline-block;\\n    vertical-align: top;\\n}\"\n\n/***/ },\n\n/***/ 116:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"loader loader--style2\\\" title=\\\"1\\\">\\n    <svg version=\\\"1.1\\\" id=\\\"loader-1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n     width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 50 50\\\" style=\\\"enable-background:new 0 0 50 50;\\\" xml:space=\\\"preserve\\\">\\n  <path fill=\\\"#000\\\" d=\\\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\\\">\\n    <animateTransform attributeType=\\\"xml\\\"\\n      attributeName=\\\"transform\\\"\\n      type=\\\"rotate\\\"\\n      from=\\\"0 25 25\\\"\\n      to=\\\"360 25 25\\\"\\n      dur=\\\"0.6s\\\"\\n      repeatCount=\\\"indefinite\\\"/>\\n    </path>\\n  </svg>\\n</div>\"\n\n/***/ },\n\n/***/ 117:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"h2,h3,h4{\\n    display: block;\\n    width: 100%;\\n    color: #ffffff;\\n    font-size: 4rem;\\n    font-weight: lighter;\\n    text-align: center;\\n    padding: 0 2rem 0 2rem;\\n}\\nh3{\\n    display: inline-block;\\n    color:#262626;\\n    font-size: 3rem;\\n    padding: 0.5rem;\\n    text-align: left;\\n}\\nh4{\\n    font-size: 2.5rem;\\n    color:#262626;\\n    text-align: left;\\n    margin: 1rem;\\n}\\n.detail h4{\\n    display: inline-block;\\n    text-align: center;\\n    width: 100%;\\n    float: left;\\n    margin-bottom: 2rem;\\n}\\n.detail{\\n    background-color: rgba(255,255,255,0.8);\\n    padding:1rem;\\n    height: auto;\\n\\n}\\n.detail div{\\n    width: 48%;\\n    float: left;\\n}\\n.detail ul{\\n    width: 80%;\\n    float: left;\\n    font-size: 2rem;\\n}\\n\\n.detail li{\\n    text-align: center;\\n    display: block;\\n    color:#ffffff;\\n    background-color: #1565c0;\\n    margin: 0.5rem;\\n    padding: 0.5rem;\\n    width: 100%;\\n}\\n.addstudent{\\n    background-color: rgba(0,0,0,0.3) !important;\\n}\\nbutton {\\n    background-color: #1565c0;\\n    color:#ffffff;\\n    font-size: 2rem;\\n    float: right;\\n    margin: 1rem;\\n    padding: 0.5rem;\\n}\\n.addstudent button {\\n    width: 100%;\\n    padding: 0;\\n    margin: 0 auto;\\n}\\n.tiles{\\n    width:100%;\\n}\\n.tile{\\n\\n    width: 100%;\\n    margin-bottom:0.5rem;\\n    display: inline-block;\\n    background-color: rgba(255,255,255,0.8);\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n}\\n\\n.addgroup{\\n    width: 49%;\\n    height: 100%;\\n    font-size: 3rem;\\n    padding: 0;\\n    margin: 0;\\n}\"\n\n/***/ },\n\n/***/ 118:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\\nh2,h3,h4{\\n    display: block;\\n    width: 100%;\\n    color: #ffffff;\\n    font-size: 4rem;\\n    font-weight: lighter;\\n    text-align: center;\\n    padding: 0;\\n    padding: 0 2rem 0 2rem;\\n}\\nh3{\\n    font-size: 2rem;\\n    text-align: left;\\n}\\nh4{\\n    font-size: 2.5rem;\\n    color:#262626;\\n    text-align: left;\\n    margin: 1rem;\\n}\\nbutton {\\n    background-color: #1565c0;\\n    color:#ffffff;\\n    font-size: 2rem;\\n    float: right;\\n    width: 30%;\\n    height: 20%;\\n    margin: 1rem;\\n    padding: 0.5rem;\\n}\\n.chart{\\n    background-color: rgba(255,255,255,0.8);\\n    padding: 1rem;\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n}\\n.tiles{\\n    width:150%;\\n    margin-left: -17%;\\n}\\n.tile{\\n\\n    width: 45%;\\n    margin:2% 1% 2% 1%;\\n    padding: 0.5rem;\\n    display: inline-block;\\n    background-color: rgba(255,255,255,0.8);\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n}\\n\\n.tile ul{\\n    width: 40%;\\n    height: 50%;\\n    margin: 0;\\n    padding: 0;\\n    margin-top: 5%;\\n}\\n.tile li{\\n    padding: 0.5rem;\\n    margin: 0;\\n    width: 100%;\\n    height: 50%;\\n    display: block;\\n    font-size: 2rem;\\n    float: left;\\n    background-color: rgba(0,0,0,0.5);\\n    color: #ffffff;\\n}\\n.tile li > span {\\n    color: #1565c0;\\n    text-align: right;\\n    width: 30%;\\n\\n}\\n\\n.progressTitle{\\n    width: 100%;\\n    margin:2% 1% 2% 1%;\\n    padding: 0.5rem;\\n    display: inline-block;\\n    background-color: #CFD8DC;\\n    border: none;\\n    font-size: 2.5rem;\\n    color:#262626;\\n    text-align: left;\\n}\"\n\n/***/ },\n\n/***/ 119:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"/*--- Start excercise ---*/\\n/* Common */\\n.startformElement{\\n    display: block;\\n    float: left;\\n    width: 100%;\\n    margin-left: 2rem;\\n    margin-right: 2rem;\\n    margin-top: 2rem;\\n}\\n/* Amount */\\n#labelAmount, #labelLanguages{\\n    display: block;\\n    float: left;\\n    font-size: 2rem;\\n    width: 50%;\\n    text-align: center;\\n    color: #262626;\\n    margin-top: 1rem;\\n}\\n#inputAmount, #languages{\\n    display: block;\\n    width: 30%;\\n    height: 4rem;\\n    font-size: 2.5rem;\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n    padding-left: 1rem;\\n    color: #262626;\\n}\\n/* Start Button */\\n.startBtn{\\n    display: block;\\n    float: right;\\n    border: none;\\n    background-color: #1565c0;\\n    color: #ffffff;\\n    width: 20rem;\\n    height: 4rem;\\n    font-size: 3rem;\\n    font-weight: lighter;\\n    margin: 1rem;\\n    margin-top: 2rem;\\n}\\n/*--- Exercise ---*/\\n/* Wrapper */\\n.innerWrapper{\\n    display: block;\\n    width: 64rem;\\n    margin: 0 auto;\\n}\\n/* Title */\\nh2,h3{\\n    display: block;\\n    width: 100%;\\n    color: #ffffff;\\n    font-size: 4rem;\\n    font-weight: lighter;\\n    text-align: center;\\n}\\nh3{\\n    color: #262626;\\n}\\n/* Content */\\n.formContent{\\n    display: block;\\n    width: 100%;\\n    margin: 0 auto;\\n    height: 20rem;\\n    background-color: rgba(255,255,255,0.8);\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n    margin-bottom: 4rem;\\n}\\n.formElement{\\n    display: block;\\n    float: left;\\n    width: 35%;\\n    margin-left: 2rem;\\n    margin-right: 2rem;\\n    margin-top: 4rem;\\n    margin-bottom: 2rem;\\n}\\n.rightForm{\\n    margin-left: 5rem;\\n}\\n.formElement input{\\n    display: block;\\n    width: 100%;\\n    height: 4rem;\\n    font-size: 2.5rem;\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n    padding-left: 1rem;\\n    color: #262626;\\n}\\n#labelvertaling, #labelword{\\n    display: block;\\n    font-size: 2rem;\\n    text-transform: uppercase;\\n    text-align: left;\\n    width: 100%;\\n    float: left;\\n    margin-bottom: 1rem;\\n    color: #262626;\\n}\\n/* Next Button */\\n.nextBtn{\\n    display: block;\\n    float: right;\\n    border: none;\\n    background-color: #1565c0;\\n    color: #ffffff;\\n    width: 20rem;\\n    height: 4rem;\\n    font-size: 3rem;\\n    font-weight: lighter;\\n    margin: 1rem;\\n}\\n/* Reset Button */\\n.resetBtn{\\n    float: right;\\n    display: block;\\n    border:none;\\n    background-color: #262626;\\n    color: #CFD8DC;\\n    width: 20rem;\\n    height: 4rem;\\n    font-size: 3rem;\\n    font-weight: lighter;\\n    margin-bottom: 5rem;\\n    margin-right: 1rem;\\n}\\n.endBtn{\\n    float: right;\\n    display: block;\\n    border:none;\\n    background-color: #1565c0;\\n    color: #ffffff;\\n    width: 46%;\\n    margin: 1rem;\\n    height: 4rem;\\n    font-size: 3rem;\\n    font-weight: lighter;\\n    margin-bottom: 5rem;\\n    margin-right: 1rem;\\n}\\n/* Progress */\\n.progress, #labelAmount{\\n    display: block;\\n    float: left;\\n    font-size: 2rem;\\n    width: 50%;\\n    text-align: center;\\n    color: #262626;\\n}\"\n\n/***/ },\n\n/***/ 120:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"outerWrapper\\\">\\n    <header class=\\\"header clearfix\\\">\\n        <div class=\\\"wrapper headerwrap\\\">\\n            <h1 class=\\\"logo\\\"><a href=\\\"/\\\">TM</a></h1>\\n            <nav-menu></nav-menu>\\n        </div>\\n    </header>\\n    <div class=\\\"wrapper centerwrapper\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n    <footer class=\\\"footer clearfix\\\">\\n    </footer>\\n</div>\"\n\n/***/ },\n\n/***/ 121:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"contentWrapper clearfix\\\">\\n    <h2>{{username}}'s classes</h2>\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\">\\n            <div [ngSwitch]=\\\"teacher\\\">\\n                <div *ngSwitchCase=\\\"true\\\">\\n                    <div *ngIf=\\\"detail\\\" class=\\\"detail clearfix\\\">\\n                        <h3>{{detail.name}}</h3>\\n                        <div>\\n                            <h4>students</h4>\\n                            <ul>\\n                                <li *ngFor=\\\"let student of students\\\">{{student.name}}</li>\\n                                <li class=\\\"addstudent\\\">\\n                                    <livesearch (selectEvent) = addStudent(newstudent)></livesearch>\\n                                    <button (click)=\\\"addStudents()\\\">Add new students</button>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div>\\n                            <h4>Tests</h4>\\n                            <ul>\\n                                <li *ngFor=\\\"let test of tests\\\">{{test.name}}</li>\\n                                <li class=\\\"addstudent\\\">\\n                                    <button (click)=\\\"addTest()\\\">Add test</button>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"tiles\\\">\\n                        <ul>\\n                            <li *ngFor=\\\"let class of classes\\\" class=\\\"tile\\\">\\n                                <h3 class=\\\"addgroup\\\" >{{class.name}}</h3>\\n                                <button class=\\\"addgroup\\\" (click)=\\\"viewDetails(class)\\\">View Details</button>\\n                            </li>\\n                            <li class=\\\"tile\\\">\\n                                <input class=\\\"addgroup\\\" #groupname type=\\\"text\\\" placeholder=\\\"groupname\\\">\\n                                <button class=\\\"addgroup\\\" (click)=\\\"addGroup(groupname.value); groupname.value=''\\\">Add group</button>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n                <div *ngSwitchCase=\\\"false\\\">\\n                    <div class=\\\"tiles\\\">\\n                        <ul>\\n                            <li *ngFor=\\\"let class of classes\\\" class=\\\"tile\\\">\\n                                <h3>{{class.name}}</h3>\\n                                <div *ngIf=\\\"tests\\\">\\n                                    <h4>open tests</h4>\\n                                    <ul>\\n                                        <li *ngFor=\\\"let test of tests\\\">\\n                                            <p>test.title</p>\\n                                            <button (click)=\\\"startTest(test)\\\">Start Test</button>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n/***/ },\n\n/***/ 122:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\\n<div class=\\\"contentWrapper clearfix\\\">\\n    <h2>{{username}}'s dashboard</h2>\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\" class=\\\"clearfix\\\">\\n            <div class=\\\"chart\\\">\\n                <canvas baseChart\\n                        [datasets]=\\\"graphdata\\\"\\n                        [labels]=\\\"labels\\\"\\n                        [options]=\\\"lineChartOptions\\\"\\n                        [legend]=\\\"ChartLegend\\\"\\n                        [chartType]=\\\"ChartType\\\">\\n                </canvas>\\n            </div>\\n            <div class=\\\"tiles\\\">\\n                <ul>\\n                    <li *ngFor=\\\"let item of items\\\" class=\\\"tile\\\">\\n                        <h4>{{item.title}}</h4>\\n                        <div>\\n                            <ul>\\n                                <li class=\\\"completed\\\">Completed: <span>{{item.completed}}</span></li>\\n                                <li class=\\\"average\\\">Average: <span>{{item.avarage}}/10</span></li>\\n                            </ul>\\n                        </div>\\n                        <button (click)=\\\"startNew()\\\" class=\\\"startBtn\\\">Start new test</button>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n/***/ },\n\n/***/ 123:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"innerWrapper\\\">\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\">\\n            <div *ngIf=\\\"setup\\\">\\n                <h2>Create new exercise</h2>\\n                <div class =\\\"formContent\\\">\\n                    <section class=\\\"startformElement\\\">\\n                        <label id=\\\"labelAmount\\\" for=\\\"inputAmount\\\">Amount of words in the excercise:</label>\\n                        <input #length type=\\\"number\\\" min=\\\"10\\\" max=\\\"300\\\" value=\\\"10\\\" class=\\\"amount\\\" id=\\\"inputAmount\\\">\\n                    </section>\\n                    <section class=\\\"startformElement\\\">\\n                        <label id=\\\"labelLanguages\\\" class=\\\"labelLanguages\\\" for=\\\"languages\\\">What do you want to practise?</label>\\n                        <select #ln [(ngModel)]=\\\"selectedValue\\\" name=\\\"languages\\\" id=\\\"languages\\\">\\n                            <option *ngFor=\\\"let l of languages\\\" [ngValue]=\\\"l\\\">{{l}}</option>\\n                        </select>\\n                    </section>\\n                    <button (click)=\\\"startExercise(length,ln)\\\" class=\\\"startBtn\\\">Start exercise</button>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"curEntry\\\">\\n                <h2>Test your knowledge [EN-NL]</h2>\\n                <div class=\\\"formContent\\\" >\\n                    <section class=\\\"leftForm formElement\\\">\\n                        <label id=\\\"labelword\\\" for=\\\"inputword\\\">{{curEntry.languages[0]}}</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputword\\\" value=\\\"{{curEntry.word}}\\\" disabled>\\n                    </section>\\n                    <section class=\\\"rightForm formElement\\\">\\n                        <label id=\\\"labelvertaling\\\" for=\\\"inputvertaling\\\">{{curEntry.languages[1]}}</label>\\n                        <input #answer type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputvertaling\\\" placeholder=\\\"Answer\\\" value=\\\"{{curEntry.translation}}\\\">\\n                    </section>\\n                    <p class=\\\"progress\\\" id=\\\"progress\\\">Progress: <span>{{ count }}</span>/{{entries.length}}</p>\\n                    <button (click)=\\\"next(answer.value)\\\"  (keyup.enter)=\\\"next(answer.value); answer.value='';\\\" id=\\\"btn\\\" class=\\\"nextBtn\\\">Next</button>\\n                </div>\\n                <button (click)=\\\"getScore()\\\" class=\\\"resetBtn\\\">Stop test</button>\\n\\n            </div>\\n            <div *ngIf=\\\"score != -1\\\">\\n                <h2>Test completed!</h2>\\n                <div class=\\\"formContent\\\">\\n                    <h3>Your score is: {{score}}</h3>\\n                    <button (click)=\\\"startNewTest()\\\" class=\\\"endBtn\\\">Start new test</button>\\n                    <button (click)=\\\"goBack()\\\" class=\\\"endBtn\\\">Back to Dashboard</button>\\n                </div>\\n\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n\\n\\n</div>\"\n\n/***/ },\n\n/***/ 124:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\\n<div class=\\\"contentWrapper\\\">\\n    <h2>Login</h2>\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\">\\n            <div ngForm class=\\\"innerForm\\\">\\n                <input type=\\\"text\\\" #username class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n                <input type=\\\"password\\\" #password class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\n                <button (click)=\\\"onSubmit($event,username.value,password.value)\\\" class=\\\"loginBtn\\\">Login</button>\\n                <a [routerLink]=\\\"['/Register']\\\" class=\\\"register\\\">If you don't have an account signup <span>here</span></a>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n/***/ },\n\n/***/ 125:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div *ngIf=\\\"showMenu\\\" class=\\\"navwrapper\\\">\\n    <nav class=\\\"navbar\\\">\\n        <ul>\\n            <li><a [routerLink]=\\\"['Dashboard']\\\">Dashboard</a></li>\\n            <li><a [routerLink]=\\\"['Exercise']\\\">Start Test</a></li>\\n            <li><a [routerLink]=\\\"['Classes']\\\">Classes</a></li>\\n        </ul>\\n    </nav>\\n    <div class=\\\"login\\\">\\n        <p class=\\\"loginElement\\\">Hello {{username}}</p>\\n        <button type=\\\"button\\\" class=\\\"loginElement\\\" (click)=\\\"logout()\\\"><a href=\\\"/\\\">Logout</a></button>\\n    </div>\\n</div>\"\n\n/***/ },\n\n/***/ 126:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\\n<div class=\\\"contentWrapper\\\">\\n    <h2>Register</h2>\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\">\\n            <div ngForm class=\\\"innerForm\\\">\\n                <input type=\\\"text\\\" #username class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n                <input type=\\\"password\\\" #password class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\n                <input type=\\\"password\\\" #confirmpass class=\\\"form-control\\\" id=\\\"confirmpass\\\" placeholder=\\\"Confirm Password\\\">\\n                <button (click)=\\\"onSubmit($event,username.value,password.value,confirmpass.value)\\\" class=\\\"loginBtn\\\">Register</button>\\n                <a [routerLink]=\\\"['/Login']\\\" class=\\\"loginLink\\\">If you already have an account <span>login</span>.</a>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n/***/ },\n\n/***/ 391:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar http_1 = __webpack_require__(16);\n\tvar platform_browser_1 = __webpack_require__(22);\n\tvar router_1 = __webpack_require__(17);\n\tvar forms_1 = __webpack_require__(58);\n\tvar ng2_charts_1 = __webpack_require__(112);\n\tvar GlobalEventsManager_1 = __webpack_require__(40);\n\tvar components_1 = __webpack_require__(395);\n\tvar app_routes_1 = __webpack_require__(392);\n\t//services\n\tvar services_1 = __webpack_require__(56);\n\tvar class_component_1 = __webpack_require__(55);\n\tvar livesearch_component_1 = __webpack_require__(100);\n\tvar class_service_1 = __webpack_require__(103);\n\tvar AppModule = (function () {\n\t    function AppModule() {\n\t    }\n\t    AppModule = __decorate([\n\t        core_1.NgModule({\n\t            bootstrap: [components_1.AppComponent],\n\t            declarations: [\n\t                components_1.AppComponent,\n\t                components_1.LoginComponent,\n\t                components_1.ExerciseComponent,\n\t                components_1.LoadingIndicator,\n\t                components_1.RegisterComponent,\n\t                components_1.DashboardComponent,\n\t                components_1.NavComponent,\n\t                class_component_1.ClassComponent,\n\t                livesearch_component_1.LiveSearch\n\t            ],\n\t            imports: [\n\t                platform_browser_1.BrowserModule,\n\t                http_1.HttpModule,\n\t                forms_1.FormsModule,\n\t                router_1.RouterModule.forRoot(app_routes_1.routes),\n\t                http_1.JsonpModule,\n\t                ng2_charts_1.ChartsModule\n\t            ],\n\t            providers: [\n\t                services_1.UserService,\n\t                services_1.LoggedInGuard,\n\t                services_1.EntryService,\n\t                services_1.CookieService,\n\t                services_1.ExtractService,\n\t                services_1.ScoreService,\n\t                class_service_1.ClassService,\n\t                services_1.SearchService,\n\t                GlobalEventsManager_1.GlobalEventsManager\n\t            ]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AppModule);\n\t    return AppModule;\n\t}());\n\texports.AppModule = AppModule;\n\n\n/***/ },\n\n/***/ 392:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar login_component_1 = __webpack_require__(101);\n\tvar logged_in_guard_1 = __webpack_require__(105);\n\tvar exercise_component_1 = __webpack_require__(99);\n\tvar register_componet_1 = __webpack_require__(102);\n\tvar dashboard_componet_1 = __webpack_require__(98);\n\tvar class_component_1 = __webpack_require__(55);\n\texports.routes = [\n\t    { path: '', redirectTo: 'Login', pathMatch: 'full' },\n\t    { path: 'Login', component: login_component_1.LoginComponent },\n\t    { path: 'Register', component: register_componet_1.RegisterComponent },\n\t    { path: 'Dashboard', component: dashboard_componet_1.DashboardComponent, canActivate: [logged_in_guard_1.LoggedInGuard] },\n\t    { path: 'Exercise', component: exercise_component_1.ExerciseComponent, canActivate: [logged_in_guard_1.LoggedInGuard] },\n\t    { path: 'Classes', component: class_component_1.ClassComponent, canActivate: [logged_in_guard_1.LoggedInGuard] }\n\t];\n\n\n/***/ },\n\n/***/ 393:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar platform_browser_dynamic_1 = __webpack_require__(109);\n\tvar app_module_1 = __webpack_require__(391);\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\n\n\n/***/ },\n\n/***/ 394:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar router_1 = __webpack_require__(17);\n\t__webpack_require__(398);\n\tvar user_service_1 = __webpack_require__(21);\n\tvar GlobalEventsManager_1 = __webpack_require__(40);\n\tvar AppComponent = (function () {\n\t    function AppComponent(userService, router, eventEmitter) {\n\t        this.userService = userService;\n\t        this.router = router;\n\t        this.eventEmitter = eventEmitter;\n\t    }\n\t    AppComponent.prototype.ngOnInit = function () {\n\t    };\n\t    AppComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'app',\n\t            template: __webpack_require__(120),\n\t            styles: [__webpack_require__(30)]\n\t        }), \n\t        __metadata('design:paramtypes', [user_service_1.UserService, router_1.Router, GlobalEventsManager_1.GlobalEventsManager])\n\t    ], AppComponent);\n\t    return AppComponent;\n\t}());\n\texports.AppComponent = AppComponent;\n\n\n/***/ },\n\n/***/ 395:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(394));\n\t__export(__webpack_require__(101));\n\t__export(__webpack_require__(99));\n\t__export(__webpack_require__(396));\n\t__export(__webpack_require__(102));\n\t__export(__webpack_require__(98));\n\t__export(__webpack_require__(397));\n\t__export(__webpack_require__(55));\n\t__export(__webpack_require__(100));\n\n\n/***/ },\n\n/***/ 396:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(19));\n\n\n/***/ },\n\n/***/ 397:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar router_1 = __webpack_require__(17);\n\tvar GlobalEventsManager_1 = __webpack_require__(40);\n\t//services\n\tvar services_1 = __webpack_require__(56);\n\tvar NavComponent = (function () {\n\t    function NavComponent(eventEmitter, userService, router) {\n\t        var _this = this;\n\t        this.eventEmitter = eventEmitter;\n\t        this.userService = userService;\n\t        this.router = router;\n\t        this.eventEmitter.showNavBar.subscribe(function (mode) {\n\t            _this.showMenu = mode;\n\t            if (mode)\n\t                _this.username = localStorage.getItem('username');\n\t        });\n\t    }\n\t    NavComponent.prototype.ngOnInit = function () { };\n\t    NavComponent.prototype.logout = function () {\n\t        this.userService.logout();\n\t        localStorage.removeItem('username');\n\t        this.eventEmitter.showNavBar.emit(false);\n\t        this.router.navigate(['Login']);\n\t    };\n\t    NavComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'nav-menu',\n\t            encapsulation: core_1.ViewEncapsulation.None,\n\t            styles: [__webpack_require__(30)],\n\t            directives: [],\n\t            template: __webpack_require__(125)\n\t        }), \n\t        __metadata('design:paramtypes', [GlobalEventsManager_1.GlobalEventsManager, services_1.UserService, router_1.Router])\n\t    ], NavComponent);\n\t    return NavComponent;\n\t}());\n\texports.NavComponent = NavComponent;\n\n\n/***/ },\n\n/***/ 398:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// import 'rxjs/Rx'; // adds ALL RxJS statics & operators to Observable\n\t\"use strict\";\n\t// See node_module/rxjs/Rxjs.js\n\t// Import just the rxjs statics and operators needed for THIS app.\n\t// Statics\n\t__webpack_require__(60);\n\t// Operators\n\t__webpack_require__(61);\n\t__webpack_require__(62);\n\t__webpack_require__(63);\n\t__webpack_require__(64);\n\t__webpack_require__(65);\n\t__webpack_require__(66);\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// app.bundle.js","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/Observable'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/Observable', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.http = global.ng.http || {}),global.ng.core,global.Rx,global.ng.platformBrowser));\n}(this, function (exports,_angular_core,rxjs_Observable,_angular_platformBrowser) { 'use strict';\n\n    /**\n     * A backend for http that uses the `XMLHttpRequest` browser API.\n     *\n     * Take care not to evaluate this in non-browser contexts.\n     *\n     * @experimental\n     */\n    var BrowserXhr = (function () {\n        function BrowserXhr() {\n        }\n        BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n        BrowserXhr.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        BrowserXhr.ctorParameters = [];\n        return BrowserXhr;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Supported http methods.\n     * @experimental\n     */\n    exports.RequestMethod;\n    (function (RequestMethod) {\n        RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n        RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n        RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n        RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n        RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n        RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n        RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n    })(exports.RequestMethod || (exports.RequestMethod = {}));\n    /**\n     * All possible states in which a connection can be, based on\n     * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n     * additional \"CANCELLED\" state.\n     * @experimental\n     */\n    exports.ReadyState;\n    (function (ReadyState) {\n        ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n        ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n        ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n        ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n        ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n        ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n    })(exports.ReadyState || (exports.ReadyState = {}));\n    /**\n     * Acceptable response types to be associated with a {@link Response}, based on\n     * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n     * @experimental\n     */\n    exports.ResponseType;\n    (function (ResponseType) {\n        ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n        ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n        ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n        ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n        ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n    })(exports.ResponseType || (exports.ResponseType = {}));\n    /**\n     * Supported content type to be automatically associated with a {@link Request}.\n     * @experimental\n     */\n    var ContentType;\n    (function (ContentType) {\n        ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n        ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n        ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n        ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n        ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n        ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n        ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n    })(ContentType || (ContentType = {}));\n    /**\n     * Define which buffer to use to store the response\n     * @experimental\n     */\n    exports.ResponseContentType;\n    (function (ResponseContentType) {\n        ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n        ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n        ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n        ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n    })(exports.ResponseContentType || (exports.ResponseContentType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n     * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n     *\n     * The only known difference between this `Headers` implementation and the spec is the\n     * lack of an `entries` method.\n     *\n     * ### Example\n     *\n     * ```\n     * import {Headers} from '@angular/http';\n     *\n     * var firstHeaders = new Headers();\n     * firstHeaders.append('Content-Type', 'image/jpeg');\n     * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n     *\n     * // Create headers from Plain Old JavaScript Object\n     * var secondHeaders = new Headers({\n     *   'X-My-Custom-Header': 'Angular'\n     * });\n     * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n     *\n     * var thirdHeaders = new Headers(secondHeaders);\n     * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n     * ```\n     *\n     * @experimental\n     */\n    var Headers = (function () {\n        // TODO(vicb): any -> string|string[]\n        function Headers(headers) {\n            var _this = this;\n            /** @internal header names are lower case */\n            this._headers = new Map();\n            /** @internal map lower case names to actual names */\n            this._normalizedNames = new Map();\n            if (!headers) {\n                return;\n            }\n            if (headers instanceof Headers) {\n                headers.forEach(function (values, name) {\n                    values.forEach(function (value) { return _this.append(name, value); });\n                });\n                return;\n            }\n            Object.keys(headers).forEach(function (name) {\n                var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n                _this.delete(name);\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n        }\n        /**\n         * Returns a new Headers instance from the given DOMString of Response Headers\n         */\n        Headers.fromResponseHeaderString = function (headersString) {\n            var headers = new Headers();\n            headersString.split('\\n').forEach(function (line) {\n                var index = line.indexOf(':');\n                if (index > 0) {\n                    var name_1 = line.slice(0, index);\n                    var value = line.slice(index + 1).trim();\n                    headers.set(name_1, value);\n                }\n            });\n            return headers;\n        };\n        /**\n         * Appends a header to existing list of header values for a given header name.\n         */\n        Headers.prototype.append = function (name, value) {\n            var values = this.getAll(name);\n            if (values === null) {\n                this.set(name, value);\n            }\n            else {\n                values.push(value);\n            }\n        };\n        /**\n         * Deletes all header values for the given name.\n         */\n        Headers.prototype.delete = function (name) {\n            var lcName = name.toLowerCase();\n            this._normalizedNames.delete(lcName);\n            this._headers.delete(lcName);\n        };\n        Headers.prototype.forEach = function (fn) {\n            var _this = this;\n            this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n        };\n        /**\n         * Returns first header that matches given name.\n         */\n        Headers.prototype.get = function (name) {\n            var values = this.getAll(name);\n            if (values === null) {\n                return null;\n            }\n            return values.length > 0 ? values[0] : null;\n        };\n        /**\n         * Checks for existence of header by given name.\n         */\n        Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n        /**\n         * Returns the names of the headers\n         */\n        Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n        /**\n         * Sets or overrides header value for given name.\n         */\n        Headers.prototype.set = function (name, value) {\n            if (Array.isArray(value)) {\n                if (value.length) {\n                    this._headers.set(name.toLowerCase(), [value.join(',')]);\n                }\n            }\n            else {\n                this._headers.set(name.toLowerCase(), [value]);\n            }\n            this.mayBeSetNormalizedName(name);\n        };\n        /**\n         * Returns values of all headers.\n         */\n        Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n        /**\n         * Returns string of all headers.\n         */\n        // TODO(vicb): returns {[name: string]: string[]}\n        Headers.prototype.toJSON = function () {\n            var _this = this;\n            var serialized = {};\n            this._headers.forEach(function (values, name) {\n                var split = [];\n                values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n                serialized[_this._normalizedNames.get(name)] = split;\n            });\n            return serialized;\n        };\n        /**\n         * Returns list of header values for a given name.\n         */\n        Headers.prototype.getAll = function (name) {\n            return this.has(name) ? this._headers.get(name.toLowerCase()) : null;\n        };\n        /**\n         * This method is not implemented.\n         */\n        Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n        Headers.prototype.mayBeSetNormalizedName = function (name) {\n            var lcName = name.toLowerCase();\n            if (!this._normalizedNames.has(lcName)) {\n                this._normalizedNames.set(lcName, name);\n            }\n        };\n        return Headers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Creates a response options object to be optionally provided when instantiating a\n     * {@link Response}.\n     *\n     * This class is based on the `ResponseInit` description in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#responseinit).\n     *\n     * All values are null by default. Typical defaults can be found in the\n     * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n     *\n     * This class may be used in tests to build {@link Response Responses} for\n     * mock responses (see {@link MockBackend}).\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: '{\"name\":\"Jeff\"}'\n     * });\n     * var res = new Response(options);\n     *\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * ```\n     *\n     * @experimental\n     */\n    var ResponseOptions = (function () {\n        function ResponseOptions(_a) {\n            var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n            this.body = body != null ? body : null;\n            this.status = status != null ? status : null;\n            this.headers = headers != null ? headers : null;\n            this.statusText = statusText != null ? statusText : null;\n            this.type = type != null ? type : null;\n            this.url = url != null ? url : null;\n        }\n        /**\n         * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n         * override\n         * existing values. This method will not change the values of the instance on which it is being\n         * called.\n         *\n         * This may be useful when sharing a base `ResponseOptions` object inside tests,\n         * where certain properties may change from test to test.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n         *\n         * ```typescript\n         * import {ResponseOptions, Response} from '@angular/http';\n         *\n         * var options = new ResponseOptions({\n         *   body: {name: 'Jeff'}\n         * });\n         * var res = new Response(options.merge({\n         *   url: 'https://google.com'\n         * }));\n         * console.log('options.url:', options.url); // null\n         * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n         * console.log('res.url:', res.url); // https://google.com\n         * ```\n         */\n        ResponseOptions.prototype.merge = function (options) {\n            return new ResponseOptions({\n                body: options && options.body != null ? options.body : this.body,\n                status: options && options.status != null ? options.status : this.status,\n                headers: options && options.headers != null ? options.headers : this.headers,\n                statusText: options && options.statusText != null ? options.statusText : this.statusText,\n                type: options && options.type != null ? options.type : this.type,\n                url: options && options.url != null ? options.url : this.url,\n            });\n        };\n        return ResponseOptions;\n    }());\n    /**\n     * Subclass of {@link ResponseOptions}, with default values.\n     *\n     * Default values:\n     *  * status: 200\n     *  * headers: empty {@link Headers} object\n     *\n     * This class could be extended and bound to the {@link ResponseOptions} class\n     * when configuring an {@link Injector}, in order to override the default options\n     * used by {@link Http} to create {@link Response Responses}.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n     *\n     * ```typescript\n     * import {provide} from '@angular/core';\n     * import {bootstrap} from '@angular/platform-browser/browser';\n     * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n     * '@angular/http';\n     * import {App} from './myapp';\n     *\n     * class MyOptions extends BaseResponseOptions {\n     *   headers:Headers = new Headers({network: 'github'});\n     * }\n     *\n     * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n     * ```\n     *\n     * The options could also be extended when manually creating a {@link Response}\n     * object.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n     *\n     * ```\n     * import {BaseResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new BaseResponseOptions();\n     * var res = new Response(options.merge({\n     *   body: 'Angular',\n     *   headers: new Headers({framework: 'angular'})\n     * }));\n     * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n     * console.log('res.text():', res.text()); // Angular;\n     * ```\n     *\n     * @experimental\n     */\n    var BaseResponseOptions = (function (_super) {\n        __extends$1(BaseResponseOptions, _super);\n        function BaseResponseOptions() {\n            _super.call(this, { status: 200, statusText: 'Ok', type: exports.ResponseType.Default, headers: new Headers() });\n        }\n        BaseResponseOptions.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        BaseResponseOptions.ctorParameters = [];\n        return BaseResponseOptions;\n    }(ResponseOptions));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Abstract class from which real backends are derived.\n     *\n     * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n     * {@link Request}.\n     *\n     * @experimental\n     */\n    var ConnectionBackend = (function () {\n        function ConnectionBackend() {\n        }\n        return ConnectionBackend;\n    }());\n    /**\n     * Abstract class from which real connections are derived.\n     *\n     * @experimental\n     */\n    var Connection = (function () {\n        function Connection() {\n        }\n        return Connection;\n    }());\n    /**\n     * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n     *\n     * @experimental\n     */\n    var XSRFStrategy = (function () {\n        function XSRFStrategy() {\n        }\n        return XSRFStrategy;\n    }());\n\n    function normalizeMethodName(method) {\n        if (typeof method !== 'string')\n            return method;\n        switch (method.toUpperCase()) {\n            case 'GET':\n                return exports.RequestMethod.Get;\n            case 'POST':\n                return exports.RequestMethod.Post;\n            case 'PUT':\n                return exports.RequestMethod.Put;\n            case 'DELETE':\n                return exports.RequestMethod.Delete;\n            case 'OPTIONS':\n                return exports.RequestMethod.Options;\n            case 'HEAD':\n                return exports.RequestMethod.Head;\n            case 'PATCH':\n                return exports.RequestMethod.Patch;\n        }\n        throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n    }\n    var isSuccess = function (status) { return (status >= 200 && status < 300); };\n    function getResponseURL(xhr) {\n        if ('responseURL' in xhr) {\n            return xhr.responseURL;\n        }\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n            return xhr.getResponseHeader('X-Request-URL');\n        }\n        return;\n    }\n    function stringToArrayBuffer(input) {\n        var view = new Uint16Array(input.length);\n        for (var i = 0, strLen = input.length; i < strLen; i++) {\n            view[i] = input.charCodeAt(i);\n        }\n        return view.buffer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function paramParser(rawParams) {\n        if (rawParams === void 0) { rawParams = ''; }\n        var map = new Map();\n        if (rawParams.length > 0) {\n            var params = rawParams.split('&');\n            params.forEach(function (param) {\n                var eqIdx = param.indexOf('=');\n                var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n                var list = map.get(key) || [];\n                list.push(val);\n                map.set(key, list);\n            });\n        }\n        return map;\n    }\n    /**\n     * @experimental\n     **/\n    var QueryEncoder = (function () {\n        function QueryEncoder() {\n        }\n        QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n        QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n        return QueryEncoder;\n    }());\n    function standardEncoding(v) {\n        return encodeURIComponent(v)\n            .replace(/%40/gi, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/gi, '$')\n            .replace(/%2C/gi, ',')\n            .replace(/%3B/gi, ';')\n            .replace(/%2B/gi, '+')\n            .replace(/%3D/gi, '=')\n            .replace(/%3F/gi, '?')\n            .replace(/%2F/gi, '/');\n    }\n    /**\n     * Map-like representation of url search parameters, based on\n     * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n     * with several extensions for merging URLSearchParams objects:\n     *   - setAll()\n     *   - appendAll()\n     *   - replaceAll()\n     *\n     * This class accepts an optional second parameter of ${@link QueryEncoder},\n     * which is used to serialize parameters before making a request. By default,\n     * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n     * and then un-encodes certain characters that are allowed to be part of the query\n     * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n     *\n     * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n     *\n     * If the set of allowed query characters is not acceptable for a particular backend,\n     * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n     *\n     * ```\n     * import {URLSearchParams, QueryEncoder} from '@angular/http';\n     * class MyQueryEncoder extends QueryEncoder {\n     *   encodeKey(k: string): string {\n     *     return myEncodingFunction(k);\n     *   }\n     *\n     *   encodeValue(v: string): string {\n     *     return myEncodingFunction(v);\n     *   }\n     * }\n     *\n     * let params = new URLSearchParams('', new MyQueryEncoder());\n     * ```\n     * @experimental\n     */\n    var URLSearchParams = (function () {\n        function URLSearchParams(rawParams, queryEncoder) {\n            if (rawParams === void 0) { rawParams = ''; }\n            if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n            this.rawParams = rawParams;\n            this.queryEncoder = queryEncoder;\n            this.paramsMap = paramParser(rawParams);\n        }\n        URLSearchParams.prototype.clone = function () {\n            var clone = new URLSearchParams('', this.queryEncoder);\n            clone.appendAll(this);\n            return clone;\n        };\n        URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n        URLSearchParams.prototype.get = function (param) {\n            var storedParam = this.paramsMap.get(param);\n            return Array.isArray(storedParam) ? storedParam[0] : null;\n        };\n        URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n        URLSearchParams.prototype.set = function (param, val) {\n            if (val === void 0 || val === null) {\n                this.delete(param);\n                return;\n            }\n            var list = this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(val);\n            this.paramsMap.set(param, list);\n        };\n        // A merge operation\n        // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n        //\n        // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n        //\n        // TODO(@caitp): document this better\n        URLSearchParams.prototype.setAll = function (searchParams) {\n            var _this = this;\n            searchParams.paramsMap.forEach(function (value, param) {\n                var list = _this.paramsMap.get(param) || [];\n                list.length = 0;\n                list.push(value[0]);\n                _this.paramsMap.set(param, list);\n            });\n        };\n        URLSearchParams.prototype.append = function (param, val) {\n            if (val === void 0 || val === null)\n                return;\n            var list = this.paramsMap.get(param) || [];\n            list.push(val);\n            this.paramsMap.set(param, list);\n        };\n        // A merge operation\n        // For each name-values pair in `searchParams`, perform `append(name, value)`\n        // for each value in `values`.\n        //\n        // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n        //\n        // TODO(@caitp): document this better\n        URLSearchParams.prototype.appendAll = function (searchParams) {\n            var _this = this;\n            searchParams.paramsMap.forEach(function (value, param) {\n                var list = _this.paramsMap.get(param) || [];\n                for (var i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this.paramsMap.set(param, list);\n            });\n        };\n        // A merge operation\n        // For each name-values pair in `searchParams`, perform `delete(name)`,\n        // followed by `set(name, values)`\n        //\n        // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n        //\n        // TODO(@caitp): document this better\n        URLSearchParams.prototype.replaceAll = function (searchParams) {\n            var _this = this;\n            searchParams.paramsMap.forEach(function (value, param) {\n                var list = _this.paramsMap.get(param) || [];\n                list.length = 0;\n                for (var i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this.paramsMap.set(param, list);\n            });\n        };\n        URLSearchParams.prototype.toString = function () {\n            var _this = this;\n            var paramsList = [];\n            this.paramsMap.forEach(function (values, k) {\n                values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n            });\n            return paramsList.join('&');\n        };\n        URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n        return URLSearchParams;\n    }());\n\n    /**\n     * HTTP request body used by both {@link Request} and {@link Response}\n     * https://fetch.spec.whatwg.org/#body\n     */\n    var Body = (function () {\n        function Body() {\n        }\n        /**\n         * Attempts to return body as parsed `JSON` object, or raises an exception.\n         */\n        Body.prototype.json = function () {\n            if (typeof this._body === 'string') {\n                return JSON.parse(this._body);\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return JSON.parse(this.text());\n            }\n            return this._body;\n        };\n        /**\n         * Returns the body as a string, presuming `toString()` can be called on the response body.\n         */\n        Body.prototype.text = function () {\n            if (this._body instanceof URLSearchParams) {\n                return this._body.toString();\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return String.fromCharCode.apply(null, new Uint16Array(this._body));\n            }\n            if (this._body === null) {\n                return '';\n            }\n            if (typeof this._body === 'object') {\n                return JSON.stringify(this._body, null, 2);\n            }\n            return this._body.toString();\n        };\n        /**\n         * Return the body as an ArrayBuffer\n         */\n        Body.prototype.arrayBuffer = function () {\n            if (this._body instanceof ArrayBuffer) {\n                return this._body;\n            }\n            return stringToArrayBuffer(this.text());\n        };\n        /**\n          * Returns the request's body as a Blob, assuming that body exists.\n          */\n        Body.prototype.blob = function () {\n            if (this._body instanceof Blob) {\n                return this._body;\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return new Blob([this._body]);\n            }\n            throw new Error('The request body isn\\'t either a blob or an array buffer');\n        };\n        return Body;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Creates `Response` instances from provided values.\n     *\n     * Though this object isn't\n     * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n     * add data to a view.\n     *\n     * ### Example\n     *\n     * ```\n     * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n     * ```\n     *\n     * The Response's interface is inspired by the Response constructor defined in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n     * can be accessed many times. There are other differences in the implementation, but this is the\n     * most significant.\n     *\n     * @experimental\n     */\n    var Response = (function (_super) {\n        __extends$2(Response, _super);\n        function Response(responseOptions) {\n            _super.call(this);\n            this._body = responseOptions.body;\n            this.status = responseOptions.status;\n            this.ok = (this.status >= 200 && this.status <= 299);\n            this.statusText = responseOptions.statusText;\n            this.headers = responseOptions.headers;\n            this.type = responseOptions.type;\n            this.url = responseOptions.url;\n        }\n        Response.prototype.toString = function () {\n            return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n        };\n        return Response;\n    }(Body));\n\n    var _nextRequestId = 0;\n    var JSONP_HOME = '__ng_jsonp__';\n    var _jsonpConnections = null;\n    function _getJsonpConnections() {\n        var w = typeof window == 'object' ? window : {};\n        if (_jsonpConnections === null) {\n            _jsonpConnections = w[JSONP_HOME] = {};\n        }\n        return _jsonpConnections;\n    }\n    // Make sure not to evaluate this in a non-browser environment!\n    var BrowserJsonp = (function () {\n        function BrowserJsonp() {\n        }\n        // Construct a <script> element with the specified URL\n        BrowserJsonp.prototype.build = function (url) {\n            var node = document.createElement('script');\n            node.src = url;\n            return node;\n        };\n        BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n        BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n        BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n            var connections = _getJsonpConnections();\n            connections[id] = connection;\n        };\n        BrowserJsonp.prototype.removeConnection = function (id) {\n            var connections = _getJsonpConnections();\n            connections[id] = null;\n        };\n        // Attach the <script> element to the DOM\n        BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n        // Remove <script> element from the DOM\n        BrowserJsonp.prototype.cleanup = function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild((node));\n            }\n        };\n        BrowserJsonp.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        BrowserJsonp.ctorParameters = [];\n        return BrowserJsonp;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n    var JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n    /**\n     * Abstract base class for an in-flight JSONP request.\n     *\n     * @experimental\n     */\n    var JSONPConnection = (function () {\n        function JSONPConnection() {\n        }\n        return JSONPConnection;\n    }());\n    var JSONPConnection_ = (function (_super) {\n        __extends(JSONPConnection_, _super);\n        function JSONPConnection_(req, _dom, baseResponseOptions) {\n            var _this = this;\n            _super.call(this);\n            this._dom = _dom;\n            this.baseResponseOptions = baseResponseOptions;\n            this._finished = false;\n            if (req.method !== exports.RequestMethod.Get) {\n                throw new TypeError(JSONP_ERR_WRONG_METHOD);\n            }\n            this.request = req;\n            this.response = new rxjs_Observable.Observable(function (responseObserver) {\n                _this.readyState = exports.ReadyState.Loading;\n                var id = _this._id = _dom.nextRequestID();\n                _dom.exposeConnection(id, _this);\n                // Workaround Dart\n                // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n                var callback = _dom.requestCallback(_this._id);\n                var url = req.url;\n                if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                    url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n                }\n                else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                    url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n                }\n                var script = _this._script = _dom.build(url);\n                var onLoad = function (event) {\n                    if (_this.readyState === exports.ReadyState.Cancelled)\n                        return;\n                    _this.readyState = exports.ReadyState.Done;\n                    _dom.cleanup(script);\n                    if (!_this._finished) {\n                        var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: exports.ResponseType.Error, url: url });\n                        if (baseResponseOptions) {\n                            responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                        }\n                        responseObserver.error(new Response(responseOptions_1));\n                        return;\n                    }\n                    var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                    if (_this.baseResponseOptions) {\n                        responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                    }\n                    responseObserver.next(new Response(responseOptions));\n                    responseObserver.complete();\n                };\n                var onError = function (error) {\n                    if (_this.readyState === exports.ReadyState.Cancelled)\n                        return;\n                    _this.readyState = exports.ReadyState.Done;\n                    _dom.cleanup(script);\n                    var responseOptions = new ResponseOptions({ body: error.message, type: exports.ResponseType.Error });\n                    if (baseResponseOptions) {\n                        responseOptions = baseResponseOptions.merge(responseOptions);\n                    }\n                    responseObserver.error(new Response(responseOptions));\n                };\n                script.addEventListener('load', onLoad);\n                script.addEventListener('error', onError);\n                _dom.send(script);\n                return function () {\n                    _this.readyState = exports.ReadyState.Cancelled;\n                    script.removeEventListener('load', onLoad);\n                    script.removeEventListener('error', onError);\n                    _this._dom.cleanup(script);\n                };\n            });\n        }\n        JSONPConnection_.prototype.finished = function (data) {\n            // Don't leak connections\n            this._finished = true;\n            this._dom.removeConnection(this._id);\n            if (this.readyState === exports.ReadyState.Cancelled)\n                return;\n            this._responseData = data;\n        };\n        return JSONPConnection_;\n    }(JSONPConnection));\n    /**\n     * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n     *\n     * @experimental\n     */\n    var JSONPBackend = (function (_super) {\n        __extends(JSONPBackend, _super);\n        function JSONPBackend() {\n            _super.apply(this, arguments);\n        }\n        return JSONPBackend;\n    }(ConnectionBackend));\n    var JSONPBackend_ = (function (_super) {\n        __extends(JSONPBackend_, _super);\n        function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n            _super.call(this);\n            this._browserJSONP = _browserJSONP;\n            this._baseResponseOptions = _baseResponseOptions;\n        }\n        JSONPBackend_.prototype.createConnection = function (request) {\n            return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n        };\n        JSONPBackend_.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        JSONPBackend_.ctorParameters = [\n            { type: BrowserJsonp, },\n            { type: ResponseOptions, },\n        ];\n        return JSONPBackend_;\n    }(JSONPBackend));\n\n    var XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n    /**\n     * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n     * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n     * request.\n     *\n     * This class would typically not be created or interacted with directly inside applications, though\n     * the {@link MockConnection} may be interacted with in tests.\n     *\n     * @experimental\n     */\n    var XHRConnection = (function () {\n        function XHRConnection(req, browserXHR, baseResponseOptions) {\n            var _this = this;\n            this.request = req;\n            this.response = new rxjs_Observable.Observable(function (responseObserver) {\n                var _xhr = browserXHR.build();\n                _xhr.open(exports.RequestMethod[req.method].toUpperCase(), req.url);\n                if (req.withCredentials != null) {\n                    _xhr.withCredentials = req.withCredentials;\n                }\n                // load event handler\n                var onLoad = function () {\n                    // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                    var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                    var body = null;\n                    // HTTP 204 means no content\n                    if (status !== 204) {\n                        // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                        // response/responseType properties were introduced in ResourceLoader Level2 spec\n                        // (supported by IE10)\n                        body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                        // Implicitly strip a potential XSSI prefix.\n                        if (typeof body === 'string') {\n                            body = body.replace(XSSI_PREFIX, '');\n                        }\n                    }\n                    // fix status code when it is 0 (0 status is undocumented).\n                    // Occurs when accessing file resources or on Android 4.1 stock browser\n                    // while retrieving files from application cache.\n                    if (status === 0) {\n                        status = body ? 200 : 0;\n                    }\n                    var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                    // IE 9 does not provide the way to get URL of response\n                    var url = getResponseURL(_xhr) || req.url;\n                    var statusText = _xhr.statusText || 'OK';\n                    var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                    if (baseResponseOptions != null) {\n                        responseOptions = baseResponseOptions.merge(responseOptions);\n                    }\n                    var response = new Response(responseOptions);\n                    response.ok = isSuccess(status);\n                    if (response.ok) {\n                        responseObserver.next(response);\n                        // TODO(gdi2290): defer complete if array buffer until done\n                        responseObserver.complete();\n                        return;\n                    }\n                    responseObserver.error(response);\n                };\n                // error event handler\n                var onError = function (err) {\n                    var responseOptions = new ResponseOptions({\n                        body: err,\n                        type: exports.ResponseType.Error,\n                        status: _xhr.status,\n                        statusText: _xhr.statusText,\n                    });\n                    if (baseResponseOptions != null) {\n                        responseOptions = baseResponseOptions.merge(responseOptions);\n                    }\n                    responseObserver.error(new Response(responseOptions));\n                };\n                _this.setDetectedContentType(req, _xhr);\n                if (req.headers != null) {\n                    req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n                }\n                // Select the correct buffer type to store the response\n                if (req.responseType != null && _xhr.responseType != null) {\n                    switch (req.responseType) {\n                        case exports.ResponseContentType.ArrayBuffer:\n                            _xhr.responseType = 'arraybuffer';\n                            break;\n                        case exports.ResponseContentType.Json:\n                            _xhr.responseType = 'json';\n                            break;\n                        case exports.ResponseContentType.Text:\n                            _xhr.responseType = 'text';\n                            break;\n                        case exports.ResponseContentType.Blob:\n                            _xhr.responseType = 'blob';\n                            break;\n                        default:\n                            throw new Error('The selected responseType is not supported');\n                    }\n                }\n                _xhr.addEventListener('load', onLoad);\n                _xhr.addEventListener('error', onError);\n                _xhr.send(_this.request.getBody());\n                return function () {\n                    _xhr.removeEventListener('load', onLoad);\n                    _xhr.removeEventListener('error', onError);\n                    _xhr.abort();\n                };\n            });\n        }\n        XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n            // Skip if a custom Content-Type header is provided\n            if (req.headers != null && req.headers.get('Content-Type') != null) {\n                return;\n            }\n            // Set the detected content type\n            switch (req.contentType) {\n                case ContentType.NONE:\n                    break;\n                case ContentType.JSON:\n                    _xhr.setRequestHeader('content-type', 'application/json');\n                    break;\n                case ContentType.FORM:\n                    _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                    break;\n                case ContentType.TEXT:\n                    _xhr.setRequestHeader('content-type', 'text/plain');\n                    break;\n                case ContentType.BLOB:\n                    var blob = req.blob();\n                    if (blob.type) {\n                        _xhr.setRequestHeader('content-type', blob.type);\n                    }\n                    break;\n            }\n        };\n        return XHRConnection;\n    }());\n    /**\n     * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n     * using a cookie. See {@link https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)}\n     * for more information on XSRF.\n     *\n     * Applications can configure custom cookie and header names by binding an instance of this class\n     * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n     * details.\n     *\n     * @experimental\n     */\n    var CookieXSRFStrategy = (function () {\n        function CookieXSRFStrategy(_cookieName, _headerName) {\n            if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n            if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n            this._cookieName = _cookieName;\n            this._headerName = _headerName;\n        }\n        CookieXSRFStrategy.prototype.configureRequest = function (req) {\n            var xsrfToken = _angular_platformBrowser.__platform_browser_private__.getDOM().getCookie(this._cookieName);\n            if (xsrfToken) {\n                req.headers.set(this._headerName, xsrfToken);\n            }\n        };\n        return CookieXSRFStrategy;\n    }());\n    /**\n     * Creates {@link XHRConnection} instances.\n     *\n     * This class would typically not be used by end users, but could be\n     * overridden if a different backend implementation should be used,\n     * such as in a node backend.\n     *\n     * ### Example\n     *\n     * ```\n     * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n     * @Component({\n     *   viewProviders: [\n     *     HTTP_PROVIDERS,\n     *     {provide: Http, useFactory: (backend, options) => {\n     *       return new Http(backend, options);\n     *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n     * })\n     * class MyComponent {\n     *   constructor(http:Http) {\n     *     http.request('people.json').subscribe(res => this.people = res.json());\n     *   }\n     * }\n     * ```\n     * @experimental\n     */\n    var XHRBackend = (function () {\n        function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n            this._browserXHR = _browserXHR;\n            this._baseResponseOptions = _baseResponseOptions;\n            this._xsrfStrategy = _xsrfStrategy;\n        }\n        XHRBackend.prototype.createConnection = function (request) {\n            this._xsrfStrategy.configureRequest(request);\n            return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n        };\n        XHRBackend.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        XHRBackend.ctorParameters = [\n            { type: BrowserXhr, },\n            { type: ResponseOptions, },\n            { type: XSRFStrategy, },\n        ];\n        return XHRBackend;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Creates a request options object to be optionally provided when instantiating a\n     * {@link Request}.\n     *\n     * This class is based on the `RequestInit` description in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#requestinit).\n     *\n     * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n     * class, which sub-classes `RequestOptions`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * var options = new RequestOptions({\n     *   method: RequestMethod.Post,\n     *   url: 'https://google.com'\n     * });\n     * var req = new Request(options);\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // https://google.com\n     * ```\n     *\n     * @experimental\n     */\n    var RequestOptions = (function () {\n        function RequestOptions(_a) {\n            var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, withCredentials = _b.withCredentials, responseType = _b.responseType;\n            this.method = method != null ? normalizeMethodName(method) : null;\n            this.headers = headers != null ? headers : null;\n            this.body = body != null ? body : null;\n            this.url = url != null ? url : null;\n            this.search =\n                search != null ? (typeof search === 'string' ? new URLSearchParams(search) : search) : null;\n            this.withCredentials = withCredentials != null ? withCredentials : null;\n            this.responseType = responseType != null ? responseType : null;\n        }\n        /**\n         * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n         * existing values. This method will not change the values of the instance on which it is being\n         * called.\n         *\n         * Note that `headers` and `search` will override existing values completely if present in\n         * the `options` object. If these values should be merged, it should be done prior to calling\n         * `merge` on the `RequestOptions` instance.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n         *\n         * ```typescript\n         * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n         *\n         * var options = new RequestOptions({\n         *   method: RequestMethod.Post\n         * });\n         * var req = new Request(options.merge({\n         *   url: 'https://google.com'\n         * }));\n         * console.log('req.method:', RequestMethod[req.method]); // Post\n         * console.log('options.url:', options.url); // null\n         * console.log('req.url:', req.url); // https://google.com\n         * ```\n         */\n        RequestOptions.prototype.merge = function (options) {\n            return new RequestOptions({\n                method: options && options.method != null ? options.method : this.method,\n                headers: options && options.headers != null ? options.headers : this.headers,\n                body: options && options.body != null ? options.body : this.body,\n                url: options && options.url != null ? options.url : this.url,\n                search: options && options.search != null ?\n                    (typeof options.search === 'string' ? new URLSearchParams(options.search) :\n                        options.search.clone()) :\n                    this.search,\n                withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                    this.withCredentials,\n                responseType: options && options.responseType != null ? options.responseType :\n                    this.responseType\n            });\n        };\n        return RequestOptions;\n    }());\n    /**\n     * Subclass of {@link RequestOptions}, with default values.\n     *\n     * Default values:\n     *  * method: {@link RequestMethod RequestMethod.Get}\n     *  * headers: empty {@link Headers} object\n     *\n     * This class could be extended and bound to the {@link RequestOptions} class\n     * when configuring an {@link Injector}, in order to override the default options\n     * used by {@link Http} to create and send {@link Request Requests}.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))\n     *\n     * ```typescript\n     * import {provide} from '@angular/core';\n     * import {bootstrap} from '@angular/platform-browser/browser';\n     * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '@angular/http';\n     * import {App} from './myapp';\n     *\n     * class MyOptions extends BaseRequestOptions {\n     *   search: string = 'coreTeam=true';\n     * }\n     *\n     * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);\n     * ```\n     *\n     * The options could also be extended when manually creating a {@link Request}\n     * object.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))\n     *\n     * ```\n     * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * var options = new BaseRequestOptions();\n     * var req = new Request(options.merge({\n     *   method: RequestMethod.Post,\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     *\n     * @experimental\n     */\n    var BaseRequestOptions = (function (_super) {\n        __extends$3(BaseRequestOptions, _super);\n        function BaseRequestOptions() {\n            _super.call(this, { method: exports.RequestMethod.Get, headers: new Headers() });\n        }\n        BaseRequestOptions.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        BaseRequestOptions.ctorParameters = [];\n        return BaseRequestOptions;\n    }(RequestOptions));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    // TODO(jeffbcross): properly implement body accessors\n    /**\n     * Creates `Request` instances from provided values.\n     *\n     * The Request's interface is inspired by the Request constructor defined in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#request-class),\n     * but is considered a static value whose body can be accessed many times. There are other\n     * differences in the implementation, but this is the most significant.\n     *\n     * `Request` instances are typically created by higher-level classes, like {@link Http} and\n     * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n     * One such example is when creating services that wrap higher-level services, like {@link Http},\n     * where it may be useful to generate a `Request` with arbitrary headers and search params.\n     *\n     * ```typescript\n     * import {Injectable, Injector} from '@angular/core';\n     * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n     *\n     * @Injectable()\n     * class AutoAuthenticator {\n     *   constructor(public http:Http) {}\n     *   request(url:string) {\n     *     return this.http.request(new Request({\n     *       method: RequestMethod.Get,\n     *       url: url,\n     *       search: 'password=123'\n     *     }));\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n     * var authenticator = injector.get(AutoAuthenticator);\n     * authenticator.request('people.json').subscribe(res => {\n     *   //URL should have included '?password=123'\n     *   console.log('people', res.json());\n     * });\n     * ```\n     *\n     * @experimental\n     */\n    var Request = (function (_super) {\n        __extends$5(Request, _super);\n        function Request(requestOptions) {\n            _super.call(this);\n            // TODO: assert that url is present\n            var url = requestOptions.url;\n            this.url = requestOptions.url;\n            if (requestOptions.search) {\n                var search = requestOptions.search.toString();\n                if (search.length > 0) {\n                    var prefix = '?';\n                    if (this.url.indexOf('?') != -1) {\n                        prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n                    }\n                    // TODO: just delete search-query-looking string in url?\n                    this.url = url + prefix + search;\n                }\n            }\n            this._body = requestOptions.body;\n            this.method = normalizeMethodName(requestOptions.method);\n            // TODO(jeffbcross): implement behavior\n            // Defaults to 'omit', consistent with browser\n            this.headers = new Headers(requestOptions.headers);\n            this.contentType = this.detectContentType();\n            this.withCredentials = requestOptions.withCredentials;\n            this.responseType = requestOptions.responseType;\n        }\n        /**\n         * Returns the content type enum based on header options.\n         */\n        Request.prototype.detectContentType = function () {\n            switch (this.headers.get('content-type')) {\n                case 'application/json':\n                    return ContentType.JSON;\n                case 'application/x-www-form-urlencoded':\n                    return ContentType.FORM;\n                case 'multipart/form-data':\n                    return ContentType.FORM_DATA;\n                case 'text/plain':\n                case 'text/html':\n                    return ContentType.TEXT;\n                case 'application/octet-stream':\n                    return ContentType.BLOB;\n                default:\n                    return this.detectContentTypeFromBody();\n            }\n        };\n        /**\n         * Returns the content type of request's body based on its type.\n         */\n        Request.prototype.detectContentTypeFromBody = function () {\n            if (this._body == null) {\n                return ContentType.NONE;\n            }\n            else if (this._body instanceof URLSearchParams) {\n                return ContentType.FORM;\n            }\n            else if (this._body instanceof FormData) {\n                return ContentType.FORM_DATA;\n            }\n            else if (this._body instanceof Blob$1) {\n                return ContentType.BLOB;\n            }\n            else if (this._body instanceof ArrayBuffer$1) {\n                return ContentType.ARRAY_BUFFER;\n            }\n            else if (this._body && typeof this._body == 'object') {\n                return ContentType.JSON;\n            }\n            else {\n                return ContentType.TEXT;\n            }\n        };\n        /**\n         * Returns the request's body according to its type. If body is undefined, return\n         * null.\n         */\n        Request.prototype.getBody = function () {\n            switch (this.contentType) {\n                case ContentType.JSON:\n                    return this.text();\n                case ContentType.FORM:\n                    return this.text();\n                case ContentType.FORM_DATA:\n                    return this._body;\n                case ContentType.TEXT:\n                    return this.text();\n                case ContentType.BLOB:\n                    return this.blob();\n                case ContentType.ARRAY_BUFFER:\n                    return this.arrayBuffer();\n                default:\n                    return null;\n            }\n        };\n        return Request;\n    }(Body));\n    var noop = function () { };\n    var w = typeof window == 'object' ? window : noop;\n    var FormData = w['FormData'] || noop;\n    var Blob$1 = w['Blob'] || noop;\n    var ArrayBuffer$1 = w['ArrayBuffer'] || noop;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function httpRequest(backend, request) {\n        return backend.createConnection(request).response;\n    }\n    function mergeOptions(defaultOpts, providedOpts, method, url) {\n        var newOptions = defaultOpts;\n        if (providedOpts) {\n            // Hack so Dart can used named parameters\n            return newOptions.merge(new RequestOptions({\n                method: providedOpts.method || method,\n                url: providedOpts.url || url,\n                search: providedOpts.search,\n                headers: providedOpts.headers,\n                body: providedOpts.body,\n                withCredentials: providedOpts.withCredentials,\n                responseType: providedOpts.responseType\n            }));\n        }\n        return newOptions.merge(new RequestOptions({ method: method, url: url }));\n    }\n    /**\n     * Performs http requests using `XMLHttpRequest` as the default backend.\n     *\n     * `Http` is available as an injectable class, with methods to perform http requests. Calling\n     * `request` returns an `Observable` which will emit a single {@link Response} when a\n     * response is received.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {Http, HTTP_PROVIDERS} from '@angular/http';\n     * import 'rxjs/add/operator/map'\n     * @Component({\n     *   selector: 'http-app',\n     *   viewProviders: [HTTP_PROVIDERS],\n     *   templateUrl: 'people.html'\n     * })\n     * class PeopleComponent {\n     *   constructor(http: Http) {\n     *     http.get('people.json')\n     *       // Call map on the response observable to get the parsed people object\n     *       .map(res => res.json())\n     *       // Subscribe to the observable to get the parsed people object and attach it to the\n     *       // component\n     *       .subscribe(people => this.people = people);\n     *   }\n     * }\n     * ```\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n     * ```\n     *\n     * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n     * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n     * the {@link XHRBackend} provider, as in the following example:\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {BaseRequestOptions, Http} from '@angular/http';\n     * import {MockBackend} from '@angular/http/testing';\n     * var injector = Injector.resolveAndCreate([\n     *   BaseRequestOptions,\n     *   MockBackend,\n     *   {provide: Http, useFactory:\n     *       function(backend, defaultOptions) {\n     *         return new Http(backend, defaultOptions);\n     *       },\n     *       deps: [MockBackend, BaseRequestOptions]}\n     * ]);\n     * var http = injector.get(Http);\n     * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n     * ```\n     *\n     * @experimental\n     */\n    var Http = (function () {\n        function Http(_backend, _defaultOptions) {\n            this._backend = _backend;\n            this._defaultOptions = _defaultOptions;\n        }\n        /**\n         * Performs any type of http request. First argument is required, and can either be a url or\n         * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n         * object can be provided as the 2nd argument. The options object will be merged with the values\n         * of {@link BaseRequestOptions} before performing the request.\n         */\n        Http.prototype.request = function (url, options) {\n            var responseObservable;\n            if (typeof url === 'string') {\n                responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url)));\n            }\n            else if (url instanceof Request) {\n                responseObservable = httpRequest(this._backend, url);\n            }\n            else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        };\n        /**\n         * Performs a request with `get` http method.\n         */\n        Http.prototype.get = function (url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url)));\n        };\n        /**\n         * Performs a request with `post` http method.\n         */\n        Http.prototype.post = function (url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Post, url)));\n        };\n        /**\n         * Performs a request with `put` http method.\n         */\n        Http.prototype.put = function (url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Put, url)));\n        };\n        /**\n         * Performs a request with `delete` http method.\n         */\n        Http.prototype.delete = function (url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Delete, url)));\n        };\n        /**\n         * Performs a request with `patch` http method.\n         */\n        Http.prototype.patch = function (url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Patch, url)));\n        };\n        /**\n         * Performs a request with `head` http method.\n         */\n        Http.prototype.head = function (url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Head, url)));\n        };\n        /**\n         * Performs a request with `options` http method.\n         */\n        Http.prototype.options = function (url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Options, url)));\n        };\n        Http.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        Http.ctorParameters = [\n            { type: ConnectionBackend, },\n            { type: RequestOptions, },\n        ];\n        return Http;\n    }());\n    /**\n     * @experimental\n     */\n    var Jsonp = (function (_super) {\n        __extends$4(Jsonp, _super);\n        function Jsonp(backend, defaultOptions) {\n            _super.call(this, backend, defaultOptions);\n        }\n        /**\n         * Performs any type of http request. First argument is required, and can either be a url or\n         * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n         * object can be provided as the 2nd argument. The options object will be merged with the values\n         * of {@link BaseRequestOptions} before performing the request.\n         *\n         * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n         * supported by all current browsers. Because JSONP creates a `<script>` element with\n         * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n         * source could expose your application to XSS risks. Data exposed by JSONP may also be\n         * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n         * future security issues (e.g. content sniffing).  For more detail, see the\n         * [Security Guide](http://g.co/ng/security).\n         */\n        Jsonp.prototype.request = function (url, options) {\n            var responseObservable;\n            if (typeof url === 'string') {\n                url =\n                    new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url));\n            }\n            if (url instanceof Request) {\n                if (url.method !== exports.RequestMethod.Get) {\n                    throw new Error('JSONP requests must use GET request method.');\n                }\n                responseObservable = httpRequest(this._backend, url);\n            }\n            else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        };\n        Jsonp.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        Jsonp.ctorParameters = [\n            { type: ConnectionBackend, },\n            { type: RequestOptions, },\n        ];\n        return Jsonp;\n    }(Http));\n\n    function _createDefaultCookieXSRFStrategy() {\n        return new CookieXSRFStrategy();\n    }\n    function httpFactory(xhrBackend, requestOptions) {\n        return new Http(xhrBackend, requestOptions);\n    }\n    function jsonpFactory(jsonpBackend, requestOptions) {\n        return new Jsonp(jsonpBackend, requestOptions);\n    }\n    /**\n     * The module that includes http's providers\n     *\n     * @experimental\n     */\n    var HttpModule = (function () {\n        function HttpModule() {\n        }\n        HttpModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        providers: [\n                            // TODO(pascal): use factory type annotations once supported in DI\n                            // issue: https://github.com/angular/angular/issues/3183\n                            { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                            BrowserXhr,\n                            { provide: RequestOptions, useClass: BaseRequestOptions },\n                            { provide: ResponseOptions, useClass: BaseResponseOptions },\n                            XHRBackend,\n                            { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                        ],\n                    },] },\n        ];\n        /** @nocollapse */\n        HttpModule.ctorParameters = [];\n        return HttpModule;\n    }());\n    /**\n     * The module that includes jsonp's providers\n     *\n     * @experimental\n     */\n    var JsonpModule = (function () {\n        function JsonpModule() {\n        }\n        JsonpModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        providers: [\n                            // TODO(pascal): use factory type annotations once supported in DI\n                            // issue: https://github.com/angular/angular/issues/3183\n                            { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                            BrowserJsonp,\n                            { provide: RequestOptions, useClass: BaseRequestOptions },\n                            { provide: ResponseOptions, useClass: BaseResponseOptions },\n                            { provide: JSONPBackend, useClass: JSONPBackend_ },\n                        ],\n                    },] },\n        ];\n        /** @nocollapse */\n        JsonpModule.ctorParameters = [];\n        return JsonpModule;\n    }());\n\n    exports.BrowserXhr = BrowserXhr;\n    exports.JSONPBackend = JSONPBackend;\n    exports.JSONPConnection = JSONPConnection;\n    exports.CookieXSRFStrategy = CookieXSRFStrategy;\n    exports.XHRBackend = XHRBackend;\n    exports.XHRConnection = XHRConnection;\n    exports.BaseRequestOptions = BaseRequestOptions;\n    exports.RequestOptions = RequestOptions;\n    exports.BaseResponseOptions = BaseResponseOptions;\n    exports.ResponseOptions = ResponseOptions;\n    exports.Headers = Headers;\n    exports.Http = Http;\n    exports.Jsonp = Jsonp;\n    exports.HttpModule = HttpModule;\n    exports.JsonpModule = JsonpModule;\n    exports.Connection = Connection;\n    exports.ConnectionBackend = ConnectionBackend;\n    exports.XSRFStrategy = XSRFStrategy;\n    exports.Request = Request;\n    exports.Response = Response;\n    exports.QueryEncoder = QueryEncoder;\n    exports.URLSearchParams = URLSearchParams;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/http/bundles/http.umd.js\n// module id = 16\n// module chunks = 1","/**\n * @license Angular v3.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs/BehaviorSubject'), require('rxjs/Subject'), require('rxjs/observable/from'), require('rxjs/observable/of'), require('rxjs/operator/concatMap'), require('rxjs/operator/every'), require('rxjs/operator/first'), require('rxjs/operator/map'), require('rxjs/operator/mergeMap'), require('rxjs/operator/reduce'), require('rxjs/Observable'), require('rxjs/operator/catch'), require('rxjs/operator/concatAll'), require('rxjs/util/EmptyError'), require('rxjs/observable/fromPromise'), require('rxjs/operator/last'), require('rxjs/operator/mergeAll'), require('@angular/platform-browser'), require('rxjs/operator/filter')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core', 'rxjs/BehaviorSubject', 'rxjs/Subject', 'rxjs/observable/from', 'rxjs/observable/of', 'rxjs/operator/concatMap', 'rxjs/operator/every', 'rxjs/operator/first', 'rxjs/operator/map', 'rxjs/operator/mergeMap', 'rxjs/operator/reduce', 'rxjs/Observable', 'rxjs/operator/catch', 'rxjs/operator/concatAll', 'rxjs/util/EmptyError', 'rxjs/observable/fromPromise', 'rxjs/operator/last', 'rxjs/operator/mergeAll', '@angular/platform-browser', 'rxjs/operator/filter'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.router = global.ng.router || {}),global.ng.common,global.ng.core,global.Rx,global.Rx,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.platformBrowser,global.Rx.Observable.prototype));\n}(this, function (exports,_angular_common,_angular_core,rxjs_BehaviorSubject,rxjs_Subject,rxjs_observable_from,rxjs_observable_of,rxjs_operator_concatMap,rxjs_operator_every,rxjs_operator_first,rxjs_operator_map,rxjs_operator_mergeMap,rxjs_operator_reduce,rxjs_Observable,rxjs_operator_catch,rxjs_operator_concatAll,rxjs_util_EmptyError,rxjs_observable_fromPromise,l,rxjs_operator_mergeAll,_angular_platformBrowser,rxjs_operator_filter) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @whatItDoes Name of the primary outlet.\n     *\n     * @stable\n     */\n    var PRIMARY_OUTLET = 'primary';\n    var NavigationCancelingError = (function (_super) {\n        __extends(NavigationCancelingError, _super);\n        function NavigationCancelingError(message) {\n            _super.call(this, message);\n            this.message = message;\n            this.stack = (new Error(message)).stack;\n        }\n        NavigationCancelingError.prototype.toString = function () { return this.message; };\n        return NavigationCancelingError;\n    }(Error));\n    function defaultUrlMatcher(segments, segmentGroup, route) {\n        var path = route.path;\n        var parts = path.split('/');\n        var posParams = {};\n        var consumed = [];\n        var currentIndex = 0;\n        for (var i = 0; i < parts.length; ++i) {\n            if (currentIndex >= segments.length)\n                return null;\n            var current = segments[currentIndex];\n            var p = parts[i];\n            var isPosParam = p.startsWith(':');\n            if (!isPosParam && p !== current.path)\n                return null;\n            if (isPosParam) {\n                posParams[p.substring(1)] = current;\n            }\n            consumed.push(current);\n            currentIndex++;\n        }\n        if (route.pathMatch === 'full' &&\n            (segmentGroup.hasChildren() || currentIndex < segments.length)) {\n            return null;\n        }\n        else {\n            return { consumed: consumed, posParams: posParams };\n        }\n    }\n\n    function shallowEqualArrays(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (!shallowEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    function shallowEqual(a, b) {\n        var k1 = Object.keys(a);\n        var k2 = Object.keys(b);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    function flatten(a) {\n        var target = [];\n        for (var i = 0; i < a.length; ++i) {\n            for (var j = 0; j < a[i].length; ++j) {\n                target.push(a[i][j]);\n            }\n        }\n        return target;\n    }\n    function last(a) {\n        return a.length > 0 ? a[a.length - 1] : null;\n    }\n    function merge(m1, m2) {\n        var m = {};\n        for (var attr in m1) {\n            if (m1.hasOwnProperty(attr)) {\n                m[attr] = m1[attr];\n            }\n        }\n        for (var attr in m2) {\n            if (m2.hasOwnProperty(attr)) {\n                m[attr] = m2[attr];\n            }\n        }\n        return m;\n    }\n    function forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    function waitForMap(obj, fn) {\n        var waitFor = [];\n        var res = {};\n        forEach(obj, function (a, k) {\n            if (k === PRIMARY_OUTLET) {\n                waitFor.push(rxjs_operator_map.map.call(fn(k, a), function (_) {\n                    res[k] = _;\n                    return _;\n                }));\n            }\n        });\n        forEach(obj, function (a, k) {\n            if (k !== PRIMARY_OUTLET) {\n                waitFor.push(rxjs_operator_map.map.call(fn(k, a), function (_) {\n                    res[k] = _;\n                    return _;\n                }));\n            }\n        });\n        if (waitFor.length > 0) {\n            var concatted$ = rxjs_operator_concatAll.concatAll.call(rxjs_observable_of.of.apply(void 0, waitFor));\n            var last$ = l.last.call(concatted$);\n            return rxjs_operator_map.map.call(last$, function () { return res; });\n        }\n        else {\n            return rxjs_observable_of.of(res);\n        }\n    }\n    function andObservables(observables) {\n        var merged$ = rxjs_operator_mergeAll.mergeAll.call(observables);\n        return rxjs_operator_every.every.call(merged$, function (result) { return result === true; });\n    }\n    function wrapIntoObservable(value) {\n        if (value instanceof rxjs_Observable.Observable) {\n            return value;\n        }\n        else if (value instanceof Promise) {\n            return rxjs_observable_fromPromise.fromPromise(value);\n        }\n        else {\n            return rxjs_observable_of.of(value);\n        }\n    }\n\n    /**\n     * @experimental\n     */\n    var ROUTES = new _angular_core.OpaqueToken('ROUTES');\n    var LoadedRouterConfig = (function () {\n        function LoadedRouterConfig(routes, injector, factoryResolver, injectorFactory) {\n            this.routes = routes;\n            this.injector = injector;\n            this.factoryResolver = factoryResolver;\n            this.injectorFactory = injectorFactory;\n        }\n        return LoadedRouterConfig;\n    }());\n    var RouterConfigLoader = (function () {\n        function RouterConfigLoader(loader, compiler) {\n            this.loader = loader;\n            this.compiler = compiler;\n        }\n        RouterConfigLoader.prototype.load = function (parentInjector, loadChildren) {\n            return rxjs_operator_map.map.call(this.loadModuleFactory(loadChildren), function (r) {\n                var ref = r.create(parentInjector);\n                var injectorFactory = function (parent) { return r.create(parent).injector; };\n                return new LoadedRouterConfig(flatten(ref.injector.get(ROUTES)), ref.injector, ref.componentFactoryResolver, injectorFactory);\n            });\n        };\n        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n            var _this = this;\n            if (typeof loadChildren === 'string') {\n                return rxjs_observable_fromPromise.fromPromise(this.loader.load(loadChildren));\n            }\n            else {\n                var offlineMode_1 = this.compiler instanceof _angular_core.Compiler;\n                return rxjs_operator_mergeMap.mergeMap.call(wrapIntoObservable(loadChildren()), function (t) { return offlineMode_1 ? rxjs_observable_of.of(t) : rxjs_observable_fromPromise.fromPromise(_this.compiler.compileModuleAsync(t)); });\n            }\n        };\n        return RouterConfigLoader;\n    }());\n\n    function createEmptyUrlTree() {\n        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n    }\n    function containsTree(container, containee, exact) {\n        if (exact) {\n            return equalQueryParams(container.queryParams, containee.queryParams) &&\n                equalSegmentGroups(container.root, containee.root);\n        }\n        else {\n            return containsQueryParams(container.queryParams, containee.queryParams) &&\n                containsSegmentGroup(container.root, containee.root);\n        }\n    }\n    function equalQueryParams(container, containee) {\n        return shallowEqual(container, containee);\n    }\n    function equalSegmentGroups(container, containee) {\n        if (!equalPath(container.segments, containee.segments))\n            return false;\n        if (container.numberOfChildren !== containee.numberOfChildren)\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    function containsQueryParams(container, containee) {\n        return Object.keys(containee) <= Object.keys(container) &&\n            Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n    }\n    function containsSegmentGroup(container, containee) {\n        return containsSegmentGroupHelper(container, containee, containee.segments);\n    }\n    function containsSegmentGroupHelper(container, containee, containeePaths) {\n        if (container.segments.length > containeePaths.length) {\n            var current = container.segments.slice(0, containeePaths.length);\n            if (!equalPath(current, containeePaths))\n                return false;\n            if (containee.hasChildren())\n                return false;\n            return true;\n        }\n        else if (container.segments.length === containeePaths.length) {\n            if (!equalPath(container.segments, containeePaths))\n                return false;\n            for (var c in containee.children) {\n                if (!container.children[c])\n                    return false;\n                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                    return false;\n            }\n            return true;\n        }\n        else {\n            var current = containeePaths.slice(0, container.segments.length);\n            var next = containeePaths.slice(container.segments.length);\n            if (!equalPath(container.segments, current))\n                return false;\n            if (!container.children[PRIMARY_OUTLET])\n                return false;\n            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n        }\n    }\n    /**\n     * @whatItDoes Represents the parsed URL.\n     *\n     * @howToUse\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     * router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     * @description\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * @stable\n     */\n    var UrlTree = (function () {\n        /**\n         * @internal\n         */\n        function UrlTree(\n            /**\n            * The root segment group of the URL tree.\n             */\n            root, \n            /**\n             * The query params of the URL.\n             */\n            queryParams, \n            /**\n             * The fragment of the URL.\n             */\n            fragment) {\n            this.root = root;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n        }\n        /**\n         * @docsNotRequired\n         */\n        UrlTree.prototype.toString = function () { return new DefaultUrlSerializer().serialize(this); };\n        return UrlTree;\n    }());\n    /**\n     * @whatItDoes Represents the parsed URL segment.\n     *\n     * See {@link UrlTree} for more information.\n     *\n     * @stable\n     */\n    var UrlSegmentGroup = (function () {\n        function UrlSegmentGroup(\n            /**\n             * The URL segments of this group. See {@link UrlSegment} for more information.\n             */\n            segments, \n            /**\n             * The list of children of this group.\n             */\n            children) {\n            var _this = this;\n            this.segments = segments;\n            this.children = children;\n            /**\n             * The parent node in the url tree.\n             */\n            this.parent = null;\n            forEach(children, function (v, k) { return v.parent = _this; });\n        }\n        /**\n         * Return true if the segment has child segments\n         */\n        UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n            /**\n             * Returns the number of child sements.\n             */\n            get: function () { return Object.keys(this.children).length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @docsNotRequired\n         */\n        UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n        return UrlSegmentGroup;\n    }());\n    /**\n     * @whatItDoes Represents a single URL segment.\n     *\n     * @howToUse\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     * @description\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and\n     * the matrix parameters associated with the segment.\n     *\n     * @stable\n     */\n    var UrlSegment = (function () {\n        function UrlSegment(\n            /**\n             * The path part of a URL segment.\n             */\n            path, \n            /**\n             * The matrix parameters associated with a segment.\n             */\n            parameters) {\n            this.path = path;\n            this.parameters = parameters;\n        }\n        /**\n         * @docsNotRequired\n         */\n        UrlSegment.prototype.toString = function () { return serializePath(this); };\n        return UrlSegment;\n    }());\n    function equalSegments(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i].path !== b[i].path)\n                return false;\n            if (!shallowEqual(a[i].parameters, b[i].parameters))\n                return false;\n        }\n        return true;\n    }\n    function equalPath(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i].path !== b[i].path)\n                return false;\n        }\n        return true;\n    }\n    function mapChildrenIntoArray(segment, fn) {\n        var res = [];\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet === PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet !== PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        return res;\n    }\n    /**\n     * @whatItDoes Serializes and deserializes a URL string into a URL tree.\n     *\n     * @description The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See {@link DefaultUrlSerializer} for an example of a URL serializer.\n     *\n     * @stable\n     */\n    var UrlSerializer = (function () {\n        function UrlSerializer() {\n        }\n        return UrlSerializer;\n    }());\n    /**\n     * @whatItDoes A default implementation of the {@link UrlSerializer}.\n     *\n     * @description\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     * @stable\n     */\n    var DefaultUrlSerializer = (function () {\n        function DefaultUrlSerializer() {\n        }\n        /**\n         * Parse a url into a {@link UrlTree}.\n         */\n        DefaultUrlSerializer.prototype.parse = function (url) {\n            var p = new UrlParser(url);\n            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n        };\n        /**\n         * Converts a {@link UrlTree} into a url.\n         */\n        DefaultUrlSerializer.prototype.serialize = function (tree) {\n            var segment = \"/\" + serializeSegment(tree.root, true);\n            var query = serializeQueryParams(tree.queryParams);\n            var fragment = tree.fragment !== null && tree.fragment !== undefined ? \"#\" + encodeURI(tree.fragment) : '';\n            return \"\" + segment + query + fragment;\n        };\n        return DefaultUrlSerializer;\n    }());\n    function serializePaths(segment) {\n        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n    }\n    function serializeSegment(segment, root) {\n        if (segment.hasChildren() && root) {\n            var primary = segment.children[PRIMARY_OUTLET] ?\n                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n                '';\n            var children_1 = [];\n            forEach(segment.children, function (v, k) {\n                if (k !== PRIMARY_OUTLET) {\n                    children_1.push(k + \":\" + serializeSegment(v, false));\n                }\n            });\n            if (children_1.length > 0) {\n                return primary + \"(\" + children_1.join('//') + \")\";\n            }\n            else {\n                return \"\" + primary;\n            }\n        }\n        else if (segment.hasChildren() && !root) {\n            var children = mapChildrenIntoArray(segment, function (v, k) {\n                if (k === PRIMARY_OUTLET) {\n                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n                }\n                else {\n                    return [(k + \":\" + serializeSegment(v, false))];\n                }\n            });\n            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n        }\n        else {\n            return serializePaths(segment);\n        }\n    }\n    function encode(s) {\n        return encodeURIComponent(s);\n    }\n    function decode(s) {\n        return decodeURIComponent(s);\n    }\n    function serializePath(path) {\n        return \"\" + encode(path.path) + serializeParams(path.parameters);\n    }\n    function serializeParams(params) {\n        return pairs(params).map(function (p) { return (\";\" + encode(p.first) + \"=\" + encode(p.second)); }).join('');\n    }\n    function serializeQueryParams(params) {\n        var strs = pairs(params).map(function (p) { return (encode(p.first) + \"=\" + encode(p.second)); });\n        return strs.length > 0 ? \"?\" + strs.join(\"&\") : '';\n    }\n    var Pair = (function () {\n        function Pair(first, second) {\n            this.first = first;\n            this.second = second;\n        }\n        return Pair;\n    }());\n    function pairs(obj) {\n        var res = [];\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                res.push(new Pair(prop, obj[prop]));\n            }\n        }\n        return res;\n    }\n    var SEGMENT_RE = /^[^\\/\\(\\)\\?;=&#]+/;\n    function matchSegments(str) {\n        SEGMENT_RE.lastIndex = 0;\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_RE = /^[^=\\?&#]+/;\n    function matchQueryParams(str) {\n        QUERY_PARAM_RE.lastIndex = 0;\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_VALUE_RE = /^[^\\?&#]+/;\n    function matchUrlQueryParamValue(str) {\n        QUERY_PARAM_VALUE_RE.lastIndex = 0;\n        var match = str.match(QUERY_PARAM_VALUE_RE);\n        return match ? match[0] : '';\n    }\n    var UrlParser = (function () {\n        function UrlParser(url) {\n            this.url = url;\n            this.remaining = url;\n        }\n        UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n        UrlParser.prototype.capture = function (str) {\n            if (!this.remaining.startsWith(str)) {\n                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n            }\n            this.remaining = this.remaining.substring(str.length);\n        };\n        UrlParser.prototype.parseRootSegment = function () {\n            if (this.remaining.startsWith('/')) {\n                this.capture('/');\n            }\n            if (this.remaining === '' || this.remaining.startsWith('?') || this.remaining.startsWith('#')) {\n                return new UrlSegmentGroup([], {});\n            }\n            else {\n                return new UrlSegmentGroup([], this.parseChildren());\n            }\n        };\n        UrlParser.prototype.parseChildren = function () {\n            if (this.remaining.length == 0) {\n                return {};\n            }\n            if (this.peekStartsWith('/')) {\n                this.capture('/');\n            }\n            var paths = [];\n            if (!this.peekStartsWith('(')) {\n                paths.push(this.parseSegments());\n            }\n            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n                this.capture('/');\n                paths.push(this.parseSegments());\n            }\n            var children = {};\n            if (this.peekStartsWith('/(')) {\n                this.capture('/');\n                children = this.parseParens(true);\n            }\n            var res = {};\n            if (this.peekStartsWith('(')) {\n                res = this.parseParens(false);\n            }\n            if (paths.length > 0 || Object.keys(children).length > 0) {\n                res[PRIMARY_OUTLET] = new UrlSegmentGroup(paths, children);\n            }\n            return res;\n        };\n        UrlParser.prototype.parseSegments = function () {\n            var path = matchSegments(this.remaining);\n            if (path === '' && this.peekStartsWith(';')) {\n                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n            }\n            this.capture(path);\n            var matrixParams = {};\n            if (this.peekStartsWith(';')) {\n                matrixParams = this.parseMatrixParams();\n            }\n            return new UrlSegment(decode(path), matrixParams);\n        };\n        UrlParser.prototype.parseQueryParams = function () {\n            var params = {};\n            if (this.peekStartsWith('?')) {\n                this.capture('?');\n                this.parseQueryParam(params);\n                while (this.remaining.length > 0 && this.peekStartsWith('&')) {\n                    this.capture('&');\n                    this.parseQueryParam(params);\n                }\n            }\n            return params;\n        };\n        UrlParser.prototype.parseFragment = function () {\n            if (this.peekStartsWith('#')) {\n                return decodeURI(this.remaining.substring(1));\n            }\n            else {\n                return null;\n            }\n        };\n        UrlParser.prototype.parseMatrixParams = function () {\n            var params = {};\n            while (this.remaining.length > 0 && this.peekStartsWith(';')) {\n                this.capture(';');\n                this.parseParam(params);\n            }\n            return params;\n        };\n        UrlParser.prototype.parseParam = function (params) {\n            var key = matchSegments(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.peekStartsWith('=')) {\n                this.capture('=');\n                var valueMatch = matchSegments(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        UrlParser.prototype.parseQueryParam = function (params) {\n            var key = matchQueryParams(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.peekStartsWith('=')) {\n                this.capture('=');\n                var valueMatch = matchUrlQueryParamValue(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        UrlParser.prototype.parseParens = function (allowPrimary) {\n            var segments = {};\n            this.capture('(');\n            while (!this.peekStartsWith(')') && this.remaining.length > 0) {\n                var path = matchSegments(this.remaining);\n                var next = this.remaining[path.length];\n                // if is is not one of these characters, then the segment was unescaped\n                // or the group was not closed\n                if (next !== '/' && next !== ')' && next !== ';') {\n                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n                }\n                var outletName = void 0;\n                if (path.indexOf(':') > -1) {\n                    outletName = path.substr(0, path.indexOf(':'));\n                    this.capture(outletName);\n                    this.capture(':');\n                }\n                else if (allowPrimary) {\n                    outletName = PRIMARY_OUTLET;\n                }\n                var children = this.parseChildren();\n                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                    new UrlSegmentGroup([], children);\n                if (this.peekStartsWith('//')) {\n                    this.capture('//');\n                }\n            }\n            this.capture(')');\n            return segments;\n        };\n        return UrlParser;\n    }());\n\n    var NoMatch = (function () {\n        function NoMatch(segmentGroup) {\n            if (segmentGroup === void 0) { segmentGroup = null; }\n            this.segmentGroup = segmentGroup;\n        }\n        return NoMatch;\n    }());\n    var AbsoluteRedirect = (function () {\n        function AbsoluteRedirect(urlTree) {\n            this.urlTree = urlTree;\n        }\n        return AbsoluteRedirect;\n    }());\n    function noMatch(segmentGroup) {\n        return new rxjs_Observable.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n    }\n    function absoluteRedirect(newTree) {\n        return new rxjs_Observable.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n    }\n    function namedOutletsRedirect(redirectTo) {\n        return new rxjs_Observable.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n    }\n    function canLoadFails(route) {\n        return new rxjs_Observable.Observable(function (obs) { return obs.error(new NavigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n    }\n    function applyRedirects(injector, configLoader, urlSerializer, urlTree, config) {\n        return new ApplyRedirects(injector, configLoader, urlSerializer, urlTree, config).apply();\n    }\n    var ApplyRedirects = (function () {\n        function ApplyRedirects(injector, configLoader, urlSerializer, urlTree, config) {\n            this.injector = injector;\n            this.configLoader = configLoader;\n            this.urlSerializer = urlSerializer;\n            this.urlTree = urlTree;\n            this.config = config;\n            this.allowRedirects = true;\n        }\n        ApplyRedirects.prototype.apply = function () {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.injector, this.config, this.urlTree.root, PRIMARY_OUTLET);\n            var urlTrees$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); });\n            return rxjs_operator_catch._catch.call(urlTrees$, function (e) {\n                if (e instanceof AbsoluteRedirect) {\n                    // after an absolute redirect we do not apply any more redirects!\n                    _this.allowRedirects = false;\n                    // we need to run matching, so we can fetch all lazy-loaded modules\n                    return _this.match(e.urlTree);\n                }\n                else if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                else {\n                    throw e;\n                }\n            });\n        };\n        ApplyRedirects.prototype.match = function (tree) {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.injector, this.config, tree.root, PRIMARY_OUTLET);\n            var mapped$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n                return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n            });\n            return rxjs_operator_catch._catch.call(mapped$, function (e) {\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                else {\n                    throw e;\n                }\n            });\n        };\n        ApplyRedirects.prototype.noMatchError = function (e) {\n            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n        };\n        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n            var root = rootCandidate.segments.length > 0 ?\n                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n                rootCandidate;\n            return new UrlTree(root, queryParams, fragment);\n            var _a;\n        };\n        ApplyRedirects.prototype.expandSegmentGroup = function (injector, routes, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return rxjs_operator_map.map.call(this.expandChildren(injector, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n            }\n            else {\n                return this.expandSegment(injector, segmentGroup, routes, segmentGroup.segments, outlet, true);\n            }\n        };\n        ApplyRedirects.prototype.expandChildren = function (injector, routes, segmentGroup) {\n            var _this = this;\n            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(injector, routes, child, childOutlet); });\n        };\n        ApplyRedirects.prototype.expandSegment = function (injector, segmentGroup, routes, segments, outlet, allowRedirects) {\n            var _this = this;\n            var routes$ = rxjs_observable_of.of.apply(void 0, routes);\n            var processedRoutes$ = rxjs_operator_map.map.call(routes$, function (r) {\n                var expanded$ = _this.expandSegmentAgainstRoute(injector, segmentGroup, routes, r, segments, outlet, allowRedirects);\n                return rxjs_operator_catch._catch.call(expanded$, function (e) {\n                    if (e instanceof NoMatch)\n                        return rxjs_observable_of.of(null);\n                    else\n                        throw e;\n                });\n            });\n            var concattedProcessedRoutes$ = rxjs_operator_concatAll.concatAll.call(processedRoutes$);\n            var first$ = rxjs_operator_first.first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n            return rxjs_operator_catch._catch.call(first$, function (e, _) {\n                if (e instanceof rxjs_util_EmptyError.EmptyError) {\n                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                        return rxjs_observable_of.of(new UrlSegmentGroup([], {}));\n                    }\n                    else {\n                        throw new NoMatch(segmentGroup);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            });\n        };\n        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (injector, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n            if (getOutlet$1(route) !== outlet)\n                return noMatch(segmentGroup);\n            if (route.redirectTo !== undefined && !(allowRedirects && this.allowRedirects))\n                return noMatch(segmentGroup);\n            if (route.redirectTo === undefined) {\n                return this.matchSegmentAgainstRoute(injector, segmentGroup, route, paths);\n            }\n            else {\n                return this.expandSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, paths, outlet);\n            }\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (injector, segmentGroup, routes, route, segments, outlet) {\n            if (route.path === '**') {\n                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(injector, routes, route, outlet);\n            }\n            else {\n                return this.expandRegularSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, segments, outlet);\n            }\n        };\n        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (injector, routes, route, outlet) {\n            var _this = this;\n            var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            else {\n                return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n                    var group = new UrlSegmentGroup(newSegments, {});\n                    return _this.expandSegment(injector, group, routes, newSegments, outlet, false);\n                });\n            }\n        };\n        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (injector, segmentGroup, routes, route, segments, outlet) {\n            var _this = this;\n            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n            if (!matched)\n                return noMatch(segmentGroup);\n            var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            else {\n                return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n                    return _this.expandSegment(injector, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n                });\n            }\n        };\n        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (injector, rawSegmentGroup, route, segments) {\n            var _this = this;\n            if (route.path === '**') {\n                if (route.loadChildren) {\n                    return rxjs_operator_map.map.call(this.configLoader.load(injector, route.loadChildren), function (r) {\n                        route._loadedConfig = r;\n                        return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n                    });\n                }\n                else {\n                    return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n                }\n            }\n            else {\n                var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments_1 = _a.consumedSegments, lastChild = _a.lastChild;\n                if (!matched)\n                    return noMatch(rawSegmentGroup);\n                var rawSlicedSegments_1 = segments.slice(lastChild);\n                var childConfig$ = this.getChildConfig(injector, route);\n                return rxjs_operator_mergeMap.mergeMap.call(childConfig$, function (routerConfig) {\n                    var childInjector = routerConfig.injector;\n                    var childConfig = routerConfig.routes;\n                    var _a = split(rawSegmentGroup, consumedSegments_1, rawSlicedSegments_1, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n                    if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                        var expanded$ = _this.expandChildren(childInjector, childConfig, segmentGroup);\n                        return rxjs_operator_map.map.call(expanded$, function (children) { return new UrlSegmentGroup(consumedSegments_1, children); });\n                    }\n                    else if (childConfig.length === 0 && slicedSegments.length === 0) {\n                        return rxjs_observable_of.of(new UrlSegmentGroup(consumedSegments_1, {}));\n                    }\n                    else {\n                        var expanded$ = _this.expandSegment(childInjector, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n                        return rxjs_operator_map.map.call(expanded$, function (cs) { return new UrlSegmentGroup(consumedSegments_1.concat(cs.segments), cs.children); });\n                    }\n                });\n            }\n        };\n        ApplyRedirects.prototype.getChildConfig = function (injector, route) {\n            var _this = this;\n            if (route.children) {\n                return rxjs_observable_of.of(new LoadedRouterConfig(route.children, injector, null, null));\n            }\n            else if (route.loadChildren) {\n                return rxjs_operator_mergeMap.mergeMap.call(runGuards(injector, route), function (shouldLoad) {\n                    if (shouldLoad) {\n                        if (route._loadedConfig) {\n                            return rxjs_observable_of.of(route._loadedConfig);\n                        }\n                        else {\n                            return rxjs_operator_map.map.call(_this.configLoader.load(injector, route.loadChildren), function (r) {\n                                route._loadedConfig = r;\n                                return r;\n                            });\n                        }\n                    }\n                    else {\n                        return canLoadFails(route);\n                    }\n                });\n            }\n            else {\n                return rxjs_observable_of.of(new LoadedRouterConfig([], injector, null, null));\n            }\n        };\n        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n            var res = [];\n            var c = urlTree.root;\n            while (true) {\n                res = res.concat(c.segments);\n                if (c.numberOfChildren === 0) {\n                    return rxjs_observable_of.of(res);\n                }\n                else if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                    return namedOutletsRedirect(route.redirectTo);\n                }\n                else {\n                    c = c.children[PRIMARY_OUTLET];\n                }\n            }\n        };\n        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n            var t = this.urlSerializer.parse(redirectTo);\n            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n        };\n        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n        };\n        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n            var res = {};\n            forEach(redirectToParams, function (v, k) {\n                if (v.startsWith(':')) {\n                    res[k] = actualParams[v.substring(1)];\n                }\n                else {\n                    res[k] = v;\n                }\n            });\n            return res;\n        };\n        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n            var _this = this;\n            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n            var children = {};\n            forEach(group.children, function (child, name) {\n                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n            });\n            return new UrlSegmentGroup(updatedSegments, children);\n        };\n        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n            var _this = this;\n            return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments); });\n        };\n        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n            if (!pos)\n                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n            return pos;\n        };\n        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n            var idx = 0;\n            for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n                var s = actualSegments_1[_i];\n                if (s.path === redirectToUrlSegment.path) {\n                    actualSegments.splice(idx);\n                    return s;\n                }\n                idx++;\n            }\n            return redirectToUrlSegment;\n        };\n        return ApplyRedirects;\n    }());\n    function runGuards(injector, route) {\n        var canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return rxjs_observable_of.of(true);\n        var obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canLoad), function (c) {\n            var guard = injector.get(c);\n            if (guard.canLoad) {\n                return wrapIntoObservable(guard.canLoad(route));\n            }\n            else {\n                return wrapIntoObservable(guard(route));\n            }\n        });\n        return andObservables(obs);\n    }\n    function match(segmentGroup, route, segments) {\n        var noMatch = { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        if (route.path === '') {\n            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n            else {\n                return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            return noMatch;\n        return {\n            matched: true,\n            consumedSegments: res.consumed,\n            lastChild: res.consumed.length,\n            positionalParamSegments: res.posParams\n        };\n    }\n    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n        }\n        else if (slicedSegments.length === 0 &&\n            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n        }\n        else {\n            return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n        }\n    }\n    function mergeTrivialChildren(s) {\n        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n            var c = s.children[PRIMARY_OUTLET];\n            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n        }\n        else {\n            return s;\n        }\n    }\n    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var res = {};\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var r = routes_1[_i];\n            if (emptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                res[getOutlet$1(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n        return merge(children, res);\n    }\n    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegmentGroup;\n        for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n            var r = routes_2[_i];\n            if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                res[getOutlet$1(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n        return res;\n    }\n    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes\n            .filter(function (r) { return emptyPathRedirect(segmentGroup, slicedSegments, r) &&\n            getOutlet$1(r) !== PRIMARY_OUTLET; })\n            .length > 0;\n    }\n    function containsEmptyPathRedirects(segmentGroup, slicedSegments, routes) {\n        return routes.filter(function (r) { return emptyPathRedirect(segmentGroup, slicedSegments, r); }).length > 0;\n    }\n    function emptyPathRedirect(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full')\n            return false;\n        return r.path === '' && r.redirectTo !== undefined;\n    }\n    function getOutlet$1(route) {\n        return route.outlet ? route.outlet : PRIMARY_OUTLET;\n    }\n\n    function validateConfig(config) {\n        // forEach doesn't iterate undefined values\n        for (var i = 0; i < config.length; i++) {\n            validateNode(config[i]);\n        }\n    }\n    function validateNode(route) {\n        if (!route) {\n            throw new Error(\"\\n      Invalid route configuration: Encountered undefined route.\\n      The reason might be an extra comma.\\n       \\n      Example: \\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n        }\n        if (Array.isArray(route)) {\n            throw new Error(\"Invalid route configuration: Array cannot be specified\");\n        }\n        if (route.component === undefined && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n            throw new Error(\"Invalid route configuration of route '\" + route.path + \"': a componentless route cannot have a named outlet set\");\n        }\n        if (!!route.redirectTo && !!route.children) {\n            throw new Error(\"Invalid configuration of route '\" + route.path + \"': redirectTo and children cannot be used together\");\n        }\n        if (!!route.redirectTo && !!route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + route.path + \"': redirectTo and loadChildren cannot be used together\");\n        }\n        if (!!route.children && !!route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + route.path + \"': children and loadChildren cannot be used together\");\n        }\n        if (!!route.redirectTo && !!route.component) {\n            throw new Error(\"Invalid configuration of route '\" + route.path + \"': redirectTo and component cannot be used together\");\n        }\n        if (!!route.path && !!route.matcher) {\n            throw new Error(\"Invalid configuration of route '\" + route.path + \"': path and matcher cannot be used together\");\n        }\n        if (route.redirectTo === undefined && !route.component && !route.children &&\n            !route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + route.path + \"': one of the following must be provided (component or redirectTo or children or loadChildren)\");\n        }\n        if (route.path === undefined) {\n            throw new Error(\"Invalid route configuration: routes must have path specified\");\n        }\n        if (route.path.startsWith('/')) {\n            throw new Error(\"Invalid route configuration of route '\" + route.path + \"': path cannot start with a slash\");\n        }\n        if (route.path === '' && route.redirectTo !== undefined && route.pathMatch === undefined) {\n            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n            throw new Error(\"Invalid route configuration of route '{path: \\\"\" + route.path + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n        }\n        if (route.pathMatch !== undefined && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n            throw new Error(\"Invalid configuration of route '\" + route.path + \"': pathMatch can only be set to 'prefix' or 'full'\");\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Tree = (function () {\n        function Tree(root) {\n            this._root = root;\n        }\n        Object.defineProperty(Tree.prototype, \"root\", {\n            get: function () { return this._root.value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @internal\n         */\n        Tree.prototype.parent = function (t) {\n            var p = this.pathFromRoot(t);\n            return p.length > 1 ? p[p.length - 2] : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.children = function (t) {\n            var n = findNode(t, this._root);\n            return n ? n.children.map(function (t) { return t.value; }) : [];\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.firstChild = function (t) {\n            var n = findNode(t, this._root);\n            return n && n.children.length > 0 ? n.children[0].value : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.siblings = function (t) {\n            var p = findPath(t, this._root, []);\n            if (p.length < 2)\n                return [];\n            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n            return c.filter(function (cc) { return cc !== t; });\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root, []).map(function (s) { return s.value; }); };\n        return Tree;\n    }());\n    function findNode(expected, c) {\n        if (expected === c.value)\n            return c;\n        for (var _i = 0, _a = c.children; _i < _a.length; _i++) {\n            var cc = _a[_i];\n            var r = findNode(expected, cc);\n            if (r)\n                return r;\n        }\n        return null;\n    }\n    function findPath(expected, c, collected) {\n        collected.push(c);\n        if (expected === c.value)\n            return collected;\n        for (var _i = 0, _a = c.children; _i < _a.length; _i++) {\n            var cc = _a[_i];\n            var cloned = collected.slice(0);\n            var r = findPath(expected, cc, cloned);\n            if (r.length > 0)\n                return r;\n        }\n        return [];\n    }\n    var TreeNode = (function () {\n        function TreeNode(value, children) {\n            this.value = value;\n            this.children = children;\n        }\n        TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n        return TreeNode;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @whatItDoes Represents the state of the router.\n     *\n     * @howToUse\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * @description\n     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n     * segments,\n     * the extracted parameters, and the resolved data.\n     *\n     * See {@link ActivatedRoute} for more information.\n     *\n     * @stable\n     */\n    var RouterState = (function (_super) {\n        __extends$1(RouterState, _super);\n        /**\n         * @internal\n         */\n        function RouterState(root, \n            /**\n             * The current snapshot of the router state.\n             */\n            snapshot) {\n            _super.call(this, root);\n            this.snapshot = snapshot;\n            setRouterStateSnapshot(this, root);\n        }\n        RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n        return RouterState;\n    }(Tree));\n    function createEmptyState(urlTree, rootComponent) {\n        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n        var emptyUrl = new rxjs_BehaviorSubject.BehaviorSubject([new UrlSegment('', {})]);\n        var emptyParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n        var emptyData = new rxjs_BehaviorSubject.BehaviorSubject({});\n        var emptyQueryParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n        var fragment = new rxjs_BehaviorSubject.BehaviorSubject('');\n        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n        activated.snapshot = snapshot.root;\n        return new RouterState(new TreeNode(activated, []), snapshot);\n    }\n    function createEmptyStateSnapshot(urlTree, rootComponent) {\n        var emptyParams = {};\n        var emptyData = {};\n        var emptyQueryParams = {};\n        var fragment = '';\n        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n        return new RouterStateSnapshot('', new TreeNode(activated, []));\n    }\n    /**\n     * @whatItDoes Contains the information about a route associated with a component loaded in an\n     * outlet.\n     * ActivatedRoute can also be used to traverse the router state tree.\n     *\n     * @howToUse\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: Observable<string> = route.params.map(p => p.id);\n     *     const url: Observable<string> = route.url.map(s => s.join(''));\n     *     const user = route.data.map(d => d.user); //includes `data` and `resolve`\n     *   }\n     * }\n     * ```\n     *\n     * @stable\n     */\n    var ActivatedRoute = (function () {\n        /**\n         * @internal\n         */\n        function ActivatedRoute(\n            /**\n             *  The URL segments matched by this route. The observable will emit a new value when\n             *  the array of segments changes.\n             */\n            url, \n            /**\n             * The matrix parameters scoped to this route. The observable will emit a new value when\n             * the set of the parameters changes.\n             */\n            params, \n            /**\n             * The query parameters shared by all the routes. The observable will emit a new value when\n             * the set of the parameters changes.\n             */\n            queryParams, \n            /**\n             * The URL fragment shared by all the routes. The observable will emit a new value when\n             * the URL fragment changes.\n             */\n            fragment, \n            /**\n             * The static and resolved data of this route. The observable will emit a new value when\n             * any of the resolvers returns a new object.\n             */\n            data, \n            /**\n             * The outlet name of the route. It's a constant.\n             */\n            outlet, \n            /**\n             * The component of the route. It's a constant.\n             */\n            component, // TODO: vsavkin: remove |string\n            futureSnapshot) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._futureSnapshot = futureSnapshot;\n        }\n        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n            /**\n             * The configuration used to match this route.\n             */\n            get: function () { return this._futureSnapshot.routeConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n            /**\n             * The root of the router state.\n             */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n            /**\n             * The parent of this route in the router state tree.\n             */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n            /**\n             * The first child of this route in the router state tree.\n             */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n            /**\n             * The children of this route in the router state tree.\n             */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n            /**\n             * The path from the root of the router state tree to this route.\n             */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @docsNotRequired\n         */\n        ActivatedRoute.prototype.toString = function () {\n            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n        };\n        return ActivatedRoute;\n    }());\n    /**\n     * @internal\n     */\n    function inheritedParamsDataResolve(route) {\n        var pathToRoot = route.pathFromRoot;\n        var inhertingStartingFrom = pathToRoot.length - 1;\n        while (inhertingStartingFrom >= 1) {\n            var current = pathToRoot[inhertingStartingFrom];\n            var parent_1 = pathToRoot[inhertingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inhertingStartingFrom--;\n            }\n            else if (!parent_1.component) {\n                inhertingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n        return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n            var params = merge(res.params, curr.params);\n            var data = merge(res.data, curr.data);\n            var resolve = merge(res.resolve, curr._resolvedData);\n            return { params: params, data: data, resolve: resolve };\n        }, { params: {}, data: {}, resolve: {} });\n    }\n    /**\n     * @whatItDoes Contains the information about a route associated with a component loaded in an\n     * outlet\n     * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n     * state tree.\n     *\n     * @howToUse\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     * @stable\n     */\n    var ActivatedRouteSnapshot = (function () {\n        /**\n         * @internal\n         */\n        function ActivatedRouteSnapshot(\n            /**\n             *  The URL segments matched by this route.\n             */\n            url, \n            /**\n             * The matrix parameters scoped to this route.\n             */\n            params, \n            /**\n             * The query parameters shared by all the routes.\n             */\n            queryParams, \n            /**\n             * The URL fragment shared by all the routes.\n             */\n            fragment, \n            /**\n             * The static and resolved data of this route.\n             */\n            data, \n            /**\n             * The outlet name of the route.\n             */\n            outlet, \n            /**\n             * The component of the route.\n             */\n            component, routeConfig, urlSegment, lastPathIndex, resolve) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._routeConfig = routeConfig;\n            this._urlSegment = urlSegment;\n            this._lastPathIndex = lastPathIndex;\n            this._resolve = resolve;\n        }\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n            /**\n             * The configuration used to match this route.\n             */\n            get: function () { return this._routeConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n            /**\n             * The root of the router state.\n             */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n            /**\n             * The parent of this route in the router state tree.\n             */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n            /**\n             * The first child of this route in the router state tree.\n             */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n            /**\n             * The children of this route in the router state tree.\n             */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n            /**\n             * The path from the root of the router state tree to this route.\n             */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @docsNotRequired\n         */\n        ActivatedRouteSnapshot.prototype.toString = function () {\n            var url = this.url.map(function (s) { return s.toString(); }).join('/');\n            var matched = this._routeConfig ? this._routeConfig.path : '';\n            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n        };\n        return ActivatedRouteSnapshot;\n    }());\n    /**\n     * @whatItDoes Represents the state of the router at a moment in time.\n     *\n     * @howToUse\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * @description\n     * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * @stable\n     */\n    var RouterStateSnapshot = (function (_super) {\n        __extends$1(RouterStateSnapshot, _super);\n        /**\n         * @internal\n         */\n        function RouterStateSnapshot(\n            /** The url from which this snapshot was created */\n            url, root) {\n            _super.call(this, root);\n            this.url = url;\n            setRouterStateSnapshot(this, root);\n        }\n        RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n        return RouterStateSnapshot;\n    }(Tree));\n    function setRouterStateSnapshot(state, node) {\n        node.value._routerState = state;\n        node.children.forEach(function (c) { return setRouterStateSnapshot(state, c); });\n    }\n    function serializeNode(node) {\n        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n        return \"\" + node.value + c;\n    }\n    /**\n     * The expectation is that the activate route is created with the right set of parameters.\n     * So we push new values into the observables only when they are not the initial values.\n     * And we detect that by checking if the snapshot field is set.\n     */\n    function advanceActivatedRoute(route) {\n        if (route.snapshot) {\n            if (!shallowEqual(route.snapshot.queryParams, route._futureSnapshot.queryParams)) {\n                route.queryParams.next(route._futureSnapshot.queryParams);\n            }\n            if (route.snapshot.fragment !== route._futureSnapshot.fragment) {\n                route.fragment.next(route._futureSnapshot.fragment);\n            }\n            if (!shallowEqual(route.snapshot.params, route._futureSnapshot.params)) {\n                route.params.next(route._futureSnapshot.params);\n            }\n            if (!shallowEqualArrays(route.snapshot.url, route._futureSnapshot.url)) {\n                route.url.next(route._futureSnapshot.url);\n            }\n            if (!equalParamsAndUrlSegments(route.snapshot, route._futureSnapshot)) {\n                route.data.next(route._futureSnapshot.data);\n            }\n            route.snapshot = route._futureSnapshot;\n        }\n        else {\n            route.snapshot = route._futureSnapshot;\n            // this is for resolved data\n            route.data.next(route._futureSnapshot.data);\n        }\n    }\n    function equalParamsAndUrlSegments(a, b) {\n        return shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    }\n\n    function createRouterState(curr, prevState) {\n        var root = createNode(curr._root, prevState ? prevState._root : undefined);\n        return new RouterState(root, curr);\n    }\n    function createNode(curr, prevState) {\n        if (prevState && equalRouteSnapshots(prevState.value.snapshot, curr.value)) {\n            var value = prevState.value;\n            value._futureSnapshot = curr.value;\n            var children = createOrReuseChildren(curr, prevState);\n            return new TreeNode(value, children);\n        }\n        else {\n            var value = createActivatedRoute(curr.value);\n            var children = curr.children.map(function (c) { return createNode(c); });\n            return new TreeNode(value, children);\n        }\n    }\n    function createOrReuseChildren(curr, prevState) {\n        return curr.children.map(function (child) {\n            for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n                var p = _a[_i];\n                if (equalRouteSnapshots(p.value.snapshot, child.value)) {\n                    return createNode(child, p);\n                }\n            }\n            return createNode(child);\n        });\n    }\n    function createActivatedRoute(c) {\n        return new ActivatedRoute(new rxjs_BehaviorSubject.BehaviorSubject(c.url), new rxjs_BehaviorSubject.BehaviorSubject(c.params), new rxjs_BehaviorSubject.BehaviorSubject(c.queryParams), new rxjs_BehaviorSubject.BehaviorSubject(c.fragment), new rxjs_BehaviorSubject.BehaviorSubject(c.data), c.outlet, c.component, c);\n    }\n    function equalRouteSnapshots(a, b) {\n        return a._routeConfig === b._routeConfig;\n    }\n\n    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n        if (commands.length === 0) {\n            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n        }\n        var normalizedCommands = normalizeCommands(commands);\n        validateCommands(normalizedCommands);\n        if (navigateToRoot(normalizedCommands)) {\n            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n        }\n        var startingPosition = findStartingPosition(normalizedCommands, urlTree, route);\n        var segmentGroup = startingPosition.processChildren ?\n            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, normalizedCommands.commands) :\n            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, normalizedCommands.commands);\n        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n    }\n    function validateCommands(n) {\n        if (n.isAbsolute && n.commands.length > 0 && isMatrixParams(n.commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var c = n.commands.filter(function (c) { return typeof c === 'object' && c.outlets !== undefined; });\n        if (c.length > 0 && c[0] !== n.commands[n.commands.length - 1]) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    function isMatrixParams(command) {\n        return typeof command === 'object' && command.outlets === undefined &&\n            command.segmentPath === undefined;\n    }\n    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n        if (urlTree.root === oldSegmentGroup) {\n            return new UrlTree(newSegmentGroup, stringify(queryParams), fragment);\n        }\n        else {\n            return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), stringify(queryParams), fragment);\n        }\n    }\n    function replaceSegment(current, oldSegment, newSegment) {\n        var children = {};\n        forEach(current.children, function (c, outletName) {\n            if (c === oldSegment) {\n                children[outletName] = newSegment;\n            }\n            else {\n                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n            }\n        });\n        return new UrlSegmentGroup(current.segments, children);\n    }\n    function navigateToRoot(normalizedChange) {\n        return normalizedChange.isAbsolute && normalizedChange.commands.length === 1 &&\n            normalizedChange.commands[0] == '/';\n    }\n    var NormalizedNavigationCommands = (function () {\n        function NormalizedNavigationCommands(isAbsolute, numberOfDoubleDots, commands) {\n            this.isAbsolute = isAbsolute;\n            this.numberOfDoubleDots = numberOfDoubleDots;\n            this.commands = commands;\n        }\n        return NormalizedNavigationCommands;\n    }());\n    function normalizeCommands(commands) {\n        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] == '/') {\n            return new NormalizedNavigationCommands(true, 0, commands);\n        }\n        var numberOfDoubleDots = 0;\n        var isAbsolute = false;\n        var res = [];\n        var _loop_1 = function(i) {\n            var c = commands[i];\n            if (typeof c === 'object' && c.outlets !== undefined) {\n                var r_1 = {};\n                forEach(c.outlets, function (commands, name) {\n                    if (typeof commands === 'string') {\n                        r_1[name] = commands.split('/');\n                    }\n                    else {\n                        r_1[name] = commands;\n                    }\n                });\n                res.push({ outlets: r_1 });\n                return \"continue\";\n            }\n            if (typeof c === 'object' && c.segmentPath !== undefined) {\n                res.push(c.segmentPath);\n                return \"continue\";\n            }\n            if (!(typeof c === 'string')) {\n                res.push(c);\n                return \"continue\";\n            }\n            if (i === 0) {\n                var parts = c.split('/');\n                for (var j = 0; j < parts.length; ++j) {\n                    var cc = parts[j];\n                    if (j == 0 && cc == '.') {\n                    }\n                    else if (j == 0 && cc == '') {\n                        isAbsolute = true;\n                    }\n                    else if (cc == '..') {\n                        numberOfDoubleDots++;\n                    }\n                    else if (cc != '') {\n                        res.push(cc);\n                    }\n                }\n            }\n            else {\n                res.push(c);\n            }\n        };\n        for (var i = 0; i < commands.length; ++i) {\n            _loop_1(i);\n        }\n        return new NormalizedNavigationCommands(isAbsolute, numberOfDoubleDots, res);\n    }\n    var Position = (function () {\n        function Position(segmentGroup, processChildren, index) {\n            this.segmentGroup = segmentGroup;\n            this.processChildren = processChildren;\n            this.index = index;\n        }\n        return Position;\n    }());\n    function findStartingPosition(normalizedChange, urlTree, route) {\n        if (normalizedChange.isAbsolute) {\n            return new Position(urlTree.root, true, 0);\n        }\n        else if (route.snapshot._lastPathIndex === -1) {\n            return new Position(route.snapshot._urlSegment, true, 0);\n        }\n        else {\n            var modifier = isMatrixParams(normalizedChange.commands[0]) ? 0 : 1;\n            var index = route.snapshot._lastPathIndex + modifier;\n            return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, normalizedChange.numberOfDoubleDots);\n        }\n    }\n    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n        var g = group;\n        var ci = index;\n        var dd = numberOfDoubleDots;\n        while (dd > ci) {\n            dd -= ci;\n            g = g.parent;\n            if (!g) {\n                throw new Error('Invalid number of \\'../\\'');\n            }\n            ci = g.segments.length;\n        }\n        return new Position(g, false, ci - dd);\n    }\n    function getPath(command) {\n        if (typeof command === 'object' && command.outlets)\n            return command.outlets[PRIMARY_OUTLET];\n        return \"\" + command;\n    }\n    function getOutlets(commands) {\n        if (!(typeof commands[0] === 'object'))\n            return (_a = {}, _a[PRIMARY_OUTLET] = commands, _a);\n        if (commands[0].outlets === undefined)\n            return (_b = {}, _b[PRIMARY_OUTLET] = commands, _b);\n        return commands[0].outlets;\n        var _a, _b;\n    }\n    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n        if (!segmentGroup) {\n            segmentGroup = new UrlSegmentGroup([], {});\n        }\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n        }\n        var m = prefixedWith(segmentGroup, startIndex, commands);\n        var slicedCommands = commands.slice(m.commandIndex);\n        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n            g.children[PRIMARY_OUTLET] =\n                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n            return updateSegmentGroupChildren(g, 0, slicedCommands);\n        }\n        else if (m.match && slicedCommands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else if (m.match && !segmentGroup.hasChildren()) {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n        else if (m.match) {\n            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n        }\n        else {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n    }\n    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n        if (commands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else {\n            var outlets_1 = getOutlets(commands);\n            var children_1 = {};\n            forEach(outlets_1, function (commands, outlet) {\n                if (commands !== null) {\n                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n                }\n            });\n            forEach(segmentGroup.children, function (child, childOutlet) {\n                if (outlets_1[childOutlet] === undefined) {\n                    children_1[childOutlet] = child;\n                }\n            });\n            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n        }\n    }\n    function prefixedWith(segmentGroup, startIndex, commands) {\n        var currentCommandIndex = 0;\n        var currentPathIndex = startIndex;\n        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n        while (currentPathIndex < segmentGroup.segments.length) {\n            if (currentCommandIndex >= commands.length)\n                return noMatch;\n            var path = segmentGroup.segments[currentPathIndex];\n            var curr = getPath(commands[currentCommandIndex]);\n            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n            if (currentPathIndex > 0 && curr === undefined)\n                break;\n            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n                if (!compare(curr, next, path))\n                    return noMatch;\n                currentCommandIndex += 2;\n            }\n            else {\n                if (!compare(curr, {}, path))\n                    return noMatch;\n                currentCommandIndex++;\n            }\n            currentPathIndex++;\n        }\n        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n    }\n    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n        var paths = segmentGroup.segments.slice(0, startIndex);\n        var i = 0;\n        while (i < commands.length) {\n            if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n                var children = createNewSegmentChldren(commands[i].outlets);\n                return new UrlSegmentGroup(paths, children);\n            }\n            // if we start with an object literal, we need to reuse the path part from the segment\n            if (i === 0 && isMatrixParams(commands[0])) {\n                var p = segmentGroup.segments[startIndex];\n                paths.push(new UrlSegment(p.path, commands[0]));\n                i++;\n                continue;\n            }\n            var curr = getPath(commands[i]);\n            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n            if (curr && next && isMatrixParams(next)) {\n                paths.push(new UrlSegment(curr, stringify(next)));\n                i += 2;\n            }\n            else {\n                paths.push(new UrlSegment(curr, {}));\n                i++;\n            }\n        }\n        return new UrlSegmentGroup(paths, {});\n    }\n    function createNewSegmentChldren(outlets) {\n        var children = {};\n        forEach(outlets, function (commands, outlet) {\n            if (commands !== null) {\n                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n            }\n        });\n        return children;\n    }\n    function stringify(params) {\n        var res = {};\n        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n        return res;\n    }\n    function compare(path, params, segment) {\n        return path == segment.path && shallowEqual(params, segment.parameters);\n    }\n\n    var NoMatch$1 = (function () {\n        function NoMatch() {\n        }\n        return NoMatch;\n    }());\n    function recognize(rootComponentType, config, urlTree, url) {\n        return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n    }\n    var Recognizer = (function () {\n        function Recognizer(rootComponentType, config, urlTree, url) {\n            this.rootComponentType = rootComponentType;\n            this.config = config;\n            this.urlTree = urlTree;\n            this.url = url;\n        }\n        Recognizer.prototype.recognize = function () {\n            try {\n                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n                var rootNode = new TreeNode(root, children);\n                var routeState = new RouterStateSnapshot(this.url, rootNode);\n                this.inheriteParamsAndData(routeState._root);\n                return rxjs_observable_of.of(routeState);\n            }\n            catch (e) {\n                return new rxjs_Observable.Observable(function (obs) { return obs.error(e); });\n            }\n        };\n        Recognizer.prototype.inheriteParamsAndData = function (routeNode) {\n            var _this = this;\n            var route = routeNode.value;\n            var i = inheritedParamsDataResolve(route);\n            route.params = Object.freeze(i.params);\n            route.data = Object.freeze(i.data);\n            routeNode.children.forEach(function (n) { return _this.inheriteParamsAndData(n); });\n        };\n        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.processChildren(config, segmentGroup);\n            }\n            else {\n                return this.processSegment(config, segmentGroup, 0, segmentGroup.segments, outlet);\n            }\n        };\n        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n            var _this = this;\n            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n            checkOutletNameUniqueness(children);\n            sortActivatedRouteSnapshots(children);\n            return children;\n        };\n        Recognizer.prototype.processSegment = function (config, segmentGroup, pathIndex, segments, outlet) {\n            for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n                var r = config_1[_i];\n                try {\n                    return this.processSegmentAgainstRoute(r, segmentGroup, pathIndex, segments, outlet);\n                }\n                catch (e) {\n                    if (!(e instanceof NoMatch$1))\n                        throw e;\n                }\n            }\n            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                return [];\n            }\n            else {\n                throw new NoMatch$1();\n            }\n        };\n        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, pathIndex, segments, outlet) {\n            if (route.redirectTo)\n                throw new NoMatch$1();\n            if ((route.outlet ? route.outlet : PRIMARY_OUTLET) !== outlet)\n                throw new NoMatch$1();\n            if (route.path === '**') {\n                var params = segments.length > 0 ? last(segments).parameters : {};\n                var snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n                return [new TreeNode(snapshot_1, [])];\n            }\n            var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n            var rawSlicedSegments = segments.slice(lastChild);\n            var childConfig = getChildConfig(route);\n            var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n            var snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var children = this.processChildren(childConfig, segmentGroup);\n                return [new TreeNode(snapshot, children)];\n            }\n            else if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return [new TreeNode(snapshot, [])];\n            }\n            else {\n                var children = this.processSegment(childConfig, segmentGroup, pathIndex + lastChild, slicedSegments, PRIMARY_OUTLET);\n                return [new TreeNode(snapshot, children)];\n            }\n        };\n        return Recognizer;\n    }());\n    function sortActivatedRouteSnapshots(nodes) {\n        nodes.sort(function (a, b) {\n            if (a.value.outlet === PRIMARY_OUTLET)\n                return -1;\n            if (b.value.outlet === PRIMARY_OUTLET)\n                return 1;\n            return a.value.outlet.localeCompare(b.value.outlet);\n        });\n    }\n    function getChildConfig(route) {\n        if (route.children) {\n            return route.children;\n        }\n        else if (route.loadChildren) {\n            return route._loadedConfig.routes;\n        }\n        else {\n            return [];\n        }\n    }\n    function match$1(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n                throw new NoMatch$1();\n            }\n            else {\n                return { consumedSegments: [], lastChild: 0, parameters: {} };\n            }\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            throw new NoMatch$1();\n        var posParams = {};\n        forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n        var parameters = merge(posParams, res.consumed[res.consumed.length - 1].parameters);\n        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n    }\n    function checkOutletNameUniqueness(nodes) {\n        var names = {};\n        nodes.forEach(function (n) {\n            var routeWithSameOutletName = names[n.value.outlet];\n            if (routeWithSameOutletName) {\n                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n            }\n            names[n.value.outlet] = n.value;\n        });\n    }\n    function getSourceSegmentGroup(segmentGroup) {\n        var s = segmentGroup;\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n        }\n        return s;\n    }\n    function getPathIndexShift(segmentGroup) {\n        var s = segmentGroup;\n        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        }\n        return res - 1;\n    }\n    function split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s, slicedSegments: [] };\n        }\n        else if (slicedSegments.length === 0 &&\n            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s, slicedSegments: slicedSegments };\n        }\n        else {\n            var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s, slicedSegments: slicedSegments };\n        }\n    }\n    function addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var res = {};\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var r = routes_1[_i];\n            if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$2(r)]) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = segmentGroup.segments.length;\n                res[getOutlet$2(r)] = s;\n            }\n        }\n        return merge(children, res);\n    }\n    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegment;\n        primarySegment._sourceSegment = segmentGroup;\n        primarySegment._segmentIndexShift = consumedSegments.length;\n        for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n            var r = routes_2[_i];\n            if (r.path === '' && getOutlet$2(r) !== PRIMARY_OUTLET) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = consumedSegments.length;\n                res[getOutlet$2(r)] = s;\n            }\n        }\n        return res;\n    }\n    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes\n            .filter(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) &&\n            getOutlet$2(r) !== PRIMARY_OUTLET; })\n            .length > 0;\n    }\n    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n        return routes.filter(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); }).length > 0;\n    }\n    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full')\n            return false;\n        return r.path === '' && r.redirectTo === undefined;\n    }\n    function getOutlet$2(route) {\n        return route.outlet ? route.outlet : PRIMARY_OUTLET;\n    }\n    function getData(route) {\n        return route.data ? route.data : {};\n    }\n    function getResolve(route) {\n        return route.resolve ? route.resolve : {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Contains all the router outlets created in a component.\n     *\n     * @stable\n     */\n    var RouterOutletMap = (function () {\n        function RouterOutletMap() {\n            /** @internal */\n            this._outlets = {};\n        }\n        /**\n         * Adds an outlet to this map.\n         */\n        RouterOutletMap.prototype.registerOutlet = function (name, outlet) { this._outlets[name] = outlet; };\n        /**\n         * Removes an outlet from this map.\n         */\n        RouterOutletMap.prototype.removeOutlet = function (name) { this._outlets[name] = undefined; };\n        return RouterOutletMap;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Provides a way to migrate Angular 1 applications to Angular 2.\n     *\n     * @experimental\n     */\n    var UrlHandlingStrategy = (function () {\n        function UrlHandlingStrategy() {\n        }\n        return UrlHandlingStrategy;\n    }());\n    /**\n     * @experimental\n     */\n    var DefaultUrlHandlingStrategy = (function () {\n        function DefaultUrlHandlingStrategy() {\n        }\n        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n        DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n        return DefaultUrlHandlingStrategy;\n    }());\n\n    /**\n     * @whatItDoes Represents an event triggered when a navigation starts.\n     *\n     * @stable\n     */\n    var NavigationStart = (function () {\n        // TODO: vsavkin: make internal\n        function NavigationStart(\n            /** @docsNotRequired */\n            id, \n            /** @docsNotRequired */\n            url) {\n            this.id = id;\n            this.url = url;\n        }\n        /** @docsNotRequired */\n        NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationStart;\n    }());\n    /**\n     * @whatItDoes Represents an event triggered when a navigation ends successfully.\n     *\n     * @stable\n     */\n    var NavigationEnd = (function () {\n        // TODO: vsavkin: make internal\n        function NavigationEnd(\n            /** @docsNotRequired */\n            id, \n            /** @docsNotRequired */\n            url, \n            /** @docsNotRequired */\n            urlAfterRedirects) {\n            this.id = id;\n            this.url = url;\n            this.urlAfterRedirects = urlAfterRedirects;\n        }\n        /** @docsNotRequired */\n        NavigationEnd.prototype.toString = function () {\n            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n        };\n        return NavigationEnd;\n    }());\n    /**\n     * @whatItDoes Represents an event triggered when a navigation is canceled.\n     *\n     * @stable\n     */\n    var NavigationCancel = (function () {\n        // TODO: vsavkin: make internal\n        function NavigationCancel(\n            /** @docsNotRequired */\n            id, \n            /** @docsNotRequired */\n            url, \n            /** @docsNotRequired */\n            reason) {\n            this.id = id;\n            this.url = url;\n            this.reason = reason;\n        }\n        /** @docsNotRequired */\n        NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationCancel;\n    }());\n    /**\n     * @whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n     *\n     * @stable\n     */\n    var NavigationError = (function () {\n        // TODO: vsavkin: make internal\n        function NavigationError(\n            /** @docsNotRequired */\n            id, \n            /** @docsNotRequired */\n            url, \n            /** @docsNotRequired */\n            error) {\n            this.id = id;\n            this.url = url;\n            this.error = error;\n        }\n        /** @docsNotRequired */\n        NavigationError.prototype.toString = function () {\n            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n        };\n        return NavigationError;\n    }());\n    /**\n     * @whatItDoes Represents an event triggered when routes are recognized.\n     *\n     * @stable\n     */\n    var RoutesRecognized = (function () {\n        // TODO: vsavkin: make internal\n        function RoutesRecognized(\n            /** @docsNotRequired */\n            id, \n            /** @docsNotRequired */\n            url, \n            /** @docsNotRequired */\n            urlAfterRedirects, \n            /** @docsNotRequired */\n            state) {\n            this.id = id;\n            this.url = url;\n            this.urlAfterRedirects = urlAfterRedirects;\n            this.state = state;\n        }\n        /** @docsNotRequired */\n        RoutesRecognized.prototype.toString = function () {\n            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return RoutesRecognized;\n    }());\n    function defaultErrorHandler(error) {\n        throw error;\n    }\n    /**\n     * @whatItDoes Provides the navigation and url manipulation capabilities.\n     *\n     * See {@link Routes} for more details and examples.\n     *\n     * @ngModule RouterModule\n     *\n     * @stable\n     */\n    var Router = (function () {\n        /**\n         * Creates the router service.\n         */\n        // TODO: vsavkin make internal after the final is out.\n        function Router(rootComponentType, urlSerializer, outletMap, location, injector, loader, compiler, config) {\n            this.rootComponentType = rootComponentType;\n            this.urlSerializer = urlSerializer;\n            this.outletMap = outletMap;\n            this.location = location;\n            this.injector = injector;\n            this.config = config;\n            this.navigations = new rxjs_BehaviorSubject.BehaviorSubject(null);\n            this.routerEvents = new rxjs_Subject.Subject();\n            this.navigationId = 0;\n            /**\n             * Error handler that is invoked when a navigation errors.\n             *\n             * See {@link ErrorHandler} for more information.\n             */\n            this.errorHandler = defaultErrorHandler;\n            /**\n             * Indicates if at least one navigation happened.\n             */\n            this.navigated = false;\n            /**\n             * Extracts and merges URLs. Used for Angular 1 to Angular 2 migrations.\n             */\n            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n            this.resetConfig(config);\n            this.currentUrlTree = createEmptyUrlTree();\n            this.rawUrlTree = this.currentUrlTree;\n            this.configLoader = new RouterConfigLoader(loader, compiler);\n            this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n            this.processNavigations();\n        }\n        /**\n         * @internal\n         * TODO: this should be removed once the constructor of the router made internal\n         */\n        Router.prototype.resetRootComponentType = function (rootComponentType) {\n            this.rootComponentType = rootComponentType;\n            // TODO: vsavkin router 4.0 should make the root component set to null\n            // this will simplify the lifecycle of the router.\n            this.currentRouterState.root.component = this.rootComponentType;\n        };\n        /**\n         * Sets up the location change listener and performs the initial navigation.\n         */\n        Router.prototype.initialNavigation = function () {\n            this.setUpLocationChangeListener();\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        };\n        /**\n         * Sets up the location change listener.\n         */\n        Router.prototype.setUpLocationChangeListener = function () {\n            var _this = this;\n            // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n            // which does not work properly with zone.js in IE and Safari\n            this.locationSubscription = this.location.subscribe(Zone.current.wrap(function (change) {\n                var rawUrlTree = _this.urlSerializer.parse(change['url']);\n                setTimeout(function () {\n                    _this.scheduleNavigation(rawUrlTree, { skipLocationChange: change['pop'], replaceUrl: true });\n                }, 0);\n            }));\n        };\n        Object.defineProperty(Router.prototype, \"routerState\", {\n            /**\n             * Returns the current route state.\n             */\n            get: function () { return this.currentRouterState; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Router.prototype, \"url\", {\n            /**\n             * Returns the current url.\n             */\n            get: function () { return this.serializeUrl(this.currentUrlTree); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Router.prototype, \"events\", {\n            /**\n             * Returns an observable of route events\n             */\n            get: function () { return this.routerEvents; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Resets the configuration used for navigation and generating links.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.resetConfig([\n         *  { path: 'team/:id', component: TeamCmp, children: [\n         *    { path: 'simple', component: SimpleCmp },\n         *    { path: 'user/:name', component: UserCmp }\n         *  ] }\n         * ]);\n         * ```\n         */\n        Router.prototype.resetConfig = function (config) {\n            validateConfig(config);\n            this.config = config;\n        };\n        /**\n         * @docsNotRequired\n         */\n        Router.prototype.ngOnDestroy = function () { this.dispose(); };\n        /**\n         * Disposes of the router.\n         */\n        Router.prototype.dispose = function () { this.locationSubscription.unsubscribe(); };\n        /**\n         * Applies an array of commands to the current url tree and creates a new url tree.\n         *\n         * When given an activate route, applies the given commands starting from the route.\n         * When not given a route, applies the given command starting from the root.\n         *\n         * ### Usage\n         *\n         * ```\n         * // create /team/33/user/11\n         * router.createUrlTree(['/team', 33, 'user', 11]);\n         *\n         * // create /team/33;expand=true/user/11\n         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n         *\n         * // you can collapse static segments like this (this works only with the first passed-in value):\n         * router.createUrlTree(['/team/33/user', userId]);\n         *\n         * // If the first segment can contain slashes, and you do not want the router to split it, you\n         * // can do the following:\n         *\n         * router.createUrlTree([{segmentPath: '/one/two'}]);\n         *\n         * // create /team/33/(user/11//right:chat)\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n         *\n         * // remove the right secondary node\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n         *\n         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n         *\n         * // navigate to /team/33/user/11/details\n         * router.createUrlTree(['details'], {relativeTo: route});\n         *\n         * // navigate to /team/33/user/22\n         * router.createUrlTree(['../22'], {relativeTo: route});\n         *\n         * // navigate to /team/44/user/22\n         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n         * ```\n         */\n        Router.prototype.createUrlTree = function (commands, _a) {\n            var _b = _a === void 0 ? {} : _a, relativeTo = _b.relativeTo, queryParams = _b.queryParams, fragment = _b.fragment, preserveQueryParams = _b.preserveQueryParams, preserveFragment = _b.preserveFragment;\n            var a = relativeTo ? relativeTo : this.routerState.root;\n            var q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams;\n            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n            return createUrlTree(a, this.currentUrlTree, commands, q, f);\n        };\n        /**\n         * Navigate based on the provided url. This navigation is always absolute.\n         *\n         * Returns a promise that:\n         * - is resolved with 'true' when navigation succeeds\n         * - is resolved with 'false' when navigation fails\n         * - is rejected when an error happens\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigateByUrl(\"/team/33/user/11\");\n         *\n         * // Navigate without updating the URL\n         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n         * ```\n         *\n         * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n         * and does not apply any delta to the current one.\n         */\n        Router.prototype.navigateByUrl = function (url, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            if (url instanceof UrlTree) {\n                return this.scheduleNavigation(this.urlHandlingStrategy.merge(url, this.rawUrlTree), extras);\n            }\n            else {\n                var urlTree = this.urlSerializer.parse(url);\n                return this.scheduleNavigation(this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree), extras);\n            }\n        };\n        /**\n         * Navigate based on the provided array of commands and a starting point.\n         * If no starting route is provided, the navigation is absolute.\n         *\n         * Returns a promise that:\n         * - is resolved with 'true' when navigation succeeds\n         * - is resolved with 'false' when navigation fails\n         * - is rejected when an error happens\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n         *\n         * // Navigate without updating the URL\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true });\n         * ```\n         *\n         * In opposite to `navigateByUrl`, `navigate` always takes a delta\n         * that is applied to the current URL.\n         */\n        Router.prototype.navigate = function (commands, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n                extras.queryParams = this.removeEmptyProps(extras.queryParams);\n            }\n            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n        };\n        /**\n         * Serializes a {@link UrlTree} into a string.\n         */\n        Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n        /**\n         * Parses a string into a {@link UrlTree}.\n         */\n        Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n        /**\n         * Returns if the url is activated or not.\n         */\n        Router.prototype.isActive = function (url, exact) {\n            if (url instanceof UrlTree) {\n                return containsTree(this.currentUrlTree, url, exact);\n            }\n            else {\n                var urlTree = this.urlSerializer.parse(url);\n                return containsTree(this.currentUrlTree, urlTree, exact);\n            }\n        };\n        Router.prototype.removeEmptyProps = function (params) {\n            return Object.keys(params).reduce(function (result, key) {\n                var value = params[key];\n                if (value !== null && value !== undefined) {\n                    result[key] = value;\n                }\n                return result;\n            }, {});\n        };\n        Router.prototype.processNavigations = function () {\n            var _this = this;\n            rxjs_operator_concatMap.concatMap\n                .call(this.navigations, function (nav) {\n                if (nav) {\n                    _this.executeScheduledNavigation(nav);\n                    // a failed navigation should not stop the router from processing\n                    // further navigations => the catch\n                    return nav.promise.catch(function () { });\n                }\n                else {\n                    return rxjs_observable_of.of(null);\n                }\n            })\n                .subscribe(function () { });\n        };\n        Router.prototype.scheduleNavigation = function (rawUrl, extras) {\n            var prevRawUrl = this.navigations.value ? this.navigations.value.rawUrl : null;\n            if (prevRawUrl && prevRawUrl.toString() === rawUrl.toString()) {\n                return this.navigations.value.promise;\n            }\n            var resolve = null;\n            var reject = null;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var id = ++this.navigationId;\n            this.navigations.next({ id: id, rawUrl: rawUrl, prevRawUrl: prevRawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n            // Make sure that the error is propagated even though `processNavigations` catch\n            // handler does not rethrow\n            return promise.catch(function (e) { return Promise.reject(e); });\n        };\n        Router.prototype.executeScheduledNavigation = function (_a) {\n            var _this = this;\n            var id = _a.id, rawUrl = _a.rawUrl, prevRawUrl = _a.prevRawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n            var url = this.urlHandlingStrategy.extract(rawUrl);\n            var prevUrl = prevRawUrl ? this.urlHandlingStrategy.extract(prevRawUrl) : null;\n            var urlTransition = !prevUrl || url.toString() !== prevUrl.toString();\n            if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n                this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, extras.skipLocationChange, extras.replaceUrl, id, null); })\n                    .then(resolve, reject);\n            }\n            else if (urlTransition && prevRawUrl && this.urlHandlingStrategy.shouldProcessUrl(prevRawUrl)) {\n                this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                    .then(resolve, reject);\n            }\n            else {\n                this.rawUrlTree = rawUrl;\n                resolve(null);\n            }\n        };\n        Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n            var _this = this;\n            if (id !== this.navigationId) {\n                this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n                this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n                return Promise.resolve(false);\n            }\n            return new Promise(function (resolvePromise, rejectPromise) {\n                // create an observable of the url and route state snapshot\n                // this operation do not result in any side effects\n                var urlAndSnapshot$;\n                if (!precreatedState) {\n                    var redirectsApplied$ = applyRedirects(_this.injector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                    urlAndSnapshot$ = rxjs_operator_mergeMap.mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                        return rxjs_operator_map.map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                            _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                            return { appliedUrl: appliedUrl, snapshot: snapshot };\n                        });\n                    });\n                }\n                else {\n                    urlAndSnapshot$ = rxjs_observable_of.of({ appliedUrl: url, snapshot: precreatedState });\n                }\n                // run preactivation: guards and data resolvers\n                var preActivation;\n                var preactivationTraverse$ = rxjs_operator_map.map.call(urlAndSnapshot$, function (_a) {\n                    var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                    preActivation =\n                        new PreActivation(snapshot, _this.currentRouterState.snapshot, _this.injector);\n                    preActivation.traverse(_this.outletMap);\n                    return { appliedUrl: appliedUrl, snapshot: snapshot };\n                });\n                var preactivationCheckGuards = rxjs_operator_mergeMap.mergeMap.call(preactivationTraverse$, function (_a) {\n                    var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                    if (_this.navigationId !== id)\n                        return rxjs_observable_of.of(false);\n                    return rxjs_operator_map.map.call(preActivation.checkGuards(), function (shouldActivate) {\n                        return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                    });\n                });\n                var preactivationResolveData$ = rxjs_operator_mergeMap.mergeMap.call(preactivationCheckGuards, function (p) {\n                    if (_this.navigationId !== id)\n                        return rxjs_observable_of.of(false);\n                    if (p.shouldActivate) {\n                        return rxjs_operator_map.map.call(preActivation.resolveData(), function () { return p; });\n                    }\n                    else {\n                        return rxjs_observable_of.of(p);\n                    }\n                });\n                // create router state\n                // this operation has side effects => route state is being affected\n                var routerState$ = rxjs_operator_map.map.call(preactivationResolveData$, function (_a) {\n                    var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                    if (shouldActivate) {\n                        var state = createRouterState(snapshot, _this.currentRouterState);\n                        return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                    }\n                    else {\n                        return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                    }\n                });\n                // applied the new router state\n                // this operation has side effects\n                var navigationIsSuccessful;\n                var storedState = _this.currentRouterState;\n                var storedUrl = _this.currentUrlTree;\n                routerState$\n                    .forEach(function (_a) {\n                    var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                    if (!shouldActivate || id !== _this.navigationId) {\n                        navigationIsSuccessful = false;\n                        return;\n                    }\n                    _this.currentUrlTree = appliedUrl;\n                    _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                    _this.currentRouterState = state;\n                    if (!shouldPreventPushState) {\n                        var path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                        if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                            _this.location.replaceState(path);\n                        }\n                        else {\n                            _this.location.go(path);\n                        }\n                    }\n                    new ActivateRoutes(state, storedState).activate(_this.outletMap);\n                    navigationIsSuccessful = true;\n                })\n                    .then(function () {\n                    _this.navigated = true;\n                    if (navigationIsSuccessful) {\n                        _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                        resolvePromise(true);\n                    }\n                    else {\n                        _this.resetUrlToCurrentUrlTree();\n                        _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                        resolvePromise(false);\n                    }\n                }, function (e) {\n                    if (e instanceof NavigationCancelingError) {\n                        _this.resetUrlToCurrentUrlTree();\n                        _this.navigated = true;\n                        _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                        resolvePromise(false);\n                    }\n                    else {\n                        _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                        try {\n                            resolvePromise(_this.errorHandler(e));\n                        }\n                        catch (ee) {\n                            rejectPromise(ee);\n                        }\n                    }\n                    _this.currentRouterState = storedState;\n                    _this.currentUrlTree = storedUrl;\n                    _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                    _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n                });\n            });\n        };\n        Router.prototype.resetUrlToCurrentUrlTree = function () {\n            var path = this.urlSerializer.serialize(this.rawUrlTree);\n            this.location.replaceState(path);\n        };\n        return Router;\n    }());\n    var CanActivate = (function () {\n        function CanActivate(path) {\n            this.path = path;\n        }\n        Object.defineProperty(CanActivate.prototype, \"route\", {\n            get: function () { return this.path[this.path.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        return CanActivate;\n    }());\n    var CanDeactivate = (function () {\n        function CanDeactivate(component, route) {\n            this.component = component;\n            this.route = route;\n        }\n        return CanDeactivate;\n    }());\n    var PreActivation = (function () {\n        function PreActivation(future, curr, injector) {\n            this.future = future;\n            this.curr = curr;\n            this.injector = injector;\n            this.checks = [];\n        }\n        PreActivation.prototype.traverse = function (parentOutletMap) {\n            var futureRoot = this.future._root;\n            var currRoot = this.curr ? this.curr._root : null;\n            this.traverseChildRoutes(futureRoot, currRoot, parentOutletMap, [futureRoot.value]);\n        };\n        PreActivation.prototype.checkGuards = function () {\n            var _this = this;\n            if (this.checks.length === 0)\n                return rxjs_observable_of.of(true);\n            var checks$ = rxjs_observable_from.from(this.checks);\n            var runningChecks$ = rxjs_operator_mergeMap.mergeMap.call(checks$, function (s) {\n                if (s instanceof CanActivate) {\n                    return andObservables(rxjs_observable_from.from([_this.runCanActivateChild(s.path), _this.runCanActivate(s.route)]));\n                }\n                else if (s instanceof CanDeactivate) {\n                    // workaround https://github.com/Microsoft/TypeScript/issues/7271\n                    var s2 = s;\n                    return _this.runCanDeactivate(s2.component, s2.route);\n                }\n                else {\n                    throw new Error('Cannot be reached');\n                }\n            });\n            return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n        };\n        PreActivation.prototype.resolveData = function () {\n            var _this = this;\n            if (this.checks.length === 0)\n                return rxjs_observable_of.of(null);\n            var checks$ = rxjs_observable_from.from(this.checks);\n            var runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (s) {\n                if (s instanceof CanActivate) {\n                    return _this.runResolve(s.route);\n                }\n                else {\n                    return rxjs_observable_of.of(null);\n                }\n            });\n            return rxjs_operator_reduce.reduce.call(runningChecks$, function (_, __) { return _; });\n        };\n        PreActivation.prototype.traverseChildRoutes = function (futureNode, currNode, outletMap, futurePath) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.traverseRoutes(c, prevChildren[c.value.outlet], outletMap, futurePath.concat([c.value]));\n                delete prevChildren[c.value.outlet];\n            });\n            forEach(prevChildren, function (v, k) { return _this.deactiveRouteAndItsChildren(v, outletMap._outlets[k]); });\n        };\n        PreActivation.prototype.traverseRoutes = function (futureNode, currNode, parentOutletMap, futurePath) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            var outlet = parentOutletMap ? parentOutletMap._outlets[futureNode.value.outlet] : null;\n            // reusing the node\n            if (curr && future._routeConfig === curr._routeConfig) {\n                if (!equalParamsAndUrlSegments(future, curr)) {\n                    this.checks.push(new CanDeactivate(outlet.component, curr), new CanActivate(futurePath));\n                }\n                else {\n                    // we need to set the data\n                    future.data = curr.data;\n                    future._resolvedData = curr._resolvedData;\n                }\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.traverseChildRoutes(futureNode, currNode, outlet ? outlet.outletMap : null, futurePath);\n                }\n                else {\n                    this.traverseChildRoutes(futureNode, currNode, parentOutletMap, futurePath);\n                }\n            }\n            else {\n                if (curr) {\n                    this.deactiveRouteAndItsChildren(currNode, outlet);\n                }\n                this.checks.push(new CanActivate(futurePath));\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.traverseChildRoutes(futureNode, null, outlet ? outlet.outletMap : null, futurePath);\n                }\n                else {\n                    this.traverseChildRoutes(futureNode, null, parentOutletMap, futurePath);\n                }\n            }\n        };\n        PreActivation.prototype.deactiveRouteAndItsChildren = function (route, outlet) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(route);\n            var r = route.value;\n            forEach(prevChildren, function (v, k) {\n                if (!r.component) {\n                    _this.deactiveRouteAndItsChildren(v, outlet);\n                }\n                else if (!!outlet) {\n                    _this.deactiveRouteAndItsChildren(v, outlet.outletMap._outlets[k]);\n                }\n                else {\n                    _this.deactiveRouteAndItsChildren(v, null);\n                }\n            });\n            if (!r.component) {\n                this.checks.push(new CanDeactivate(null, r));\n            }\n            else if (outlet && outlet.isActivated) {\n                this.checks.push(new CanDeactivate(outlet.component, r));\n            }\n            else {\n                this.checks.push(new CanDeactivate(null, r));\n            }\n        };\n        PreActivation.prototype.runCanActivate = function (future) {\n            var _this = this;\n            var canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n            if (!canActivate || canActivate.length === 0)\n                return rxjs_observable_of.of(true);\n            var obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canActivate), function (c) {\n                var guard = _this.getToken(c, future);\n                var observable;\n                if (guard.canActivate) {\n                    observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return rxjs_operator_first.first.call(observable);\n            });\n            return andObservables(obs);\n        };\n        PreActivation.prototype.runCanActivateChild = function (path) {\n            var _this = this;\n            var future = path[path.length - 1];\n            var canActivateChildGuards = path.slice(0, path.length - 1)\n                .reverse()\n                .map(function (p) { return _this.extractCanActivateChild(p); })\n                .filter(function (_) { return _ !== null; });\n            return andObservables(rxjs_operator_map.map.call(rxjs_observable_from.from(canActivateChildGuards), function (d) {\n                var obs = rxjs_operator_map.map.call(rxjs_observable_from.from(d.guards), function (c) {\n                    var guard = _this.getToken(c, c.node);\n                    var observable;\n                    if (guard.canActivateChild) {\n                        observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                    }\n                    else {\n                        observable = wrapIntoObservable(guard(future, _this.future));\n                    }\n                    return rxjs_operator_first.first.call(observable);\n                });\n                return andObservables(obs);\n            }));\n        };\n        PreActivation.prototype.extractCanActivateChild = function (p) {\n            var canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n            if (!canActivateChild || canActivateChild.length === 0)\n                return null;\n            return { node: p, guards: canActivateChild };\n        };\n        PreActivation.prototype.runCanDeactivate = function (component, curr) {\n            var _this = this;\n            var canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n            if (!canDeactivate || canDeactivate.length === 0)\n                return rxjs_observable_of.of(true);\n            var canDeactivate$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(canDeactivate), function (c) {\n                var guard = _this.getToken(c, curr);\n                var observable;\n                if (guard.canDeactivate) {\n                    observable = wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(component, curr, _this.curr));\n                }\n                return rxjs_operator_first.first.call(observable);\n            });\n            return rxjs_operator_every.every.call(canDeactivate$, function (result) { return result === true; });\n        };\n        PreActivation.prototype.runResolve = function (future) {\n            var resolve = future._resolve;\n            return rxjs_operator_map.map.call(this.resolveNode(resolve, future), function (resolvedData) {\n                future._resolvedData = resolvedData;\n                future.data = merge(future.data, inheritedParamsDataResolve(future).resolve);\n                return null;\n            });\n        };\n        PreActivation.prototype.resolveNode = function (resolve, future) {\n            var _this = this;\n            return waitForMap(resolve, function (k, v) {\n                var resolver = _this.getToken(v, future);\n                return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, _this.future)) :\n                    wrapIntoObservable(resolver(future, _this.future));\n            });\n        };\n        PreActivation.prototype.getToken = function (token, snapshot) {\n            var config = closestLoadedConfig(snapshot);\n            var injector = config ? config.injector : this.injector;\n            return injector.get(token);\n        };\n        return PreActivation;\n    }());\n    var ActivateRoutes = (function () {\n        function ActivateRoutes(futureState, currState) {\n            this.futureState = futureState;\n            this.currState = currState;\n        }\n        ActivateRoutes.prototype.activate = function (parentOutletMap) {\n            var futureRoot = this.futureState._root;\n            var currRoot = this.currState ? this.currState._root : null;\n            this.deactivateChildRoutes(futureRoot, currRoot, parentOutletMap);\n            advanceActivatedRoute(this.futureState.root);\n            this.activateChildRoutes(futureRoot, currRoot, parentOutletMap);\n        };\n        ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, outletMap) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.deactivateRoutes(c, prevChildren[c.value.outlet], outletMap);\n                delete prevChildren[c.value.outlet];\n            });\n            forEach(prevChildren, function (v, k) { return _this.deactiveRouteAndItsChildren(v, outletMap); });\n        };\n        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, outletMap) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) { _this.activateRoutes(c, prevChildren[c.value.outlet], outletMap); });\n        };\n        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentOutletMap) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            // reusing the node\n            if (future === curr) {\n                // If we have a normal route, we need to go through an outlet.\n                if (future.component) {\n                    var outlet = getOutlet(parentOutletMap, future);\n                    this.deactivateChildRoutes(futureNode, currNode, outlet.outletMap);\n                }\n                else {\n                    this.deactivateChildRoutes(futureNode, currNode, parentOutletMap);\n                }\n            }\n            else {\n                if (curr) {\n                    this.deactiveRouteAndItsChildren(currNode, parentOutletMap);\n                }\n            }\n        };\n        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentOutletMap) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            // reusing the node\n            if (future === curr) {\n                // advance the route to push the parameters\n                advanceActivatedRoute(future);\n                // If we have a normal route, we need to go through an outlet.\n                if (future.component) {\n                    var outlet = getOutlet(parentOutletMap, future);\n                    this.activateChildRoutes(futureNode, currNode, outlet.outletMap);\n                }\n                else {\n                    this.activateChildRoutes(futureNode, currNode, parentOutletMap);\n                }\n            }\n            else {\n                // if we have a normal route, we need to advance the route\n                // and place the component into the outlet. After that recurse.\n                if (future.component) {\n                    advanceActivatedRoute(future);\n                    var outlet = getOutlet(parentOutletMap, futureNode.value);\n                    var outletMap = new RouterOutletMap();\n                    this.placeComponentIntoOutlet(outletMap, future, outlet);\n                    this.activateChildRoutes(futureNode, null, outletMap);\n                }\n                else {\n                    advanceActivatedRoute(future);\n                    this.activateChildRoutes(futureNode, null, parentOutletMap);\n                }\n            }\n        };\n        ActivateRoutes.prototype.placeComponentIntoOutlet = function (outletMap, future, outlet) {\n            var resolved = [{ provide: ActivatedRoute, useValue: future }, {\n                    provide: RouterOutletMap,\n                    useValue: outletMap\n                }];\n            var config = parentLoadedConfig(future.snapshot);\n            var resolver = null;\n            var injector = null;\n            if (config) {\n                injector = config.injectorFactory(outlet.locationInjector);\n                resolver = config.factoryResolver;\n                resolved.push({ provide: _angular_core.ComponentFactoryResolver, useValue: resolver });\n            }\n            else {\n                injector = outlet.locationInjector;\n                resolver = outlet.locationFactoryResolver;\n            }\n            outlet.activate(future, resolver, injector, _angular_core.ReflectiveInjector.resolve(resolved), outletMap);\n        };\n        ActivateRoutes.prototype.deactiveRouteAndItsChildren = function (route, parentOutletMap) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(route);\n            var outlet = null;\n            // getOutlet throws when cannot find the right outlet,\n            // which can happen if an outlet was in an NgIf and was removed\n            try {\n                outlet = getOutlet(parentOutletMap, route.value);\n            }\n            catch (e) {\n                return;\n            }\n            var childOutletMap = outlet.outletMap;\n            forEach(prevChildren, function (v, k) {\n                if (route.value.component) {\n                    _this.deactiveRouteAndItsChildren(v, childOutletMap);\n                }\n                else {\n                    _this.deactiveRouteAndItsChildren(v, parentOutletMap);\n                }\n            });\n            if (outlet && outlet.isActivated) {\n                outlet.deactivate();\n            }\n        };\n        return ActivateRoutes;\n    }());\n    function parentLoadedConfig(snapshot) {\n        var s = snapshot.parent;\n        while (s) {\n            var c = s._routeConfig;\n            if (c && c._loadedConfig)\n                return c._loadedConfig;\n            if (c && c.component)\n                return null;\n            s = s.parent;\n        }\n        return null;\n    }\n    function closestLoadedConfig(snapshot) {\n        if (!snapshot)\n            return null;\n        var s = snapshot.parent;\n        while (s) {\n            var c = s._routeConfig;\n            if (c && c._loadedConfig)\n                return c._loadedConfig;\n            s = s.parent;\n        }\n        return null;\n    }\n    function nodeChildrenAsMap(node) {\n        return node ? node.children.reduce(function (m, c) {\n            m[c.value.outlet] = c;\n            return m;\n        }, {}) : {};\n    }\n    function getOutlet(outletMap, route) {\n        var outlet = outletMap._outlets[route.outlet];\n        if (!outlet) {\n            var componentName = route.component.name;\n            if (route.outlet === PRIMARY_OUTLET) {\n                throw new Error(\"Cannot find primary outlet to load '\" + componentName + \"'\");\n            }\n            else {\n                throw new Error(\"Cannot find the outlet \" + route.outlet + \" to load '\" + componentName + \"'\");\n            }\n        }\n        return outlet;\n    }\n\n    /**\n     * @whatItDoes Lets you link to specific parts of your app.\n     *\n     * @howToUse\n     *\n     * Consider the following route configuration:\n\n     * ```\n     * [{ path: 'user/:name', component: UserCmp }]\n     * ```\n     *\n     * When linking to this `user/:name` route, you can write:\n     *\n     * ```\n     * <a routerLink='/user/bob'>link to user component</a>\n     * ```\n     *\n     * @description\n     *\n     * The RouterLink directives let you link to specific parts of your app.\n     *\n     * Whe the link is static, you can use the directive as follows:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\">link to user component</a>\n     * ```\n     *\n     * If you use dynamic values to generate the link, you can pass an array of path\n     * segments, followed by the params for each segment.\n     *\n     * For instance `['/team', teamId, 'user', userName, {details: true}]`\n     * means that we want to generate a link to `/team/11/user/bob;details=true`.\n     *\n     * Multiple static segments can be merged into one (e.g., `['/team/11/user', userName, {details:\n     true}]`).\n     *\n     * The first segment name can be prepended with `/`, `./`, or `../`:\n     * * If the first segment begins with `/`, the router will look up the route from the root of the\n     app.\n     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n     * instead look in the children of the current activated route.\n     * * And if the first segment begins with `../`, the router will go up one level.\n     *\n     * You can set query params and fragment as follows:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">link to user\n     component</a>\n     * ```\n     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n     *\n     * You can also tell the directive to preserve the current query params and fragment:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>link to user\n     component</a>\n     * ```\n     *\n     * The router link directive always treats the provided input as a delta to the current url.\n     *\n     * For instance, if the current url is `/user/(box//aux:team)`.\n     *\n     * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n     * `/user/(jim//aux:team)`.\n     *\n     * @selector ':not(a)[routerLink]'\n     * @ngModule RouterModule\n     *\n     * See {@link Router.createUrlTree} for more information.\n     *\n     * @stable\n     */\n    var RouterLink = (function () {\n        function RouterLink(router, route, locationStrategy) {\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n        }\n        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n            set: function (data) {\n                if (Array.isArray(data)) {\n                    this.commands = data;\n                }\n                else {\n                    this.commands = [data];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.prototype.onClick = function () {\n            this.router.navigateByUrl(this.urlTree);\n            return true;\n        };\n        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: toBool(this.preserveQueryParams),\n                    preserveFragment: toBool(this.preserveFragment)\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n        ];\n        /** @nocollapse */\n        RouterLink.ctorParameters = [\n            { type: Router, },\n            { type: ActivatedRoute, },\n            { type: _angular_common.LocationStrategy, },\n        ];\n        RouterLink.propDecorators = {\n            'queryParams': [{ type: _angular_core.Input },],\n            'fragment': [{ type: _angular_core.Input },],\n            'preserveQueryParams': [{ type: _angular_core.Input },],\n            'preserveFragment': [{ type: _angular_core.Input },],\n            'routerLink': [{ type: _angular_core.Input },],\n            'onClick': [{ type: _angular_core.HostListener, args: ['click', [],] },],\n        };\n        return RouterLink;\n    }());\n    /**\n     * @whatItDoes Lets you link to specific parts of your app.\n     *\n     * See {@link RouterLink} for more information.\n     *\n     * @selector 'a[routerLink]'\n     * @ngModule RouterModule\n     *\n     * @stable\n     */\n    var RouterLinkWithHref = (function () {\n        function RouterLinkWithHref(router, route, locationStrategy) {\n            var _this = this;\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.updateTargetUrlAndHref();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n            set: function (data) {\n                if (Array.isArray(data)) {\n                    this.commands = data;\n                }\n                else {\n                    this.commands = [data];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n        RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey) {\n            if (button !== 0 || ctrlKey || metaKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n            this.router.navigateByUrl(this.urlTree);\n            return false;\n        };\n        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n        };\n        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: toBool(this.preserveQueryParams),\n                    preserveFragment: toBool(this.preserveFragment)\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'a[routerLink]' },] },\n        ];\n        /** @nocollapse */\n        RouterLinkWithHref.ctorParameters = [\n            { type: Router, },\n            { type: ActivatedRoute, },\n            { type: _angular_common.LocationStrategy, },\n        ];\n        RouterLinkWithHref.propDecorators = {\n            'target': [{ type: _angular_core.Input },],\n            'queryParams': [{ type: _angular_core.Input },],\n            'fragment': [{ type: _angular_core.Input },],\n            'routerLinkOptions': [{ type: _angular_core.Input },],\n            'preserveQueryParams': [{ type: _angular_core.Input },],\n            'preserveFragment': [{ type: _angular_core.Input },],\n            'href': [{ type: _angular_core.HostBinding },],\n            'routerLink': [{ type: _angular_core.Input },],\n            'onClick': [{ type: _angular_core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey'],] },],\n        };\n        return RouterLinkWithHref;\n    }());\n    function toBool(s) {\n        if (s === '')\n            return true;\n        return !!s;\n    }\n\n    /**\n     * @whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n     *\n     * @howToUse\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * @description\n     *\n     * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n     * becomes active.\n     *\n     * Consider the following example:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * When the url is either '/user' or '/user/bob', the active-link class will\n     * be added to the `a` tag. If the url changes, the class will be removed.\n     *\n     * You can set more than one class, as follows:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n     * ```\n     *\n     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n     * only when the url matches the link exactly.\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n     * true}\">Bob</a>\n     * ```\n     *\n     * You can assign the RouterLinkActive instance to a template variable and directly check\n     * the `isActive` status.\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n     * </a>\n     * ```\n     *\n     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n     *\n     * ```\n     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n     *   <a routerLink=\"/user/jim\">Jim</a>\n     *   <a routerLink=\"/user/bob\">Bob</a>\n     * </div>\n     * ```\n     *\n     * This will set the active-link class on the div tag if the url is either '/user/jim' or\n     * '/user/bob'.\n     *\n     * @selector ':not(a)[routerLink]'\n     * @ngModule RouterModule\n     *\n     * @stable\n     */\n    var RouterLinkActive = (function () {\n        function RouterLinkActive(router, element, renderer) {\n            var _this = this;\n            this.router = router;\n            this.element = element;\n            this.renderer = renderer;\n            this.classes = [];\n            this.routerLinkActiveOptions = { exact: false };\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.update();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n            get: function () { return this.hasActiveLink(); },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this.links.changes.subscribe(function (s) { return _this.update(); });\n            this.linksWithHrefs.changes.subscribe(function (s) { return _this.update(); });\n            this.update();\n        };\n        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n            set: function (data) {\n                if (Array.isArray(data)) {\n                    this.classes = data;\n                }\n                else {\n                    this.classes = data.split(' ');\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n        RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkActive.prototype.update = function () {\n            var _this = this;\n            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n                return;\n            var isActive = this.hasActiveLink();\n            this.classes.forEach(function (c) {\n                if (c) {\n                    _this.renderer.setElementClass(_this.element.nativeElement, c, isActive);\n                }\n            });\n        };\n        RouterLinkActive.prototype.isLinkActive = function (router) {\n            var _this = this;\n            return function (link) {\n                return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n            };\n        };\n        RouterLinkActive.prototype.hasActiveLink = function () {\n            return this.links.some(this.isLinkActive(this.router)) ||\n                this.linksWithHrefs.some(this.isLinkActive(this.router));\n        };\n        RouterLinkActive.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[routerLinkActive]',\n                        exportAs: 'routerLinkActive',\n                    },] },\n        ];\n        /** @nocollapse */\n        RouterLinkActive.ctorParameters = [\n            { type: Router, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ];\n        RouterLinkActive.propDecorators = {\n            'links': [{ type: _angular_core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n            'linksWithHrefs': [{ type: _angular_core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n            'routerLinkActiveOptions': [{ type: _angular_core.Input },],\n            'routerLinkActive': [{ type: _angular_core.Input },],\n        };\n        return RouterLinkActive;\n    }());\n\n    /**\n     * @whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n     * state.\n     *\n     * @howToUse\n     *\n     * ```\n     * <router-outlet></router-outlet>\n     * <router-outlet name='left'></router-outlet>\n     * <router-outlet name='right'></router-outlet>\n     * ```\n     *\n     * A router outlet will emit an activate event any time a new component is being instantiated,\n     * and a deactivate event when it is being destroyed.\n     *\n     * ```\n     * <router-outlet\n     *   (activate)='onActivate($event)'\n     *   (deactivate)='onDeactivate($event)'></router-outlet>\n     * ```\n     * @selector 'a[routerLink]'\n     * @ngModule RouterModule\n     *\n     * @stable\n     */\n    var RouterOutlet = (function () {\n        function RouterOutlet(parentOutletMap, location, resolver, name) {\n            this.parentOutletMap = parentOutletMap;\n            this.location = location;\n            this.resolver = resolver;\n            this.name = name;\n            this.activateEvents = new _angular_core.EventEmitter();\n            this.deactivateEvents = new _angular_core.EventEmitter();\n            parentOutletMap.registerOutlet(name ? name : PRIMARY_OUTLET, this);\n        }\n        RouterOutlet.prototype.ngOnDestroy = function () { this.parentOutletMap.removeOutlet(this.name ? this.name : PRIMARY_OUTLET); };\n        Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n            get: function () { return this.location.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n            get: function () { return this.resolver; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n            get: function () { return !!this.activated; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this.activated.instance;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this._activatedRoute;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterOutlet.prototype.deactivate = function () {\n            if (this.activated) {\n                var c = this.component;\n                this.activated.destroy();\n                this.activated = null;\n                this.deactivateEvents.emit(c);\n            }\n        };\n        RouterOutlet.prototype.activate = function (activatedRoute, resolver, injector, providers, outletMap) {\n            if (this.isActivated) {\n                throw new Error('Cannot activate an already activated outlet');\n            }\n            this.outletMap = outletMap;\n            this._activatedRoute = activatedRoute;\n            var snapshot = activatedRoute._futureSnapshot;\n            var component = snapshot._routeConfig.component;\n            var factory = resolver.resolveComponentFactory(component);\n            var inj = _angular_core.ReflectiveInjector.fromResolvedProviders(providers, injector);\n            this.activated = this.location.createComponent(factory, this.location.length, inj, []);\n            this.activated.changeDetectorRef.detectChanges();\n            this.activateEvents.emit(this.activated.instance);\n        };\n        RouterOutlet.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'router-outlet' },] },\n        ];\n        /** @nocollapse */\n        RouterOutlet.ctorParameters = [\n            { type: RouterOutletMap, },\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.ComponentFactoryResolver, },\n            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['name',] },] },\n        ];\n        RouterOutlet.propDecorators = {\n            'activateEvents': [{ type: _angular_core.Output, args: ['activate',] },],\n            'deactivateEvents': [{ type: _angular_core.Output, args: ['deactivate',] },],\n        };\n        return RouterOutlet;\n    }());\n\n    var getDOM = _angular_platformBrowser.__platform_browser_private__.getDOM;\n\n    /**\n     * @whatItDoes Provides a preloading strategy.\n     *\n     * @experimental\n     */\n    var PreloadingStrategy = (function () {\n        function PreloadingStrategy() {\n        }\n        return PreloadingStrategy;\n    }());\n    /**\n     * @whatItDoes Provides a preloading strategy that preloads all modules as quicky as possible.\n     *\n     * @howToUse\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @experimental\n     */\n    var PreloadAllModules = (function () {\n        function PreloadAllModules() {\n        }\n        PreloadAllModules.prototype.preload = function (route, fn) {\n            return rxjs_operator_catch._catch.call(fn(), function () { return rxjs_observable_of.of(null); });\n        };\n        return PreloadAllModules;\n    }());\n    /**\n     * @whatItDoes Provides a preloading strategy that does not preload any modules.\n     *\n     * @description\n     *\n     * This strategy is enabled by default.\n     *\n     * @experimental\n     */\n    var NoPreloading = (function () {\n        function NoPreloading() {\n        }\n        NoPreloading.prototype.preload = function (route, fn) { return rxjs_observable_of.of(null); };\n        return NoPreloading;\n    }());\n    /**\n     * The preloader optimistically loads all router configurations to\n     * make navigations into lazily-loaded sections of the application faster.\n     *\n     * The preloader runs in the background. When the router bootstraps, the preloader\n     * starts listening to all navigation events. After every such event, the preloader\n     * will check if any configurations can be loaded lazily.\n     *\n     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n     *\n     * @stable\n     */\n    var RouterPreloader = (function () {\n        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n            this.router = router;\n            this.injector = injector;\n            this.preloadingStrategy = preloadingStrategy;\n            this.loader = new RouterConfigLoader(moduleLoader, compiler);\n        }\n        ;\n        RouterPreloader.prototype.setUpPreloading = function () {\n            var _this = this;\n            var navigations = rxjs_operator_filter.filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n            this.subscription = rxjs_operator_concatMap.concatMap.call(navigations, function () { return _this.preload(); }).subscribe(function (v) { });\n        };\n        RouterPreloader.prototype.preload = function () { return this.processRoutes(this.injector, this.router.config); };\n        RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterPreloader.prototype.processRoutes = function (injector, routes) {\n            var res = [];\n            for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n                var c = routes_1[_i];\n                // we already have the config loaded, just recurce\n                if (c.loadChildren && !c.canLoad && c._loadedConfig) {\n                    var childConfig = c._loadedConfig;\n                    res.push(this.processRoutes(childConfig.injector, childConfig.routes));\n                }\n                else if (c.loadChildren && !c.canLoad) {\n                    res.push(this.preloadConfig(injector, c));\n                }\n                else if (c.children) {\n                    res.push(this.processRoutes(injector, c.children));\n                }\n            }\n            return rxjs_operator_mergeAll.mergeAll.call(rxjs_observable_from.from(res));\n        };\n        RouterPreloader.prototype.preloadConfig = function (injector, route) {\n            var _this = this;\n            return this.preloadingStrategy.preload(route, function () {\n                var loaded = _this.loader.load(injector, route.loadChildren);\n                return rxjs_operator_mergeMap.mergeMap.call(loaded, function (config) {\n                    var c = route;\n                    c._loadedConfig = config;\n                    return _this.processRoutes(config.injector, config.routes);\n                });\n            });\n        };\n        RouterPreloader.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RouterPreloader.ctorParameters = [\n            { type: Router, },\n            { type: _angular_core.NgModuleFactoryLoader, },\n            { type: _angular_core.Compiler, },\n            { type: _angular_core.Injector, },\n            { type: PreloadingStrategy, },\n        ];\n        return RouterPreloader;\n    }());\n\n    /**\n     * @whatItDoes Contains a list of directives\n     * @stable\n     */\n    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n    /**\n     * @whatItDoes Is used in DI to configure the router.\n     * @stable\n     */\n    var ROUTER_CONFIGURATION = new _angular_core.OpaqueToken('ROUTER_CONFIGURATION');\n    /**\n     * @docsNotRequired\n     */\n    var ROUTER_FORROOT_GUARD = new _angular_core.OpaqueToken('ROUTER_FORROOT_GUARD');\n    var ROUTER_PROVIDERS = [\n        _angular_common.Location, { provide: UrlSerializer, useClass: DefaultUrlSerializer }, {\n            provide: Router,\n            useFactory: setupRouter,\n            deps: [\n                _angular_core.ApplicationRef, UrlSerializer, RouterOutletMap, _angular_common.Location, _angular_core.Injector, _angular_core.NgModuleFactoryLoader,\n                _angular_core.Compiler, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new _angular_core.Optional()]\n            ]\n        },\n        RouterOutletMap, { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: _angular_core.NgModuleFactoryLoader, useClass: _angular_core.SystemJsNgModuleLoader }, RouterPreloader, NoPreloading,\n        PreloadAllModules, { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } }\n    ];\n    /**\n     * @whatItDoes Adds router directives and providers.\n     *\n     * @howToUse\n     *\n     * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n     * Since the router deals with a global shared resource--location, we cannot have\n     * more than one router service active.\n     *\n     * That is why there are two ways to create the module: `RouterModule.forRoot` and\n     * `RouterModule.forChild`.\n     *\n     * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n     * service itself.\n     * * `forChild` creates a module that contains all the directives and the given routes, but does not\n     * include\n     * the router service.\n     *\n     * When registered at the root, the module should be used as follows\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * For submodules and lazy loaded submodules the module should be used as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @description\n     *\n     * Managing state transitions is one of the hardest parts of building applications. This is\n     * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n     * In addition, we often want to split applications into multiple bundles and load them on demand.\n     * Doing this transparently is not trivial.\n     *\n     * The Angular 2 router solves these problems. Using the router, you can declaratively specify\n     * application states, manage state transitions while taking care of the URL, and load bundles on\n     * demand.\n     *\n     * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n     * overview of how the router should be used.\n     *\n     * @stable\n     */\n    var RouterModule = (function () {\n        function RouterModule(guard) {\n        }\n        /**\n         * Creates a module with all the router providers and directives. It also optionally sets up an\n         * application listener to perform an initial navigation.\n         *\n         * Options:\n         * * `enableTracing` makes the router log all its internal events to the console.\n         * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n         * API.\n         * * `initialNavigation` disables the initial navigation.\n         * * `errorHandler` provides a custom error handler.\n         */\n        RouterModule.forRoot = function (routes, config) {\n            return {\n                ngModule: RouterModule,\n                providers: [\n                    ROUTER_PROVIDERS, provideRoutes(routes), {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new _angular_core.Optional(), new _angular_core.SkipSelf()]]\n                    },\n                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} }, {\n                        provide: _angular_common.LocationStrategy,\n                        useFactory: provideLocationStrategy,\n                        deps: [\n                            _angular_common.PlatformLocation, [new _angular_core.Inject(_angular_common.APP_BASE_HREF), new _angular_core.Optional()], ROUTER_CONFIGURATION\n                        ]\n                    },\n                    {\n                        provide: PreloadingStrategy,\n                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                            NoPreloading\n                    },\n                    provideRouterInitializer()\n                ]\n            };\n        };\n        /**\n         * Creates a module with all the router directives and a provider registering routes.\n         */\n        RouterModule.forChild = function (routes) {\n            return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n        };\n        RouterModule.decorators = [\n            { type: _angular_core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n        ];\n        /** @nocollapse */\n        RouterModule.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n        ];\n        return RouterModule;\n    }());\n    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n        if (options === void 0) { options = {}; }\n        return options.useHash ? new _angular_common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n            new _angular_common.PathLocationStrategy(platformLocationStrategy, baseHref);\n    }\n    function provideForRootGuard(router) {\n        if (router) {\n            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n        }\n        return 'guarded';\n    }\n    /**\n     * @whatItDoes Registers routes.\n     *\n     * @howToUse\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)],\n     *   providers: [provideRoutes(EXTRA_ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @stable\n     */\n    function provideRoutes(routes) {\n        return [\n            { provide: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n            { provide: ROUTES, multi: true, useValue: routes }\n        ];\n    }\n    function setupRouter(ref, urlSerializer, outletMap, location, injector, loader, compiler, config, opts, urlHandlingStrategy) {\n        if (opts === void 0) { opts = {}; }\n        var router = new Router(null, urlSerializer, outletMap, location, injector, loader, compiler, flatten(config));\n        if (urlHandlingStrategy) {\n            router.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        if (opts.errorHandler) {\n            router.errorHandler = opts.errorHandler;\n        }\n        if (opts.enableTracing) {\n            var dom_1 = getDOM();\n            router.events.subscribe(function (e) {\n                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n                dom_1.log(e.toString());\n                dom_1.log(e);\n                dom_1.logGroupEnd();\n            });\n        }\n        return router;\n    }\n    function rootRoute(router) {\n        return router.routerState.root;\n    }\n    function initialRouterNavigation(router, ref, preloader, opts) {\n        return function (bootstrappedComponentRef) {\n            if (bootstrappedComponentRef !== ref.components[0]) {\n                return;\n            }\n            router.resetRootComponentType(ref.componentTypes[0]);\n            preloader.setUpPreloading();\n            if (opts.initialNavigation === false) {\n                router.setUpLocationChangeListener();\n            }\n            else {\n                router.initialNavigation();\n            }\n        };\n    }\n    /**\n     * A token for the router initializer that will be called after the app is bootstrapped.\n     *\n     * @experimental\n     */\n    var ROUTER_INITIALIZER = new _angular_core.OpaqueToken('Router Initializer');\n    function provideRouterInitializer() {\n        return [\n            {\n                provide: ROUTER_INITIALIZER,\n                useFactory: initialRouterNavigation,\n                deps: [Router, _angular_core.ApplicationRef, RouterPreloader, ROUTER_CONFIGURATION]\n            },\n            { provide: _angular_core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER }\n        ];\n    }\n\n    var __router_private__ = {\n        ROUTER_PROVIDERS: ROUTER_PROVIDERS,\n        ROUTES: ROUTES,\n        flatten: flatten\n    };\n\n    exports.RouterLink = RouterLink;\n    exports.RouterLinkWithHref = RouterLinkWithHref;\n    exports.RouterLinkActive = RouterLinkActive;\n    exports.RouterOutlet = RouterOutlet;\n    exports.NavigationCancel = NavigationCancel;\n    exports.NavigationEnd = NavigationEnd;\n    exports.NavigationError = NavigationError;\n    exports.NavigationStart = NavigationStart;\n    exports.Router = Router;\n    exports.RoutesRecognized = RoutesRecognized;\n    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n    exports.RouterModule = RouterModule;\n    exports.provideRoutes = provideRoutes;\n    exports.RouterOutletMap = RouterOutletMap;\n    exports.NoPreloading = NoPreloading;\n    exports.PreloadAllModules = PreloadAllModules;\n    exports.PreloadingStrategy = PreloadingStrategy;\n    exports.RouterPreloader = RouterPreloader;\n    exports.ActivatedRoute = ActivatedRoute;\n    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n    exports.RouterState = RouterState;\n    exports.RouterStateSnapshot = RouterStateSnapshot;\n    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n    exports.UrlSegment = UrlSegment;\n    exports.UrlSegmentGroup = UrlSegmentGroup;\n    exports.UrlSerializer = UrlSerializer;\n    exports.UrlTree = UrlTree;\n    exports.__router_private__ = __router_private__;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/router/bundles/router.umd.js\n// module id = 17\n// module chunks = 1","/**\n * Created by colinjlacy on 4/14/16.\n */\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'loading-indicator',\n    template: require('./html/loading-indicator.html'),\n    style: [require('./css/loading-indicator.css')]\n})\nexport class LoadingIndicator {}\n\nexport class LoadingPage{\n    public loading: boolean;\n    constructor(val: boolean) {\n        this.loading = val;\n    }\n    standby() {\n        this.loading = true;\n    }\n    ready() {\n        this.loading = false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/loading-indicator/loading-indicator.ts","// user.service.ts\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookieService {\n\n    constructor(){}\n\n    setCookie(token){\n        let d=new Date();\n        d.setTime(d.getTime() + (24*60*60*1000));\n        document.cookie=\"auth_token=\" + token + \";expires=\"+d.toUTCString()+\";\";\n    }\n\n    //method to get cookies\n    getCookie(cname) {\n        var name = cname + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i = 0; i <ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0)==' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) == 0) {\n                if(c.substring(name.length,c.length) == \"\") return false;\n                return c.substring(name.length,c.length);\n            }\n        }\n        return \"\";\n    }\n\n    deleteCookie(cname){\n        let d=new Date();\n        d.setTime(-1);\n        document.cookie= cname + \"=''\" + \";expires=\"+d.toUTCString()+\";\";\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/cookie.service.ts","// user.service.ts\nimport { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\n\nimport {CookieService} from  './cookie.service';\n\n@Injectable()\nexport class UserService {\n    private loggedIn = false;\n\n    constructor(private http: Http, private  cookieService:CookieService) {\n        this.loggedIn = !!this.cookieService.getCookie(\"auth_token\");\n    }\n\n    login(username, password) {\n        console.log(\"attempting login\");\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        return this.http\n            .post('http://teammartini.herokuapp.com/Login', JSON.stringify({username, password}), {headers})\n            .map(res => res.json())\n            .map((res) => {\n                if (!res.status) {\n                    console.log(\"login succesfull\");\n                    this.cookieService.setCookie(res.token);\n                    localStorage.setItem('username',username);\n                    this.loggedIn = true;\n                    return true\n                }\n                return false;\n            });\n    }\n\n    register(username,password,confirmpass){\n        console.log(\"registering\");\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        return this.http\n            .post('http://teammartini.herokuapp.com/Registration', JSON.stringify({username, password,confirmpass}), {headers})\n            .map(res => res.json())\n            .map((res) => {\n                if (!res.status) {\n                    console.log(\"registration succesfull\");\n                    this.cookieService.setCookie(res.token);\n                    localStorage.setItem('username',username);\n                    this.loggedIn = true;\n                    return true\n                }\n                return false;\n            });\n\n    }\n\n\n    logout() {\n        this.cookieService.deleteCookie(\"auth_token\");\n        console.log(\"cookie: \" + this.cookieService.getCookie('auth_token') + \" delete method\");\n        this.loggedIn = false;\n    }\n\n    isLoggedIn() {\n        return this.loggedIn;\n    }\n\n    setLoggedIn(input){\n        this.loggedIn =  input;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/user.service.ts","// user.service.ts\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable }     from 'rxjs/Observable';\n\n\n@Injectable()\nexport class ExtractService {\n\n    constructor() { }\n\n\n    extractData(res: Response) {\n        console.log(res);\n        let body = res.json();\n        return body.data || { };\n    }\n\n    handleError (error: Response | any) {\n        // In a real world app, we might use a remote logging infrastructure\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/extract.service.ts","module.exports = \"/*--- Common tools --- */\\n.clearfix:after {\\n    content: \\\".\\\";\\n    display: block;\\n    height: 0;\\n    clear: both;\\n    visibility: hidden;\\n}\\n\\nimg {\\n    display: block;\\n    margin: 0.5rem;\\n}\\n/*--- Reset ---*/\\nhtml, body, section, form, div, dl, head, p{\\n    margin : 0;\\n    padding : 0;\\n}\\na{\\n    text-decoration: none;\\n}\\nul {\\n    display: block;\\n    list-style: none;\\n}\\n\\nfieldset{\\n    margin: 0;\\n    padding: 0;\\n    border: 0;\\n}\\n\\ninput, select, button{\\n    border: none;\\n}\\n\\n/*--- Common --- */\\nh1{\\n    display: block;\\n    font-size: 5rem;\\n    margin: 0;\\n    color: #252525;\\n    float: left;\\n}\\nli{\\n    display: inline-block;\\n    float: left;\\n}\\nnav{\\n    width: 65%;\\n}\\n.header, .footer{\\n    width: 100%;\\n    height: 12rem;\\n    background-color: rgba(255,255,255,0.8);\\n}\\n.wrapper{\\n    height: 40rem;\\n    width:80rem;\\n    margin: 0 auto;\\n}\\n.headerwrap{\\n    width: 60%;\\n    height: 100%;\\n}\\n.navwrapper{\\n    height: 100%;\\n}\\n.centerwrapper{\\n}\\n.center{\\n    width: 80rem;\\n    height:40rem;\\n    margin: 0 auto  ;\\n    position: absolute;\\n    top: 40%;\\n}\\n.outerWrapper{\\n    min-height: 100rem;\\n    width: 100%;\\n    background-image: url(\\\"public/img/panorama.jpg\\\");\\n    background-repeat: repeat ;\\n}\\n/*--- Logo ---*/\\n.logo{\\n    line-height: 10rem;\\n    font-size: 5rem;\\n    font-weight: lighter;\\n}\\n.logo a{\\n    color: #262626;\\n}\\n\\n/*--- Navigation bar ---*/\\n.navbar{\\n    margin: 0rem;\\n    display: inline-block;\\n    font-size: 3rem;\\n    height: 100%\\n}\\n\\n.navbar ul{\\n    margin: 0;\\n    height: 100%;\\n}\\n.navbar li{\\n    height: 38%;\\n    float: left;\\n    margin-left: 2rem;\\n    padding-top: 6%;\\n    padding-bottom: 4%;\\n    padding-left: 4%;\\n    padding-right: 4%;\\n}\\n.navbar li a {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    color: #262626;\\n    line-height: 0.5rem;\\n}\\n.navbar li:hover{\\n    border-bottom: solid;\\n    border-color: #1565c0;\\n    border-width: thick;\\n    background-color: rgba(0,0,0,0.1);\\n}\\n/*--- Login bar ---*/\\n.login{\\n    display: inline-block;\\n    float: right;\\n    width: 25%;\\n    height: 10rem;\\n}\\n.loginElement{\\n    margin-left: 1rem;\\n    font-size: 2rem;\\n    line-height: 10rem;\\n    display: block;\\n    float: left;\\n}\\n.login img{\\n    margin-top: 3rem;\\n    width: 4rem;\\n    height:4rem;\\n}\\n.login p{\\n    color: #262626;\\n}\\n.login button{\\n    margin-left: 1rem;\\n    margin-top: 3rem;\\n    line-height: normal;\\n    background-color: #1565c0;\\n    width: 10rem;\\n    height:4rem;\\n}\\n.login button a{\\n    color: #fff;\\n}\\n\\n/*--- Footer ---*/\\n.footer{\\n    display: block;\\n    float: left;\\n    bottom: 0;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/app.component.css\n// module id = 30\n// module chunks = 1","import {EventEmitter, Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class GlobalEventsManager {\n    public showNavBar: EventEmitter<boolean> = new EventEmitter();\n\n\n    constructor() {\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/GlobalEventsManager.ts","import { Component ,OnInit} from '@angular/core';\nimport {LoadingPage} from \"./loading-indicator/loading-indicator\";\n\nimport { ClassService } from \"./../services\"\n\n@Component({\n    selector: 'class',\n    template: require('./templates/class.component.html'),\n    styles: [ require('./styles/app.component.css'),require('./styles/class.component.css') ]\n})\n\nexport class ClassComponent extends LoadingPage implements  OnInit{\n    username:string = localStorage.getItem('username');\n    classes:Array<any>;\n    students:Array<any>;\n    newstudents:Array<any>;\n    tests:Array<any>\n    detail:any;\n    teacher:boolean=true;\n    constructor(private classService:ClassService){\n        super(true);\n    }\n\n    ngOnInit(){\n        this.standby();\n        this.classService.checkifTeacher().subscribe(\n            data => {\n                this.teacher = data.teacher;\n                console.log(this.teacher);\n            }\n        );\n        this.classService.getClasses().subscribe(\n            (data) => {\n                this.classes=data;\n                console.log(this.classes);\n                this.ready();\n            }\n        )\n        this.ready();\n    }\n\n    viewDetails(c){\n        console.log(c);\n        this.classService.getStudents(c.id).subscribe( (students) => {\n            this.students = students;\n            this.detail=c;\n        });\n        this.classService.getTests(c.id).subscribe( tests => this.tests = tests);\n\n    }\n\n    addStudent(student){\n        if(!this.contains(student)){\n            this.newstudents.push(student.id);\n        }\n    }\n\n    private contains(student){\n        for(let s of this.students){\n            if(s === student)return true;\n        }\n        return false;\n    }\n\n    addStudents(){\n        this.classService.addStudent(this.newstudents,this.detail.id);\n    }\n\n    addGroup(name){\n        this.classService.createClass(name).subscribe(\n            (data) => this.classService.getClasses().subscribe(\n                (data) => {\n                    console.log(data);\n                    this.classes=data;\n                }\n            )\n        )\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/class.component.ts","export * from './cookie.service';\nexport * from './entry.service';\nexport * from './extract.service';\nexport * from './logged-in.guard';\nexport * from './score.service';\nexport * from './user.service';\nexport * from './class.service';\nexport * from './search.service';\n\n\n// WEBPACK FOOTER //\n// ./src/services/index.ts","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operator/toPromise'), require('rxjs/Subject'), require('rxjs/Observable'), require('rxjs/observable/fromPromise')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for control directives.\n     *\n     * Only used internally in the forms module.\n     *\n     * @stable\n     */\n    var AbstractControlDirective = (function () {\n        function AbstractControlDirective() {\n        }\n        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n            get: function () { throw new Error('unimplemented'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n            get: function () { return this.control ? this.control.value : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n            get: function () { return this.control ? this.control.valid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n            get: function () { return this.control ? this.control.invalid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n            get: function () { return this.control ? this.control.pending : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n            get: function () { return this.control ? this.control.errors : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n            get: function () { return this.control ? this.control.pristine : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n            get: function () { return this.control ? this.control.dirty : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n            get: function () { return this.control ? this.control.touched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n            get: function () { return this.control ? this.control.untouched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n            get: function () { return this.control ? this.control.disabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n            get: function () { return this.control ? this.control.enabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n            get: function () { return this.control ? this.control.statusChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n            get: function () { return this.control ? this.control.valueChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        AbstractControlDirective.prototype.reset = function (value) {\n            if (value === void 0) { value = undefined; }\n            if (this.control)\n                this.control.reset(value);\n        };\n        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.hasError(errorCode, path) : false;\n        };\n        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.getError(errorCode, path) : null;\n        };\n        return AbstractControlDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * A directive that contains multiple {@link NgControl}s.\n     *\n     * Only used by the forms module.\n     *\n     * @stable\n     */\n    var ControlContainer = (function (_super) {\n        __extends$1(ControlContainer, _super);\n        function ControlContainer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n            /**\n             * Get the form to which this container belongs.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ControlContainer.prototype, \"path\", {\n            /**\n             * Get the path to this container.\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return ControlContainer;\n    }(AbstractControlDirective));\n\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return flat.concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n\n    var isPromise = _angular_core.__core_private__.isPromise;\n\n    function isEmptyInputValue(value) {\n        return value == null || typeof value === 'string' && value.length === 0;\n    }\n    /**\n     * Providers for validators to be used for {@link FormControl}s in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * ### Example\n     *\n     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n     * @stable\n     */\n    var NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n    /**\n     * Providers for asynchronous validators to be used for {@link FormControl}s\n     * in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * See {@link NG_VALIDATORS} for more details.\n     *\n     * @stable\n     */\n    var NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n    /**\n     * Provides a set of validators used by form controls.\n     *\n     * A validator is a function that processes a {@link FormControl} or collection of\n     * controls and returns a map of errors. A null map means that validation has passed.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * var loginControl = new FormControl(\"\", Validators.required)\n     * ```\n     *\n     * @stable\n     */\n    var Validators = (function () {\n        function Validators() {\n        }\n        /**\n         * Validator that requires controls to have a non-empty value.\n         */\n        Validators.required = function (control) {\n            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n        };\n        /**\n         * Validator that requires controls to have a value of a minimum length.\n         */\n        Validators.minLength = function (minLength) {\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var length = typeof control.value === 'string' ? control.value.length : 0;\n                return length < minLength ?\n                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires controls to have a value of a maximum length.\n         */\n        Validators.maxLength = function (maxLength) {\n            return function (control) {\n                var length = typeof control.value === 'string' ? control.value.length : 0;\n                return length > maxLength ?\n                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires a control to match a regex to its value.\n         */\n        Validators.pattern = function (pattern) {\n            if (!pattern)\n                return Validators.nullValidator;\n            var regex;\n            var regexStr;\n            if (typeof pattern === 'string') {\n                regexStr = \"^\" + pattern + \"$\";\n                regex = new RegExp(regexStr);\n            }\n            else {\n                regexStr = pattern.toString();\n                regex = pattern;\n            }\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var value = control.value;\n                return regex.test(value) ? null :\n                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n            };\n        };\n        /**\n         * No-op validator.\n         */\n        Validators.nullValidator = function (c) { return null; };\n        /**\n         * Compose multiple validators into a single function that returns the union\n         * of the individual error maps.\n         */\n        Validators.compose = function (validators) {\n            if (!validators)\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                return _mergeErrors(_executeValidators(control, presentValidators));\n            };\n        };\n        Validators.composeAsync = function (validators) {\n            if (!validators)\n                return null;\n            var presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n                return Promise.all(promises).then(_mergeErrors);\n            };\n        };\n        return Validators;\n    }());\n    function _convertToPromise(obj) {\n        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n    }\n    function _executeValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _executeAsyncValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    function _mergeErrors(arrayOfErrors) {\n        var res = arrayOfErrors.reduce(function (res, errors) {\n            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n        }, {});\n        return Object.keys(res).length === 0 ? null : res;\n    }\n\n    /**\n     * Used to provide a {@link ControlValueAccessor} for form controls.\n     *\n     * See {@link DefaultValueAccessor} for how to implement one.\n     * @stable\n     */\n    var NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\n    var CHECKBOX_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n        multi: true,\n    };\n    /**\n     * The accessor for writing a value and listening to changes on a checkbox input element.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var CheckboxControlValueAccessor = (function () {\n        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n        };\n        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        CheckboxControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                        providers: [CHECKBOX_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return CheckboxControlValueAccessor;\n    }());\n\n    var DEFAULT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The default accessor for writing a value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n     *  ```\n     *\n     *  @stable\n     */\n    var DefaultValueAccessor = (function () {\n        function DefaultValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        DefaultValueAccessor.prototype.writeValue = function (value) {\n            var normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        DefaultValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                        // TODO: vsavkin replace the above selector with the one below it once\n                        // https://github.com/angular/angular/issues/3011 is implemented\n                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [DEFAULT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        DefaultValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return DefaultValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeValidator(validator) {\n        if (validator.validate) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n    function normalizeAsyncValidator(validator) {\n        if (validator.validate) {\n            return function (c) { return validator.validate(c); };\n        }\n        else {\n            return validator;\n        }\n    }\n\n    var NUMBER_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a number value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"number\" [(ngModel)]=\"age\">\n     *  ```\n     */\n    var NumberValueAccessor = (function () {\n        function NumberValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        NumberValueAccessor.prototype.writeValue = function (value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            var normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        NumberValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [NUMBER_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        NumberValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return NumberValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * A base class that all control directive extend.\n     * It binds a {@link FormControl} object to a DOM element.\n     *\n     * Used internally by Angular forms.\n     *\n     * @stable\n     */\n    var NgControl = (function (_super) {\n        __extends$2(NgControl, _super);\n        function NgControl() {\n            _super.apply(this, arguments);\n            /** @internal */\n            this._parent = null;\n            this.name = null;\n            this.valueAccessor = null;\n            /** @internal */\n            this._rawValidators = [];\n            /** @internal */\n            this._rawAsyncValidators = [];\n        }\n        Object.defineProperty(NgControl.prototype, \"validator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgControl;\n    }(AbstractControlDirective));\n\n    var RADIO_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * Internal class used by Angular to uncheck radio buttons with the matching name.\n     */\n    var RadioControlRegistry = (function () {\n        function RadioControlRegistry() {\n            this._accessors = [];\n        }\n        RadioControlRegistry.prototype.add = function (control, accessor) {\n            this._accessors.push([control, accessor]);\n        };\n        RadioControlRegistry.prototype.remove = function (accessor) {\n            for (var i = this._accessors.length - 1; i >= 0; --i) {\n                if (this._accessors[i][1] === accessor) {\n                    this._accessors.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        RadioControlRegistry.prototype.select = function (accessor) {\n            var _this = this;\n            this._accessors.forEach(function (c) {\n                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        };\n        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        };\n        RadioControlRegistry.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RadioControlRegistry.ctorParameters = [];\n        return RadioControlRegistry;\n    }());\n    /**\n     * @whatItDoes  Writes radio control values and listens to radio control changes.\n     *\n     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n     * to keep the view synced with the {@link FormControl} model.\n     *\n     * @howToUse\n     *\n     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n     * value accessor will be active on any radio control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use radio buttons with form directives\n     *\n     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n     * attributes do not affect each other.\n     *\n     * {@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n     *\n     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n     *\n     * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  @stable\n     */\n    var RadioControlValueAccessor = (function () {\n        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            this.onChange = function () { };\n            this.onTouched = function () { };\n        }\n        RadioControlValueAccessor.prototype.ngOnInit = function () {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        };\n        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n        RadioControlValueAccessor.prototype.writeValue = function (value) {\n            this._state = value === this.value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        };\n        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this._fn = fn;\n            this.onChange = function () {\n                fn(_this.value);\n                _this._registry.select(_this);\n            };\n        };\n        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RadioControlValueAccessor.prototype._checkName = function () {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        };\n        RadioControlValueAccessor.prototype._throwNameError = function () {\n            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n        };\n        RadioControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                        providers: [RADIO_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RadioControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n            { type: RadioControlRegistry, },\n            { type: _angular_core.Injector, },\n        ];\n        RadioControlValueAccessor.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'formControlName': [{ type: _angular_core.Input },],\n            'value': [{ type: _angular_core.Input },],\n        };\n        return RadioControlValueAccessor;\n    }());\n\n    var RANGE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a range value and listening to changes that is used by the\n     * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"range\" [(ngModel)]=\"age\" >\n     *  ```\n     */\n    var RangeValueAccessor = (function () {\n        function RangeValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        RangeValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n        };\n        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RangeValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [RANGE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RangeValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return RangeValueAccessor;\n    }());\n\n    var SELECT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    function _extractId(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * @whatItDoes Writes values and listens to changes on a select element.\n     *\n     * Used by {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName}\n     * to keep the view synced with the {@link FormControl} model.\n     *\n     * @howToUse\n     *\n     * If you have imported the {@link FormsModule} or the {@link ReactiveFormsModule}, this\n     * value accessor will be active on any select control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use select controls with form directives\n     *\n     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n     * attribute to the main `<select>` tag.\n     *\n     * If your option values are simple strings, you can bind to the normal `value` property\n     * on the option.  If your option values happen to be objects (and you'd like to save the\n     * selection in your form as an object), use `ngValue` instead:\n     *\n     * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n     *\n     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n     * choice of binding to the  `value` or `ngValue` property on the select's options.\n     *\n     * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n     *\n     * Note: We listen to the 'change' event because 'input' events aren't fired\n     * for selects in Firefox and IE:\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var SelectControlValueAccessor = (function () {\n        function SelectControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectControlValueAccessor.prototype.writeValue = function (value) {\n            this.value = value;\n            var valueString = _buildValueString(this._getOptionId(value), value);\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n        };\n        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (valueString) {\n                _this.value = valueString;\n                fn(_this._getOptionValue(valueString));\n            };\n        };\n        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var id = _extractId(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n        };\n        SelectControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectControlValueAccessor;\n    }());\n    /**\n     * @whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * @howToUse\n     *\n     * See docs for {@link SelectControlValueAccessor} for usage examples.\n     *\n     * @stable\n     */\n    var NgSelectOption = (function () {\n        function NgSelectOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select)\n                this.id = this._select._registerOption();\n        }\n        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._select._optionMap.set(this.id, value);\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n            set: function (value) {\n                this._setElementValue(value);\n                if (this._select)\n                    this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        NgSelectOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectOption;\n    }());\n\n    var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n        multi: true\n    };\n    function _buildValueString$1(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (typeof value === 'string')\n            value = \"'\" + value + \"'\";\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    function _extractId$1(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * The accessor for writing a value and listening to changes on a select element.\n     *\n     * @stable\n     */\n    var SelectMultipleControlValueAccessor = (function () {\n        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n            var _this = this;\n            this.value = value;\n            if (value == null)\n                return;\n            var values = value;\n            // convert values to ids\n            var ids = values.map(function (v) { return _this._getOptionId(v); });\n            this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (_) {\n                var selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    var options = _.selectedOptions;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        var val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                else {\n                    var options = _.options;\n                    for (var i = 0; i < options.length; i++) {\n                        var opt = options.item(i);\n                        if (opt.selected) {\n                            var val = _this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                fn(selected);\n            };\n        };\n        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n            var id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        };\n        /** @internal */\n        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var id = _extractId$1(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n        };\n        SelectMultipleControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectMultipleControlValueAccessor.ctorParameters = [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ];\n        return SelectMultipleControlValueAccessor;\n    }());\n    /**\n     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * ### Example\n     *\n     * ```\n     * <select multiple name=\"city\" ngModel>\n     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n     * </select>\n     * ```\n     */\n    var NgSelectMultipleOption = (function () {\n        function NgSelectMultipleOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n            set: function (value) {\n                if (this._select) {\n                    this._value = value;\n                    this._setElementValue(_buildValueString$1(this.id, value));\n                    this._select.writeValue(this._select.value);\n                }\n                else {\n                    this._setElementValue(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /** @internal */\n        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n        };\n        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectMultipleOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectMultipleOption.ctorParameters = [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ];\n        NgSelectMultipleOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectMultipleOption;\n    }());\n\n    function controlPath(name, parent) {\n        return parent.path.concat([name]);\n    }\n    function setUpControl(control, dir) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n        dir.valueAccessor.writeValue(control.value);\n        // view -> model\n        dir.valueAccessor.registerOnChange(function (newValue) {\n            dir.viewToModelUpdate(newValue);\n            control.markAsDirty();\n            control.setValue(newValue, { emitModelToViewChange: false });\n        });\n        // touched\n        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n        control.registerOnChange(function (newValue, emitModelEvent) {\n            // control -> view\n            dir.valueAccessor.writeValue(newValue);\n            // control -> ngModel\n            if (emitModelEvent)\n                dir.viewToModelUpdate(newValue);\n        });\n        if (dir.valueAccessor.setDisabledState) {\n            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n        }\n        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange)\n                validator.registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n    }\n    function cleanUpControl(control, dir) {\n        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        if (control)\n            control._clearChangeFns();\n    }\n    function setUpFormContainer(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    }\n    function _noControlError(dir) {\n        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n    }\n    function _throwError(dir, message) {\n        var messageEnd;\n        if (dir.path.length > 1) {\n            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n        }\n        else if (dir.path[0]) {\n            messageEnd = \"name: '\" + dir.path + \"'\";\n        }\n        else {\n            messageEnd = 'unspecified name attribute';\n        }\n        throw new Error(message + \" \" + messageEnd);\n    }\n    function composeValidators(validators) {\n        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n    }\n    function composeAsyncValidators(validators) {\n        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n            null;\n    }\n    function isPropertyUpdated(changes, viewModel) {\n        if (!changes.hasOwnProperty('model'))\n            return false;\n        var change = changes['model'];\n        if (change.isFirstChange())\n            return true;\n        return !looseIdentical(viewModel, change.currentValue);\n    }\n    var BUILTIN_ACCESSORS = [\n        CheckboxControlValueAccessor,\n        RangeValueAccessor,\n        NumberValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n    ];\n    function isBuiltInAccessor(valueAccessor) {\n        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n    }\n    // TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n    function selectValueAccessor(dir, valueAccessors) {\n        if (!valueAccessors)\n            return null;\n        var defaultAccessor;\n        var builtinAccessor;\n        var customAccessor;\n        valueAccessors.forEach(function (v) {\n            if (v.constructor === DefaultValueAccessor) {\n                defaultAccessor = v;\n            }\n            else if (isBuiltInAccessor(v)) {\n                if (builtinAccessor)\n                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n                builtinAccessor = v;\n            }\n            else {\n                if (customAccessor)\n                    _throwError(dir, 'More than one custom value accessor matches form control with');\n                customAccessor = v;\n            }\n        });\n        if (customAccessor)\n            return customAccessor;\n        if (builtinAccessor)\n            return builtinAccessor;\n        if (defaultAccessor)\n            return defaultAccessor;\n        _throwError(dir, 'No valid value accessor for form control with');\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n     *\n     * @stable\n     */\n    var AbstractFormGroupDirective = (function (_super) {\n        __extends(AbstractFormGroupDirective, _super);\n        function AbstractFormGroupDirective() {\n            _super.apply(this, arguments);\n        }\n        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        };\n        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        };\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n            /**\n             * Get the {@link FormGroup} backing this binding.\n             */\n            get: function () { return this.formDirective.getFormGroup(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n            /**\n             * Get the path to this control group.\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * Get the {@link Form} to which this group belongs.\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n        return AbstractFormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var AbstractControlStatus = (function () {\n        function AbstractControlStatus(cd) {\n            this._cd = cd;\n        }\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n            enumerable: true,\n            configurable: true\n        });\n        return AbstractControlStatus;\n    }());\n    var ngControlStatusHost = {\n        '[class.ng-untouched]': 'ngClassUntouched',\n        '[class.ng-touched]': 'ngClassTouched',\n        '[class.ng-pristine]': 'ngClassPristine',\n        '[class.ng-dirty]': 'ngClassDirty',\n        '[class.ng-valid]': 'ngClassValid',\n        '[class.ng-invalid]': 'ngClassInvalid',\n        '[class.ng-pending]': 'ngClassPending',\n    };\n    /**\n     * Directive automatically applied to Angular form controls that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatus = (function (_super) {\n        __extends$3(NgControlStatus, _super);\n        function NgControlStatus(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatus.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n        ];\n        /** @nocollapse */\n        NgControlStatus.ctorParameters = [\n            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatus;\n    }(AbstractControlStatus));\n    /**\n     * Directive automatically applied to Angular form groups that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * @stable\n     */\n    var NgControlStatusGroup = (function (_super) {\n        __extends$3(NgControlStatusGroup, _super);\n        function NgControlStatusGroup(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatusGroup.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                        host: ngControlStatusHost\n                    },] },\n        ];\n        /** @nocollapse */\n        NgControlStatusGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n        ];\n        return NgControlStatusGroup;\n    }(AbstractControlStatus));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$5(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n     */\n    var VALID = 'VALID';\n    /**\n     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n     */\n    var INVALID = 'INVALID';\n    /**\n     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n     * errors are not yet available for the input value.\n     */\n    var PENDING = 'PENDING';\n    /**\n     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n     * calculations of validity or value.\n     */\n    var DISABLED = 'DISABLED';\n    function _find(control, path, delimiter) {\n        if (path == null)\n            return null;\n        if (!(path instanceof Array)) {\n            path = path.split(delimiter);\n        }\n        if (path instanceof Array && (path.length === 0))\n            return null;\n        return path.reduce(function (v, name) {\n            if (v instanceof FormGroup) {\n                return v.controls[name] || null;\n            }\n            if (v instanceof FormArray) {\n                return v.at(name) || null;\n            }\n            return null;\n        }, control);\n    }\n    function toObservable(r) {\n        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n    }\n    function coerceToValidator(validator) {\n        return Array.isArray(validator) ? composeValidators(validator) : validator;\n    }\n    function coerceToAsyncValidator(asyncValidator) {\n        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n    }\n    /**\n     * @whatItDoes This is the base class for {@link FormControl}, {@link FormGroup}, and\n     * {@link FormArray}.\n     *\n     * It provides some of the shared behavior that all controls and groups of controls have, like\n     * running validators, calculating status, and resetting state. It also defines the properties\n     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n     * instantiated directly.\n     *\n     * @stable\n     */\n    var AbstractControl = (function () {\n        function AbstractControl(validator, asyncValidator) {\n            this.validator = validator;\n            this.asyncValidator = asyncValidator;\n            /** @internal */\n            this._onCollectionChange = function () { };\n            this._pristine = true;\n            this._touched = false;\n            /** @internal */\n            this._onDisabledChange = [];\n        }\n        Object.defineProperty(AbstractControl.prototype, \"value\", {\n            /**\n             * The value of the control.\n             */\n            get: function () { return this._value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n            /**\n             * The parent control.\n             */\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"status\", {\n            /**\n             * The validation status of the control. There are four possible\n             * validation statuses:\n             *\n             * * **VALID**:  control has passed all validation checks\n             * * **INVALID**: control has failed at least one validation check\n             * * **PENDING**: control is in the midst of conducting a validation check\n             * * **DISABLED**: control is exempt from validation checks\n             *\n             * These statuses are mutually exclusive, so a control cannot be\n             * both valid AND invalid or invalid AND disabled.\n             */\n            get: function () { return this._status; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n            /**\n             * A control is `valid` when its `status === VALID`.\n             *\n             * In order to have this status, the control must have passed all its\n             * validation checks.\n             */\n            get: function () { return this._status === VALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n            /**\n             * A control is `invalid` when its `status === INVALID`.\n             *\n             * In order to have this status, the control must have failed\n             * at least one of its validation checks.\n             */\n            get: function () { return this._status === INVALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n            /**\n             * A control is `pending` when its `status === PENDING`.\n             *\n             * In order to have this status, the control must be in the\n             * middle of conducting a validation check.\n             */\n            get: function () { return this._status == PENDING; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n            /**\n             * A control is `disabled` when its `status === DISABLED`.\n             *\n             * Disabled controls are exempt from validation checks and\n             * are not included in the aggregate value of their ancestor\n             * controls.\n             */\n            get: function () { return this._status === DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n            /**\n             * A control is `enabled` as long as its `status !== DISABLED`.\n             *\n             * In other words, it has a status of `VALID`, `INVALID`, or\n             * `PENDING`.\n             */\n            get: function () { return this._status !== DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n            /**\n             * Returns any errors generated by failing validation. If there\n             * are no errors, it will return null.\n             */\n            get: function () { return this._errors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n            /**\n             * A control is `pristine` if the user has not yet changed\n             * the value in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return this._pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n            /**\n             * A control is `dirty` if the user has changed the value\n             * in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             */\n            get: function () { return !this.pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n            /**\n            * A control is marked `touched` once the user has triggered\n            * a `blur` event on it.\n            */\n            get: function () { return this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n            /**\n             * A control is `untouched` if the user has not yet triggered\n             * a `blur` event on it.\n             */\n            get: function () { return !this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n            /**\n             * Emits an event every time the value of the control changes, in\n             * the UI or programmatically.\n             */\n            get: function () { return this._valueChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n            /**\n             * Emits an event every time the validation status of the control\n             * is re-calculated.\n             */\n            get: function () { return this._statusChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Sets the synchronous validators that are active on this control.  Calling\n         * this will overwrite any existing sync validators.\n         */\n        AbstractControl.prototype.setValidators = function (newValidator) {\n            this.validator = coerceToValidator(newValidator);\n        };\n        /**\n         * Sets the async validators that are active on this control. Calling this\n         * will overwrite any existing async validators.\n         */\n        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n            this.asyncValidator = coerceToAsyncValidator(newValidator);\n        };\n        /**\n         * Empties out the sync validator list.\n         */\n        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n        /**\n         * Empties out the async validator list.\n         */\n        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n        /**\n         * Marks the control as `touched`.\n         *\n         * This will also mark all direct ancestors as `touched` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = true;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `untouched`.\n         *\n         * If the control has any children, it will also mark all children as `untouched`\n         * to maintain the model, and re-calculate the `touched` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsUntouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = false;\n            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `dirty`.\n         *\n         * This will also mark all direct ancestors as `dirty` to maintain\n         * the model.\n         */\n        AbstractControl.prototype.markAsDirty = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = false;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsDirty({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pristine`.\n         *\n         * If the control has any children, it will also mark all children as `pristine`\n         * to maintain the model, and re-calculate the `pristine` status of all parent\n         * controls.\n         */\n        AbstractControl.prototype.markAsPristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = true;\n            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pending`.\n         */\n        AbstractControl.prototype.markAsPending = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._status = PENDING;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsPending({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Disables the control. This means the control will be exempt from validation checks and\n         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n         *\n         * If the control has children, all children will be disabled to maintain the model.\n         */\n        AbstractControl.prototype.disable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = DISABLED;\n            this._errors = null;\n            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n            this._updateValue();\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n        };\n        /**\n         * Enables the control. This means the control will be included in validation checks and\n         * the aggregate value of its parent. Its status is re-calculated based on its value and\n         * its validators.\n         *\n         * If the control has children, all children will be enabled.\n         */\n        AbstractControl.prototype.enable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = VALID;\n            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n        };\n        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity();\n                this._parent._updatePristine();\n                this._parent._updateTouched();\n            }\n        };\n        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n        /**\n         * Re-calculates the value and validation status of the control.\n         *\n         * By default, it will also update the value and validity of its ancestors.\n         */\n        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._setInitialStatus();\n            this._updateValue();\n            if (this.enabled) {\n                this._errors = this._runValidator();\n                this._status = this._calculateStatus();\n                if (this._status === VALID || this._status === PENDING) {\n                    this._runAsyncValidator(emitEvent);\n                }\n            }\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTreeValidity = function (_a) {\n            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        };\n        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n        AbstractControl.prototype._runValidator = function () {\n            return this.validator ? this.validator(this) : null;\n        };\n        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n            var _this = this;\n            if (this.asyncValidator) {\n                this._status = PENDING;\n                this._cancelExistingSubscription();\n                var obs = toObservable(this.asyncValidator(this));\n                this._asyncValidationSubscription =\n                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n            }\n        };\n        AbstractControl.prototype._cancelExistingSubscription = function () {\n            if (this._asyncValidationSubscription) {\n                this._asyncValidationSubscription.unsubscribe();\n            }\n        };\n        /**\n         * Sets errors on a form control.\n         *\n         * This is used when validations are run manually by the user, rather than automatically.\n         *\n         * Calling `setErrors` will also update the validity of the parent control.\n         *\n         * ### Example\n         *\n         * ```\n         * const login = new FormControl(\"someLogin\");\n         * login.setErrors({\n         *   \"notUnique\": true\n         * });\n         *\n         * expect(login.valid).toEqual(false);\n         * expect(login.errors).toEqual({\"notUnique\": true});\n         *\n         * login.setValue(\"someOtherLogin\");\n         *\n         * expect(login.valid).toEqual(true);\n         * ```\n         */\n        AbstractControl.prototype.setErrors = function (errors, _a) {\n            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n            this._errors = errors;\n            this._updateControlsErrors(emitEvent !== false);\n        };\n        /**\n         * Retrieves a child control given the control's name or path.\n         *\n         * Paths can be passed in as an array or a string delimited by a dot.\n         *\n         * To get a control nested within a `person` sub-group:\n         *\n         * * `this.form.get('person.name');`\n         *\n         * -OR-\n         *\n         * * `this.form.get(['person', 'name']);`\n         */\n        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns null or undefined.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            var control = path ? this.get(path) : this;\n            return control && control._errors ? control._errors[errorCode] : null;\n        };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns false.\n         *\n         * If no path is given, it checks for the error on the present control.\n         */\n        AbstractControl.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return !!this.getError(errorCode, path);\n        };\n        Object.defineProperty(AbstractControl.prototype, \"root\", {\n            /**\n             * Retrieves the top-level ancestor of this control.\n             */\n            get: function () {\n                var x = this;\n                while (x._parent) {\n                    x = x._parent;\n                }\n                return x;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n            this._status = this._calculateStatus();\n            if (emitEvent) {\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent) {\n                this._parent._updateControlsErrors(emitEvent);\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._initObservables = function () {\n            this._valueChanges = new EventEmitter();\n            this._statusChanges = new EventEmitter();\n        };\n        AbstractControl.prototype._calculateStatus = function () {\n            if (this._allControlsDisabled())\n                return DISABLED;\n            if (this._errors)\n                return INVALID;\n            if (this._anyControlsHaveStatus(PENDING))\n                return PENDING;\n            if (this._anyControlsHaveStatus(INVALID))\n                return INVALID;\n            return VALID;\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n            return this._anyControls(function (control) { return control.status === status; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsDirty = function () {\n            return this._anyControls(function (control) { return control.dirty; });\n        };\n        /** @internal */\n        AbstractControl.prototype._anyControlsTouched = function () {\n            return this._anyControls(function (control) { return control.touched; });\n        };\n        /** @internal */\n        AbstractControl.prototype._updatePristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = !this._anyControlsDirty();\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._updateTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = this._anyControlsTouched();\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /** @internal */\n        AbstractControl.prototype._isBoxedValue = function (formState) {\n            return typeof formState === 'object' && formState !== null &&\n                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n        };\n        /** @internal */\n        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n        return AbstractControl;\n    }());\n    /**\n     * @whatItDoes Tracks the value and validation status of an individual form control.\n     *\n     * It is one of the three fundamental building blocks of Angular forms, along with\n     * {@link FormGroup} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormControl}, you can pass in an initial value as the\n     * first argument. Example:\n     *\n     * ```ts\n     * const ctrl = new FormControl('some value');\n     * console.log(ctrl.value);     // 'some value'\n     *```\n     *\n     * You can also initialize the control with a form state object on instantiation,\n     * which includes both the value and whether or not the control is disabled.\n     * You can't use the value key without the disabled key; both are required\n     * to use this way of initialization.\n     *\n     * ```ts\n     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n     * console.log(ctrl.value);     // 'n/a'\n     * console.log(ctrl.status);   // 'DISABLED'\n     * ```\n     *\n     * To include a sync validator (or an array of sync validators) with the control,\n     * pass it in as the second argument. Async validators are also supported, but\n     * have to be passed in separately as the third arg.\n     *\n     * ```ts\n     * const ctrl = new FormControl('', Validators.required);\n     * console.log(ctrl.value);     // ''\n     * console.log(ctrl.status);   // 'INVALID'\n     * ```\n     *\n     * See its superclass, {@link AbstractControl}, for more properties and methods.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormControl = (function (_super) {\n        __extends$6(FormControl, _super);\n        function FormControl(formState, validator, asyncValidator) {\n            if (formState === void 0) { formState = null; }\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n            /** @internal */\n            this._onChange = [];\n            this._applyFormState(formState);\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n            this._initObservables();\n        }\n        /**\n         * Set the value of the form control to `value`.\n         *\n         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n         * and not its parent component. This defaults to false.\n         *\n         * If `emitEvent` is `true`, this\n         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n         * to true (as it falls through to `updateValueAndValidity`).\n         *\n         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n         * specified.\n         *\n         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n         */\n        FormControl.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n            this._value = value;\n            if (this._onChange.length && emitModelToViewChange !== false) {\n                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n            }\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Patches the value of a control.\n         *\n         * This function is functionally the same as {@link FormControl.setValue} at this level.\n         * It exists for symmetry with {@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n         * where it does behave differently.\n         */\n        FormControl.prototype.patchValue = function (value, options) {\n            if (options === void 0) { options = {}; }\n            this.setValue(value, options);\n        };\n        /**\n         * Resets the form control. This means by default:\n         *\n         * * it is marked as `pristine`\n         * * it is marked as `untouched`\n         * * value is set to null\n         *\n         * You can also reset to a specific form state by passing through a standalone\n         * value or a form state object that contains both a value and a disabled state\n         * (these are the only two properties that cannot be calculated).\n         *\n         * Ex:\n         *\n         * ```ts\n         * this.control.reset('Nancy');\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * ```\n         *\n         * OR\n         *\n         * ```\n         * this.control.reset({value: 'Nancy', disabled: true});\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * console.log(this.control.status);  // 'DISABLED'\n         * ```\n         */\n        FormControl.prototype.reset = function (formState, _a) {\n            if (formState === void 0) { formState = null; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._applyFormState(formState);\n            this.markAsPristine({ onlySelf: onlySelf });\n            this.markAsUntouched({ onlySelf: onlySelf });\n            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._updateValue = function () { };\n        /**\n         * @internal\n         */\n        FormControl.prototype._anyControls = function (condition) { return false; };\n        /**\n         * @internal\n         */\n        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n        /**\n         * Register a listener for change events.\n         */\n        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n        /**\n         * @internal\n         */\n        FormControl.prototype._clearChangeFns = function () {\n            this._onChange = [];\n            this._onDisabledChange = [];\n            this._onCollectionChange = function () { };\n        };\n        /**\n         * Register a listener for disabled events.\n         */\n        FormControl.prototype.registerOnDisabledChange = function (fn) {\n            this._onDisabledChange.push(fn);\n        };\n        /**\n         * @internal\n         */\n        FormControl.prototype._forEachChild = function (cb) { };\n        FormControl.prototype._applyFormState = function (formState) {\n            if (this._isBoxedValue(formState)) {\n                this._value = formState.value;\n                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                    this.enable({ onlySelf: true, emitEvent: false });\n            }\n            else {\n                this._value = formState;\n            }\n        };\n        return FormControl;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of a group of {@link FormControl}\n     * instances.\n     *\n     * A `FormGroup` aggregates the values of each child {@link FormControl} into one object,\n     * with each control name as the key.  It calculates its status by reducing the statuses\n     * of its children. For example, if one of the controls in a group is invalid, the entire\n     * group becomes invalid.\n     *\n     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormArray}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormGroup}, pass in a collection of child controls as the first\n     * argument. The key for each child will be the name under which it is registered.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('Nancy', Validators.minLength(2)),\n     *   last: new FormControl('Drew'),\n     * });\n     *\n     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n     * console.log(form.status);  // 'VALID'\n     * ```\n     *\n     * You can also include group-level validators as the second arg, or group-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   password: new FormControl('', Validators.minLength(2)),\n     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n     * }, passwordMatchValidator);\n     *\n     *\n     * function passwordMatchValidator(g: FormGroup) {\n     *    return g.get('password').value === g.get('passwordConfirm').value\n     *       ? null : {'mismatch': true};\n     * }\n     * ```\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormGroup = (function (_super) {\n        __extends$6(FormGroup, _super);\n        function FormGroup(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Registers a control with the group's list of controls.\n         *\n         * This method does not update value or validity of the control, so for\n         * most cases you'll want to use {@link FormGroup.addControl} instead.\n         */\n        FormGroup.prototype.registerControl = function (name, control) {\n            if (this.controls[name])\n                return this.controls[name];\n            this.controls[name] = control;\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n            return control;\n        };\n        /**\n         * Add a control to this group.\n         */\n        FormGroup.prototype.addControl = function (name, control) {\n            this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove a control from this group.\n         */\n        FormGroup.prototype.removeControl = function (name) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormGroup.prototype.setControl = function (name, control) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            if (control)\n                this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Check whether there is an enabled control with the given name in the group.\n         *\n         * It will return false for disabled controls. If you'd like to check for\n         * existence in the group only, use {@link AbstractControl.get} instead.\n         */\n        FormGroup.prototype.contains = function (controlName) {\n            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n        };\n        /**\n         *  Sets the value of the {@link FormGroup}. It accepts an object that matches\n         *  the structure of the group, with control names as keys.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.setValue({first: 'Nancy', last: 'Drew'});\n         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n         *\n         *  ```\n         */\n        FormGroup.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            Object.keys(value).forEach(function (name) {\n                _this._throwIfControlMissing(name);\n                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormGroup}. It accepts an object with control\n         *  names as keys, and will do its best to match the values to the correct controls\n         *  in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.patchValue({first: 'Nancy'});\n         *  console.log(form.value);   // {first: 'Nancy', last: null}\n         *\n         *  ```\n         */\n        FormGroup.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            Object.keys(value).forEach(function (name) {\n                if (_this.controls[name]) {\n                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Resets the {@link FormGroup}. This means by default:\n         *\n         * * The group and all descendants are marked `pristine`\n         * * The group and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in a map of states\n         * that matches the structure of your form, with control names as keys. The state\n         * can be a standalone value or a form state object with both a value and a disabled\n         * status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.form.reset({first: 'name', last: 'last name'});\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.form.reset({\n         *   first: {value: 'name', disabled: true},\n         *   last: 'last'\n         * });\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * console.log(this.form.get('first').status);  // 'DISABLED'\n         * ```\n         */\n        FormGroup.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = {}; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, name) {\n                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the {@link FormGroup}, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the group.\n         */\n        FormGroup.prototype.getRawValue = function () {\n            return this._reduceChildren({}, function (acc, control, name) {\n                acc[name] = control.value;\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._throwIfControlMissing = function (name) {\n            if (!Object.keys(this.controls).length) {\n                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.controls[name]) {\n                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n            }\n        };\n        /** @internal */\n        FormGroup.prototype._forEachChild = function (cb) {\n            var _this = this;\n            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n        };\n        /** @internal */\n        FormGroup.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) {\n                control.setParent(_this);\n                control._registerOnCollectionChange(_this._onCollectionChange);\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n        /** @internal */\n        FormGroup.prototype._anyControls = function (condition) {\n            var _this = this;\n            var res = false;\n            this._forEachChild(function (control, name) {\n                res = res || (_this.contains(name) && condition(control));\n            });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._reduceValue = function () {\n            var _this = this;\n            return this._reduceChildren({}, function (acc, control, name) {\n                if (control.enabled || _this.disabled) {\n                    acc[name] = control.value;\n                }\n                return acc;\n            });\n        };\n        /** @internal */\n        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n            var res = initValue;\n            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n            return res;\n        };\n        /** @internal */\n        FormGroup.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n                var controlName = _a[_i];\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n            return Object.keys(this.controls).length > 0 || this.disabled;\n        };\n        /** @internal */\n        FormGroup.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, name) {\n                if (value[name] === undefined) {\n                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n                }\n            });\n        };\n        return FormGroup;\n    }(AbstractControl));\n    /**\n     * @whatItDoes Tracks the value and validity state of an array of {@link FormControl}\n     * instances.\n     *\n     * A `FormArray` aggregates the values of each child {@link FormControl} into an array.\n     * It calculates its status by reducing the statuses of its children. For example, if one of\n     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n     *\n     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {@link FormControl} and {@link FormGroup}.\n     *\n     * @howToUse\n     *\n     * When instantiating a {@link FormArray}, pass in an array of child controls as the first\n     * argument.\n     *\n     * ### Example\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl('Nancy', Validators.minLength(2)),\n     *   new FormControl('Drew'),\n     * ]);\n     *\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * console.log(arr.status);  // 'VALID'\n     * ```\n     *\n     * You can also include array-level validators as the second arg, or array-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Adding or removing controls\n     *\n     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n     * as broken change detection.\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * @stable\n     */\n    var FormArray = (function (_super) {\n        __extends$6(FormArray, _super);\n        function FormArray(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Get the {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.at = function (index) { return this.controls[index]; };\n        /**\n         * Insert a new {@link AbstractControl} at the end of the array.\n         */\n        FormArray.prototype.push = function (control) {\n            this.controls.push(control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Insert a new {@link AbstractControl} at the given `index` in the array.\n         */\n        FormArray.prototype.insert = function (index, control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove the control at the given `index` in the array.\n         */\n        FormArray.prototype.removeAt = function (index) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         */\n        FormArray.prototype.setControl = function (index, control) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            if (control) {\n                this.controls.splice(index, 0, control);\n                this._registerControl(control);\n            }\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        Object.defineProperty(FormArray.prototype, \"length\", {\n            /**\n             * Length of the control array.\n             */\n            get: function () { return this.controls.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the value of the {@link FormArray}. It accepts an array that matches\n         *  the structure of the control.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.setValue(['Nancy', 'Drew']);\n         *  console.log(arr.value);   // ['Nancy', 'Drew']\n         *  ```\n         */\n        FormArray.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            value.forEach(function (newValue, index) {\n                _this._throwIfControlMissing(index);\n                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {@link FormArray}. It accepts an array that matches the\n         *  structure of the control, and will do its best to match the values to the correct\n         *  controls in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.patchValue(['Nancy']);\n         *  console.log(arr.value);   // ['Nancy', null]\n         *  ```\n         */\n        FormArray.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            value.forEach(function (newValue, index) {\n                if (_this.at(index)) {\n                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Resets the {@link FormArray}. This means by default:\n         *\n         * * The array and all descendants are marked `pristine`\n         * * The array and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in an array of states\n         * that matches the structure of the control. The state can be a standalone value\n         * or a form state object with both a value and a disabled status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.arr.reset(['name', 'last name']);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.arr.reset([\n         *   {value: 'name', disabled: true},\n         *   'last'\n         * ]);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * console.log(this.arr.get(0).status);  // 'DISABLED'\n         * ```\n         */\n        FormArray.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = []; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, index) {\n                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the array, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the array.\n         */\n        FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n        /** @internal */\n        FormArray.prototype._throwIfControlMissing = function (index) {\n            if (!this.controls.length) {\n                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.at(index)) {\n                throw new Error(\"Cannot find form control at index \" + index);\n            }\n        };\n        /** @internal */\n        FormArray.prototype._forEachChild = function (cb) {\n            this.controls.forEach(function (control, index) { cb(control, index); });\n        };\n        /** @internal */\n        FormArray.prototype._updateValue = function () {\n            var _this = this;\n            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n        };\n        /** @internal */\n        FormArray.prototype._anyControls = function (condition) {\n            return this.controls.some(function (control) { return control.enabled && condition(control); });\n        };\n        /** @internal */\n        FormArray.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) { return _this._registerControl(control); });\n        };\n        /** @internal */\n        FormArray.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, i) {\n                if (value[i] === undefined) {\n                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n                }\n            });\n        };\n        /** @internal */\n        FormArray.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                if (control.enabled)\n                    return false;\n            }\n            return this.controls.length > 0 || this.disabled;\n        };\n        FormArray.prototype._registerControl = function (control) {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        };\n        return FormArray;\n    }(AbstractControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n    };\n    var resolvedPromise = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a top-level {@link FormGroup} instance and binds it to a form\n     * to track aggregate form value and validation status.\n     *\n     * @howToUse\n     *\n     * As soon as you import the `FormsModule`, this directive becomes active by default on\n     * all `<form>` tags.  You don't need to add a special selector.\n     *\n     * You can export the directive into a local template variable using `ngForm` as the key\n     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n     * {@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n     * will give you access to the aggregate value and validity status of the form, as well as\n     * user interaction properties like `dirty` and `touched`.\n     *\n     * To register child controls with the form, you'll want to use {@link NgModel} with a\n     * `name` attribute.  You can also use {@link NgModelGroup} if you'd like to create\n     * sub-groups within the form.\n     *\n     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgForm = (function (_super) {\n        __extends$4(NgForm, _super);\n        function NgForm(validators, asyncValidators) {\n            _super.call(this);\n            this._submitted = false;\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        Object.defineProperty(NgForm.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"controls\", {\n            get: function () { return this.form.controls; },\n            enumerable: true,\n            configurable: true\n        });\n        NgForm.prototype.addControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                dir._control = container.registerControl(dir.name, dir.control);\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.removeControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.addFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                var group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        NgForm.prototype.removeFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        NgForm.prototype.updateModel = function (dir, value) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var ctrl = _this.form.get(dir.path);\n                ctrl.setValue(value);\n            });\n        };\n        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n        NgForm.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        NgForm.prototype.onReset = function () { this.resetForm(); };\n        NgForm.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        NgForm.prototype._findContainer = function (path) {\n            path.pop();\n            return path.length ? this.form.get(path) : this.form;\n        };\n        NgForm.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                        providers: [formDirectiveProvider],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        outputs: ['ngSubmit'],\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgForm.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        return NgForm;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Examples = {\n        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n    };\n\n    var TemplateDrivenErrors = (function () {\n        function TemplateDrivenErrors() {\n        }\n        TemplateDrivenErrors.modelParentException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n        };\n        TemplateDrivenErrors.formGroupNameException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        TemplateDrivenErrors.missingNameException = function () {\n            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n        };\n        TemplateDrivenErrors.modelGroupParentException = function () {\n            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        return TemplateDrivenErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var modelGroupProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n    };\n    /**\n     * @whatItDoes Creates and binds a {@link FormGroup} instance to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used as a child of {@link NgForm} (or in other words,\n     * within `<form>` tags).\n     *\n     * Use this directive if you'd like to create a sub-group within a form. This can\n     * come in handy if you want to validate a sub-group of your form separately from\n     * the rest of your form, or if some values in your domain model make more sense to\n     * consume together in a nested object.\n     *\n     * Pass in the name you'd like this sub-group to have and it will become the key\n     * for the sub-group in the form's full value. You can also export the directive into\n     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n     *\n     * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     * @stable\n     */\n    var NgModelGroup = (function (_super) {\n        __extends$8(NgModelGroup, _super);\n        function NgModelGroup(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        NgModelGroup.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        };\n        NgModelGroup.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n        ];\n        /** @nocollapse */\n        NgModelGroup.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        NgModelGroup.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n        };\n        return NgModelGroup;\n    }(AbstractFormGroupDirective));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n    };\n    /**\n     * `ngModel` forces an additional change detection run when its inputs change:\n     * E.g.:\n     * ```\n     * <div>{{myModel.valid}}</div>\n     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n     * ```\n     * I.e. `ngModel` can export itself on the element and then be used in the template.\n     * Normally, this would result in expressions before the `input` that use the exported directive\n     * to have and old value as they have been\n     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n     * detection run.\n     *\n     * Notes:\n     * - this is just one extra run no matter how many `ngModel` have been changed.\n     * - this is a general problem when using `exportAs` for directives!\n     */\n    var resolvedPromise$1 = Promise.resolve(null);\n    /**\n     * @whatItDoes Creates a {@link FormControl} instance from a domain model and binds it\n     * to a form control element.\n     *\n     * The {@link FormControl} instance will track the value, user interaction, and\n     * validation status of the control and keep the view synced with the model. If used\n     * within a parent form, the directive will also register itself with the form as a child\n     * control.\n     *\n     * @howToUse\n     *\n     * This directive can be used by itself or as part of a larger form. All you need is the\n     * `ngModel` selector to activate it.\n     *\n     * It accepts a domain model as an optional {@link @Input}. If you have a one-way binding\n     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n     * the domain model in your class as well.\n     *\n     * If you wish to inspect the properties of the associated {@link FormControl} (like\n     * validity state), you can also export the directive into a local template variable using\n     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n     * will fall through to the control anyway, so you can access them directly. You can see a\n     * full list of properties directly available in {@link AbstractControlDirective}.\n     *\n     * The following is an example of a simple standalone control using `ngModel`:\n     *\n     * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n     *\n     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n     * so that the control can be registered with the parent form under that name.\n     *\n     * It's worth noting that in the context of a parent form, you often can skip one-way or\n     * two-way binding because the parent form will sync the value for you. You can access\n     * its properties by exporting it into a local template variable using `ngForm` (ex:\n     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n     *\n     * If you do need to populate initial values into your form, using a one-way binding for\n     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n     * than the domain model's value on submit.\n     *\n     * Take a look at an example of using `ngModel` within a form:\n     *\n     * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * To see `ngModel` examples with different form control types, see:\n     *\n     * * Radio buttons: {@link RadioControlValueAccessor}\n     * * Selects: {@link SelectControlValueAccessor}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: `FormsModule`\n     *\n     *  @stable\n     */\n    var NgModel = (function (_super) {\n        __extends$7(NgModel, _super);\n        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            /** @internal */\n            this._control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        NgModel.prototype.ngOnChanges = function (changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n        Object.defineProperty(NgModel.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"path\", {\n            get: function () {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModel.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        NgModel.prototype._setUpControl = function () {\n            this._isStandalone() ? this._setUpStandalone() :\n                this.formDirective.addControl(this);\n            this._registered = true;\n        };\n        NgModel.prototype._isStandalone = function () {\n            return !this._parent || (this.options && this.options.standalone);\n        };\n        NgModel.prototype._setUpStandalone = function () {\n            setUpControl(this._control, this);\n            this._control.updateValueAndValidity({ emitEvent: false });\n        };\n        NgModel.prototype._checkForErrors = function () {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        };\n        NgModel.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        };\n        NgModel.prototype._checkName = function () {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        };\n        NgModel.prototype._updateValue = function (value) {\n            var _this = this;\n            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n        };\n        NgModel.prototype._updateDisabled = function (changes) {\n            var _this = this;\n            var disabledValue = changes['isDisabled'].currentValue;\n            var isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(function () {\n                if (isDisabled && !_this.control.disabled) {\n                    _this.control.disable();\n                }\n                else if (!isDisabled && _this.control.disabled) {\n                    _this.control.enable();\n                }\n            });\n        };\n        NgModel.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n                        providers: [formControlBinding],\n                        exportAs: 'ngModel'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgModel.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        NgModel.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n        };\n        return NgModel;\n    }(NgControl));\n\n    var ReactiveErrors = (function () {\n        function ReactiveErrors() {\n        }\n        ReactiveErrors.controlParentException = function () {\n            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n        };\n        ReactiveErrors.ngModelGroupException = function () {\n            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n        };\n        ReactiveErrors.missingFormException = function () {\n            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n        };\n        ReactiveErrors.groupParentException = function () {\n            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n        };\n        ReactiveErrors.arrayParentException = function () {\n            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n        };\n        ReactiveErrors.disabledAttrWarning = function () {\n            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n        };\n        return ReactiveErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formControlBinding$1 = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n    };\n    /**\n     * @whatItDoes Syncs a standalone {@link FormControl} instance to a form control element.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * Use this directive if you'd like to create and manage a {@link FormControl} instance directly.\n     * Simply create a {@link FormControl}, save it to your component class, and pass it into the\n     * {@link FormControlDirective}.\n     *\n     * This directive is designed to be used as a standalone control.  Unlike {@link FormControlName},\n     * it does not require that your {@link FormControl} instance be part of any parent\n     * {@link FormGroup}, and it won't be registered to any {@link FormGroupDirective} that\n     * exists above it.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormControl} instance. See a full list of available properties in\n     * {@link AbstractControl}.\n     *\n     * **Set the value**: You can pass in an initial value when instantiating the {@link FormControl},\n     * or you can set it programmatically later using {@link AbstractControl.setValue} or\n     * {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     *  @stable\n     */\n    var FormControlDirective = (function (_super) {\n        __extends$9(FormControlDirective, _super);\n        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this.update = new EventEmitter();\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.ngOnChanges = function (changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        FormControlDirective.prototype._isControlChanged = function (changes) {\n            return changes.hasOwnProperty('form');\n        };\n        FormControlDirective.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n        ];\n        /** @nocollapse */\n        FormControlDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlDirective;\n    }(NgControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formDirectiveProvider$1 = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n    };\n    /**\n     * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive accepts an existing {@link FormGroup} instance. It will then use this\n     * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n     * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n     * and {@link FormArrayName} directives.\n     *\n     * **Set value**: You can set the form's initial value when instantiating the\n     * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue} methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n     * to the {@link FormGroup}'s {@link AbstractControl.valueChanges} event.  You can also listen to\n     * its {@link AbstractControl.statusChanges} event to be notified when the validation status is\n     * re-calculated.\n     *\n     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormGroupDirective = (function (_super) {\n        __extends$11(FormGroupDirective, _super);\n        function FormGroupDirective(_validators, _asyncValidators) {\n            _super.call(this);\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            this._submitted = false;\n            this.directives = [];\n            this.form = null;\n            this.ngSubmit = new EventEmitter();\n        }\n        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        };\n        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        FormGroupDirective.prototype.addControl = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        };\n        FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n        FormGroupDirective.prototype.addFormGroup = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n        FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.addFormArray = function (dir) {\n            var ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n        FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n        FormGroupDirective.prototype.updateModel = function (dir, value) {\n            var ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        };\n        FormGroupDirective.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n        FormGroupDirective.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /** @internal */\n        FormGroupDirective.prototype._updateDomValue = function () {\n            var _this = this;\n            this.directives.forEach(function (dir) {\n                var newCtrl = _this.form.get(dir.path);\n                if (dir._control !== newCtrl) {\n                    cleanUpControl(dir._control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir._control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        };\n        FormGroupDirective.prototype._updateRegistrations = function () {\n            var _this = this;\n            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(function () { });\n            this._oldForm = this.form;\n        };\n        FormGroupDirective.prototype._updateValidators = function () {\n            var sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        };\n        FormGroupDirective.prototype._checkFormPresent = function () {\n            if (!this.form) {\n                ReactiveErrors.missingFormException();\n            }\n        };\n        FormGroupDirective.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroup]',\n                        providers: [formDirectiveProvider$1],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        FormGroupDirective.ctorParameters = [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n            'ngSubmit': [{ type: _angular_core.Output },],\n        };\n        return FormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var formGroupNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormGroup} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive can only be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormGroup} you want to link, and\n     * will look for a {@link FormGroup} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form groups can come in handy when you want to validate a sub-group of a\n     * form separately from the rest or when you'd like to group the values of certain\n     * controls into their own nested object.\n     *\n     * **Access the group**: You can access the associated {@link FormGroup} using the\n     * {@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n     *\n     * You can also access individual controls within the group using dot syntax.\n     * Ex: `this.form.get('name.first')`\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormGroup}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormGroup}, or you can set it programmatically later using\n     * {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormGroupName = (function (_super) {\n        __extends$12(FormGroupName, _super);\n        function FormGroupName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        FormGroupName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        };\n        FormGroupName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormGroupName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormGroupName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n        };\n        return FormGroupName;\n    }(AbstractFormGroupDirective));\n    var formArrayNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n    };\n    /**\n     * @whatItDoes Syncs a nested {@link FormArray} to a DOM element.\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {@link FormArray} you want to link, and\n     * will look for a {@link FormArray} registered with that name in the parent\n     * {@link FormGroup} instance you passed into {@link FormGroupDirective}.\n     *\n     * Nested form arrays can come in handy when you have a group of form controls but\n     * you're not sure how many there will be. Form arrays allow you to create new\n     * form controls dynamically.\n     *\n     * **Access the array**: You can access the associated {@link FormArray} using the\n     * {@link AbstractControl.get} method on the parent {@link FormGroup}.\n     * Ex: `this.form.get('cities')`.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {@link FormArray}. See a full list of available properties in {@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {@link FormArray}, or you can set the value programmatically later using the\n     * {@link FormArray}'s {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}\n     * methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n     * subscribe to the {@link FormArray}'s {@link AbstractControl.valueChanges} event.  You can also\n     * listen to its {@link AbstractControl.statusChanges} event to be notified when the validation\n     * status is re-calculated.\n     *\n     * **Add new controls**: You can add new controls to the {@link FormArray} dynamically by\n     * calling its {@link FormArray.push} method.\n     *  Ex: `this.form.get('cities').push(new FormControl());`\n     *\n     * ### Example\n     *\n     * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n     *\n     * * **npm package**: `@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * @stable\n     */\n    var FormArrayName = (function (_super) {\n        __extends$12(FormArrayName, _super);\n        function FormArrayName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        FormArrayName.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        };\n        FormArrayName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        };\n        Object.defineProperty(FormArrayName.prototype, \"control\", {\n            get: function () { return this.formDirective.getFormArray(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n            get: function () {\n                return this._parent ? this._parent.formDirective : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        FormArrayName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        };\n        FormArrayName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormArrayName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ];\n        FormArrayName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n        };\n        return FormArrayName;\n    }(ControlContainer));\n    function _hasInvalidParent(parent) {\n        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n            !(parent instanceof FormArrayName);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var controlNameBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n    };\n    /**\n     * @whatItDoes  Syncs a {@link FormControl} in an existing {@link FormGroup} to a form control\n     * element by name.\n     *\n     * In other words, this directive ensures that any values written to the {@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {@link FormControl} instance (view -> model).\n     *\n     * @howToUse\n     *\n     * This directive is designed to be used with a parent {@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the {@link FormControl} instance you want to\n     * link, and will look for a {@link FormControl} registered with that name in the\n     * closest {@link FormGroup} or {@link FormArray} above it.\n     *\n     * **Access the control**: You can access the {@link FormControl} associated with\n     * this directive by using the {@link AbstractControl.get} method.\n     * Ex: `this.form.get('first');`\n     *\n     * **Get value**: the `value` property is always synced and available on the {@link FormControl}.\n     * See a full list of available properties in {@link AbstractControl}.\n     *\n     *  **Set value**: You can set an initial value for the control when instantiating the\n     *  {@link FormControl}, or you can set it programmatically later using\n     *  {@link AbstractControl.setValue} or {@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {@link AbstractControl.valueChanges} event.  You can also listen to\n     * {@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * To see `formControlName` examples with different form control types, see:\n     *\n     * * Radio buttons: {@link RadioControlValueAccessor}\n     * * Selects: {@link SelectControlValueAccessor}\n     *\n     * **npm package**: `@angular/forms`\n     *\n     * **NgModule**: {@link ReactiveFormsModule}\n     *\n     *  @stable\n     */\n    var FormControlName = (function (_super) {\n        __extends$10(FormControlName, _super);\n        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this._added = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype.ngOnChanges = function (changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        };\n        FormControlName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        };\n        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        Object.defineProperty(FormControlName.prototype, \"path\", {\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"validator\", {\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"control\", {\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        FormControlName.prototype._checkParentType = function () {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        };\n        FormControlName.prototype._setUpControl = function () {\n            this._checkParentType();\n            this._control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        };\n        FormControlName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n        ];\n        /** @nocollapse */\n        FormControlName.ctorParameters = [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ];\n        FormControlName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlName;\n    }(NgControl));\n\n    var REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `required` validator to any controls marked with the\n     * `required` attribute, via the {@link NG_VALIDATORS} binding.\n     *\n     * ### Example\n     *\n     * ```\n     * <input name=\"fullName\" ngModel required>\n     * ```\n     *\n     * @stable\n     */\n    var RequiredValidator = (function () {\n        function RequiredValidator() {\n        }\n        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n            get: function () { return this._required; },\n            set: function (value) {\n                this._required = value != null && value !== false && \"\" + value !== 'false';\n                if (this._onChange)\n                    this._onChange();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.required(c) : null;\n        };\n        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        RequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n                        providers: [REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required ? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        RequiredValidator.ctorParameters = [];\n        RequiredValidator.propDecorators = {\n            'required': [{ type: _angular_core.Input },],\n        };\n        return RequiredValidator;\n    }());\n    /**\n     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='min'}\n     */\n    var MIN_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n     *\n     * @stable\n     */\n    var MinLengthValidator = (function () {\n        function MinLengthValidator() {\n        }\n        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('minlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MinLengthValidator.prototype.validate = function (c) {\n            return this.minlength == null ? null : this._validator(c);\n        };\n        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MinLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n        };\n        MinLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                        providers: [MIN_LENGTH_VALIDATOR],\n                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MinLengthValidator.ctorParameters = [];\n        MinLengthValidator.propDecorators = {\n            'minlength': [{ type: _angular_core.Input },],\n        };\n        return MinLengthValidator;\n    }());\n    /**\n     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='max'}\n     */\n    var MAX_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n     * `formControl`,\n     * or control with `ngModel` that also has a `maxlength` attribute.\n     *\n     * @stable\n     */\n    var MaxLengthValidator = (function () {\n        function MaxLengthValidator() {\n        }\n        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('maxlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        MaxLengthValidator.prototype.validate = function (c) {\n            return this.maxlength != null ? this._validator(c) : null;\n        };\n        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        MaxLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n        };\n        MaxLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                        providers: [MAX_LENGTH_VALIDATOR],\n                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MaxLengthValidator.ctorParameters = [];\n        MaxLengthValidator.propDecorators = {\n            'maxlength': [{ type: _angular_core.Input },],\n        };\n        return MaxLengthValidator;\n    }());\n    var PATTERN_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `pattern` validator to any controls marked with the\n     * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n     * as the regex to validate Control value against.  Follows pattern attribute\n     * semantics; i.e. regex must match entire Control value.\n     *\n     * ### Example\n     *\n     * ```\n     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n     * ```\n     * @stable\n     */\n    var PatternValidator = (function () {\n        function PatternValidator() {\n        }\n        PatternValidator.prototype.ngOnChanges = function (changes) {\n            if ('pattern' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n        PatternValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                        providers: [PATTERN_VALIDATOR],\n                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        PatternValidator.ctorParameters = [];\n        PatternValidator.propDecorators = {\n            'pattern': [{ type: _angular_core.Input },],\n        };\n        return PatternValidator;\n    }());\n\n    /**\n     * @whatItDoes Creates an {@link AbstractControl} from a user-specified configuration.\n     *\n     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n     * forms.\n     *\n     * @howToUse\n     *\n     * To use, inject `FormBuilder` into your component class. You can then call its methods\n     * directly.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n     *\n     *  * **npm package**: `@angular/forms`\n     *\n     *  * **NgModule**: {@link ReactiveFormsModule}\n     *\n     * @stable\n     */\n    var FormBuilder = (function () {\n        function FormBuilder() {\n        }\n        /**\n         * Construct a new {@link FormGroup} with the given map of configuration.\n         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n         *\n         * See the {@link FormGroup} constructor for more details.\n         */\n        FormBuilder.prototype.group = function (controlsConfig, extra) {\n            if (extra === void 0) { extra = null; }\n            var controls = this._reduceControls(controlsConfig);\n            var validator = isPresent(extra) ? extra['validator'] : null;\n            var asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n            return new FormGroup(controls, validator, asyncValidator);\n        };\n        /**\n         * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n         * `asyncValidator`.\n         *\n         * `formState` can either be a standalone value for the form control or an object\n         * that contains both a value and a disabled status.\n         *\n         */\n        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            return new FormControl(formState, validator, asyncValidator);\n        };\n        /**\n         * Construct a {@link FormArray} from the given `controlsConfig` array of\n         * configuration, with the given optional `validator` and `asyncValidator`.\n         */\n        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n            var _this = this;\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n            return new FormArray(controls, validator, asyncValidator);\n        };\n        /** @internal */\n        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n            var _this = this;\n            var controls = {};\n            Object.keys(controlsConfig).forEach(function (controlName) {\n                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        };\n        /** @internal */\n        FormBuilder.prototype._createControl = function (controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                var value = controlConfig[0];\n                var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        };\n        FormBuilder.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        FormBuilder.ctorParameters = [];\n        return FormBuilder;\n    }());\n\n    var SHARED_FORM_DIRECTIVES = [\n        NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n        RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus,\n        NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator\n    ];\n    var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n    var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n    /**\n     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n     */\n    var InternalFormsSharedModule = (function () {\n        function InternalFormsSharedModule() {\n        }\n        InternalFormsSharedModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: SHARED_FORM_DIRECTIVES,\n                        exports: SHARED_FORM_DIRECTIVES,\n                    },] },\n        ];\n        /** @nocollapse */\n        InternalFormsSharedModule.ctorParameters = [];\n        return InternalFormsSharedModule;\n    }());\n\n    /**\n     * The ng module for forms.\n     * @stable\n     */\n    var FormsModule = (function () {\n        function FormsModule() {\n        }\n        FormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                        providers: [RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        FormsModule.ctorParameters = [];\n        return FormsModule;\n    }());\n    /**\n     * The ng module for reactive forms.\n     * @stable\n     */\n    var ReactiveFormsModule = (function () {\n        function ReactiveFormsModule() {\n        }\n        ReactiveFormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                        providers: [FormBuilder, RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        ReactiveFormsModule.ctorParameters = [];\n        return ReactiveFormsModule;\n    }());\n\n    exports.AbstractControlDirective = AbstractControlDirective;\n    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n    exports.ControlContainer = ControlContainer;\n    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n    exports.DefaultValueAccessor = DefaultValueAccessor;\n    exports.NgControl = NgControl;\n    exports.NgControlStatus = NgControlStatus;\n    exports.NgControlStatusGroup = NgControlStatusGroup;\n    exports.NgForm = NgForm;\n    exports.NgModel = NgModel;\n    exports.NgModelGroup = NgModelGroup;\n    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n    exports.FormControlDirective = FormControlDirective;\n    exports.FormControlName = FormControlName;\n    exports.FormGroupDirective = FormGroupDirective;\n    exports.FormArrayName = FormArrayName;\n    exports.FormGroupName = FormGroupName;\n    exports.NgSelectOption = NgSelectOption;\n    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n    exports.MaxLengthValidator = MaxLengthValidator;\n    exports.MinLengthValidator = MinLengthValidator;\n    exports.PatternValidator = PatternValidator;\n    exports.RequiredValidator = RequiredValidator;\n    exports.FormBuilder = FormBuilder;\n    exports.AbstractControl = AbstractControl;\n    exports.FormArray = FormArray;\n    exports.FormControl = FormControl;\n    exports.FormGroup = FormGroup;\n    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n    exports.NG_VALIDATORS = NG_VALIDATORS;\n    exports.Validators = Validators;\n    exports.FormsModule = FormsModule;\n    exports.ReactiveFormsModule = ReactiveFormsModule;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/bundles/forms.umd.js\n// module id = 58\n// module chunks = 1","module.exports = \"/*--- Login content ---*/\\n.contentWrapper{\\n    display: block;\\n    margin: auto;\\n    width: 60%;\\n}\\nh2{\\n    display: block;\\n    color: #ffffff;\\n    font-size: 5rem;\\n    font-weight: lighter;\\n    text-align: center;\\n}\\n\\n/*Input fields*/\\n.innerForm{\\n    display: block;\\n    width: 60%;\\n    margin: auto;\\n}\\n#username, #password, #confirmpass{\\n    color: #262626;\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n    background-color: #ffffff;\\n    width: 100%;\\n    height: 4rem;\\n    margin-right: 150rem;\\n    margin-bottom: 1rem;\\n    padding-left: 1rem;\\n}\\n::-webkit-input-placeholder { /* WebKit, Blink, Edge */\\n    color:    #262626;\\n    text-transform: uppercase;\\n    font-family: 'Roboto', sans-serif;\\n}\\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\\n    color:    #262626;\\n    opacity:  1;\\n    text-transform: uppercase;\\n    font-family: 'Roboto', sans-serif;\\n}\\n::-moz-placeholder { /* Mozilla Firefox 19+ */\\n    color:    #262626;\\n    opacity:  1;\\n    text-transform: uppercase;\\n    font-family: 'Roboto', sans-serif;\\n}\\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\\n    color:    #262626;\\n    text-transform: uppercase;\\n    font-family: 'Roboto', sans-serif;\\n}\\n\\n/* Register link */\\n.register, .loginLink{\\n    display: block;\\n    width: 100%;\\n    margin: 0 auto;\\n    text-align: center;\\n    text-decoration: none;\\n    color: #ffffff;\\n    font-size: 1.5rem;\\n    font-weight: lighter;\\n}\\n\\n.register span, .loginLink span{\\n    color: #1565c0;\\n}\\n\\n/* Button */\\n.loginBtn{\\n    font-size: 3rem;\\n    border: none;\\n    color: #fff;\\n    margin-top: 1.25rem;\\n    line-height: normal;\\n    background-color: #1565c0;\\n    width: 30.4rem;\\n    height:4rem;\\n    margin-bottom: 5rem;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/login.component.css\n// module id = 59\n// module chunks = 1","import { Component ,OnInit} from '@angular/core';\n\n\nimport { ScoreService } from '../services/score.service';\nimport { UserService } from '../services/user.service';\nimport {EventEmitter} from \"events\";\nimport{ Item } from './../models/Item';\nimport {LoadingPage} from \"./loading-indicator/loading-indicator\";\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'dashboard',\n    template: require('./templates/dashboard.component.html'),\n    styles: [ require('./styles/app.component.css'),require('./styles/dashboard.component.css') ]\n})\nexport class DashboardComponent extends LoadingPage implements OnInit {\n    username:string;\n    error:string;\n    items:Array<any>;\n    //chart variables\n    graphdata:Array<any>;\n    labels:Array<number>=[];\n    ChartType:string='line';\n    ChartLegend:boolean = true;\n    username=localStorage.getItem('username');\n    constructor(private  scoreService : ScoreService, private userService : UserService, private router: Router){\n        super(true);\n        this.ready();\n    }\n\n    ngOnInit(){\n        this.graphdata=[];\n        this.items=[];\n        console.log(this.userService.isLoggedIn());\n        this.standby();\n        this.scoreService.getScores().subscribe(\n            (data)=> {\n                    console.log('executing');\n                    this.processData(data);\n                    console.log(this.graphdata);\n                    this.ready();\n            }, error => this.error=error);\n    }\n\n    startNew(){\n        this.router.navigate(['Exercise']);\n    }\n\n    private processData(data){\n        let max:number = 0;\n        data.map((i) => {\n            console.log(i);\n            let data:Array<number>;\n            data=[];\n            let item;\n            item={ };\n            item.title = i.translations;\n            item.completed = 0;\n            let total = 0;\n            let totalscore=0;\n            //needed for labals\n            if(i.tests.length > max)max= i.tests.length;\n            //process testdata + calculate avg\n            i.tests.map((test) => {\n                console.log('processing data');\n                item.completed++;\n                total +=test.max;\n                totalscore += test.score;\n                data.push(test.score);\n            });\n            item.avarage=Math.round((totalscore/total)*1000)/100;\n            this.graphdata.push({data: data, label:item.title});\n            this.items.push(item);\n\n        });\n        //fill labels array\n        while(this.labels.length < max) this.labels.push(this.labels.length);\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/dashboard.componet.ts","// exercise.component.ts\nimport {Component, OnInit,EventEmitter,Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Entry } from './../models/Entry';\n\nimport { EntryService } from './../services/entry.service';\nimport {LoadingPage,LoadingIndicator} from \"./loading-indicator/loading-indicator\";\n\n@Component({\n    selector: 'exercise',\n    template: require('./templates/exercise.component.html'),\n    styles: [ require('./styles/exercise.component.css') ],\n    directives:[ LoadingIndicator]\n})\nexport class ExerciseComponent extends LoadingPage implements OnInit{\n    entries: Array<Entry>;\n    answers: Array<any>;\n    score:any;\n    curEntry: Entry;\n    setup:boolean;\n    curlangs:string;\n    languages=[\"NL-EN\",\"EN-NL\"];\n    private error;\n    constructor( private entryService:EntryService,private router: Router){\n        super(true);\n        this.ready();\n    };\n    private lenght = 10;\n    count = 0;\n    i = 0;\n    ngOnInit(){\n        console.log('initializing..');\n        this.setup =true;\n        this.score = -1;\n    }\n\n    startExercise(amount,language){\n        this.standby();\n        this.curlangs=language.selected;\n        this.setup = false;\n        this.entries=this.getEntries(amount.value);\n    }\n\n    getEntries(amount){\n        this.entryService.getEntries(amount)\n            .subscribe(\n                (entries) => {\n                    entries.forEach((entry) => entry.translation = \"\");\n                    this.entries=entries;\n                    this.curEntry = entries[0];\n                    this.ready();\n                    console.log(\"got the entries\");\n                },\n                error => this.error = error\n            )\n    }\n\n    next(answer){\n        console.log(answer);\n        this.count ++;\n        if(this.entries[this.count]){\n            this.entries[this.count-1].translation = answer;\n            this.curEntry = this.entries[this.count];\n\n        }\n        else {\n            console.log('test completed');\n            this.getScore();\n        }\n\n    }\n\n    getScore(){\n        this.standby()\n        console.log(\"end of test\");\n        console.log(this.entries);\n        this.entryService.getScore(this.entries).subscribe(\n            (res) => {\n                this.score = res.score;\n                this.ready();\n                console.log(res.score);\n            },\n            error => this.error = error\n        );\n\n        this.curEntry = null;\n    }\n\n    startNewTest(){\n        this.score = -1;\n        this.count= 0 ;\n        this.setup = true;\n    }\n\n    goBack(){\n        this.router.navigate(['Dashboard'])\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/exercise.component.ts","import {FormControl} from \"@angular/forms\";\nimport {Component, EventEmitter, OnInit} from \"@angular/core\";\n\nimport { SearchService } from \"./../../services/search.service\"\n\n\n@Component({\n    selector: 'livesearch',\n    template: require(\"./html/livesearch.component.html\"),\n    styles: [ require(\"./css/livesearch.component.css\") ]\n})\nexport class LiveSearch implements OnInit{\n    items: Array<string>;\n    term = new FormControl();\n    public selectEvent=new EventEmitter();\n    constructor(private searchService: SearchService) {\n\n    }\n\n    ngOnInit()\n    {\n        this.term.valueChanges\n            .debounceTime(400)\n            .subscribe(term => this.searchService.search(term).subscribe(items => this.items = items));\n    }\n\n    search(term){\n        this.term.valueChanges\n            .debounceTime(400)\n            .subscribe(term => this.searchService.search(term).subscribe(items => this.items = items));\n    }\n\n    select(student){\n        this.term=student.name;\n        this.selectEvent.emit(student);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/livesearch/livesearch.component.ts","// login.component.ts\nimport { Component,EventEmitter,OnInit,Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { App } from './app.component'\n\n//services\nimport { UserService } from './../services/user.service';\n\n//loading-indicator\nimport {LoadingIndicator, LoadingPage} from './loading-indicator/loading-indicator';\n\n//globaleventmanager for navbar\nimport { GlobalEventsManager } from './../GlobalEventsManager'\n\n//model\nimport { User } from './../models/User';\nimport {OnInit} from \"@angular/core\";\nimport {AppComponent} from \"./app.component\";\n\n@Component({\n    selector: 'login',\n    template: require('./templates/login.component.html'),\n    styles: [ require('./styles/login.component.css') ],\n    directives: [LoadingIndicator]\n})\nexport class LoginComponent extends LoadingPage implements OnInit{\n    LoggedIn = this.userService.isLoggedIn();\n    constructor(private userService: UserService, private router: Router,private eventEmitter : GlobalEventsManager) {\n        super(true);\n        this.ready();\n    }\n\n    ngOnInit(){\n        if(this.LoggedIn){\n            this.eventEmitter.showNavBar.emit(true);\n            this.router.navigate(['Dashboard'])\n        };\n    }\n\n    onSubmit(event,email, password) {\n        this.standby();\n        event.preventDefault();\n        console.log(\"submitting\");\n        this.userService.login(email, password).subscribe((result) => {\n            if (result) {\n                this.eventEmitter.showNavBar.emit(true);\n                this.router.navigate(['Dashboard']);\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/login.component.ts","// login.component.ts\nimport { Component,EventEmitter,OnInit,Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n//services\nimport { UserService } from './../services/user.service';\n\n//loading-indicator\nimport {LoadingIndicator, LoadingPage} from './loading-indicator/loading-indicator';\n\n//model\nimport { User } from './../models/User';\nimport {OnInit} from \"@angular/core\";\n\n@Component({\n    selector: 'register',\n    template: require('./templates/register.component.html'),\n    styles: [ require('./styles/login.component.css') ],\n    directives: [LoadingIndicator]\n})\nexport class RegisterComponent extends LoadingPage implements OnInit{\n    @Output() userStatus = new EventEmitter<boolean>();\n    errorMessage: string;\n    constructor(private userService: UserService, private router: Router) {\n        super(true);\n        this.ready();\n    }\n\n    ngOnInit(){\n        this.userStatus.emit(false);\n    }\n\n    onSubmit(event,email, password,confirmpass) {\n        this.standby();\n        event.preventDefault();\n        console.log(\"submitting\");\n        this.userService.register(email, password,confirmpass).subscribe((result) => {\n            if (result) {\n                this.router.navigate(['Exercise']);\n            }\n            else{\n\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/register.componet.ts","// user.service.ts\nimport { Injectable } from '@angular/core';\nimport { Http, Headers,URLSearchParams,RequestOptions } from '@angular/http';\n\nimport {CookieService} from  './cookie.service';\nimport  {ExtractService } from './extract.service';\n\n@Injectable()\nexport class ClassService {\n    constructor(private http: Http, private  cookieService:CookieService,private  extractService : ExtractService) { }\n\n    createClass(name:string){\n        console.log(name);\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('token',this.cookieService.getCookie('auth_token'));\n        //options\n        let options = new RequestOptions({\n            headers: headers,\n            search: params\n        });\n        console.log(options);\n        return this.http\n            .post('https://teammartini.herokuapp.com/Group/SaveGroup',JSON.stringify({name: name}),options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n\n    addStudent(students,id){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('token',this.cookieService.getCookie('auth_token'));\n        params.append('students',students);\n        params.append('groupid',id);\n        //options\n        let options = new RequestOptions({\n            headers: headers,\n            search: params\n        });\n        return this.http\n            .post('http://teammartini.herokuapp.com/Group/Addstudents',options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n\n    getClasses(){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('token',this.cookieService.getCookie('auth_token'));\n        //options\n        let options = new RequestOptions({\n            headers: headers,\n            search: params\n        });\n        return this.http\n            .get('http://teammartini.herokuapp.com/GetGroups',options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n\n    getTests(id){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('token',this.cookieService.getCookie('auth_token'));\n        params.append('groupid',id);\n        //options\n        let options = new RequestOptions({\n            headers: headers,\n            search: params\n        });\n        return this.http\n            .get('http://teammartini.herokuapp.com/Group/GetTests',options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n\n    checkifTeacher(){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('token',this.cookieService.getCookie('auth_token'));\n        //options\n        let options = new RequestOptions({\n            headers: headers,\n            search: params\n        });\n        return this.http\n            .get('http://teammartini.herokuapp.com/IsTeacher',options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n\n    getStudents(id){\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('token',this.cookieService.getCookie('auth_token'));\n        params.append('groupid',id);\n        //options\n        let options = new RequestOptions({\n            headers: headers,\n            search: params\n        });\n        return this.http\n            .get('http://teammartini.herokuapp.com/Group/GetStudents',options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/class.service.ts","import { Injectable }     from '@angular/core';\nimport { Http, Response , Headers,RequestOptions,URLSearchParams} from '@angular/http';\nimport { Entry } from './../models/Entry';\nimport { Observable }     from 'rxjs/Observable';\n\nimport { CookieService } from './cookie.service';\nimport { ExtractService } from './extract.service';\n@Injectable()\nexport class EntryService {\n    constructor (private http: Http, private cookieService : CookieService, private  extractService: ExtractService) {}\n\n    getEntries (count): Observable<Entry[]> {\n        //create auth header\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('amount',count);\n        params.append('token', this.cookieService.getCookie('auth_token'));\n\n        //create options\n        let options = new RequestOptions({\n            headers:headers,\n            search: params\n        });\n\n        return this.http.get(\"http://teammartini.herokuapp.com/Exercise\",options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n\n    getScore(answers){\n        //add headers\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('token',this.cookieService.getCookie('auth_token'));\n\n        //options\n        let options = new RequestOptions({\n            headers: headers,\n            search: params\n        });\n        //post answers and return score\n            return this.http.post('http://teammartini.herokuapp.com/Exercise', JSON.stringify(answers), options)\n                .map(this.extractService.extractData)\n                .catch(this.extractService.handleError);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/entry.service.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class LoggedInGuard implements CanActivate {\n    constructor(private user: UserService) {}\n\n    canActivate() {\n        return this.user.isLoggedIn();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/logged-in.guard.ts","// user.service.ts\nimport { Injectable } from '@angular/core';\nimport { Http, Headers,URLSearchParams,RequestOptions } from '@angular/http';\n\nimport {CookieService} from  './cookie.service';\nimport { ExtractService } from './extract.service';\n\n@Injectable()\nexport class ScoreService {\n\n    constructor(private http: Http, private  cookieService:CookieService,private  extractService : ExtractService) { }\n\n    getScores(){\n        console.log(\"getting data\");\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('token',this.cookieService.getCookie('auth_token'));\n\n        //options\n        let options = new RequestOptions({\n            headers: headers,\n            search: params\n        });\n        return this.http\n            .get('http://teammartini.herokuapp.com/GetUserResults',options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/score.service.ts","import { Injectable }     from '@angular/core';\nimport { Http, Response , Headers,RequestOptions,URLSearchParams} from '@angular/http';\nimport { Entry } from './../models/Entry';\nimport { Observable }     from 'rxjs/Observable';\n\nimport { CookieService } from './cookie.service';\nimport { ExtractService } from './extract.service';\n@Injectable()\nexport class SearchService {\n    constructor (private http: Http, private cookieService : CookieService, private  extractService: ExtractService) {}\n\n    search (term) {\n        //create auth header\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        //routeparams\n        let params = new URLSearchParams();\n        params.append('name',term);\n        params.append('token', this.cookieService.getCookie('auth_token'));\n\n        //create options\n        let options = new RequestOptions({\n            headers:headers,\n            search: params\n        });\n\n        return this.http.get(\"http://teammartini.herokuapp.com/SearchUser\",options)\n            .map(this.extractService.extractData)\n            .catch(this.extractService.handleError);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/search.service.ts","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n  (factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * A segment of text within the template.\n   */\n  var TextAst = (function () {\n      function TextAst(value, ngContentIndex, sourceSpan) {\n          this.value = value;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return TextAst;\n  }());\n  /**\n   * A bound expression within the text of a template.\n   */\n  var BoundTextAst = (function () {\n      function BoundTextAst(value, ngContentIndex, sourceSpan) {\n          this.value = value;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundTextAst.prototype.visit = function (visitor, context) {\n          return visitor.visitBoundText(this, context);\n      };\n      return BoundTextAst;\n  }());\n  /**\n   * A plain attribute on an element.\n   */\n  var AttrAst = (function () {\n      function AttrAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n      return AttrAst;\n  }());\n  /**\n   * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n   * `[@trigger]=\"stateExp\"`)\n   */\n  var BoundElementPropertyAst = (function () {\n      function BoundElementPropertyAst(name, type, securityContext, needsRuntimeSecurityContext, value, unit, sourceSpan) {\n          this.name = name;\n          this.type = type;\n          this.securityContext = securityContext;\n          this.needsRuntimeSecurityContext = needsRuntimeSecurityContext;\n          this.value = value;\n          this.unit = unit;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n          return visitor.visitElementProperty(this, context);\n      };\n      Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n          get: function () { return this.type === exports.PropertyBindingType.Animation; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundElementPropertyAst;\n  }());\n  /**\n   * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n   * `(@trigger.phase)=\"callback($event)\"`).\n   */\n  var BoundEventAst = (function () {\n      function BoundEventAst(name, target, phase, handler, sourceSpan) {\n          this.name = name;\n          this.target = target;\n          this.phase = phase;\n          this.handler = handler;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundEventAst.calcFullName = function (name, target, phase) {\n          if (target) {\n              return target + \":\" + name;\n          }\n          else if (phase) {\n              return \"@\" + name + \".\" + phase;\n          }\n          else {\n              return name;\n          }\n      };\n      BoundEventAst.prototype.visit = function (visitor, context) {\n          return visitor.visitEvent(this, context);\n      };\n      Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n          get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n          get: function () { return !!this.phase; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundEventAst;\n  }());\n  /**\n   * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n   */\n  var ReferenceAst = (function () {\n      function ReferenceAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      ReferenceAst.prototype.visit = function (visitor, context) {\n          return visitor.visitReference(this, context);\n      };\n      return ReferenceAst;\n  }());\n  /**\n   * A variable declaration on a <template> (e.g. `var-someName=\"someLocalName\"`).\n   */\n  var VariableAst = (function () {\n      function VariableAst(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      VariableAst.prototype.visit = function (visitor, context) {\n          return visitor.visitVariable(this, context);\n      };\n      return VariableAst;\n  }());\n  /**\n   * An element declaration in a template.\n   */\n  var ElementAst = (function () {\n      function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan, endSourceSpan) {\n          this.name = name;\n          this.attrs = attrs;\n          this.inputs = inputs;\n          this.outputs = outputs;\n          this.references = references;\n          this.directives = directives;\n          this.providers = providers;\n          this.hasViewContainer = hasViewContainer;\n          this.children = children;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n          this.endSourceSpan = endSourceSpan;\n      }\n      ElementAst.prototype.visit = function (visitor, context) {\n          return visitor.visitElement(this, context);\n      };\n      return ElementAst;\n  }());\n  /**\n   * A `<template>` element included in an Angular template.\n   */\n  var EmbeddedTemplateAst = (function () {\n      function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, children, ngContentIndex, sourceSpan) {\n          this.attrs = attrs;\n          this.outputs = outputs;\n          this.references = references;\n          this.variables = variables;\n          this.directives = directives;\n          this.providers = providers;\n          this.hasViewContainer = hasViewContainer;\n          this.children = children;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n          return visitor.visitEmbeddedTemplate(this, context);\n      };\n      return EmbeddedTemplateAst;\n  }());\n  /**\n   * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n   */\n  var BoundDirectivePropertyAst = (function () {\n      function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n          this.directiveName = directiveName;\n          this.templateName = templateName;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n          return visitor.visitDirectiveProperty(this, context);\n      };\n      return BoundDirectivePropertyAst;\n  }());\n  /**\n   * A directive declared on an element.\n   */\n  var DirectiveAst = (function () {\n      function DirectiveAst(directive, inputs, hostProperties, hostEvents, sourceSpan) {\n          this.directive = directive;\n          this.inputs = inputs;\n          this.hostProperties = hostProperties;\n          this.hostEvents = hostEvents;\n          this.sourceSpan = sourceSpan;\n      }\n      DirectiveAst.prototype.visit = function (visitor, context) {\n          return visitor.visitDirective(this, context);\n      };\n      return DirectiveAst;\n  }());\n  /**\n   * A provider declared on an element\n   */\n  var ProviderAst = (function () {\n      function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n          this.token = token;\n          this.multiProvider = multiProvider;\n          this.eager = eager;\n          this.providers = providers;\n          this.providerType = providerType;\n          this.lifecycleHooks = lifecycleHooks;\n          this.sourceSpan = sourceSpan;\n      }\n      ProviderAst.prototype.visit = function (visitor, context) {\n          // No visit method in the visitor for now...\n          return null;\n      };\n      return ProviderAst;\n  }());\n  exports.ProviderAstType;\n  (function (ProviderAstType) {\n      ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n      ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n      ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n      ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n      ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n  })(exports.ProviderAstType || (exports.ProviderAstType = {}));\n  /**\n   * Position where content is to be projected (instance of `<ng-content>` in a template).\n   */\n  var NgContentAst = (function () {\n      function NgContentAst(index, ngContentIndex, sourceSpan) {\n          this.index = index;\n          this.ngContentIndex = ngContentIndex;\n          this.sourceSpan = sourceSpan;\n      }\n      NgContentAst.prototype.visit = function (visitor, context) {\n          return visitor.visitNgContent(this, context);\n      };\n      return NgContentAst;\n  }());\n  /**\n   * Enumeration of types of property bindings.\n   */\n  exports.PropertyBindingType;\n  (function (PropertyBindingType) {\n      /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Property\"] = 0] = \"Property\";\n      /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Attribute\"] = 1] = \"Attribute\";\n      /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Class\"] = 2] = \"Class\";\n      /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Style\"] = 3] = \"Style\";\n      /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n      PropertyBindingType[PropertyBindingType[\"Animation\"] = 4] = \"Animation\";\n  })(exports.PropertyBindingType || (exports.PropertyBindingType = {}));\n  /**\n   * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n   */\n  function templateVisitAll(visitor, asts, context) {\n      if (context === void 0) { context = null; }\n      var result = [];\n      var visit = visitor.visit ?\n          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n          function (ast) { return ast.visit(visitor, context); };\n      asts.forEach(function (ast) {\n          var astResult = visit(ast);\n          if (astResult) {\n              result.push(astResult);\n          }\n      });\n      return result;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var $EOF = 0;\n  var $TAB = 9;\n  var $LF = 10;\n  var $VTAB = 11;\n  var $FF = 12;\n  var $CR = 13;\n  var $SPACE = 32;\n  var $BANG = 33;\n  var $DQ = 34;\n  var $HASH = 35;\n  var $$ = 36;\n  var $PERCENT = 37;\n  var $AMPERSAND = 38;\n  var $SQ = 39;\n  var $LPAREN = 40;\n  var $RPAREN = 41;\n  var $STAR = 42;\n  var $PLUS = 43;\n  var $COMMA = 44;\n  var $MINUS = 45;\n  var $PERIOD = 46;\n  var $SLASH = 47;\n  var $COLON = 58;\n  var $SEMICOLON = 59;\n  var $LT = 60;\n  var $EQ = 61;\n  var $GT = 62;\n  var $QUESTION = 63;\n  var $0 = 48;\n  var $9 = 57;\n  var $A = 65;\n  var $E = 69;\n  var $F = 70;\n  var $X = 88;\n  var $Z = 90;\n  var $LBRACKET = 91;\n  var $BACKSLASH = 92;\n  var $RBRACKET = 93;\n  var $CARET = 94;\n  var $_ = 95;\n  var $a = 97;\n  var $e = 101;\n  var $f = 102;\n  var $n = 110;\n  var $r = 114;\n  var $t = 116;\n  var $u = 117;\n  var $v = 118;\n  var $x = 120;\n  var $z = 122;\n  var $LBRACE = 123;\n  var $BAR = 124;\n  var $RBRACE = 125;\n  var $NBSP = 160;\n  var $BT = 96;\n  function isWhitespace(code) {\n      return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n  }\n  function isDigit(code) {\n      return $0 <= code && code <= $9;\n  }\n  function isAsciiLetter(code) {\n      return code >= $a && code <= $z || code >= $A && code <= $Z;\n  }\n  function isAsciiHexDigit(code) {\n      return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n  }\n\n  function isPresent(obj) {\n      return obj != null;\n  }\n  function isBlank(obj) {\n      return obj == null;\n  }\n  var STRING_MAP_PROTO = Object.getPrototypeOf({});\n  function isStrictStringMap(obj) {\n      return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n  }\n  function stringify(token) {\n      if (typeof token === 'string') {\n          return token;\n      }\n      if (token == null) {\n          return '' + token;\n      }\n      if (token.overriddenName) {\n          return token.overriddenName;\n      }\n      if (token.name) {\n          return token.name;\n      }\n      var res = token.toString();\n      var newLineIndex = res.indexOf('\\n');\n      return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n  }\n  var NumberWrapper = (function () {\n      function NumberWrapper() {\n      }\n      NumberWrapper.parseIntAutoRadix = function (text) {\n          var result = parseInt(text);\n          if (isNaN(result)) {\n              throw new Error('Invalid integer literal when parsing ' + text);\n          }\n          return result;\n      };\n      NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n      return NumberWrapper;\n  }());\n  function isJsObject(o) {\n      return o !== null && (typeof o === 'function' || typeof o === 'object');\n  }\n  function isPrimitive(obj) {\n      return !isJsObject(obj);\n  }\n  function escapeRegExp(s) {\n      return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  function assertArrayOfStrings(identifier, value) {\n      if (!_angular_core.isDevMode() || isBlank(value)) {\n          return;\n      }\n      if (!Array.isArray(value)) {\n          throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n      }\n      for (var i = 0; i < value.length; i += 1) {\n          if (typeof value[i] !== 'string') {\n              throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n          }\n      }\n  }\n  var INTERPOLATION_BLACKLIST_REGEXPS = [\n      /^\\s*$/,\n      /[<>]/,\n      /^[{}]$/,\n      /&(#|[a-z])/i,\n      /^\\/\\//,\n  ];\n  function assertInterpolationSymbols(identifier, value) {\n      if (isPresent(value) && !(Array.isArray(value) && value.length == 2)) {\n          throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n      }\n      else if (_angular_core.isDevMode() && !isBlank(value)) {\n          var start_1 = value[0];\n          var end_1 = value[1];\n          // black list checking\n          INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n              if (regexp.test(start_1) || regexp.test(end_1)) {\n                  throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n              }\n          });\n      }\n  }\n\n  var InterpolationConfig = (function () {\n      function InterpolationConfig(start, end) {\n          this.start = start;\n          this.end = end;\n      }\n      InterpolationConfig.fromArray = function (markers) {\n          if (!markers) {\n              return DEFAULT_INTERPOLATION_CONFIG;\n          }\n          assertInterpolationSymbols('interpolation', markers);\n          return new InterpolationConfig(markers[0], markers[1]);\n      };\n      ;\n      return InterpolationConfig;\n  }());\n  var DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$1 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var ParserError = (function () {\n      function ParserError(message, input, errLocation, ctxLocation) {\n          this.input = input;\n          this.errLocation = errLocation;\n          this.ctxLocation = ctxLocation;\n          this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n      }\n      return ParserError;\n  }());\n  var ParseSpan = (function () {\n      function ParseSpan(start, end) {\n          this.start = start;\n          this.end = end;\n      }\n      return ParseSpan;\n  }());\n  var AST = (function () {\n      function AST(span) {\n          this.span = span;\n      }\n      AST.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return null;\n      };\n      AST.prototype.toString = function () { return 'AST'; };\n      return AST;\n  }());\n  /**\n   * Represents a quoted expression of the form:\n   *\n   * quote = prefix `:` uninterpretedExpression\n   * prefix = identifier\n   * uninterpretedExpression = arbitrary string\n   *\n   * A quoted expression is meant to be pre-processed by an AST transformer that\n   * converts it into another AST that no longer contains quoted expressions.\n   * It is meant to allow third-party developers to extend Angular template\n   * expression language. The `uninterpretedExpression` part of the quote is\n   * therefore not interpreted by the Angular's own expression parser.\n   */\n  var Quote = (function (_super) {\n      __extends$1(Quote, _super);\n      function Quote(span, prefix, uninterpretedExpression, location) {\n          _super.call(this, span);\n          this.prefix = prefix;\n          this.uninterpretedExpression = uninterpretedExpression;\n          this.location = location;\n      }\n      Quote.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitQuote(this, context);\n      };\n      Quote.prototype.toString = function () { return 'Quote'; };\n      return Quote;\n  }(AST));\n  var EmptyExpr = (function (_super) {\n      __extends$1(EmptyExpr, _super);\n      function EmptyExpr() {\n          _super.apply(this, arguments);\n      }\n      EmptyExpr.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          // do nothing\n      };\n      return EmptyExpr;\n  }(AST));\n  var ImplicitReceiver = (function (_super) {\n      __extends$1(ImplicitReceiver, _super);\n      function ImplicitReceiver() {\n          _super.apply(this, arguments);\n      }\n      ImplicitReceiver.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitImplicitReceiver(this, context);\n      };\n      return ImplicitReceiver;\n  }(AST));\n  /**\n   * Multiple expressions separated by a semicolon.\n   */\n  var Chain = (function (_super) {\n      __extends$1(Chain, _super);\n      function Chain(span, expressions) {\n          _super.call(this, span);\n          this.expressions = expressions;\n      }\n      Chain.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitChain(this, context);\n      };\n      return Chain;\n  }(AST));\n  var Conditional = (function (_super) {\n      __extends$1(Conditional, _super);\n      function Conditional(span, condition, trueExp, falseExp) {\n          _super.call(this, span);\n          this.condition = condition;\n          this.trueExp = trueExp;\n          this.falseExp = falseExp;\n      }\n      Conditional.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitConditional(this, context);\n      };\n      return Conditional;\n  }(AST));\n  var PropertyRead = (function (_super) {\n      __extends$1(PropertyRead, _super);\n      function PropertyRead(span, receiver, name) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      PropertyRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPropertyRead(this, context);\n      };\n      return PropertyRead;\n  }(AST));\n  var PropertyWrite = (function (_super) {\n      __extends$1(PropertyWrite, _super);\n      function PropertyWrite(span, receiver, name, value) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.value = value;\n      }\n      PropertyWrite.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPropertyWrite(this, context);\n      };\n      return PropertyWrite;\n  }(AST));\n  var SafePropertyRead = (function (_super) {\n      __extends$1(SafePropertyRead, _super);\n      function SafePropertyRead(span, receiver, name) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      SafePropertyRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitSafePropertyRead(this, context);\n      };\n      return SafePropertyRead;\n  }(AST));\n  var KeyedRead = (function (_super) {\n      __extends$1(KeyedRead, _super);\n      function KeyedRead(span, obj, key) {\n          _super.call(this, span);\n          this.obj = obj;\n          this.key = key;\n      }\n      KeyedRead.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitKeyedRead(this, context);\n      };\n      return KeyedRead;\n  }(AST));\n  var KeyedWrite = (function (_super) {\n      __extends$1(KeyedWrite, _super);\n      function KeyedWrite(span, obj, key, value) {\n          _super.call(this, span);\n          this.obj = obj;\n          this.key = key;\n          this.value = value;\n      }\n      KeyedWrite.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitKeyedWrite(this, context);\n      };\n      return KeyedWrite;\n  }(AST));\n  var BindingPipe = (function (_super) {\n      __extends$1(BindingPipe, _super);\n      function BindingPipe(span, exp, name, args) {\n          _super.call(this, span);\n          this.exp = exp;\n          this.name = name;\n          this.args = args;\n      }\n      BindingPipe.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPipe(this, context);\n      };\n      return BindingPipe;\n  }(AST));\n  var LiteralPrimitive = (function (_super) {\n      __extends$1(LiteralPrimitive, _super);\n      function LiteralPrimitive(span, value) {\n          _super.call(this, span);\n          this.value = value;\n      }\n      LiteralPrimitive.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralPrimitive(this, context);\n      };\n      return LiteralPrimitive;\n  }(AST));\n  var LiteralArray = (function (_super) {\n      __extends$1(LiteralArray, _super);\n      function LiteralArray(span, expressions) {\n          _super.call(this, span);\n          this.expressions = expressions;\n      }\n      LiteralArray.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralArray(this, context);\n      };\n      return LiteralArray;\n  }(AST));\n  var LiteralMap = (function (_super) {\n      __extends$1(LiteralMap, _super);\n      function LiteralMap(span, keys, values) {\n          _super.call(this, span);\n          this.keys = keys;\n          this.values = values;\n      }\n      LiteralMap.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitLiteralMap(this, context);\n      };\n      return LiteralMap;\n  }(AST));\n  var Interpolation = (function (_super) {\n      __extends$1(Interpolation, _super);\n      function Interpolation(span, strings, expressions) {\n          _super.call(this, span);\n          this.strings = strings;\n          this.expressions = expressions;\n      }\n      Interpolation.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitInterpolation(this, context);\n      };\n      return Interpolation;\n  }(AST));\n  var Binary = (function (_super) {\n      __extends$1(Binary, _super);\n      function Binary(span, operation, left, right) {\n          _super.call(this, span);\n          this.operation = operation;\n          this.left = left;\n          this.right = right;\n      }\n      Binary.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitBinary(this, context);\n      };\n      return Binary;\n  }(AST));\n  var PrefixNot = (function (_super) {\n      __extends$1(PrefixNot, _super);\n      function PrefixNot(span, expression) {\n          _super.call(this, span);\n          this.expression = expression;\n      }\n      PrefixNot.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitPrefixNot(this, context);\n      };\n      return PrefixNot;\n  }(AST));\n  var MethodCall = (function (_super) {\n      __extends$1(MethodCall, _super);\n      function MethodCall(span, receiver, name, args) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.args = args;\n      }\n      MethodCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitMethodCall(this, context);\n      };\n      return MethodCall;\n  }(AST));\n  var SafeMethodCall = (function (_super) {\n      __extends$1(SafeMethodCall, _super);\n      function SafeMethodCall(span, receiver, name, args) {\n          _super.call(this, span);\n          this.receiver = receiver;\n          this.name = name;\n          this.args = args;\n      }\n      SafeMethodCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitSafeMethodCall(this, context);\n      };\n      return SafeMethodCall;\n  }(AST));\n  var FunctionCall = (function (_super) {\n      __extends$1(FunctionCall, _super);\n      function FunctionCall(span, target, args) {\n          _super.call(this, span);\n          this.target = target;\n          this.args = args;\n      }\n      FunctionCall.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return visitor.visitFunctionCall(this, context);\n      };\n      return FunctionCall;\n  }(AST));\n  var ASTWithSource = (function (_super) {\n      __extends$1(ASTWithSource, _super);\n      function ASTWithSource(ast, source, location, errors) {\n          _super.call(this, new ParseSpan(0, isBlank(source) ? 0 : source.length));\n          this.ast = ast;\n          this.source = source;\n          this.location = location;\n          this.errors = errors;\n      }\n      ASTWithSource.prototype.visit = function (visitor, context) {\n          if (context === void 0) { context = null; }\n          return this.ast.visit(visitor, context);\n      };\n      ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n      return ASTWithSource;\n  }(AST));\n  var TemplateBinding = (function () {\n      function TemplateBinding(span, key, keyIsVar, name, expression) {\n          this.span = span;\n          this.key = key;\n          this.keyIsVar = keyIsVar;\n          this.name = name;\n          this.expression = expression;\n      }\n      return TemplateBinding;\n  }());\n  var RecursiveAstVisitor = (function () {\n      function RecursiveAstVisitor() {\n      }\n      RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n          ast.left.visit(this);\n          ast.right.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n      RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n          ast.condition.visit(this);\n          ast.trueExp.visit(this);\n          ast.falseExp.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n          ast.exp.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n          ast.target.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n      RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n          return this.visitAll(ast.expressions, context);\n      };\n      RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n          ast.obj.visit(this);\n          ast.key.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n          ast.obj.visit(this);\n          ast.key.visit(this);\n          ast.value.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n          return this.visitAll(ast.expressions, context);\n      };\n      RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n      RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n      RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n          ast.receiver.visit(this);\n          return this.visitAll(ast.args, context);\n      };\n      RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n          ast.expression.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n          ast.receiver.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n          ast.receiver.visit(this);\n          ast.value.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n          ast.receiver.visit(this);\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n          ast.receiver.visit(this);\n          return this.visitAll(ast.args, context);\n      };\n      RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n          var _this = this;\n          asts.forEach(function (ast) { return ast.visit(_this, context); });\n          return null;\n      };\n      RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n      return RecursiveAstVisitor;\n  }());\n\n  exports.TokenType;\n  (function (TokenType) {\n      TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n      TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n      TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n      TokenType[TokenType[\"String\"] = 3] = \"String\";\n      TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n      TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n      TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n  })(exports.TokenType || (exports.TokenType = {}));\n  var KEYWORDS = ['var', 'let', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\n  var Lexer = (function () {\n      function Lexer() {\n      }\n      Lexer.prototype.tokenize = function (text) {\n          var scanner = new _Scanner(text);\n          var tokens = [];\n          var token = scanner.scanToken();\n          while (token != null) {\n              tokens.push(token);\n              token = scanner.scanToken();\n          }\n          return tokens;\n      };\n      Lexer.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      Lexer.ctorParameters = [];\n      return Lexer;\n  }());\n  var Token = (function () {\n      function Token(index, type, numValue, strValue) {\n          this.index = index;\n          this.type = type;\n          this.numValue = numValue;\n          this.strValue = strValue;\n      }\n      Token.prototype.isCharacter = function (code) {\n          return this.type == exports.TokenType.Character && this.numValue == code;\n      };\n      Token.prototype.isNumber = function () { return this.type == exports.TokenType.Number; };\n      Token.prototype.isString = function () { return this.type == exports.TokenType.String; };\n      Token.prototype.isOperator = function (operater) {\n          return this.type == exports.TokenType.Operator && this.strValue == operater;\n      };\n      Token.prototype.isIdentifier = function () { return this.type == exports.TokenType.Identifier; };\n      Token.prototype.isKeyword = function () { return this.type == exports.TokenType.Keyword; };\n      Token.prototype.isKeywordLet = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'let'; };\n      Token.prototype.isKeywordNull = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'null'; };\n      Token.prototype.isKeywordUndefined = function () {\n          return this.type == exports.TokenType.Keyword && this.strValue == 'undefined';\n      };\n      Token.prototype.isKeywordTrue = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'true'; };\n      Token.prototype.isKeywordFalse = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'false'; };\n      Token.prototype.isKeywordThis = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'this'; };\n      Token.prototype.isError = function () { return this.type == exports.TokenType.Error; };\n      Token.prototype.toNumber = function () { return this.type == exports.TokenType.Number ? this.numValue : -1; };\n      Token.prototype.toString = function () {\n          switch (this.type) {\n              case exports.TokenType.Character:\n              case exports.TokenType.Identifier:\n              case exports.TokenType.Keyword:\n              case exports.TokenType.Operator:\n              case exports.TokenType.String:\n              case exports.TokenType.Error:\n                  return this.strValue;\n              case exports.TokenType.Number:\n                  return this.numValue.toString();\n              default:\n                  return null;\n          }\n      };\n      return Token;\n  }());\n  function newCharacterToken(index, code) {\n      return new Token(index, exports.TokenType.Character, code, String.fromCharCode(code));\n  }\n  function newIdentifierToken(index, text) {\n      return new Token(index, exports.TokenType.Identifier, 0, text);\n  }\n  function newKeywordToken(index, text) {\n      return new Token(index, exports.TokenType.Keyword, 0, text);\n  }\n  function newOperatorToken(index, text) {\n      return new Token(index, exports.TokenType.Operator, 0, text);\n  }\n  function newStringToken(index, text) {\n      return new Token(index, exports.TokenType.String, 0, text);\n  }\n  function newNumberToken(index, n) {\n      return new Token(index, exports.TokenType.Number, n, '');\n  }\n  function newErrorToken(index, message) {\n      return new Token(index, exports.TokenType.Error, 0, message);\n  }\n  var EOF = new Token(-1, exports.TokenType.Character, 0, '');\n  var _Scanner = (function () {\n      function _Scanner(input) {\n          this.input = input;\n          this.peek = 0;\n          this.index = -1;\n          this.length = input.length;\n          this.advance();\n      }\n      _Scanner.prototype.advance = function () {\n          this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n      };\n      _Scanner.prototype.scanToken = function () {\n          var input = this.input, length = this.length;\n          var peek = this.peek, index = this.index;\n          // Skip whitespace.\n          while (peek <= $SPACE) {\n              if (++index >= length) {\n                  peek = $EOF;\n                  break;\n              }\n              else {\n                  peek = input.charCodeAt(index);\n              }\n          }\n          this.peek = peek;\n          this.index = index;\n          if (index >= length) {\n              return null;\n          }\n          // Handle identifiers and numbers.\n          if (isIdentifierStart(peek))\n              return this.scanIdentifier();\n          if (isDigit(peek))\n              return this.scanNumber(index);\n          var start = index;\n          switch (peek) {\n              case $PERIOD:\n                  this.advance();\n                  return isDigit(this.peek) ? this.scanNumber(start) :\n                      newCharacterToken(start, $PERIOD);\n              case $LPAREN:\n              case $RPAREN:\n              case $LBRACE:\n              case $RBRACE:\n              case $LBRACKET:\n              case $RBRACKET:\n              case $COMMA:\n              case $COLON:\n              case $SEMICOLON:\n                  return this.scanCharacter(start, peek);\n              case $SQ:\n              case $DQ:\n                  return this.scanString();\n              case $HASH:\n              case $PLUS:\n              case $MINUS:\n              case $STAR:\n              case $SLASH:\n              case $PERCENT:\n              case $CARET:\n                  return this.scanOperator(start, String.fromCharCode(peek));\n              case $QUESTION:\n                  return this.scanComplexOperator(start, '?', $PERIOD, '.');\n              case $LT:\n              case $GT:\n                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n              case $BANG:\n              case $EQ:\n                  return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n              case $AMPERSAND:\n                  return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n              case $BAR:\n                  return this.scanComplexOperator(start, '|', $BAR, '|');\n              case $NBSP:\n                  while (isWhitespace(this.peek))\n                      this.advance();\n                  return this.scanToken();\n          }\n          this.advance();\n          return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n      };\n      _Scanner.prototype.scanCharacter = function (start, code) {\n          this.advance();\n          return newCharacterToken(start, code);\n      };\n      _Scanner.prototype.scanOperator = function (start, str) {\n          this.advance();\n          return newOperatorToken(start, str);\n      };\n      /**\n       * Tokenize a 2/3 char long operator\n       *\n       * @param start start index in the expression\n       * @param one first symbol (always part of the operator)\n       * @param twoCode code point for the second symbol\n       * @param two second symbol (part of the operator when the second code point matches)\n       * @param threeCode code point for the third symbol\n       * @param three third symbol (part of the operator when provided and matches source expression)\n       * @returns {Token}\n       */\n      _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n          this.advance();\n          var str = one;\n          if (this.peek == twoCode) {\n              this.advance();\n              str += two;\n          }\n          if (isPresent(threeCode) && this.peek == threeCode) {\n              this.advance();\n              str += three;\n          }\n          return newOperatorToken(start, str);\n      };\n      _Scanner.prototype.scanIdentifier = function () {\n          var start = this.index;\n          this.advance();\n          while (isIdentifierPart(this.peek))\n              this.advance();\n          var str = this.input.substring(start, this.index);\n          return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n              newIdentifierToken(start, str);\n      };\n      _Scanner.prototype.scanNumber = function (start) {\n          var simple = (this.index === start);\n          this.advance(); // Skip initial digit.\n          while (true) {\n              if (isDigit(this.peek)) {\n              }\n              else if (this.peek == $PERIOD) {\n                  simple = false;\n              }\n              else if (isExponentStart(this.peek)) {\n                  this.advance();\n                  if (isExponentSign(this.peek))\n                      this.advance();\n                  if (!isDigit(this.peek))\n                      return this.error('Invalid exponent', -1);\n                  simple = false;\n              }\n              else {\n                  break;\n              }\n              this.advance();\n          }\n          var str = this.input.substring(start, this.index);\n          var value = simple ? NumberWrapper.parseIntAutoRadix(str) : parseFloat(str);\n          return newNumberToken(start, value);\n      };\n      _Scanner.prototype.scanString = function () {\n          var start = this.index;\n          var quote = this.peek;\n          this.advance(); // Skip initial quote.\n          var buffer = '';\n          var marker = this.index;\n          var input = this.input;\n          while (this.peek != quote) {\n              if (this.peek == $BACKSLASH) {\n                  buffer += input.substring(marker, this.index);\n                  this.advance();\n                  var unescapedCode = void 0;\n                  if (this.peek == $u) {\n                      // 4 character hex code for unicode character.\n                      var hex = input.substring(this.index + 1, this.index + 5);\n                      if (/^[0-9a-f]+$/i.test(hex)) {\n                          unescapedCode = parseInt(hex, 16);\n                      }\n                      else {\n                          return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                      }\n                      for (var i = 0; i < 5; i++) {\n                          this.advance();\n                      }\n                  }\n                  else {\n                      unescapedCode = unescape(this.peek);\n                      this.advance();\n                  }\n                  buffer += String.fromCharCode(unescapedCode);\n                  marker = this.index;\n              }\n              else if (this.peek == $EOF) {\n                  return this.error('Unterminated quote', 0);\n              }\n              else {\n                  this.advance();\n              }\n          }\n          var last = input.substring(marker, this.index);\n          this.advance(); // Skip terminating quote.\n          return newStringToken(start, buffer + last);\n      };\n      _Scanner.prototype.error = function (message, offset) {\n          var position = this.index + offset;\n          return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n      };\n      return _Scanner;\n  }());\n  function isIdentifierStart(code) {\n      return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n          (code == $_) || (code == $$);\n  }\n  function isIdentifier(input) {\n      if (input.length == 0)\n          return false;\n      var scanner = new _Scanner(input);\n      if (!isIdentifierStart(scanner.peek))\n          return false;\n      scanner.advance();\n      while (scanner.peek !== $EOF) {\n          if (!isIdentifierPart(scanner.peek))\n              return false;\n          scanner.advance();\n      }\n      return true;\n  }\n  function isIdentifierPart(code) {\n      return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n          (code == $$);\n  }\n  function isExponentStart(code) {\n      return code == $e || code == $E;\n  }\n  function isExponentSign(code) {\n      return code == $MINUS || code == $PLUS;\n  }\n  function isQuote(code) {\n      return code === $SQ || code === $DQ || code === $BT;\n  }\n  function unescape(code) {\n      switch (code) {\n          case $n:\n              return $LF;\n          case $f:\n              return $FF;\n          case $r:\n              return $CR;\n          case $t:\n              return $TAB;\n          case $v:\n              return $VTAB;\n          default:\n              return code;\n      }\n  }\n\n  var SplitInterpolation = (function () {\n      function SplitInterpolation(strings, expressions, offsets) {\n          this.strings = strings;\n          this.expressions = expressions;\n          this.offsets = offsets;\n      }\n      return SplitInterpolation;\n  }());\n  var TemplateBindingParseResult = (function () {\n      function TemplateBindingParseResult(templateBindings, warnings, errors) {\n          this.templateBindings = templateBindings;\n          this.warnings = warnings;\n          this.errors = errors;\n      }\n      return TemplateBindingParseResult;\n  }());\n  function _createInterpolateRegExp(config) {\n      var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n      return new RegExp(pattern, 'g');\n  }\n  var Parser = (function () {\n      function Parser(_lexer) {\n          this._lexer = _lexer;\n          this.errors = [];\n      }\n      Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          this._checkNoInterpolation(input, location, interpolationConfig);\n          var sourceToLex = this._stripComments(input);\n          var tokens = this._lexer.tokenize(this._stripComments(input));\n          var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n              .parseChain();\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var ast = this._parseBindingAst(input, location, interpolationConfig);\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var ast = this._parseBindingAst(input, location, interpolationConfig);\n          var errors = SimpleExpressionChecker.check(ast);\n          if (errors.length > 0) {\n              this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n          }\n          return new ASTWithSource(ast, input, location, this.errors);\n      };\n      Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n          this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n      };\n      Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n          // Quotes expressions use 3rd-party expression language. We don't want to use\n          // our lexer or parser for that, so we check for that ahead of time.\n          var quote = this._parseQuote(input, location);\n          if (isPresent(quote)) {\n              return quote;\n          }\n          this._checkNoInterpolation(input, location, interpolationConfig);\n          var sourceToLex = this._stripComments(input);\n          var tokens = this._lexer.tokenize(sourceToLex);\n          return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n              .parseChain();\n      };\n      Parser.prototype._parseQuote = function (input, location) {\n          if (isBlank(input))\n              return null;\n          var prefixSeparatorIndex = input.indexOf(':');\n          if (prefixSeparatorIndex == -1)\n              return null;\n          var prefix = input.substring(0, prefixSeparatorIndex).trim();\n          if (!isIdentifier(prefix))\n              return null;\n          var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n          return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n      };\n      Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n          var tokens = this._lexer.tokenize(input);\n          if (prefixToken) {\n              // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n              var prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                  t.index = 0;\n                  return t;\n              });\n              tokens.unshift.apply(tokens, prefixTokens);\n          }\n          return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n              .parseTemplateBindings();\n      };\n      Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var split = this.splitInterpolation(input, location, interpolationConfig);\n          if (split == null)\n              return null;\n          var expressions = [];\n          for (var i = 0; i < split.expressions.length; ++i) {\n              var expressionText = split.expressions[i];\n              var sourceToLex = this._stripComments(expressionText);\n              var tokens = this._lexer.tokenize(this._stripComments(split.expressions[i]));\n              var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                  .parseChain();\n              expressions.push(ast);\n          }\n          return new ASTWithSource(new Interpolation(new ParseSpan(0, isBlank(input) ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n      };\n      Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var regexp = _createInterpolateRegExp(interpolationConfig);\n          var parts = input.split(regexp);\n          if (parts.length <= 1) {\n              return null;\n          }\n          var strings = [];\n          var expressions = [];\n          var offsets = [];\n          var offset = 0;\n          for (var i = 0; i < parts.length; i++) {\n              var part = parts[i];\n              if (i % 2 === 0) {\n                  // fixed string\n                  strings.push(part);\n                  offset += part.length;\n              }\n              else if (part.trim().length > 0) {\n                  offset += interpolationConfig.start.length;\n                  expressions.push(part);\n                  offsets.push(offset);\n                  offset += part.length + interpolationConfig.end.length;\n              }\n              else {\n                  this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                  expressions.push('$implict');\n                  offsets.push(offset);\n              }\n          }\n          return new SplitInterpolation(strings, expressions, offsets);\n      };\n      Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n          return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, isBlank(input) ? 0 : input.length), input), input, location, this.errors);\n      };\n      Parser.prototype._stripComments = function (input) {\n          var i = this._commentStart(input);\n          return isPresent(i) ? input.substring(0, i).trim() : input;\n      };\n      Parser.prototype._commentStart = function (input) {\n          var outerQuote = null;\n          for (var i = 0; i < input.length - 1; i++) {\n              var char = input.charCodeAt(i);\n              var nextChar = input.charCodeAt(i + 1);\n              if (char === $SLASH && nextChar == $SLASH && isBlank(outerQuote))\n                  return i;\n              if (outerQuote === char) {\n                  outerQuote = null;\n              }\n              else if (isBlank(outerQuote) && isQuote(char)) {\n                  outerQuote = char;\n              }\n          }\n          return null;\n      };\n      Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n          var regexp = _createInterpolateRegExp(interpolationConfig);\n          var parts = input.split(regexp);\n          if (parts.length > 1) {\n              this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n          }\n      };\n      Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n          var errLocation = '';\n          for (var j = 0; j < partInErrIdx; j++) {\n              errLocation += j % 2 === 0 ?\n                  parts[j] :\n                  \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n          }\n          return errLocation.length;\n      };\n      Parser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      Parser.ctorParameters = [\n          { type: Lexer, },\n      ];\n      return Parser;\n  }());\n  var _ParseAST = (function () {\n      function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n          this.input = input;\n          this.location = location;\n          this.tokens = tokens;\n          this.inputLength = inputLength;\n          this.parseAction = parseAction;\n          this.errors = errors;\n          this.offset = offset;\n          this.rparensExpected = 0;\n          this.rbracketsExpected = 0;\n          this.rbracesExpected = 0;\n          this.index = 0;\n      }\n      _ParseAST.prototype.peek = function (offset) {\n          var i = this.index + offset;\n          return i < this.tokens.length ? this.tokens[i] : EOF;\n      };\n      Object.defineProperty(_ParseAST.prototype, \"next\", {\n          get: function () { return this.peek(0); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n          get: function () {\n              return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                  this.inputLength + this.offset;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n      _ParseAST.prototype.advance = function () { this.index++; };\n      _ParseAST.prototype.optionalCharacter = function (code) {\n          if (this.next.isCharacter(code)) {\n              this.advance();\n              return true;\n          }\n          else {\n              return false;\n          }\n      };\n      _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n      _ParseAST.prototype.expectCharacter = function (code) {\n          if (this.optionalCharacter(code))\n              return;\n          this.error(\"Missing expected \" + String.fromCharCode(code));\n      };\n      _ParseAST.prototype.optionalOperator = function (op) {\n          if (this.next.isOperator(op)) {\n              this.advance();\n              return true;\n          }\n          else {\n              return false;\n          }\n      };\n      _ParseAST.prototype.expectOperator = function (operator) {\n          if (this.optionalOperator(operator))\n              return;\n          this.error(\"Missing expected operator \" + operator);\n      };\n      _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n          var n = this.next;\n          if (!n.isIdentifier() && !n.isKeyword()) {\n              this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n              return '';\n          }\n          this.advance();\n          return n.toString();\n      };\n      _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n          var n = this.next;\n          if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n              this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n              return '';\n          }\n          this.advance();\n          return n.toString();\n      };\n      _ParseAST.prototype.parseChain = function () {\n          var exprs = [];\n          var start = this.inputIndex;\n          while (this.index < this.tokens.length) {\n              var expr = this.parsePipe();\n              exprs.push(expr);\n              if (this.optionalCharacter($SEMICOLON)) {\n                  if (!this.parseAction) {\n                      this.error('Binding expression cannot contain chained expression');\n                  }\n                  while (this.optionalCharacter($SEMICOLON)) {\n                  } // read all semicolons\n              }\n              else if (this.index < this.tokens.length) {\n                  this.error(\"Unexpected token '\" + this.next + \"'\");\n              }\n          }\n          if (exprs.length == 0)\n              return new EmptyExpr(this.span(start));\n          if (exprs.length == 1)\n              return exprs[0];\n          return new Chain(this.span(start), exprs);\n      };\n      _ParseAST.prototype.parsePipe = function () {\n          var result = this.parseExpression();\n          if (this.optionalOperator('|')) {\n              if (this.parseAction) {\n                  this.error('Cannot have a pipe in an action expression');\n              }\n              do {\n                  var name_1 = this.expectIdentifierOrKeyword();\n                  var args = [];\n                  while (this.optionalCharacter($COLON)) {\n                      args.push(this.parseExpression());\n                  }\n                  result = new BindingPipe(this.span(result.span.start - this.offset), result, name_1, args);\n              } while (this.optionalOperator('|'));\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n      _ParseAST.prototype.parseConditional = function () {\n          var start = this.inputIndex;\n          var result = this.parseLogicalOr();\n          if (this.optionalOperator('?')) {\n              var yes = this.parsePipe();\n              var no = void 0;\n              if (!this.optionalCharacter($COLON)) {\n                  var end = this.inputIndex;\n                  var expression = this.input.substring(start, end);\n                  this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                  no = new EmptyExpr(this.span(start));\n              }\n              else {\n                  no = this.parsePipe();\n              }\n              return new Conditional(this.span(start), result, yes, no);\n          }\n          else {\n              return result;\n          }\n      };\n      _ParseAST.prototype.parseLogicalOr = function () {\n          // '||'\n          var result = this.parseLogicalAnd();\n          while (this.optionalOperator('||')) {\n              var right = this.parseLogicalAnd();\n              result = new Binary(this.span(result.span.start), '||', result, right);\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseLogicalAnd = function () {\n          // '&&'\n          var result = this.parseEquality();\n          while (this.optionalOperator('&&')) {\n              var right = this.parseEquality();\n              result = new Binary(this.span(result.span.start), '&&', result, right);\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseEquality = function () {\n          // '==','!=','===','!=='\n          var result = this.parseRelational();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '==':\n                  case '===':\n                  case '!=':\n                  case '!==':\n                      this.advance();\n                      var right = this.parseRelational();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseRelational = function () {\n          // '<', '>', '<=', '>='\n          var result = this.parseAdditive();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '<':\n                  case '>':\n                  case '<=':\n                  case '>=':\n                      this.advance();\n                      var right = this.parseAdditive();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseAdditive = function () {\n          // '+', '-'\n          var result = this.parseMultiplicative();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '+':\n                  case '-':\n                      this.advance();\n                      var right = this.parseMultiplicative();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseMultiplicative = function () {\n          // '*', '%', '/'\n          var result = this.parsePrefix();\n          while (this.next.type == exports.TokenType.Operator) {\n              var operator = this.next.strValue;\n              switch (operator) {\n                  case '*':\n                  case '%':\n                  case '/':\n                      this.advance();\n                      var right = this.parsePrefix();\n                      result = new Binary(this.span(result.span.start), operator, result, right);\n                      continue;\n              }\n              break;\n          }\n          return result;\n      };\n      _ParseAST.prototype.parsePrefix = function () {\n          if (this.next.type == exports.TokenType.Operator) {\n              var start = this.inputIndex;\n              var operator = this.next.strValue;\n              var result = void 0;\n              switch (operator) {\n                  case '+':\n                      this.advance();\n                      return this.parsePrefix();\n                  case '-':\n                      this.advance();\n                      result = this.parsePrefix();\n                      return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                  case '!':\n                      this.advance();\n                      result = this.parsePrefix();\n                      return new PrefixNot(this.span(start), result);\n              }\n          }\n          return this.parseCallChain();\n      };\n      _ParseAST.prototype.parseCallChain = function () {\n          var result = this.parsePrimary();\n          while (true) {\n              if (this.optionalCharacter($PERIOD)) {\n                  result = this.parseAccessMemberOrMethodCall(result, false);\n              }\n              else if (this.optionalOperator('?.')) {\n                  result = this.parseAccessMemberOrMethodCall(result, true);\n              }\n              else if (this.optionalCharacter($LBRACKET)) {\n                  this.rbracketsExpected++;\n                  var key = this.parsePipe();\n                  this.rbracketsExpected--;\n                  this.expectCharacter($RBRACKET);\n                  if (this.optionalOperator('=')) {\n                      var value = this.parseConditional();\n                      result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                  }\n                  else {\n                      result = new KeyedRead(this.span(result.span.start), result, key);\n                  }\n              }\n              else if (this.optionalCharacter($LPAREN)) {\n                  this.rparensExpected++;\n                  var args = this.parseCallArguments();\n                  this.rparensExpected--;\n                  this.expectCharacter($RPAREN);\n                  result = new FunctionCall(this.span(result.span.start), result, args);\n              }\n              else {\n                  return result;\n              }\n          }\n      };\n      _ParseAST.prototype.parsePrimary = function () {\n          var start = this.inputIndex;\n          if (this.optionalCharacter($LPAREN)) {\n              this.rparensExpected++;\n              var result = this.parsePipe();\n              this.rparensExpected--;\n              this.expectCharacter($RPAREN);\n              return result;\n          }\n          else if (this.next.isKeywordNull()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), null);\n          }\n          else if (this.next.isKeywordUndefined()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), void 0);\n          }\n          else if (this.next.isKeywordTrue()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), true);\n          }\n          else if (this.next.isKeywordFalse()) {\n              this.advance();\n              return new LiteralPrimitive(this.span(start), false);\n          }\n          else if (this.next.isKeywordThis()) {\n              this.advance();\n              return new ImplicitReceiver(this.span(start));\n          }\n          else if (this.optionalCharacter($LBRACKET)) {\n              this.rbracketsExpected++;\n              var elements = this.parseExpressionList($RBRACKET);\n              this.rbracketsExpected--;\n              this.expectCharacter($RBRACKET);\n              return new LiteralArray(this.span(start), elements);\n          }\n          else if (this.next.isCharacter($LBRACE)) {\n              return this.parseLiteralMap();\n          }\n          else if (this.next.isIdentifier()) {\n              return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n          }\n          else if (this.next.isNumber()) {\n              var value = this.next.toNumber();\n              this.advance();\n              return new LiteralPrimitive(this.span(start), value);\n          }\n          else if (this.next.isString()) {\n              var literalValue = this.next.toString();\n              this.advance();\n              return new LiteralPrimitive(this.span(start), literalValue);\n          }\n          else if (this.index >= this.tokens.length) {\n              this.error(\"Unexpected end of expression: \" + this.input);\n              return new EmptyExpr(this.span(start));\n          }\n          else {\n              this.error(\"Unexpected token \" + this.next);\n              return new EmptyExpr(this.span(start));\n          }\n      };\n      _ParseAST.prototype.parseExpressionList = function (terminator) {\n          var result = [];\n          if (!this.next.isCharacter(terminator)) {\n              do {\n                  result.push(this.parsePipe());\n              } while (this.optionalCharacter($COMMA));\n          }\n          return result;\n      };\n      _ParseAST.prototype.parseLiteralMap = function () {\n          var keys = [];\n          var values = [];\n          var start = this.inputIndex;\n          this.expectCharacter($LBRACE);\n          if (!this.optionalCharacter($RBRACE)) {\n              this.rbracesExpected++;\n              do {\n                  var key = this.expectIdentifierOrKeywordOrString();\n                  keys.push(key);\n                  this.expectCharacter($COLON);\n                  values.push(this.parsePipe());\n              } while (this.optionalCharacter($COMMA));\n              this.rbracesExpected--;\n              this.expectCharacter($RBRACE);\n          }\n          return new LiteralMap(this.span(start), keys, values);\n      };\n      _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n          if (isSafe === void 0) { isSafe = false; }\n          var start = receiver.span.start;\n          var id = this.expectIdentifierOrKeyword();\n          if (this.optionalCharacter($LPAREN)) {\n              this.rparensExpected++;\n              var args = this.parseCallArguments();\n              this.expectCharacter($RPAREN);\n              this.rparensExpected--;\n              var span = this.span(start);\n              return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                  new MethodCall(span, receiver, id, args);\n          }\n          else {\n              if (isSafe) {\n                  if (this.optionalOperator('=')) {\n                      this.error('The \\'?.\\' operator cannot be used in the assignment');\n                      return new EmptyExpr(this.span(start));\n                  }\n                  else {\n                      return new SafePropertyRead(this.span(start), receiver, id);\n                  }\n              }\n              else {\n                  if (this.optionalOperator('=')) {\n                      if (!this.parseAction) {\n                          this.error('Bindings cannot contain assignments');\n                          return new EmptyExpr(this.span(start));\n                      }\n                      var value = this.parseConditional();\n                      return new PropertyWrite(this.span(start), receiver, id, value);\n                  }\n                  else {\n                      return new PropertyRead(this.span(start), receiver, id);\n                  }\n              }\n          }\n      };\n      _ParseAST.prototype.parseCallArguments = function () {\n          if (this.next.isCharacter($RPAREN))\n              return [];\n          var positionals = [];\n          do {\n              positionals.push(this.parsePipe());\n          } while (this.optionalCharacter($COMMA));\n          return positionals;\n      };\n      /**\n       * An identifier, a keyword, a string with an optional `-` inbetween.\n       */\n      _ParseAST.prototype.expectTemplateBindingKey = function () {\n          var result = '';\n          var operatorFound = false;\n          do {\n              result += this.expectIdentifierOrKeywordOrString();\n              operatorFound = this.optionalOperator('-');\n              if (operatorFound) {\n                  result += '-';\n              }\n          } while (operatorFound);\n          return result.toString();\n      };\n      _ParseAST.prototype.parseTemplateBindings = function () {\n          var bindings = [];\n          var prefix = null;\n          var warnings = [];\n          while (this.index < this.tokens.length) {\n              var start = this.inputIndex;\n              var keyIsVar = this.peekKeywordLet();\n              if (keyIsVar) {\n                  this.advance();\n              }\n              var key = this.expectTemplateBindingKey();\n              if (!keyIsVar) {\n                  if (prefix == null) {\n                      prefix = key;\n                  }\n                  else {\n                      key = prefix + key[0].toUpperCase() + key.substring(1);\n                  }\n              }\n              this.optionalCharacter($COLON);\n              var name_2 = null;\n              var expression = null;\n              if (keyIsVar) {\n                  if (this.optionalOperator('=')) {\n                      name_2 = this.expectTemplateBindingKey();\n                  }\n                  else {\n                      name_2 = '\\$implicit';\n                  }\n              }\n              else if (this.next !== EOF && !this.peekKeywordLet()) {\n                  var start_1 = this.inputIndex;\n                  var ast = this.parsePipe();\n                  var source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                  expression = new ASTWithSource(ast, source, this.location, this.errors);\n              }\n              bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n              if (!this.optionalCharacter($SEMICOLON)) {\n                  this.optionalCharacter($COMMA);\n              }\n          }\n          return new TemplateBindingParseResult(bindings, warnings, this.errors);\n      };\n      _ParseAST.prototype.error = function (message, index) {\n          if (index === void 0) { index = null; }\n          this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n          this.skip();\n      };\n      _ParseAST.prototype.locationText = function (index) {\n          if (index === void 0) { index = null; }\n          if (isBlank(index))\n              index = this.index;\n          return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n              \"at the end of the expression\";\n      };\n      // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n      // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n      // '}' and ']' as conditional recovery points if one of calling productions is expecting\n      // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n      // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n      // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n      // must be conditional as they must be skipped if none of the calling productions are not\n      // expecting the closing token else we will never make progress in the case of an\n      // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n      // parseChain() is always the root production and it expects a ';'.\n      // If a production expects one of these token it increments the corresponding nesting count,\n      // and then decrements it just prior to checking if the token is in the input.\n      _ParseAST.prototype.skip = function () {\n          var n = this.next;\n          while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n              (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n              (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n              (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n              if (this.next.isError()) {\n                  this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n              }\n              this.advance();\n              n = this.next;\n          }\n      };\n      return _ParseAST;\n  }());\n  var SimpleExpressionChecker = (function () {\n      function SimpleExpressionChecker() {\n          this.errors = [];\n      }\n      SimpleExpressionChecker.check = function (ast) {\n          var s = new SimpleExpressionChecker();\n          ast.visit(s);\n          return s.errors;\n      };\n      SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n      SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n      SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n      SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitAll = function (asts) {\n          var _this = this;\n          return asts.map(function (node) { return node.visit(_this); });\n      };\n      SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n      SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n      return SimpleExpressionChecker;\n  }());\n\n  var ParseLocation = (function () {\n      function ParseLocation(file, offset, line, col) {\n          this.file = file;\n          this.offset = offset;\n          this.line = line;\n          this.col = col;\n      }\n      ParseLocation.prototype.toString = function () {\n          return isPresent(this.offset) ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n      };\n      return ParseLocation;\n  }());\n  var ParseSourceFile = (function () {\n      function ParseSourceFile(content, url) {\n          this.content = content;\n          this.url = url;\n      }\n      return ParseSourceFile;\n  }());\n  var ParseSourceSpan = (function () {\n      function ParseSourceSpan(start, end, details) {\n          if (details === void 0) { details = null; }\n          this.start = start;\n          this.end = end;\n          this.details = details;\n      }\n      ParseSourceSpan.prototype.toString = function () {\n          return this.start.file.content.substring(this.start.offset, this.end.offset);\n      };\n      return ParseSourceSpan;\n  }());\n  exports.ParseErrorLevel;\n  (function (ParseErrorLevel) {\n      ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n      ParseErrorLevel[ParseErrorLevel[\"FATAL\"] = 1] = \"FATAL\";\n  })(exports.ParseErrorLevel || (exports.ParseErrorLevel = {}));\n  var ParseError = (function () {\n      function ParseError(span, msg, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this.span = span;\n          this.msg = msg;\n          this.level = level;\n      }\n      ParseError.prototype.toString = function () {\n          var source = this.span.start.file.content;\n          var ctxStart = this.span.start.offset;\n          var contextStr = '';\n          var details = '';\n          if (isPresent(ctxStart)) {\n              if (ctxStart > source.length - 1) {\n                  ctxStart = source.length - 1;\n              }\n              var ctxEnd = ctxStart;\n              var ctxLen = 0;\n              var ctxLines = 0;\n              while (ctxLen < 100 && ctxStart > 0) {\n                  ctxStart--;\n                  ctxLen++;\n                  if (source[ctxStart] == '\\n') {\n                      if (++ctxLines == 3) {\n                          break;\n                      }\n                  }\n              }\n              ctxLen = 0;\n              ctxLines = 0;\n              while (ctxLen < 100 && ctxEnd < source.length - 1) {\n                  ctxEnd++;\n                  ctxLen++;\n                  if (source[ctxEnd] == '\\n') {\n                      if (++ctxLines == 3) {\n                          break;\n                      }\n                  }\n              }\n              var context = source.substring(ctxStart, this.span.start.offset) + '[ERROR ->]' +\n                  source.substring(this.span.start.offset, ctxEnd + 1);\n              contextStr = \" (\\\"\" + context + \"\\\")\";\n          }\n          if (this.span.details) {\n              details = \", \" + this.span.details;\n          }\n          return \"\" + this.msg + contextStr + \": \" + this.span.start + details;\n      };\n      return ParseError;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var Text = (function () {\n      function Text(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return Text;\n  }());\n  var Expansion = (function () {\n      function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n          this.switchValue = switchValue;\n          this.type = type;\n          this.cases = cases;\n          this.sourceSpan = sourceSpan;\n          this.switchValueSourceSpan = switchValueSourceSpan;\n      }\n      Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n      return Expansion;\n  }());\n  var ExpansionCase = (function () {\n      function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n          this.value = value;\n          this.expression = expression;\n          this.sourceSpan = sourceSpan;\n          this.valueSourceSpan = valueSourceSpan;\n          this.expSourceSpan = expSourceSpan;\n      }\n      ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n      return ExpansionCase;\n  }());\n  var Attribute$1 = (function () {\n      function Attribute(name, value, sourceSpan, valueSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n          this.valueSpan = valueSpan;\n      }\n      Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n      return Attribute;\n  }());\n  var Element = (function () {\n      function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n          this.name = name;\n          this.attrs = attrs;\n          this.children = children;\n          this.sourceSpan = sourceSpan;\n          this.startSourceSpan = startSourceSpan;\n          this.endSourceSpan = endSourceSpan;\n      }\n      Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n      return Element;\n  }());\n  var Comment = (function () {\n      function Comment(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n      return Comment;\n  }());\n  function visitAll(visitor, nodes, context) {\n      if (context === void 0) { context = null; }\n      var result = [];\n      var visit = visitor.visit ?\n          function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n          function (ast) { return ast.visit(visitor, context); };\n      nodes.forEach(function (ast) {\n          var astResult = visit(ast);\n          if (astResult) {\n              result.push(astResult);\n          }\n      });\n      return result;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var TagContentType;\n  (function (TagContentType) {\n      TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n      TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n      TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n  })(TagContentType || (TagContentType = {}));\n  function splitNsName(elementName) {\n      if (elementName[0] != ':') {\n          return [null, elementName];\n      }\n      var colonIndex = elementName.indexOf(':', 1);\n      if (colonIndex == -1) {\n          throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n      }\n      return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n  }\n  function getNsPrefix(fullName) {\n      return fullName === null ? null : splitNsName(fullName)[0];\n  }\n  function mergeNsAndName(prefix, localName) {\n      return prefix ? \":\" + prefix + \":\" + localName : localName;\n  }\n  // see http://www.w3.org/TR/html51/syntax.html#named-character-references\n  // see https://html.spec.whatwg.org/multipage/entities.json\n  // This list is not exhaustive to keep the compiler footprint low.\n  // The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\n  var NAMED_ENTITIES = {\n      'Aacute': '\\u00C1',\n      'aacute': '\\u00E1',\n      'Acirc': '\\u00C2',\n      'acirc': '\\u00E2',\n      'acute': '\\u00B4',\n      'AElig': '\\u00C6',\n      'aelig': '\\u00E6',\n      'Agrave': '\\u00C0',\n      'agrave': '\\u00E0',\n      'alefsym': '\\u2135',\n      'Alpha': '\\u0391',\n      'alpha': '\\u03B1',\n      'amp': '&',\n      'and': '\\u2227',\n      'ang': '\\u2220',\n      'apos': '\\u0027',\n      'Aring': '\\u00C5',\n      'aring': '\\u00E5',\n      'asymp': '\\u2248',\n      'Atilde': '\\u00C3',\n      'atilde': '\\u00E3',\n      'Auml': '\\u00C4',\n      'auml': '\\u00E4',\n      'bdquo': '\\u201E',\n      'Beta': '\\u0392',\n      'beta': '\\u03B2',\n      'brvbar': '\\u00A6',\n      'bull': '\\u2022',\n      'cap': '\\u2229',\n      'Ccedil': '\\u00C7',\n      'ccedil': '\\u00E7',\n      'cedil': '\\u00B8',\n      'cent': '\\u00A2',\n      'Chi': '\\u03A7',\n      'chi': '\\u03C7',\n      'circ': '\\u02C6',\n      'clubs': '\\u2663',\n      'cong': '\\u2245',\n      'copy': '\\u00A9',\n      'crarr': '\\u21B5',\n      'cup': '\\u222A',\n      'curren': '\\u00A4',\n      'dagger': '\\u2020',\n      'Dagger': '\\u2021',\n      'darr': '\\u2193',\n      'dArr': '\\u21D3',\n      'deg': '\\u00B0',\n      'Delta': '\\u0394',\n      'delta': '\\u03B4',\n      'diams': '\\u2666',\n      'divide': '\\u00F7',\n      'Eacute': '\\u00C9',\n      'eacute': '\\u00E9',\n      'Ecirc': '\\u00CA',\n      'ecirc': '\\u00EA',\n      'Egrave': '\\u00C8',\n      'egrave': '\\u00E8',\n      'empty': '\\u2205',\n      'emsp': '\\u2003',\n      'ensp': '\\u2002',\n      'Epsilon': '\\u0395',\n      'epsilon': '\\u03B5',\n      'equiv': '\\u2261',\n      'Eta': '\\u0397',\n      'eta': '\\u03B7',\n      'ETH': '\\u00D0',\n      'eth': '\\u00F0',\n      'Euml': '\\u00CB',\n      'euml': '\\u00EB',\n      'euro': '\\u20AC',\n      'exist': '\\u2203',\n      'fnof': '\\u0192',\n      'forall': '\\u2200',\n      'frac12': '\\u00BD',\n      'frac14': '\\u00BC',\n      'frac34': '\\u00BE',\n      'frasl': '\\u2044',\n      'Gamma': '\\u0393',\n      'gamma': '\\u03B3',\n      'ge': '\\u2265',\n      'gt': '>',\n      'harr': '\\u2194',\n      'hArr': '\\u21D4',\n      'hearts': '\\u2665',\n      'hellip': '\\u2026',\n      'Iacute': '\\u00CD',\n      'iacute': '\\u00ED',\n      'Icirc': '\\u00CE',\n      'icirc': '\\u00EE',\n      'iexcl': '\\u00A1',\n      'Igrave': '\\u00CC',\n      'igrave': '\\u00EC',\n      'image': '\\u2111',\n      'infin': '\\u221E',\n      'int': '\\u222B',\n      'Iota': '\\u0399',\n      'iota': '\\u03B9',\n      'iquest': '\\u00BF',\n      'isin': '\\u2208',\n      'Iuml': '\\u00CF',\n      'iuml': '\\u00EF',\n      'Kappa': '\\u039A',\n      'kappa': '\\u03BA',\n      'Lambda': '\\u039B',\n      'lambda': '\\u03BB',\n      'lang': '\\u27E8',\n      'laquo': '\\u00AB',\n      'larr': '\\u2190',\n      'lArr': '\\u21D0',\n      'lceil': '\\u2308',\n      'ldquo': '\\u201C',\n      'le': '\\u2264',\n      'lfloor': '\\u230A',\n      'lowast': '\\u2217',\n      'loz': '\\u25CA',\n      'lrm': '\\u200E',\n      'lsaquo': '\\u2039',\n      'lsquo': '\\u2018',\n      'lt': '<',\n      'macr': '\\u00AF',\n      'mdash': '\\u2014',\n      'micro': '\\u00B5',\n      'middot': '\\u00B7',\n      'minus': '\\u2212',\n      'Mu': '\\u039C',\n      'mu': '\\u03BC',\n      'nabla': '\\u2207',\n      'nbsp': '\\u00A0',\n      'ndash': '\\u2013',\n      'ne': '\\u2260',\n      'ni': '\\u220B',\n      'not': '\\u00AC',\n      'notin': '\\u2209',\n      'nsub': '\\u2284',\n      'Ntilde': '\\u00D1',\n      'ntilde': '\\u00F1',\n      'Nu': '\\u039D',\n      'nu': '\\u03BD',\n      'Oacute': '\\u00D3',\n      'oacute': '\\u00F3',\n      'Ocirc': '\\u00D4',\n      'ocirc': '\\u00F4',\n      'OElig': '\\u0152',\n      'oelig': '\\u0153',\n      'Ograve': '\\u00D2',\n      'ograve': '\\u00F2',\n      'oline': '\\u203E',\n      'Omega': '\\u03A9',\n      'omega': '\\u03C9',\n      'Omicron': '\\u039F',\n      'omicron': '\\u03BF',\n      'oplus': '\\u2295',\n      'or': '\\u2228',\n      'ordf': '\\u00AA',\n      'ordm': '\\u00BA',\n      'Oslash': '\\u00D8',\n      'oslash': '\\u00F8',\n      'Otilde': '\\u00D5',\n      'otilde': '\\u00F5',\n      'otimes': '\\u2297',\n      'Ouml': '\\u00D6',\n      'ouml': '\\u00F6',\n      'para': '\\u00B6',\n      'permil': '\\u2030',\n      'perp': '\\u22A5',\n      'Phi': '\\u03A6',\n      'phi': '\\u03C6',\n      'Pi': '\\u03A0',\n      'pi': '\\u03C0',\n      'piv': '\\u03D6',\n      'plusmn': '\\u00B1',\n      'pound': '\\u00A3',\n      'prime': '\\u2032',\n      'Prime': '\\u2033',\n      'prod': '\\u220F',\n      'prop': '\\u221D',\n      'Psi': '\\u03A8',\n      'psi': '\\u03C8',\n      'quot': '\\u0022',\n      'radic': '\\u221A',\n      'rang': '\\u27E9',\n      'raquo': '\\u00BB',\n      'rarr': '\\u2192',\n      'rArr': '\\u21D2',\n      'rceil': '\\u2309',\n      'rdquo': '\\u201D',\n      'real': '\\u211C',\n      'reg': '\\u00AE',\n      'rfloor': '\\u230B',\n      'Rho': '\\u03A1',\n      'rho': '\\u03C1',\n      'rlm': '\\u200F',\n      'rsaquo': '\\u203A',\n      'rsquo': '\\u2019',\n      'sbquo': '\\u201A',\n      'Scaron': '\\u0160',\n      'scaron': '\\u0161',\n      'sdot': '\\u22C5',\n      'sect': '\\u00A7',\n      'shy': '\\u00AD',\n      'Sigma': '\\u03A3',\n      'sigma': '\\u03C3',\n      'sigmaf': '\\u03C2',\n      'sim': '\\u223C',\n      'spades': '\\u2660',\n      'sub': '\\u2282',\n      'sube': '\\u2286',\n      'sum': '\\u2211',\n      'sup': '\\u2283',\n      'sup1': '\\u00B9',\n      'sup2': '\\u00B2',\n      'sup3': '\\u00B3',\n      'supe': '\\u2287',\n      'szlig': '\\u00DF',\n      'Tau': '\\u03A4',\n      'tau': '\\u03C4',\n      'there4': '\\u2234',\n      'Theta': '\\u0398',\n      'theta': '\\u03B8',\n      'thetasym': '\\u03D1',\n      'thinsp': '\\u2009',\n      'THORN': '\\u00DE',\n      'thorn': '\\u00FE',\n      'tilde': '\\u02DC',\n      'times': '\\u00D7',\n      'trade': '\\u2122',\n      'Uacute': '\\u00DA',\n      'uacute': '\\u00FA',\n      'uarr': '\\u2191',\n      'uArr': '\\u21D1',\n      'Ucirc': '\\u00DB',\n      'ucirc': '\\u00FB',\n      'Ugrave': '\\u00D9',\n      'ugrave': '\\u00F9',\n      'uml': '\\u00A8',\n      'upsih': '\\u03D2',\n      'Upsilon': '\\u03A5',\n      'upsilon': '\\u03C5',\n      'Uuml': '\\u00DC',\n      'uuml': '\\u00FC',\n      'weierp': '\\u2118',\n      'Xi': '\\u039E',\n      'xi': '\\u03BE',\n      'Yacute': '\\u00DD',\n      'yacute': '\\u00FD',\n      'yen': '\\u00A5',\n      'yuml': '\\u00FF',\n      'Yuml': '\\u0178',\n      'Zeta': '\\u0396',\n      'zeta': '\\u03B6',\n      'zwj': '\\u200D',\n      'zwnj': '\\u200C',\n  };\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$3 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var TokenType$1;\n  (function (TokenType) {\n      TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n      TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n      TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n      TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n      TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n      TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n      TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n      TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n      TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n      TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n      TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n      TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n      TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n      TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n      TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n      TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n      TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n      TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n      TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n      TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n  })(TokenType$1 || (TokenType$1 = {}));\n  var Token$1 = (function () {\n      function Token(type, parts, sourceSpan) {\n          this.type = type;\n          this.parts = parts;\n          this.sourceSpan = sourceSpan;\n      }\n      return Token;\n  }());\n  var TokenError = (function (_super) {\n      __extends$3(TokenError, _super);\n      function TokenError(errorMsg, tokenType, span) {\n          _super.call(this, span, errorMsg);\n          this.tokenType = tokenType;\n      }\n      return TokenError;\n  }(ParseError));\n  var TokenizeResult = (function () {\n      function TokenizeResult(tokens, errors) {\n          this.tokens = tokens;\n          this.errors = errors;\n      }\n      return TokenizeResult;\n  }());\n  function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n      if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n      if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n      return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n          .tokenize();\n  }\n  var _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n  function _unexpectedCharacterErrorMsg(charCode) {\n      var char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n      return \"Unexpected character \\\"\" + char + \"\\\"\";\n  }\n  function _unknownEntityErrorMsg(entitySrc) {\n      return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n  }\n  var _ControlFlowError = (function () {\n      function _ControlFlowError(error) {\n          this.error = error;\n      }\n      return _ControlFlowError;\n  }());\n  // See http://www.w3.org/TR/html51/syntax.html#writing\n  var _Tokenizer = (function () {\n      /**\n       * @param _file The html source\n       * @param _getTagDefinition\n       * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n       * @param _interpolationConfig\n       */\n      function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n          if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          this._file = _file;\n          this._getTagDefinition = _getTagDefinition;\n          this._tokenizeIcu = _tokenizeIcu;\n          this._interpolationConfig = _interpolationConfig;\n          // Note: this is always lowercase!\n          this._peek = -1;\n          this._nextPeek = -1;\n          this._index = -1;\n          this._line = 0;\n          this._column = -1;\n          this._expansionCaseStack = [];\n          this._inInterpolation = false;\n          this.tokens = [];\n          this.errors = [];\n          this._input = _file.content;\n          this._length = _file.content.length;\n          this._advance();\n      }\n      _Tokenizer.prototype._processCarriageReturns = function (content) {\n          // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n          // In order to keep the original position in the source, we can not\n          // pre-process it.\n          // Instead CRs are processed right before instantiating the tokens.\n          return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n      };\n      _Tokenizer.prototype.tokenize = function () {\n          while (this._peek !== $EOF) {\n              var start = this._getLocation();\n              try {\n                  if (this._attemptCharCode($LT)) {\n                      if (this._attemptCharCode($BANG)) {\n                          if (this._attemptCharCode($LBRACKET)) {\n                              this._consumeCdata(start);\n                          }\n                          else if (this._attemptCharCode($MINUS)) {\n                              this._consumeComment(start);\n                          }\n                          else {\n                              this._consumeDocType(start);\n                          }\n                      }\n                      else if (this._attemptCharCode($SLASH)) {\n                          this._consumeTagClose(start);\n                      }\n                      else {\n                          this._consumeTagOpen(start);\n                      }\n                  }\n                  else if (!this._tokenizeIcu || !this._tokenizeExpansionForm()) {\n                      this._consumeText();\n                  }\n              }\n              catch (e) {\n                  if (e instanceof _ControlFlowError) {\n                      this.errors.push(e.error);\n                  }\n                  else {\n                      throw e;\n                  }\n              }\n          }\n          this._beginToken(TokenType$1.EOF);\n          this._endToken([]);\n          return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n      };\n      /**\n       * @returns {boolean} whether an ICU token has been created\n       * @internal\n       */\n      _Tokenizer.prototype._tokenizeExpansionForm = function () {\n          if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n              this._consumeExpansionFormStart();\n              return true;\n          }\n          if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n              this._consumeExpansionCaseStart();\n              return true;\n          }\n          if (this._peek === $RBRACE) {\n              if (this._isInExpansionCase()) {\n                  this._consumeExpansionCaseEnd();\n                  return true;\n              }\n              if (this._isInExpansionForm()) {\n                  this._consumeExpansionFormEnd();\n                  return true;\n              }\n          }\n          return false;\n      };\n      _Tokenizer.prototype._getLocation = function () {\n          return new ParseLocation(this._file, this._index, this._line, this._column);\n      };\n      _Tokenizer.prototype._getSpan = function (start, end) {\n          if (start === void 0) { start = this._getLocation(); }\n          if (end === void 0) { end = this._getLocation(); }\n          return new ParseSourceSpan(start, end);\n      };\n      _Tokenizer.prototype._beginToken = function (type, start) {\n          if (start === void 0) { start = this._getLocation(); }\n          this._currentTokenStart = start;\n          this._currentTokenType = type;\n      };\n      _Tokenizer.prototype._endToken = function (parts, end) {\n          if (end === void 0) { end = this._getLocation(); }\n          var token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n          this.tokens.push(token);\n          this._currentTokenStart = null;\n          this._currentTokenType = null;\n          return token;\n      };\n      _Tokenizer.prototype._createError = function (msg, span) {\n          if (this._isInExpansionForm()) {\n              msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n          }\n          var error = new TokenError(msg, this._currentTokenType, span);\n          this._currentTokenStart = null;\n          this._currentTokenType = null;\n          return new _ControlFlowError(error);\n      };\n      _Tokenizer.prototype._advance = function () {\n          if (this._index >= this._length) {\n              throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n          }\n          if (this._peek === $LF) {\n              this._line++;\n              this._column = 0;\n          }\n          else if (this._peek !== $LF && this._peek !== $CR) {\n              this._column++;\n          }\n          this._index++;\n          this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n          this._nextPeek =\n              this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n      };\n      _Tokenizer.prototype._attemptCharCode = function (charCode) {\n          if (this._peek === charCode) {\n              this._advance();\n              return true;\n          }\n          return false;\n      };\n      _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n          if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n              this._advance();\n              return true;\n          }\n          return false;\n      };\n      _Tokenizer.prototype._requireCharCode = function (charCode) {\n          var location = this._getLocation();\n          if (!this._attemptCharCode(charCode)) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n          }\n      };\n      _Tokenizer.prototype._attemptStr = function (chars) {\n          var len = chars.length;\n          if (this._index + len > this._length) {\n              return false;\n          }\n          var initialPosition = this._savePosition();\n          for (var i = 0; i < len; i++) {\n              if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                  // If attempting to parse the string fails, we want to reset the parser\n                  // to where it was before the attempt\n                  this._restorePosition(initialPosition);\n                  return false;\n              }\n          }\n          return true;\n      };\n      _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n          for (var i = 0; i < chars.length; i++) {\n              if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                  return false;\n              }\n          }\n          return true;\n      };\n      _Tokenizer.prototype._requireStr = function (chars) {\n          var location = this._getLocation();\n          if (!this._attemptStr(chars)) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n          }\n      };\n      _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n          while (!predicate(this._peek)) {\n              this._advance();\n          }\n      };\n      _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n          var start = this._getLocation();\n          this._attemptCharCodeUntilFn(predicate);\n          if (this._index - start.offset < len) {\n              throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n          }\n      };\n      _Tokenizer.prototype._attemptUntilChar = function (char) {\n          while (this._peek !== char) {\n              this._advance();\n          }\n      };\n      _Tokenizer.prototype._readChar = function (decodeEntities) {\n          if (decodeEntities && this._peek === $AMPERSAND) {\n              return this._decodeEntity();\n          }\n          else {\n              var index = this._index;\n              this._advance();\n              return this._input[index];\n          }\n      };\n      _Tokenizer.prototype._decodeEntity = function () {\n          var start = this._getLocation();\n          this._advance();\n          if (this._attemptCharCode($HASH)) {\n              var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n              var numberStart = this._getLocation().offset;\n              this._attemptCharCodeUntilFn(isDigitEntityEnd);\n              if (this._peek != $SEMICOLON) {\n                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n              }\n              this._advance();\n              var strNum = this._input.substring(numberStart, this._index - 1);\n              try {\n                  var charCode = parseInt(strNum, isHex ? 16 : 10);\n                  return String.fromCharCode(charCode);\n              }\n              catch (e) {\n                  var entity = this._input.substring(start.offset + 1, this._index - 1);\n                  throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n              }\n          }\n          else {\n              var startPosition = this._savePosition();\n              this._attemptCharCodeUntilFn(isNamedEntityEnd);\n              if (this._peek != $SEMICOLON) {\n                  this._restorePosition(startPosition);\n                  return '&';\n              }\n              this._advance();\n              var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n              var char = NAMED_ENTITIES[name_1];\n              if (!char) {\n                  throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n              }\n              return char;\n          }\n      };\n      _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n          var tagCloseStart;\n          var textStart = this._getLocation();\n          this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n          var parts = [];\n          while (true) {\n              tagCloseStart = this._getLocation();\n              if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                  break;\n              }\n              if (this._index > tagCloseStart.offset) {\n                  // add the characters consumed by the previous if statement to the output\n                  parts.push(this._input.substring(tagCloseStart.offset, this._index));\n              }\n              while (this._peek !== firstCharOfEnd) {\n                  parts.push(this._readChar(decodeEntities));\n              }\n          }\n          return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n      };\n      _Tokenizer.prototype._consumeComment = function (start) {\n          var _this = this;\n          this._beginToken(TokenType$1.COMMENT_START, start);\n          this._requireCharCode($MINUS);\n          this._endToken([]);\n          var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n          this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeCdata = function (start) {\n          var _this = this;\n          this._beginToken(TokenType$1.CDATA_START, start);\n          this._requireStr('CDATA[');\n          this._endToken([]);\n          var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n          this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeDocType = function (start) {\n          this._beginToken(TokenType$1.DOC_TYPE, start);\n          this._attemptUntilChar($GT);\n          this._advance();\n          this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n      };\n      _Tokenizer.prototype._consumePrefixAndName = function () {\n          var nameOrPrefixStart = this._index;\n          var prefix = null;\n          while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n              this._advance();\n          }\n          var nameStart;\n          if (this._peek === $COLON) {\n              this._advance();\n              prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n              nameStart = this._index;\n          }\n          else {\n              nameStart = nameOrPrefixStart;\n          }\n          this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n          var name = this._input.substring(nameStart, this._index);\n          return [prefix, name];\n      };\n      _Tokenizer.prototype._consumeTagOpen = function (start) {\n          var savedPos = this._savePosition();\n          var tagName;\n          var lowercaseTagName;\n          try {\n              if (!isAsciiLetter(this._peek)) {\n                  throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n              }\n              var nameStart = this._index;\n              this._consumeTagOpenStart(start);\n              tagName = this._input.substring(nameStart, this._index);\n              lowercaseTagName = tagName.toLowerCase();\n              this._attemptCharCodeUntilFn(isNotWhitespace);\n              while (this._peek !== $SLASH && this._peek !== $GT) {\n                  this._consumeAttributeName();\n                  this._attemptCharCodeUntilFn(isNotWhitespace);\n                  if (this._attemptCharCode($EQ)) {\n                      this._attemptCharCodeUntilFn(isNotWhitespace);\n                      this._consumeAttributeValue();\n                  }\n                  this._attemptCharCodeUntilFn(isNotWhitespace);\n              }\n              this._consumeTagOpenEnd();\n          }\n          catch (e) {\n              if (e instanceof _ControlFlowError) {\n                  // When the start tag is invalid, assume we want a \"<\"\n                  this._restorePosition(savedPos);\n                  // Back to back text tokens are merged at the end\n                  this._beginToken(TokenType$1.TEXT, start);\n                  this._endToken(['<']);\n                  return;\n              }\n              throw e;\n          }\n          var contentTokenType = this._getTagDefinition(tagName).contentType;\n          if (contentTokenType === TagContentType.RAW_TEXT) {\n              this._consumeRawTextWithTagClose(lowercaseTagName, false);\n          }\n          else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n              this._consumeRawTextWithTagClose(lowercaseTagName, true);\n          }\n      };\n      _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n          var _this = this;\n          var textToken = this._consumeRawText(decodeEntities, $LT, function () {\n              if (!_this._attemptCharCode($SLASH))\n                  return false;\n              _this._attemptCharCodeUntilFn(isNotWhitespace);\n              if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                  return false;\n              _this._attemptCharCodeUntilFn(isNotWhitespace);\n              return _this._attemptCharCode($GT);\n          });\n          this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n          this._endToken([null, lowercaseTagName]);\n      };\n      _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n          this._beginToken(TokenType$1.TAG_OPEN_START, start);\n          var parts = this._consumePrefixAndName();\n          this._endToken(parts);\n      };\n      _Tokenizer.prototype._consumeAttributeName = function () {\n          this._beginToken(TokenType$1.ATTR_NAME);\n          var prefixAndName = this._consumePrefixAndName();\n          this._endToken(prefixAndName);\n      };\n      _Tokenizer.prototype._consumeAttributeValue = function () {\n          this._beginToken(TokenType$1.ATTR_VALUE);\n          var value;\n          if (this._peek === $SQ || this._peek === $DQ) {\n              var quoteChar = this._peek;\n              this._advance();\n              var parts = [];\n              while (this._peek !== quoteChar) {\n                  parts.push(this._readChar(true));\n              }\n              value = parts.join('');\n              this._advance();\n          }\n          else {\n              var valueStart = this._index;\n              this._requireCharCodeUntilFn(isNameEnd, 1);\n              value = this._input.substring(valueStart, this._index);\n          }\n          this._endToken([this._processCarriageReturns(value)]);\n      };\n      _Tokenizer.prototype._consumeTagOpenEnd = function () {\n          var tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n          this._beginToken(tokenType);\n          this._requireCharCode($GT);\n          this._endToken([]);\n      };\n      _Tokenizer.prototype._consumeTagClose = function (start) {\n          this._beginToken(TokenType$1.TAG_CLOSE, start);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          var prefixAndName = this._consumePrefixAndName();\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._requireCharCode($GT);\n          this._endToken(prefixAndName);\n      };\n      _Tokenizer.prototype._consumeExpansionFormStart = function () {\n          this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n          this._requireCharCode($LBRACE);\n          this._endToken([]);\n          this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n          var condition = this._readUntil($COMMA);\n          this._endToken([condition], this._getLocation());\n          this._requireCharCode($COMMA);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n          var type = this._readUntil($COMMA);\n          this._endToken([type], this._getLocation());\n          this._requireCharCode($COMMA);\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n      };\n      _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n          this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n          var value = this._readUntil($LBRACE).trim();\n          this._endToken([value], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n          this._requireCharCode($LBRACE);\n          this._endToken([], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n      };\n      _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n          this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n          this._requireCharCode($RBRACE);\n          this._endToken([], this._getLocation());\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._expansionCaseStack.pop();\n      };\n      _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n          this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n          this._requireCharCode($RBRACE);\n          this._endToken([]);\n          this._expansionCaseStack.pop();\n      };\n      _Tokenizer.prototype._consumeText = function () {\n          var start = this._getLocation();\n          this._beginToken(TokenType$1.TEXT, start);\n          var parts = [];\n          do {\n              if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                  parts.push(this._interpolationConfig.start);\n                  this._inInterpolation = true;\n              }\n              else if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.end) &&\n                  this._inInterpolation) {\n                  parts.push(this._interpolationConfig.end);\n                  this._inInterpolation = false;\n              }\n              else {\n                  parts.push(this._readChar(true));\n              }\n          } while (!this._isTextEnd());\n          this._endToken([this._processCarriageReturns(parts.join(''))]);\n      };\n      _Tokenizer.prototype._isTextEnd = function () {\n          if (this._peek === $LT || this._peek === $EOF) {\n              return true;\n          }\n          if (this._tokenizeIcu && !this._inInterpolation) {\n              if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                  // start of an expansion form\n                  return true;\n              }\n              if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                  // end of and expansion case\n                  return true;\n              }\n          }\n          return false;\n      };\n      _Tokenizer.prototype._savePosition = function () {\n          return [this._peek, this._index, this._column, this._line, this.tokens.length];\n      };\n      _Tokenizer.prototype._readUntil = function (char) {\n          var start = this._index;\n          this._attemptUntilChar(char);\n          return this._input.substring(start, this._index);\n      };\n      _Tokenizer.prototype._restorePosition = function (position) {\n          this._peek = position[0];\n          this._index = position[1];\n          this._column = position[2];\n          this._line = position[3];\n          var nbTokens = position[4];\n          if (nbTokens < this.tokens.length) {\n              // remove any extra tokens\n              this.tokens = this.tokens.slice(0, nbTokens);\n          }\n      };\n      _Tokenizer.prototype._isInExpansionCase = function () {\n          return this._expansionCaseStack.length > 0 &&\n              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                  TokenType$1.EXPANSION_CASE_EXP_START;\n      };\n      _Tokenizer.prototype._isInExpansionForm = function () {\n          return this._expansionCaseStack.length > 0 &&\n              this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                  TokenType$1.EXPANSION_FORM_START;\n      };\n      return _Tokenizer;\n  }());\n  function isNotWhitespace(code) {\n      return !isWhitespace(code) || code === $EOF;\n  }\n  function isNameEnd(code) {\n      return isWhitespace(code) || code === $GT || code === $SLASH ||\n          code === $SQ || code === $DQ || code === $EQ;\n  }\n  function isPrefixEnd(code) {\n      return (code < $a || $z < code) && (code < $A || $Z < code) &&\n          (code < $0 || code > $9);\n  }\n  function isDigitEntityEnd(code) {\n      return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n  }\n  function isNamedEntityEnd(code) {\n      return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n  }\n  function isExpansionFormStart(input, offset, interpolationConfig) {\n      var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n      return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n  }\n  function isExpansionCaseStart(peek) {\n      return peek === $EQ || isAsciiLetter(peek);\n  }\n  function compareCharCodeCaseInsensitive(code1, code2) {\n      return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n  }\n  function toUpperCaseCharCode(code) {\n      return code >= $a && code <= $z ? code - $a + $A : code;\n  }\n  function mergeTextTokens(srcTokens) {\n      var dstTokens = [];\n      var lastDstToken;\n      for (var i = 0; i < srcTokens.length; i++) {\n          var token = srcTokens[i];\n          if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n              lastDstToken.parts[0] += token.parts[0];\n              lastDstToken.sourceSpan.end = token.sourceSpan.end;\n          }\n          else {\n              lastDstToken = token;\n              dstTokens.push(lastDstToken);\n          }\n      }\n      return dstTokens;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$2 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var TreeError = (function (_super) {\n      __extends$2(TreeError, _super);\n      function TreeError(elementName, span, msg) {\n          _super.call(this, span, msg);\n          this.elementName = elementName;\n      }\n      TreeError.create = function (elementName, span, msg) {\n          return new TreeError(elementName, span, msg);\n      };\n      return TreeError;\n  }(ParseError));\n  var ParseTreeResult = (function () {\n      function ParseTreeResult(rootNodes, errors) {\n          this.rootNodes = rootNodes;\n          this.errors = errors;\n      }\n      return ParseTreeResult;\n  }());\n  var Parser$1 = (function () {\n      function Parser(getTagDefinition) {\n          this.getTagDefinition = getTagDefinition;\n      }\n      Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n          var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n          return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n      };\n      return Parser;\n  }());\n  var _TreeBuilder = (function () {\n      function _TreeBuilder(tokens, getTagDefinition) {\n          this.tokens = tokens;\n          this.getTagDefinition = getTagDefinition;\n          this._index = -1;\n          this._rootNodes = [];\n          this._errors = [];\n          this._elementStack = [];\n          this._advance();\n      }\n      _TreeBuilder.prototype.build = function () {\n          while (this._peek.type !== TokenType$1.EOF) {\n              if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                  this._consumeStartTag(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                  this._consumeEndTag(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.CDATA_START) {\n                  this._closeVoidElement();\n                  this._consumeCdata(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.COMMENT_START) {\n                  this._closeVoidElement();\n                  this._consumeComment(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                  this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                  this._closeVoidElement();\n                  this._consumeText(this._advance());\n              }\n              else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                  this._consumeExpansion(this._advance());\n              }\n              else {\n                  // Skip all other tokens...\n                  this._advance();\n              }\n          }\n          return new ParseTreeResult(this._rootNodes, this._errors);\n      };\n      _TreeBuilder.prototype._advance = function () {\n          var prev = this._peek;\n          if (this._index < this.tokens.length - 1) {\n              // Note: there is always an EOF token at the end\n              this._index++;\n          }\n          this._peek = this.tokens[this._index];\n          return prev;\n      };\n      _TreeBuilder.prototype._advanceIf = function (type) {\n          if (this._peek.type === type) {\n              return this._advance();\n          }\n          return null;\n      };\n      _TreeBuilder.prototype._consumeCdata = function (startToken) {\n          this._consumeText(this._advance());\n          this._advanceIf(TokenType$1.CDATA_END);\n      };\n      _TreeBuilder.prototype._consumeComment = function (token) {\n          var text = this._advanceIf(TokenType$1.RAW_TEXT);\n          this._advanceIf(TokenType$1.COMMENT_END);\n          var value = isPresent(text) ? text.parts[0].trim() : null;\n          this._addToParent(new Comment(value, token.sourceSpan));\n      };\n      _TreeBuilder.prototype._consumeExpansion = function (token) {\n          var switchValue = this._advance();\n          var type = this._advance();\n          var cases = [];\n          // read =\n          while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n              var expCase = this._parseExpansionCase();\n              if (!expCase)\n                  return; // error\n              cases.push(expCase);\n          }\n          // read the final }\n          if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n              return;\n          }\n          var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n          this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n          this._advance();\n      };\n      _TreeBuilder.prototype._parseExpansionCase = function () {\n          var value = this._advance();\n          // read {\n          if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n              this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n              return null;\n          }\n          // read until }\n          var start = this._advance();\n          var exp = this._collectExpansionExpTokens(start);\n          if (!exp)\n              return null;\n          var end = this._advance();\n          exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n          // parse everything in between { and }\n          var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n          if (parsedExp.errors.length > 0) {\n              this._errors = this._errors.concat(parsedExp.errors);\n              return null;\n          }\n          var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n          var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n          return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n      };\n      _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n          var exp = [];\n          var expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n          while (true) {\n              if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                  this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                  expansionFormStack.push(this._peek.type);\n              }\n              if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                      expansionFormStack.pop();\n                      if (expansionFormStack.length == 0)\n                          return exp;\n                  }\n                  else {\n                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                      return null;\n                  }\n              }\n              if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                  if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                      expansionFormStack.pop();\n                  }\n                  else {\n                      this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                      return null;\n                  }\n              }\n              if (this._peek.type === TokenType$1.EOF) {\n                  this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                  return null;\n              }\n              exp.push(this._advance());\n          }\n      };\n      _TreeBuilder.prototype._consumeText = function (token) {\n          var text = token.parts[0];\n          if (text.length > 0 && text[0] == '\\n') {\n              var parent_1 = this._getParentElement();\n              if (isPresent(parent_1) && parent_1.children.length == 0 &&\n                  this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                  text = text.substring(1);\n              }\n          }\n          if (text.length > 0) {\n              this._addToParent(new Text(text, token.sourceSpan));\n          }\n      };\n      _TreeBuilder.prototype._closeVoidElement = function () {\n          if (this._elementStack.length > 0) {\n              var el = this._elementStack[this._elementStack.length - 1];\n              if (this.getTagDefinition(el.name).isVoid) {\n                  this._elementStack.pop();\n              }\n          }\n      };\n      _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n          var prefix = startTagToken.parts[0];\n          var name = startTagToken.parts[1];\n          var attrs = [];\n          while (this._peek.type === TokenType$1.ATTR_NAME) {\n              attrs.push(this._consumeAttr(this._advance()));\n          }\n          var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n          var selfClosing = false;\n          // Note: There could have been a tokenizer error\n          // so that we don't get a token for the end tag...\n          if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n              this._advance();\n              selfClosing = true;\n              var tagDef = this.getTagDefinition(fullName);\n              if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                  this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n              }\n          }\n          else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n              this._advance();\n              selfClosing = false;\n          }\n          var end = this._peek.sourceSpan.start;\n          var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n          var el = new Element(fullName, attrs, [], span, span, null);\n          this._pushElement(el);\n          if (selfClosing) {\n              this._popElement(fullName);\n              el.endSourceSpan = span;\n          }\n      };\n      _TreeBuilder.prototype._pushElement = function (el) {\n          if (this._elementStack.length > 0) {\n              var parentEl = this._elementStack[this._elementStack.length - 1];\n              if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                  this._elementStack.pop();\n              }\n          }\n          var tagDef = this.getTagDefinition(el.name);\n          var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n          if (isPresent(parent) && tagDef.requireExtraParent(parent.name)) {\n              var newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n              this._insertBeforeContainer(parent, container, newParent);\n          }\n          this._addToParent(el);\n          this._elementStack.push(el);\n      };\n      _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n          var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n          if (this._getParentElement()) {\n              this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n          }\n          if (this.getTagDefinition(fullName).isVoid) {\n              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n          }\n          else if (!this._popElement(fullName)) {\n              this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Unexpected closing tag \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n          }\n      };\n      _TreeBuilder.prototype._popElement = function (fullName) {\n          for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n              var el = this._elementStack[stackIndex];\n              if (el.name == fullName) {\n                  this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                  return true;\n              }\n              if (!this.getTagDefinition(el.name).closedByParent) {\n                  return false;\n              }\n          }\n          return false;\n      };\n      _TreeBuilder.prototype._consumeAttr = function (attrName) {\n          var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n          var end = attrName.sourceSpan.end;\n          var value = '';\n          var valueSpan;\n          if (this._peek.type === TokenType$1.ATTR_VALUE) {\n              var valueToken = this._advance();\n              value = valueToken.parts[0];\n              end = valueToken.sourceSpan.end;\n              valueSpan = valueToken.sourceSpan;\n          }\n          return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n      };\n      _TreeBuilder.prototype._getParentElement = function () {\n          return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n      };\n      /**\n       * Returns the parent in the DOM and the container.\n       *\n       * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n       */\n      _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n          var container = null;\n          for (var i = this._elementStack.length - 1; i >= 0; i--) {\n              if (this._elementStack[i].name !== 'ng-container') {\n                  return { parent: this._elementStack[i], container: container };\n              }\n              container = this._elementStack[i];\n          }\n          return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n      };\n      _TreeBuilder.prototype._addToParent = function (node) {\n          var parent = this._getParentElement();\n          if (isPresent(parent)) {\n              parent.children.push(node);\n          }\n          else {\n              this._rootNodes.push(node);\n          }\n      };\n      /**\n       * Insert a node between the parent and the container.\n       * When no container is given, the node is appended as a child of the parent.\n       * Also updates the element stack accordingly.\n       *\n       * @internal\n       */\n      _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n          if (!container) {\n              this._addToParent(node);\n              this._elementStack.push(node);\n          }\n          else {\n              if (parent) {\n                  // replace the container with the new node in the children\n                  var index = parent.children.indexOf(container);\n                  parent.children[index] = node;\n              }\n              else {\n                  this._rootNodes.push(node);\n              }\n              node.children.push(container);\n              this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n          }\n      };\n      _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n          if (isBlank(prefix)) {\n              prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n              if (isBlank(prefix) && isPresent(parentElement)) {\n                  prefix = getNsPrefix(parentElement.name);\n              }\n          }\n          return mergeNsAndName(prefix, localName);\n      };\n      return _TreeBuilder;\n  }());\n  function lastOnStack(stack, element) {\n      return stack.length > 0 && stack[stack.length - 1] === element;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  function digestMessage(message) {\n      return sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n  }\n  /**\n   * Serialize the i18n ast to something xml-like in order to generate an UID.\n   *\n   * The visitor is also used in the i18n parser tests\n   *\n   * @internal\n   */\n  var _SerializerVisitor = (function () {\n      function _SerializerVisitor() {\n      }\n      _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n      _SerializerVisitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n      };\n      _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n          var _this = this;\n          var strCases = Object.keys(icu.cases).map(function (k) { return (k + \" {\" + icu.cases[k].visit(_this) + \"}\"); });\n          return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n      };\n      _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var _this = this;\n          return ph.isVoid ?\n              \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n              \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n      };\n      _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n          return \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\";\n      };\n      _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n      };\n      return _SerializerVisitor;\n  }());\n  var serializerVisitor = new _SerializerVisitor();\n  function serializeNodes(nodes) {\n      return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n  }\n  /**\n   * Compute the SHA1 of the given string\n   *\n   * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n   *\n   * WARNING: this function has not been designed not tested with security in mind.\n   *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n   */\n  function sha1(str) {\n      var utf8 = utf8Encode(str);\n      var words32 = stringToWords32(utf8);\n      var len = utf8.length * 8;\n      var w = new Array(80);\n      var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n      words32[len >> 5] |= 0x80 << (24 - len % 32);\n      words32[((len + 64 >> 9) << 4) + 15] = len;\n      for (var i = 0; i < words32.length; i += 16) {\n          var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n          for (var j = 0; j < 80; j++) {\n              if (j < 16) {\n                  w[j] = words32[i + j];\n              }\n              else {\n                  w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n              }\n              var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n              var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n              _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n          }\n          _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n      }\n      var sha1 = words32ToString([a, b, c, d, e]);\n      var hex = '';\n      for (var i = 0; i < sha1.length; i++) {\n          var b_1 = sha1.charCodeAt(i);\n          hex += (b_1 >>> 4 & 0x0f).toString(16) + (b_1 & 0x0f).toString(16);\n      }\n      return hex.toLowerCase();\n      var _d, _e;\n  }\n  function utf8Encode(str) {\n      var encoded = '';\n      for (var index = 0; index < str.length; index++) {\n          var codePoint = decodeSurrogatePairs(str, index);\n          if (codePoint <= 0x7f) {\n              encoded += String.fromCharCode(codePoint);\n          }\n          else if (codePoint <= 0x7ff) {\n              encoded += String.fromCharCode(0xc0 | codePoint >>> 6, 0x80 | codePoint & 0x3f);\n          }\n          else if (codePoint <= 0xffff) {\n              encoded += String.fromCharCode(0xe0 | codePoint >>> 12, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n          }\n          else if (codePoint <= 0x1fffff) {\n              encoded += String.fromCharCode(0xf0 | codePoint >>> 18, 0x80 | codePoint >>> 12 & 0x3f, 0x80 | codePoint >>> 6 & 0x3f, 0x80 | codePoint & 0x3f);\n          }\n      }\n      return encoded;\n  }\n  // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n  function decodeSurrogatePairs(str, index) {\n      if (index < 0 || index >= str.length) {\n          throw new Error(\"index=\" + index + \" is out of range in \\\"\" + str + \"\\\"\");\n      }\n      var high = str.charCodeAt(index);\n      var low;\n      if (high >= 0xd800 && high <= 0xdfff && str.length > index + 1) {\n          low = str.charCodeAt(index + 1);\n          if (low >= 0xdc00 && low <= 0xdfff) {\n              return (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n          }\n      }\n      return high;\n  }\n  function stringToWords32(str) {\n      var words32 = Array(str.length >>> 2);\n      for (var i = 0; i < words32.length; i++) {\n          words32[i] = 0;\n      }\n      for (var i = 0; i < str.length; i++) {\n          words32[i >>> 2] |= (str.charCodeAt(i) & 0xff) << 8 * (3 - i & 0x3);\n      }\n      return words32;\n  }\n  function words32ToString(words32) {\n      var str = '';\n      for (var i = 0; i < words32.length * 4; i++) {\n          str += String.fromCharCode((words32[i >>> 2] >>> 8 * (3 - i & 0x3)) & 0xff);\n      }\n      return str;\n  }\n  function fk(index, b, c, d) {\n      if (index < 20) {\n          return [(b & c) | (~b & d), 0x5a827999];\n      }\n      if (index < 40) {\n          return [b ^ c ^ d, 0x6ed9eba1];\n      }\n      if (index < 60) {\n          return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n      }\n      return [b ^ c ^ d, 0xca62c1d6];\n  }\n  function add32(a, b) {\n      var low = (a & 0xffff) + (b & 0xffff);\n      var high = (a >> 16) + (b >> 16) + (low >> 16);\n      return (high << 16) | (low & 0xffff);\n  }\n  function rol32(a, count) {\n      return (a << count) | (a >>> (32 - count));\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var Message = (function () {\n      /**\n       * @param nodes message AST\n       * @param placeholders maps placeholder names to static content\n       * @param placeholderToMsgIds maps placeholder names to translatable message IDs (used for ICU\n       *                            messages)\n       * @param meaning\n       * @param description\n       */\n      function Message(nodes, placeholders, placeholderToMsgIds, meaning, description) {\n          this.nodes = nodes;\n          this.placeholders = placeholders;\n          this.placeholderToMsgIds = placeholderToMsgIds;\n          this.meaning = meaning;\n          this.description = description;\n      }\n      return Message;\n  }());\n  var Text$1 = (function () {\n      function Text(value, sourceSpan) {\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n      return Text;\n  }());\n  var Container = (function () {\n      function Container(children, sourceSpan) {\n          this.children = children;\n          this.sourceSpan = sourceSpan;\n      }\n      Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n      return Container;\n  }());\n  var Icu = (function () {\n      function Icu(expression, type, cases, sourceSpan) {\n          this.expression = expression;\n          this.type = type;\n          this.cases = cases;\n          this.sourceSpan = sourceSpan;\n      }\n      Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n      return Icu;\n  }());\n  var TagPlaceholder = (function () {\n      function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n          this.tag = tag;\n          this.attrs = attrs;\n          this.startName = startName;\n          this.closeName = closeName;\n          this.children = children;\n          this.isVoid = isVoid;\n          this.sourceSpan = sourceSpan;\n      }\n      TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n      return TagPlaceholder;\n  }());\n  var Placeholder = (function () {\n      function Placeholder(value, name, sourceSpan) {\n          if (name === void 0) { name = ''; }\n          this.value = value;\n          this.name = name;\n          this.sourceSpan = sourceSpan;\n      }\n      Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n      return Placeholder;\n  }());\n  var IcuPlaceholder = (function () {\n      function IcuPlaceholder(value, name, sourceSpan) {\n          if (name === void 0) { name = ''; }\n          this.value = value;\n          this.name = name;\n          this.sourceSpan = sourceSpan;\n      }\n      IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n      return IcuPlaceholder;\n  }());\n\n  var HtmlTagDefinition = (function () {\n      function HtmlTagDefinition(_a) {\n          var _this = this;\n          var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n          this.closedByChildren = {};\n          this.closedByParent = false;\n          this.canSelfClose = false;\n          if (closedByChildren && closedByChildren.length > 0) {\n              closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n          }\n          this.isVoid = isVoid;\n          this.closedByParent = closedByParent || isVoid;\n          if (requiredParents && requiredParents.length > 0) {\n              this.requiredParents = {};\n              // The first parent is the list is automatically when none of the listed parents are present\n              this.parentToAdd = requiredParents[0];\n              requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n          }\n          this.implicitNamespacePrefix = implicitNamespacePrefix;\n          this.contentType = contentType;\n          this.ignoreFirstLf = ignoreFirstLf;\n      }\n      HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n          if (!this.requiredParents) {\n              return false;\n          }\n          if (!currentParent) {\n              return true;\n          }\n          var lcParent = currentParent.toLowerCase();\n          return this.requiredParents[lcParent] != true && lcParent != 'template';\n      };\n      HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n          return this.isVoid || name.toLowerCase() in this.closedByChildren;\n      };\n      return HtmlTagDefinition;\n  }());\n  // see http://www.w3.org/TR/html51/syntax.html#optional-tags\n  // This implementation does not fully conform to the HTML5 spec.\n  var TAG_DEFINITIONS = {\n      'base': new HtmlTagDefinition({ isVoid: true }),\n      'meta': new HtmlTagDefinition({ isVoid: true }),\n      'area': new HtmlTagDefinition({ isVoid: true }),\n      'embed': new HtmlTagDefinition({ isVoid: true }),\n      'link': new HtmlTagDefinition({ isVoid: true }),\n      'img': new HtmlTagDefinition({ isVoid: true }),\n      'input': new HtmlTagDefinition({ isVoid: true }),\n      'param': new HtmlTagDefinition({ isVoid: true }),\n      'hr': new HtmlTagDefinition({ isVoid: true }),\n      'br': new HtmlTagDefinition({ isVoid: true }),\n      'source': new HtmlTagDefinition({ isVoid: true }),\n      'track': new HtmlTagDefinition({ isVoid: true }),\n      'wbr': new HtmlTagDefinition({ isVoid: true }),\n      'p': new HtmlTagDefinition({\n          closedByChildren: [\n              'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n              'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n              'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n          ],\n          closedByParent: true\n      }),\n      'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n      'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n      'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n      'tr': new HtmlTagDefinition({\n          closedByChildren: ['tr'],\n          requiredParents: ['tbody', 'tfoot', 'thead'],\n          closedByParent: true\n      }),\n      'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n      'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n      'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n      'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n      'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n      'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n      'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n      'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n      'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n      'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n      'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n      'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n      'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n      'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n      'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n      'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n      'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n      'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n  };\n  var _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n  function getHtmlTagDefinition(tagName) {\n      return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var TAG_TO_PLACEHOLDER_NAMES = {\n      'A': 'LINK',\n      'B': 'BOLD_TEXT',\n      'BR': 'LINE_BREAK',\n      'EM': 'EMPHASISED_TEXT',\n      'H1': 'HEADING_LEVEL1',\n      'H2': 'HEADING_LEVEL2',\n      'H3': 'HEADING_LEVEL3',\n      'H4': 'HEADING_LEVEL4',\n      'H5': 'HEADING_LEVEL5',\n      'H6': 'HEADING_LEVEL6',\n      'HR': 'HORIZONTAL_RULE',\n      'I': 'ITALIC_TEXT',\n      'LI': 'LIST_ITEM',\n      'LINK': 'MEDIA_LINK',\n      'OL': 'ORDERED_LIST',\n      'P': 'PARAGRAPH',\n      'Q': 'QUOTATION',\n      'S': 'STRIKETHROUGH_TEXT',\n      'SMALL': 'SMALL_TEXT',\n      'SUB': 'SUBSTRIPT',\n      'SUP': 'SUPERSCRIPT',\n      'TBODY': 'TABLE_BODY',\n      'TD': 'TABLE_CELL',\n      'TFOOT': 'TABLE_FOOTER',\n      'TH': 'TABLE_HEADER_CELL',\n      'THEAD': 'TABLE_HEADER',\n      'TR': 'TABLE_ROW',\n      'TT': 'MONOSPACED_TEXT',\n      'U': 'UNDERLINED_TEXT',\n      'UL': 'UNORDERED_LIST',\n  };\n  /**\n   * Creates unique names for placeholder with different content\n   *\n   * @internal\n   */\n  var PlaceholderRegistry = (function () {\n      function PlaceholderRegistry() {\n          // Count the occurrence of the base name top generate a unique name\n          this._placeHolderNameCounts = {};\n          // Maps signature to placeholder names\n          this._signatureToName = {};\n      }\n      PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n          var signature = this._hashTag(tag, attrs, isVoid);\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var upperTag = tag.toUpperCase();\n          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n          var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n          this._signatureToName[signature] = name;\n          return name;\n      };\n      PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n          var signature = this._hashClosingTag(tag);\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var upperTag = tag.toUpperCase();\n          var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n          var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n          this._signatureToName[signature] = name;\n          return name;\n      };\n      PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n          var upperName = name.toUpperCase();\n          var signature = \"PH: \" + upperName + \"=\" + content;\n          if (this._signatureToName[signature]) {\n              return this._signatureToName[signature];\n          }\n          var uniqueName = this._generateUniqueName(upperName);\n          this._signatureToName[signature] = uniqueName;\n          return uniqueName;\n      };\n      // Generate a hash for a tag - does not take attribute order into account\n      PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n          var start = \"<\" + tag;\n          var strAttrs = Object.keys(attrs).sort().map(function (name) { return (\" \" + name + \"=\" + attrs[name]); }).join('');\n          var end = isVoid ? '/>' : \"></\" + tag + \">\";\n          return start + strAttrs + end;\n      };\n      PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n      PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n          var name = base;\n          var next = this._placeHolderNameCounts[name];\n          if (!next) {\n              next = 1;\n          }\n          else {\n              name += \"_\" + next;\n              next++;\n          }\n          this._placeHolderNameCounts[base] = next;\n          return name;\n      };\n      return PlaceholderRegistry;\n  }());\n\n  var _expParser = new Parser(new Lexer());\n  /**\n   * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n   */\n  function createI18nMessageFactory(interpolationConfig) {\n      var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n      return function (nodes, meaning, description) {\n          return visitor.toI18nMessage(nodes, meaning, description);\n      };\n  }\n  var _I18nVisitor = (function () {\n      function _I18nVisitor(_expressionParser, _interpolationConfig) {\n          this._expressionParser = _expressionParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description) {\n          this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n          this._icuDepth = 0;\n          this._placeholderRegistry = new PlaceholderRegistry();\n          this._placeholderToContent = {};\n          this._placeholderToIds = {};\n          var i18nodes = visitAll(this, nodes, {});\n          return new Message(i18nodes, this._placeholderToContent, this._placeholderToIds, meaning, description);\n      };\n      _I18nVisitor.prototype.visitElement = function (el, context) {\n          var children = visitAll(this, el.children);\n          var attrs = {};\n          el.attrs.forEach(function (attr) {\n              // Do not visit the attributes, translatable ones are top-level ASTs\n              attrs[attr.name] = attr.value;\n          });\n          var isVoid = getHtmlTagDefinition(el.name).isVoid;\n          var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n          this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n          var closePhName = '';\n          if (!isVoid) {\n              closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n              this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n          }\n          return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n          return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitText = function (text, context) {\n          return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n      _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n          var _this = this;\n          this._icuDepth++;\n          var i18nIcuCases = {};\n          var i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n          icu.cases.forEach(function (caze) {\n              i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n          });\n          this._icuDepth--;\n          if (this._isIcu || this._icuDepth > 0) {\n              // If the message (vs a part of the message) is an ICU message returns it\n              return i18nIcu;\n          }\n          // Else returns a placeholder\n          // ICU placeholders should not be replaced with their original content but with the their\n          // translations. We need to create a new visitor (they are not re-entrant) to compute the\n          // message id.\n          // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n          var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n          var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n          this._placeholderToIds[phName] = digestMessage(visitor.toI18nMessage([icu], '', ''));\n          return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n      };\n      _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n          throw new Error('Unreachable code');\n      };\n      _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n          var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n          if (!splitInterpolation) {\n              // No expression, return a single text\n              return new Text$1(text, sourceSpan);\n          }\n          // Return a group of text + expressions\n          var nodes = [];\n          var container = new Container(nodes, sourceSpan);\n          var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n          for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n              var expression = splitInterpolation.expressions[i];\n              var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n              var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n              if (splitInterpolation.strings[i].length) {\n                  // No need to add empty strings\n                  nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n              }\n              nodes.push(new Placeholder(expression, phName, sourceSpan));\n              this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n          }\n          // The last index contains no expression\n          var lastStringIdx = splitInterpolation.strings.length - 1;\n          if (splitInterpolation.strings[lastStringIdx].length) {\n              nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n          }\n          return container;\n      };\n      return _I18nVisitor;\n  }());\n  var _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*\"([\\s\\S]*?)\"[\\s\\S]*\\)/g;\n  function _extractPlaceholderName(input) {\n      return input.split(_CUSTOM_PH_EXP)[1];\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$4 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  /**\n   * An i18n error.\n   */\n  var I18nError = (function (_super) {\n      __extends$4(I18nError, _super);\n      function I18nError(span, msg) {\n          _super.call(this, span, msg);\n      }\n      return I18nError;\n  }(ParseError));\n\n  var _I18N_ATTR = 'i18n';\n  var _I18N_ATTR_PREFIX = 'i18n-';\n  var _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\n  /**\n   * Extract translatable messages from an html AST\n   */\n  function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n      var visitor = new _Visitor(implicitTags, implicitAttrs);\n      return visitor.extract(nodes, interpolationConfig);\n  }\n  function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n      var visitor = new _Visitor(implicitTags, implicitAttrs);\n      return visitor.merge(nodes, translations, interpolationConfig);\n  }\n  var ExtractionResult = (function () {\n      function ExtractionResult(messages, errors) {\n          this.messages = messages;\n          this.errors = errors;\n      }\n      return ExtractionResult;\n  }());\n  var _VisitorMode;\n  (function (_VisitorMode) {\n      _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n      _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n  })(_VisitorMode || (_VisitorMode = {}));\n  /**\n   * This Visitor is used:\n   * 1. to extract all the translatable strings from an html AST (see `extract()`),\n   * 2. to replace the translatable strings with the actual translations (see `merge()`)\n   *\n   * @internal\n   */\n  var _Visitor = (function () {\n      function _Visitor(_implicitTags, _implicitAttrs) {\n          this._implicitTags = _implicitTags;\n          this._implicitAttrs = _implicitAttrs;\n      }\n      /**\n       * Extracts the messages from the tree\n       */\n      _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n          var _this = this;\n          this._init(_VisitorMode.Extract, interpolationConfig);\n          nodes.forEach(function (node) { return node.visit(_this, null); });\n          if (this._inI18nBlock) {\n              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n          }\n          return new ExtractionResult(this._messages, this._errors);\n      };\n      /**\n       * Returns a tree where all translatable nodes are translated\n       */\n      _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n          this._init(_VisitorMode.Merge, interpolationConfig);\n          this._translations = translations;\n          // Construct a single fake root element\n          var wrapper = new Element('wrapper', [], nodes, null, null, null);\n          var translatedNode = wrapper.visit(this, null);\n          if (this._inI18nBlock) {\n              this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n          }\n          return new ParseTreeResult(translatedNode.children, this._errors);\n      };\n      _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n          // Parse cases for translatable html attributes\n          var expression = visitAll(this, icuCase.expression, context);\n          if (this._mode === _VisitorMode.Merge) {\n              return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n          }\n      };\n      _Visitor.prototype.visitExpansion = function (icu, context) {\n          this._mayBeAddBlockChildren(icu);\n          var wasInIcu = this._inIcu;\n          if (!this._inIcu) {\n              // nested ICU messages should not be extracted but top-level translated as a whole\n              if (this._isInTranslatableSection) {\n                  this._addMessage([icu]);\n              }\n              this._inIcu = true;\n          }\n          var cases = visitAll(this, icu.cases, context);\n          if (this._mode === _VisitorMode.Merge) {\n              icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n          }\n          this._inIcu = wasInIcu;\n          return icu;\n      };\n      _Visitor.prototype.visitComment = function (comment, context) {\n          var isOpening = _isOpeningComment(comment);\n          if (isOpening && this._isInTranslatableSection) {\n              this._reportError(comment, 'Could not start a block inside a translatable section');\n              return;\n          }\n          var isClosing = _isClosingComment(comment);\n          if (isClosing && !this._inI18nBlock) {\n              this._reportError(comment, 'Trying to close an unopened block');\n              return;\n          }\n          if (!this._inI18nNode && !this._inIcu) {\n              if (!this._inI18nBlock) {\n                  if (isOpening) {\n                      this._inI18nBlock = true;\n                      this._blockStartDepth = this._depth;\n                      this._blockChildren = [];\n                      this._blockMeaningAndDesc = comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                      this._openTranslatableSection(comment);\n                  }\n              }\n              else {\n                  if (isClosing) {\n                      if (this._depth == this._blockStartDepth) {\n                          this._closeTranslatableSection(comment, this._blockChildren);\n                          this._inI18nBlock = false;\n                          var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                          // merge attributes in sections\n                          var nodes = this._translateMessage(comment, message);\n                          return visitAll(this, nodes);\n                      }\n                      else {\n                          this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                          return;\n                      }\n                  }\n              }\n          }\n      };\n      _Visitor.prototype.visitText = function (text, context) {\n          if (this._isInTranslatableSection) {\n              this._mayBeAddBlockChildren(text);\n          }\n          return text;\n      };\n      _Visitor.prototype.visitElement = function (el, context) {\n          var _this = this;\n          this._mayBeAddBlockChildren(el);\n          this._depth++;\n          var wasInI18nNode = this._inI18nNode;\n          var wasInImplicitNode = this._inImplicitNode;\n          var childNodes;\n          // Extract only top level nodes with the (implicit) \"i18n\" attribute if not in a block or an ICU\n          // message\n          var i18nAttr = _getI18nAttr(el);\n          var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) &&\n              !this._inIcu && !this._isInTranslatableSection;\n          var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n          this._inImplicitNode = this._inImplicitNode || isImplicit;\n          if (!this._isInTranslatableSection && !this._inIcu) {\n              if (i18nAttr) {\n                  // explicit translation\n                  this._inI18nNode = true;\n                  var message = this._addMessage(el.children, i18nAttr.value);\n                  childNodes = this._translateMessage(el, message);\n              }\n              else if (isTopLevelImplicit) {\n                  // implicit translation\n                  this._inI18nNode = true;\n                  var message = this._addMessage(el.children);\n                  childNodes = this._translateMessage(el, message);\n              }\n              if (this._mode == _VisitorMode.Extract) {\n                  var isTranslatable = i18nAttr || isTopLevelImplicit;\n                  if (isTranslatable) {\n                      this._openTranslatableSection(el);\n                  }\n                  visitAll(this, el.children);\n                  if (isTranslatable) {\n                      this._closeTranslatableSection(el, el.children);\n                  }\n              }\n              if (this._mode === _VisitorMode.Merge && !i18nAttr && !isTopLevelImplicit) {\n                  childNodes = [];\n                  el.children.forEach(function (child) {\n                      var visited = child.visit(_this, context);\n                      if (visited && !_this._isInTranslatableSection) {\n                          // Do not add the children from translatable sections (= i18n blocks here)\n                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n                          childNodes = childNodes.concat(visited);\n                      }\n                  });\n              }\n          }\n          else {\n              if (i18nAttr || isTopLevelImplicit) {\n                  this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n              }\n              if (this._mode == _VisitorMode.Extract) {\n                  // Descend into child nodes for extraction\n                  visitAll(this, el.children);\n              }\n              if (this._mode == _VisitorMode.Merge) {\n                  // Translate attributes in ICU messages\n                  childNodes = [];\n                  el.children.forEach(function (child) {\n                      var visited = child.visit(_this, context);\n                      if (visited && !_this._isInTranslatableSection) {\n                          // Do not add the children from translatable sections (= i18n blocks here)\n                          // They will be added when the section is close (i.e. on `<!-- /i18n -->`)\n                          childNodes = childNodes.concat(visited);\n                      }\n                  });\n              }\n          }\n          this._visitAttributesOf(el);\n          this._depth--;\n          this._inI18nNode = wasInI18nNode;\n          this._inImplicitNode = wasInImplicitNode;\n          if (this._mode === _VisitorMode.Merge) {\n              // There are no childNodes in translatable sections - those nodes will be replace anyway\n              var translatedAttrs = this._translateAttributes(el);\n              return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n          }\n      };\n      _Visitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _Visitor.prototype._init = function (mode, interpolationConfig) {\n          this._mode = mode;\n          this._inI18nBlock = false;\n          this._inI18nNode = false;\n          this._depth = 0;\n          this._inIcu = false;\n          this._msgCountAtSectionStart = void 0;\n          this._errors = [];\n          this._messages = [];\n          this._inImplicitNode = false;\n          this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n      };\n      // looks for translatable attributes\n      _Visitor.prototype._visitAttributesOf = function (el) {\n          var _this = this;\n          var explicitAttrNameToValue = {};\n          var implicitAttrNames = this._implicitAttrs[el.name] || [];\n          el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n              .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n              attr.value; });\n          el.attrs.forEach(function (attr) {\n              if (attr.name in explicitAttrNameToValue) {\n                  _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n              }\n              else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                  _this._addMessage([attr]);\n              }\n          });\n      };\n      // add a translatable message\n      _Visitor.prototype._addMessage = function (ast, meaningAndDesc) {\n          if (ast.length == 0 ||\n              ast.length == 1 && ast[0] instanceof Attribute$1 && !ast[0].value) {\n              // Do not create empty messages\n              return;\n          }\n          var _a = _splitMeaningAndDesc(meaningAndDesc), meaning = _a[0], description = _a[1];\n          var message = this._createI18nMessage(ast, meaning, description);\n          this._messages.push(message);\n          return message;\n      };\n      // Translates the given message given the `TranslationBundle`\n      // no-op when called in extraction mode (returns [])\n      _Visitor.prototype._translateMessage = function (el, message) {\n          if (message && this._mode === _VisitorMode.Merge) {\n              var id = digestMessage(message);\n              var nodes = this._translations.get(id);\n              if (nodes) {\n                  return nodes;\n              }\n              this._reportError(el, \"Translation unavailable for message id=\\\"\" + id + \"\\\"\");\n          }\n          return [];\n      };\n      // translate the attributes of an element and remove i18n specific attributes\n      _Visitor.prototype._translateAttributes = function (el) {\n          var _this = this;\n          var attributes = el.attrs;\n          var i18nAttributeMeanings = {};\n          attributes.forEach(function (attr) {\n              if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                  i18nAttributeMeanings[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                      _splitMeaningAndDesc(attr.value)[0];\n              }\n          });\n          var translatedAttributes = [];\n          attributes.forEach(function (attr) {\n              if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                  // strip i18n specific attributes\n                  return;\n              }\n              if (attr.value && attr.value != '' && i18nAttributeMeanings.hasOwnProperty(attr.name)) {\n                  var meaning = i18nAttributeMeanings[attr.name];\n                  var message = _this._createI18nMessage([attr], meaning, '');\n                  var id = digestMessage(message);\n                  var nodes = _this._translations.get(id);\n                  if (nodes) {\n                      if (nodes[0] instanceof Text) {\n                          var value = nodes[0].value;\n                          translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                      }\n                      else {\n                          _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n                      }\n                  }\n                  else {\n                      _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + id + \"\\\")\");\n                  }\n              }\n              else {\n                  translatedAttributes.push(attr);\n              }\n          });\n          return translatedAttributes;\n      };\n      /**\n       * Add the node as a child of the block when:\n       * - we are in a block,\n       * - we are not inside a ICU message (those are handled separately),\n       * - the node is a \"direct child\" of the block\n       */\n      _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n          if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n              this._blockChildren.push(node);\n          }\n      };\n      /**\n       * Marks the start of a section, see `_endSection`\n       */\n      _Visitor.prototype._openTranslatableSection = function (node) {\n          if (this._isInTranslatableSection) {\n              this._reportError(node, 'Unexpected section start');\n          }\n          else {\n              this._msgCountAtSectionStart = this._messages.length;\n          }\n      };\n      Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n          /**\n           * A translatable section could be:\n           * - a translatable element,\n           * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n           */\n          get: function () {\n              return this._msgCountAtSectionStart !== void 0;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      /**\n       * Terminates a section.\n       *\n       * If a section has only one significant children (comments not significant) then we should not\n       * keep the message from this children:\n       *\n       * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n       * - one for the <p> content with meaning and description,\n       * - another one for the ICU message.\n       *\n       * In this case the last message is discarded as it contains less information (the AST is\n       * otherwise identical).\n       *\n       * Note that we should still keep messages extracted from attributes inside the section (ie in the\n       * ICU message here)\n       */\n      _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n          if (!this._isInTranslatableSection) {\n              this._reportError(node, 'Unexpected section end');\n              return;\n          }\n          var startIndex = this._msgCountAtSectionStart;\n          var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n          if (significantChildren == 1) {\n              for (var i = this._messages.length - 1; i >= startIndex; i--) {\n                  var ast = this._messages[i].nodes;\n                  if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                      this._messages.splice(i, 1);\n                      break;\n                  }\n              }\n          }\n          this._msgCountAtSectionStart = void 0;\n      };\n      _Visitor.prototype._reportError = function (node, msg) {\n          this._errors.push(new I18nError(node.sourceSpan, msg));\n      };\n      return _Visitor;\n  }());\n  function _isOpeningComment(n) {\n      return n instanceof Comment && n.value && n.value.startsWith('i18n');\n  }\n  function _isClosingComment(n) {\n      return n instanceof Comment && n.value && n.value === '/i18n';\n  }\n  function _getI18nAttr(p) {\n      return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n  }\n  function _splitMeaningAndDesc(i18n) {\n      if (!i18n)\n          return ['', ''];\n      var pipeIndex = i18n.indexOf('|');\n      return pipeIndex == -1 ? ['', i18n] : [i18n.slice(0, pipeIndex), i18n.slice(pipeIndex + 1)];\n  }\n\n  /**\n   * A container for message extracted from the templates.\n   */\n  var MessageBundle = (function () {\n      function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs) {\n          this._htmlParser = _htmlParser;\n          this._implicitTags = _implicitTags;\n          this._implicitAttrs = _implicitAttrs;\n          this._messageMap = {};\n      }\n      MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n          var _this = this;\n          var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n          if (htmlParserResult.errors.length) {\n              return htmlParserResult.errors;\n          }\n          var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n          if (i18nParserResult.errors.length) {\n              return i18nParserResult.errors;\n          }\n          i18nParserResult.messages.forEach(function (message) { _this._messageMap[digestMessage(message)] = message; });\n      };\n      MessageBundle.prototype.getMessageMap = function () { return this._messageMap; };\n      MessageBundle.prototype.write = function (serializer) { return serializer.write(this._messageMap); };\n      return MessageBundle;\n  }());\n\n  var XmlTagDefinition = (function () {\n      function XmlTagDefinition() {\n          this.closedByParent = false;\n          this.contentType = TagContentType.PARSABLE_DATA;\n          this.isVoid = false;\n          this.ignoreFirstLf = false;\n          this.canSelfClose = true;\n      }\n      XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n      XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n      return XmlTagDefinition;\n  }());\n  var _TAG_DEFINITION = new XmlTagDefinition();\n  function getXmlTagDefinition(tagName) {\n      return _TAG_DEFINITION;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$5 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var XmlParser = (function (_super) {\n      __extends$5(XmlParser, _super);\n      function XmlParser() {\n          _super.call(this, getXmlTagDefinition);\n      }\n      XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          return _super.prototype.parse.call(this, source, url, parseExpansionForms, null);\n      };\n      return XmlParser;\n  }(Parser$1));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  // Generate a map of placeholder to content indexed by message ids\n  function extractPlaceholders(messageBundle) {\n      var messageMap = messageBundle.getMessageMap();\n      var placeholders = {};\n      Object.keys(messageMap).forEach(function (msgId) {\n          placeholders[msgId] = messageMap[msgId].placeholders;\n      });\n      return placeholders;\n  }\n  // Generate a map of placeholder to message ids indexed by message ids\n  function extractPlaceholderToIds(messageBundle) {\n      var messageMap = messageBundle.getMessageMap();\n      var placeholderToIds = {};\n      Object.keys(messageMap).forEach(function (msgId) {\n          placeholderToIds[msgId] = messageMap[msgId].placeholderToMsgIds;\n      });\n      return placeholderToIds;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$6 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _Visitor$1 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.visitTag = function (tag) {\n          var _this = this;\n          var strAttrs = this._serializeAttributes(tag.attrs);\n          if (tag.children.length == 0) {\n              return \"<\" + tag.name + strAttrs + \"/>\";\n          }\n          var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n          return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n      };\n      _Visitor.prototype.visitText = function (text) { return text.value; };\n      _Visitor.prototype.visitDeclaration = function (decl) {\n          return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n      };\n      _Visitor.prototype._serializeAttributes = function (attrs) {\n          var strAttrs = Object.keys(attrs).map(function (name) { return (name + \"=\\\"\" + attrs[name] + \"\\\"\"); }).join(' ');\n          return strAttrs.length > 0 ? ' ' + strAttrs : '';\n      };\n      _Visitor.prototype.visitDoctype = function (doctype) {\n          return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n      };\n      return _Visitor;\n  }());\n  var _visitor = new _Visitor$1();\n  function serialize(nodes) {\n      return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n  }\n  var Declaration = (function () {\n      function Declaration(unescapedAttrs) {\n          var _this = this;\n          this.attrs = {};\n          Object.keys(unescapedAttrs).forEach(function (k) {\n              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n          });\n      }\n      Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n      return Declaration;\n  }());\n  var Doctype = (function () {\n      function Doctype(rootTag, dtd) {\n          this.rootTag = rootTag;\n          this.dtd = dtd;\n      }\n      ;\n      Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n      return Doctype;\n  }());\n  var Tag = (function () {\n      function Tag(name, unescapedAttrs, children) {\n          var _this = this;\n          if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n          if (children === void 0) { children = []; }\n          this.name = name;\n          this.children = children;\n          this.attrs = {};\n          Object.keys(unescapedAttrs).forEach(function (k) {\n              _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n          });\n      }\n      Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n      return Tag;\n  }());\n  var Text$2 = (function () {\n      function Text(unescapedValue) {\n          this.value = _escapeXml(unescapedValue);\n      }\n      ;\n      Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n      return Text;\n  }());\n  var CR = (function (_super) {\n      __extends$6(CR, _super);\n      function CR(ws) {\n          if (ws === void 0) { ws = 0; }\n          _super.call(this, \"\\n\" + new Array(ws + 1).join(' '));\n      }\n      return CR;\n  }(Text$2));\n  var _ESCAPED_CHARS = [\n      [/&/g, '&amp;'],\n      [/\"/g, '&quot;'],\n      [/'/g, '&apos;'],\n      [/</g, '&lt;'],\n      [/>/g, '&gt;'],\n  ];\n  function _escapeXml(text) {\n      return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n  }\n\n  var _VERSION = '1.2';\n  var _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n  // TODO(vicb): make this a param (s/_/-/)\n  var _SOURCE_LANG = 'en';\n  var _PLACEHOLDER_TAG = 'x';\n  var _SOURCE_TAG = 'source';\n  var _TARGET_TAG = 'target';\n  var _UNIT_TAG = 'trans-unit';\n  // http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n  // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\n  var Xliff = (function () {\n      function Xliff(_htmlParser, _interpolationConfig) {\n          this._htmlParser = _htmlParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      Xliff.prototype.write = function (messageMap) {\n          var visitor = new _WriteVisitor();\n          var transUnits = [];\n          Object.keys(messageMap).forEach(function (id) {\n              var message = messageMap[id];\n              var transUnit = new Tag(_UNIT_TAG, { id: id, datatype: 'html' });\n              transUnit.children.push(new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new CR(8), new Tag(_TARGET_TAG));\n              if (message.description) {\n                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n              }\n              if (message.meaning) {\n                  transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n              }\n              transUnit.children.push(new CR(6));\n              transUnits.push(new CR(6), transUnit);\n          });\n          var body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n          var file = new Tag('file', { 'source-language': _SOURCE_LANG, datatype: 'plaintext', original: 'ng2.template' }, [new CR(4), body, new CR(2)]);\n          var xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n          return serialize([\n              new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n          ]);\n      };\n      Xliff.prototype.load = function (content, url, messageBundle) {\n          var _this = this;\n          // Parse the xtb file into xml nodes\n          var result = new XmlParser().parse(content, url);\n          if (result.errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n          }\n          // Replace the placeholders, messages are now string\n          var _a = new _LoadVisitor().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n          if (errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n          }\n          // Convert the string messages to html ast\n          // TODO(vicb): map error message back to the original message in xtb\n          var messageMap = {};\n          var parseErrors = [];\n          Object.keys(messages).forEach(function (id) {\n              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n              parseErrors.push.apply(parseErrors, res.errors);\n              messageMap[id] = res.rootNodes;\n          });\n          if (parseErrors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n          }\n          return messageMap;\n      };\n      return Xliff;\n  }());\n  var _WriteVisitor = (function () {\n      function _WriteVisitor() {\n      }\n      _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n      _WriteVisitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          var nodes = [];\n          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n          return nodes;\n      };\n      _WriteVisitor.prototype.visitIcu = function (icu, context) {\n          if (this._isInIcu) {\n              // nested ICU is not supported\n              throw new Error('xliff does not support nested ICU messages');\n          }\n          this._isInIcu = true;\n          // TODO(vicb): support ICU messages\n          // https://lists.oasis-open.org/archives/xliff/201201/msg00028.html\n          // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html\n          var nodes = [];\n          this._isInIcu = false;\n          return nodes;\n      };\n      _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var ctype = getCtypeForTag(ph.tag);\n          var startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n          if (ph.isVoid) {\n              // void tags have no children nor closing tags\n              return [startTagPh];\n          }\n          var closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n      };\n      _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n      };\n      _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n      };\n      _WriteVisitor.prototype.serialize = function (nodes) {\n          var _this = this;\n          this._isInIcu = false;\n          return (_a = []).concat.apply(_a, nodes.map(function (node) { return node.visit(_this); }));\n          var _a;\n      };\n      return _WriteVisitor;\n  }());\n  // TODO(vicb): add error management (structure)\n  // TODO(vicb): factorize (xtb) ?\n  var _LoadVisitor = (function () {\n      function _LoadVisitor() {\n      }\n      _LoadVisitor.prototype.parse = function (nodes, messageBundle) {\n          var _this = this;\n          this._messageNodes = [];\n          this._translatedMessages = {};\n          this._msgId = '';\n          this._target = [];\n          this._errors = [];\n          // Find all messages\n          visitAll(this, nodes, null);\n          var messageMap = messageBundle.getMessageMap();\n          var placeholders = extractPlaceholders(messageBundle);\n          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n          this._messageNodes\n              .filter(function (message) {\n              // Remove any messages that is not present in the source message bundle.\n              return messageMap.hasOwnProperty(message[0]);\n          })\n              .sort(function (a, b) {\n              // Because there could be no ICU placeholders inside an ICU message,\n              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n              // messages, those would always be empty\n              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n                  return -1;\n              }\n              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n                  return 1;\n              }\n              return 0;\n          })\n              .forEach(function (message) {\n              var id = message[0];\n              _this._placeholders = placeholders[id] || {};\n              _this._placeholderToIds = placeholderToIds[id] || {};\n              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n          });\n          return { messages: this._translatedMessages, errors: this._errors };\n      };\n      _LoadVisitor.prototype.visitElement = function (element, context) {\n          switch (element.name) {\n              case _UNIT_TAG:\n                  this._target = null;\n                  var msgId = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!msgId) {\n                      this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      this._msgId = msgId.value;\n                  }\n                  visitAll(this, element.children, null);\n                  if (this._msgId !== null) {\n                      this._messageNodes.push([this._msgId, this._target]);\n                  }\n                  break;\n              case _SOURCE_TAG:\n                  // ignore source message\n                  break;\n              case _TARGET_TAG:\n                  this._target = element.children;\n                  break;\n              case _PLACEHOLDER_TAG:\n                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!idAttr) {\n                      this._addError(element, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      var id = idAttr.value;\n                      if (this._placeholders.hasOwnProperty(id)) {\n                          return this._placeholders[id];\n                      }\n                      if (this._placeholderToIds.hasOwnProperty(id) &&\n                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])) {\n                          return this._translatedMessages[this._placeholderToIds[id]];\n                      }\n                      // TODO(vicb): better error message for when\n                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[id])\n                      this._addError(element, \"The placeholder \\\"\" + id + \"\\\" does not exists in the source message\");\n                  }\n                  break;\n              default:\n                  visitAll(this, element.children, null);\n          }\n      };\n      _LoadVisitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype.visitText = function (text, context) { return text.value; };\n      _LoadVisitor.prototype.visitComment = function (comment, context) { return ''; };\n      _LoadVisitor.prototype.visitExpansion = function (expansion, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype.visitExpansionCase = function (expansionCase, context) {\n          throw new Error('unreachable code');\n      };\n      _LoadVisitor.prototype._addError = function (node, message) {\n          this._errors.push(new I18nError(node.sourceSpan, message));\n      };\n      return _LoadVisitor;\n  }());\n  function getCtypeForTag(tag) {\n      switch (tag.toLowerCase()) {\n          case 'br':\n              return 'lb';\n          case 'img':\n              return 'image';\n          default:\n              return \"x-\" + tag;\n      }\n  }\n\n  var _MESSAGES_TAG = 'messagebundle';\n  var _MESSAGE_TAG = 'msg';\n  var _PLACEHOLDER_TAG$1 = 'ph';\n  var _EXEMPLE_TAG = 'ex';\n  var _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\n  var Xmb = (function () {\n      function Xmb() {\n      }\n      Xmb.prototype.write = function (messageMap) {\n          var visitor = new _Visitor$2();\n          var rootNode = new Tag(_MESSAGES_TAG);\n          Object.keys(messageMap).forEach(function (id) {\n              var message = messageMap[id];\n              var attrs = { id: id };\n              if (message.description) {\n                  attrs['desc'] = message.description;\n              }\n              if (message.meaning) {\n                  attrs['meaning'] = message.meaning;\n              }\n              rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, visitor.serialize(message.nodes)));\n          });\n          rootNode.children.push(new CR());\n          return serialize([\n              new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n              new CR(),\n              new Doctype(_MESSAGES_TAG, _DOCTYPE),\n              new CR(),\n              rootNode,\n              new CR(),\n          ]);\n      };\n      Xmb.prototype.load = function (content, url, messageBundle) {\n          throw new Error('Unsupported');\n      };\n      return Xmb;\n  }());\n  var _Visitor$2 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n      _Visitor.prototype.visitContainer = function (container, context) {\n          var _this = this;\n          var nodes = [];\n          container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n          return nodes;\n      };\n      _Visitor.prototype.visitIcu = function (icu, context) {\n          var _this = this;\n          var nodes = [new Text$2(\"{\" + icu.expression + \", \" + icu.type + \", \")];\n          Object.keys(icu.cases).forEach(function (c) {\n              nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n          });\n          nodes.push(new Text$2(\"}\"));\n          return nodes;\n      };\n      _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n          var startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n          var startTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.startName }, [startEx]);\n          if (ph.isVoid) {\n              // void tags have no children nor closing tags\n              return [startTagPh];\n          }\n          var closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n          var closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { name: ph.closeName }, [closeEx]);\n          return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n      };\n      _Visitor.prototype.visitPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n      };\n      _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n          return [new Tag(_PLACEHOLDER_TAG$1, { name: ph.name })];\n      };\n      _Visitor.prototype.serialize = function (nodes) {\n          var _this = this;\n          return (_a = []).concat.apply(_a, nodes.map(function (node) { return node.visit(_this); }));\n          var _a;\n      };\n      return _Visitor;\n  }());\n\n  var _TRANSLATIONS_TAG = 'translationbundle';\n  var _TRANSLATION_TAG = 'translation';\n  var _PLACEHOLDER_TAG$2 = 'ph';\n  var Xtb = (function () {\n      function Xtb(_htmlParser, _interpolationConfig) {\n          this._htmlParser = _htmlParser;\n          this._interpolationConfig = _interpolationConfig;\n      }\n      Xtb.prototype.write = function (messageMap) { throw new Error('Unsupported'); };\n      Xtb.prototype.load = function (content, url, messageBundle) {\n          var _this = this;\n          // Parse the xtb file into xml nodes\n          var result = new XmlParser().parse(content, url);\n          if (result.errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + result.errors.join('\\n'));\n          }\n          // Replace the placeholders, messages are now string\n          var _a = new _Visitor$3().parse(result.rootNodes, messageBundle), messages = _a.messages, errors = _a.errors;\n          if (errors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n          }\n          // Convert the string messages to html ast\n          // TODO(vicb): map error message back to the original message in xtb\n          var messageMap = {};\n          var parseErrors = [];\n          Object.keys(messages).forEach(function (id) {\n              var res = _this._htmlParser.parse(messages[id], url, true, _this._interpolationConfig);\n              parseErrors.push.apply(parseErrors, res.errors);\n              messageMap[id] = res.rootNodes;\n          });\n          if (parseErrors.length) {\n              throw new Error(\"xtb parse errors:\\n\" + parseErrors.join('\\n'));\n          }\n          return messageMap;\n      };\n      return Xtb;\n  }());\n  var _Visitor$3 = (function () {\n      function _Visitor() {\n      }\n      _Visitor.prototype.parse = function (nodes, messageBundle) {\n          var _this = this;\n          this._messageNodes = [];\n          this._translatedMessages = {};\n          this._bundleDepth = 0;\n          this._translationDepth = 0;\n          this._errors = [];\n          // Find all messages\n          visitAll(this, nodes, null);\n          var messageMap = messageBundle.getMessageMap();\n          var placeholders = extractPlaceholders(messageBundle);\n          var placeholderToIds = extractPlaceholderToIds(messageBundle);\n          this._messageNodes\n              .filter(function (message) {\n              // Remove any messages that is not present in the source message bundle.\n              return messageMap.hasOwnProperty(message[0]);\n          })\n              .sort(function (a, b) {\n              // Because there could be no ICU placeholders inside an ICU message,\n              // we do not need to take into account the `placeholderToMsgIds` of the referenced\n              // messages, those would always be empty\n              // TODO(vicb): overkill - create 2 buckets and [...woDeps, ...wDeps].process()\n              if (Object.keys(messageMap[a[0]].placeholderToMsgIds).length == 0) {\n                  return -1;\n              }\n              if (Object.keys(messageMap[b[0]].placeholderToMsgIds).length == 0) {\n                  return 1;\n              }\n              return 0;\n          })\n              .forEach(function (message) {\n              var id = message[0];\n              _this._placeholders = placeholders[id] || {};\n              _this._placeholderToIds = placeholderToIds[id] || {};\n              // TODO(vicb): make sure there is no `_TRANSLATIONS_TAG` nor `_TRANSLATION_TAG`\n              _this._translatedMessages[id] = visitAll(_this, message[1]).join('');\n          });\n          return { messages: this._translatedMessages, errors: this._errors };\n      };\n      _Visitor.prototype.visitElement = function (element, context) {\n          switch (element.name) {\n              case _TRANSLATIONS_TAG:\n                  this._bundleDepth++;\n                  if (this._bundleDepth > 1) {\n                      this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                  }\n                  visitAll(this, element.children, null);\n                  this._bundleDepth--;\n                  break;\n              case _TRANSLATION_TAG:\n                  this._translationDepth++;\n                  if (this._translationDepth > 1) {\n                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> elements can not be nested\");\n                  }\n                  var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                  if (!idAttr) {\n                      this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                  }\n                  else {\n                      // ICU placeholders are reference to other messages.\n                      // The referenced message might not have been decoded yet.\n                      // We need to have all messages available to make sure deps are decoded first.\n                      // TODO(vicb): report an error on duplicate id\n                      this._messageNodes.push([idAttr.value, element.children]);\n                  }\n                  this._translationDepth--;\n                  break;\n              case _PLACEHOLDER_TAG$2:\n                  var nameAttr = element.attrs.find(function (attr) { return attr.name === 'name'; });\n                  if (!nameAttr) {\n                      this._addError(element, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"name\\\" attribute\");\n                  }\n                  else {\n                      var name_1 = nameAttr.value;\n                      if (this._placeholders.hasOwnProperty(name_1)) {\n                          return this._placeholders[name_1];\n                      }\n                      if (this._placeholderToIds.hasOwnProperty(name_1) &&\n                          this._translatedMessages.hasOwnProperty(this._placeholderToIds[name_1])) {\n                          return this._translatedMessages[this._placeholderToIds[name_1]];\n                      }\n                      // TODO(vicb): better error message for when\n                      // !this._translatedMessages.hasOwnProperty(this._placeholderToIds[name])\n                      this._addError(element, \"The placeholder \\\"\" + name_1 + \"\\\" does not exists in the source message\");\n                  }\n                  break;\n              default:\n                  this._addError(element, 'Unexpected tag');\n          }\n      };\n      _Visitor.prototype.visitAttribute = function (attribute, context) {\n          throw new Error('unreachable code');\n      };\n      _Visitor.prototype.visitText = function (text, context) { return text.value; };\n      _Visitor.prototype.visitComment = function (comment, context) { return ''; };\n      _Visitor.prototype.visitExpansion = function (expansion, context) {\n          var _this = this;\n          var strCases = expansion.cases.map(function (c) { return c.visit(_this, null); });\n          return \"{\" + expansion.switchValue + \", \" + expansion.type + \", strCases.join(' ')}\";\n      };\n      _Visitor.prototype.visitExpansionCase = function (expansionCase, context) {\n          return expansionCase.value + \" {\" + visitAll(this, expansionCase.expression, null) + \"}\";\n      };\n      _Visitor.prototype._addError = function (node, message) {\n          this._errors.push(new I18nError(node.sourceSpan, message));\n      };\n      return _Visitor;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * A container for translated messages\n   */\n  var TranslationBundle = (function () {\n      function TranslationBundle(_messageMap) {\n          if (_messageMap === void 0) { _messageMap = {}; }\n          this._messageMap = _messageMap;\n      }\n      TranslationBundle.load = function (content, url, messageBundle, serializer) {\n          return new TranslationBundle(serializer.load(content, url, messageBundle));\n      };\n      TranslationBundle.prototype.get = function (id) { return this._messageMap[id]; };\n      TranslationBundle.prototype.has = function (id) { return id in this._messageMap; };\n      return TranslationBundle;\n  }());\n\n  var I18NHtmlParser = (function () {\n      // TODO(vicb): transB.load() should not need a msgB & add transB.resolve(msgB,\n      // interpolationConfig)\n      // TODO(vicb): remove the interpolationConfig from the Xtb serializer\n      function I18NHtmlParser(_htmlParser, _translations, _translationsFormat) {\n          this._htmlParser = _htmlParser;\n          this._translations = _translations;\n          this._translationsFormat = _translationsFormat;\n      }\n      I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n          if (!this._translations || this._translations === '') {\n              // Do not enable i18n when no translation bundle is provided\n              return parseResult;\n          }\n          // TODO(vicb): add support for implicit tags / attributes\n          var messageBundle = new MessageBundle(this._htmlParser, [], {});\n          var errors = messageBundle.updateFromTemplate(source, url, interpolationConfig);\n          if (errors && errors.length) {\n              return new ParseTreeResult(parseResult.rootNodes, parseResult.errors.concat(errors));\n          }\n          var serializer = this._createSerializer(interpolationConfig);\n          var translationBundle = TranslationBundle.load(this._translations, url, messageBundle, serializer);\n          return mergeTranslations(parseResult.rootNodes, translationBundle, interpolationConfig, [], {});\n      };\n      I18NHtmlParser.prototype._createSerializer = function (interpolationConfig) {\n          var format = (this._translationsFormat || 'xlf').toLowerCase();\n          switch (format) {\n              case 'xmb':\n                  return new Xmb();\n              case 'xtb':\n                  return new Xtb(this._htmlParser, interpolationConfig);\n              case 'xliff':\n              case 'xlf':\n              default:\n                  return new Xliff(this._htmlParser, interpolationConfig);\n          }\n      };\n      return I18NHtmlParser;\n  }());\n\n  /**\n   * Wraps Javascript Objects\n   */\n  var StringMapWrapper = (function () {\n      function StringMapWrapper() {\n      }\n      StringMapWrapper.merge = function (m1, m2) {\n          var m = {};\n          for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n              var k = _a[_i];\n              m[k] = m1[k];\n          }\n          for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n              var k = _c[_b];\n              m[k] = m2[k];\n          }\n          return m;\n      };\n      StringMapWrapper.equals = function (m1, m2) {\n          var k1 = Object.keys(m1);\n          var k2 = Object.keys(m2);\n          if (k1.length != k2.length) {\n              return false;\n          }\n          for (var i = 0; i < k1.length; i++) {\n              var key = k1[i];\n              if (m1[key] !== m2[key]) {\n                  return false;\n              }\n          }\n          return true;\n      };\n      return StringMapWrapper;\n  }());\n  var ListWrapper = (function () {\n      function ListWrapper() {\n      }\n      ListWrapper.removeAll = function (list, items) {\n          for (var i = 0; i < items.length; ++i) {\n              var index = list.indexOf(items[i]);\n              if (index > -1) {\n                  list.splice(index, 1);\n              }\n          }\n      };\n      ListWrapper.remove = function (list, el) {\n          var index = list.indexOf(el);\n          if (index > -1) {\n              list.splice(index, 1);\n              return true;\n          }\n          return false;\n      };\n      ListWrapper.equals = function (a, b) {\n          if (a.length != b.length)\n              return false;\n          for (var i = 0; i < a.length; ++i) {\n              if (a[i] !== b[i])\n                  return false;\n          }\n          return true;\n      };\n      ListWrapper.flatten = function (list) {\n          return list.reduce(function (flat, item) {\n              var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n              return flat.concat(flatItem);\n          }, []);\n      };\n      return ListWrapper;\n  }());\n\n  var _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n      '([-\\\\w]+)|' +\n      '(?:\\\\.([-\\\\w]+))|' +\n      '(?:\\\\[([-\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +\n      '(\\\\))|' +\n      '(\\\\s*,\\\\s*)', // \",\"\n  'g');\n  /**\n   * A css selector contains an element name,\n   * css classes and attribute/value pairs with the purpose\n   * of selecting subsets out of them.\n   */\n  var CssSelector = (function () {\n      function CssSelector() {\n          this.element = null;\n          this.classNames = [];\n          this.attrs = [];\n          this.notSelectors = [];\n      }\n      CssSelector.parse = function (selector) {\n          var results = [];\n          var _addResult = function (res, cssSel) {\n              if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                  cssSel.attrs.length == 0) {\n                  cssSel.element = '*';\n              }\n              res.push(cssSel);\n          };\n          var cssSelector = new CssSelector();\n          var match;\n          var current = cssSelector;\n          var inNot = false;\n          _SELECTOR_REGEXP.lastIndex = 0;\n          while (match = _SELECTOR_REGEXP.exec(selector)) {\n              if (match[1]) {\n                  if (inNot) {\n                      throw new Error('Nesting :not is not allowed in a selector');\n                  }\n                  inNot = true;\n                  current = new CssSelector();\n                  cssSelector.notSelectors.push(current);\n              }\n              if (match[2]) {\n                  current.setElement(match[2]);\n              }\n              if (match[3]) {\n                  current.addClassName(match[3]);\n              }\n              if (match[4]) {\n                  current.addAttribute(match[4], match[5]);\n              }\n              if (match[6]) {\n                  inNot = false;\n                  current = cssSelector;\n              }\n              if (match[7]) {\n                  if (inNot) {\n                      throw new Error('Multiple selectors in :not are not supported');\n                  }\n                  _addResult(results, cssSelector);\n                  cssSelector = current = new CssSelector();\n              }\n          }\n          _addResult(results, cssSelector);\n          return results;\n      };\n      CssSelector.prototype.isElementSelector = function () {\n          return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n              this.notSelectors.length === 0;\n      };\n      CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n      CssSelector.prototype.setElement = function (element) {\n          if (element === void 0) { element = null; }\n          this.element = element;\n      };\n      /** Gets a template string for an element that matches the selector. */\n      CssSelector.prototype.getMatchingElementTemplate = function () {\n          var tagName = this.element || 'div';\n          var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n          var attrs = '';\n          for (var i = 0; i < this.attrs.length; i += 2) {\n              var attrName = this.attrs[i];\n              var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n              attrs += \" \" + attrName + attrValue;\n          }\n          return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n              \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n      };\n      CssSelector.prototype.addAttribute = function (name, value) {\n          if (value === void 0) { value = ''; }\n          this.attrs.push(name, value && value.toLowerCase() || '');\n      };\n      CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n      CssSelector.prototype.toString = function () {\n          var res = this.element || '';\n          if (this.classNames) {\n              this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n          }\n          if (this.attrs) {\n              for (var i = 0; i < this.attrs.length; i += 2) {\n                  var name_1 = this.attrs[i];\n                  var value = this.attrs[i + 1];\n                  res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n              }\n          }\n          this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n          return res;\n      };\n      return CssSelector;\n  }());\n  /**\n   * Reads a list of CssSelectors and allows to calculate which ones\n   * are contained in a given CssSelector.\n   */\n  var SelectorMatcher = (function () {\n      function SelectorMatcher() {\n          this._elementMap = new Map();\n          this._elementPartialMap = new Map();\n          this._classMap = new Map();\n          this._classPartialMap = new Map();\n          this._attrValueMap = new Map();\n          this._attrValuePartialMap = new Map();\n          this._listContexts = [];\n      }\n      SelectorMatcher.createNotMatcher = function (notSelectors) {\n          var notMatcher = new SelectorMatcher();\n          notMatcher.addSelectables(notSelectors, null);\n          return notMatcher;\n      };\n      SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n          var listContext = null;\n          if (cssSelectors.length > 1) {\n              listContext = new SelectorListContext(cssSelectors);\n              this._listContexts.push(listContext);\n          }\n          for (var i = 0; i < cssSelectors.length; i++) {\n              this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n          }\n      };\n      /**\n       * Add an object that can be found later on by calling `match`.\n       * @param cssSelector A css selector\n       * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n       */\n      SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n          var matcher = this;\n          var element = cssSelector.element;\n          var classNames = cssSelector.classNames;\n          var attrs = cssSelector.attrs;\n          var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n          if (element) {\n              var isTerminal = attrs.length === 0 && classNames.length === 0;\n              if (isTerminal) {\n                  this._addTerminal(matcher._elementMap, element, selectable);\n              }\n              else {\n                  matcher = this._addPartial(matcher._elementPartialMap, element);\n              }\n          }\n          if (classNames) {\n              for (var i = 0; i < classNames.length; i++) {\n                  var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                  var className = classNames[i];\n                  if (isTerminal) {\n                      this._addTerminal(matcher._classMap, className, selectable);\n                  }\n                  else {\n                      matcher = this._addPartial(matcher._classPartialMap, className);\n                  }\n              }\n          }\n          if (attrs) {\n              for (var i = 0; i < attrs.length; i += 2) {\n                  var isTerminal = i === attrs.length - 2;\n                  var name_2 = attrs[i];\n                  var value = attrs[i + 1];\n                  if (isTerminal) {\n                      var terminalMap = matcher._attrValueMap;\n                      var terminalValuesMap = terminalMap.get(name_2);\n                      if (!terminalValuesMap) {\n                          terminalValuesMap = new Map();\n                          terminalMap.set(name_2, terminalValuesMap);\n                      }\n                      this._addTerminal(terminalValuesMap, value, selectable);\n                  }\n                  else {\n                      var partialMap = matcher._attrValuePartialMap;\n                      var partialValuesMap = partialMap.get(name_2);\n                      if (!partialValuesMap) {\n                          partialValuesMap = new Map();\n                          partialMap.set(name_2, partialValuesMap);\n                      }\n                      matcher = this._addPartial(partialValuesMap, value);\n                  }\n              }\n          }\n      };\n      SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n          var terminalList = map.get(name);\n          if (!terminalList) {\n              terminalList = [];\n              map.set(name, terminalList);\n          }\n          terminalList.push(selectable);\n      };\n      SelectorMatcher.prototype._addPartial = function (map, name) {\n          var matcher = map.get(name);\n          if (!matcher) {\n              matcher = new SelectorMatcher();\n              map.set(name, matcher);\n          }\n          return matcher;\n      };\n      /**\n       * Find the objects that have been added via `addSelectable`\n       * whose css selector is contained in the given css selector.\n       * @param cssSelector A css selector\n       * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n       * @return boolean true if a match was found\n      */\n      SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n          var result = false;\n          var element = cssSelector.element;\n          var classNames = cssSelector.classNames;\n          var attrs = cssSelector.attrs;\n          for (var i = 0; i < this._listContexts.length; i++) {\n              this._listContexts[i].alreadyMatched = false;\n          }\n          result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n          result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n              result;\n          if (classNames) {\n              for (var i = 0; i < classNames.length; i++) {\n                  var className = classNames[i];\n                  result =\n                      this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                  result =\n                      this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                          result;\n              }\n          }\n          if (attrs) {\n              for (var i = 0; i < attrs.length; i += 2) {\n                  var name_3 = attrs[i];\n                  var value = attrs[i + 1];\n                  var terminalValuesMap = this._attrValueMap.get(name_3);\n                  if (value) {\n                      result =\n                          this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                  }\n                  result =\n                      this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                  var partialValuesMap = this._attrValuePartialMap.get(name_3);\n                  if (value) {\n                      result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                  }\n                  result =\n                      this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n              }\n          }\n          return result;\n      };\n      /** @internal */\n      SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n          if (!map || typeof name !== 'string') {\n              return false;\n          }\n          var selectables = map.get(name);\n          var starSelectables = map.get('*');\n          if (starSelectables) {\n              selectables = selectables.concat(starSelectables);\n          }\n          if (!selectables) {\n              return false;\n          }\n          var selectable;\n          var result = false;\n          for (var i = 0; i < selectables.length; i++) {\n              selectable = selectables[i];\n              result = selectable.finalize(cssSelector, matchedCallback) || result;\n          }\n          return result;\n      };\n      /** @internal */\n      SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n          if (!map || typeof name !== 'string') {\n              return false;\n          }\n          var nestedSelector = map.get(name);\n          if (!nestedSelector) {\n              return false;\n          }\n          // TODO(perf): get rid of recursion and measure again\n          // TODO(perf): don't pass the whole selector into the recursion,\n          // but only the not processed parts\n          return nestedSelector.match(cssSelector, matchedCallback);\n      };\n      return SelectorMatcher;\n  }());\n  var SelectorListContext = (function () {\n      function SelectorListContext(selectors) {\n          this.selectors = selectors;\n          this.alreadyMatched = false;\n      }\n      return SelectorListContext;\n  }());\n  // Store context to pass back selector and context when a selector is matched\n  var SelectorContext = (function () {\n      function SelectorContext(selector, cbContext, listContext) {\n          this.selector = selector;\n          this.cbContext = cbContext;\n          this.listContext = listContext;\n          this.notSelectors = selector.notSelectors;\n      }\n      SelectorContext.prototype.finalize = function (cssSelector, callback) {\n          var result = true;\n          if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n              var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n              result = !notMatcher.match(cssSelector, null);\n          }\n          if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n              if (this.listContext) {\n                  this.listContext.alreadyMatched = true;\n              }\n              callback(this.selector, this.cbContext);\n          }\n          return result;\n      };\n      return SelectorContext;\n  }());\n\n  var MODULE_SUFFIX = '';\n  var DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n  function dashCaseToCamelCase(input) {\n      return input.replace(DASH_CASE_REGEXP, function () {\n          var m = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              m[_i - 0] = arguments[_i];\n          }\n          return m[1].toUpperCase();\n      });\n  }\n  function splitAtColon(input, defaultValues) {\n      return _splitAt(input, ':', defaultValues);\n  }\n  function splitAtPeriod(input, defaultValues) {\n      return _splitAt(input, '.', defaultValues);\n  }\n  function _splitAt(input, character, defaultValues) {\n      var characterIndex = input.indexOf(character);\n      if (characterIndex == -1)\n          return defaultValues;\n      return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n  }\n  function sanitizeIdentifier(name) {\n      return name.replace(/\\W/g, '_');\n  }\n  function visitValue(value, visitor, context) {\n      if (Array.isArray(value)) {\n          return visitor.visitArray(value, context);\n      }\n      if (isStrictStringMap(value)) {\n          return visitor.visitStringMap(value, context);\n      }\n      if (isBlank(value) || isPrimitive(value)) {\n          return visitor.visitPrimitive(value, context);\n      }\n      return visitor.visitOther(value, context);\n  }\n  var ValueTransformer = (function () {\n      function ValueTransformer() {\n      }\n      ValueTransformer.prototype.visitArray = function (arr, context) {\n          var _this = this;\n          return arr.map(function (value) { return visitValue(value, _this, context); });\n      };\n      ValueTransformer.prototype.visitStringMap = function (map, context) {\n          var _this = this;\n          var result = {};\n          Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n          return result;\n      };\n      ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n      ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n      return ValueTransformer;\n  }());\n  var SyncAsyncResult = (function () {\n      function SyncAsyncResult(syncResult, asyncResult) {\n          if (asyncResult === void 0) { asyncResult = null; }\n          this.syncResult = syncResult;\n          this.asyncResult = asyncResult;\n          if (!asyncResult) {\n              this.asyncResult = Promise.resolve(syncResult);\n          }\n      }\n      return SyncAsyncResult;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$7 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function unimplemented() {\n      throw new Error('unimplemented');\n  }\n  // group 0: \"[prop] or (event) or @trigger\"\n  // group 1: \"prop\" from \"[prop]\"\n  // group 2: \"event\" from \"(event)\"\n  // group 3: \"@trigger\" from \"@trigger\"\n  var HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n  var CompileMetadataWithIdentifier = (function () {\n      function CompileMetadataWithIdentifier() {\n      }\n      Object.defineProperty(CompileMetadataWithIdentifier.prototype, \"identifier\", {\n          get: function () { return unimplemented(); },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileMetadataWithIdentifier;\n  }());\n  var CompileAnimationEntryMetadata = (function () {\n      function CompileAnimationEntryMetadata(name, definitions) {\n          if (name === void 0) { name = null; }\n          if (definitions === void 0) { definitions = null; }\n          this.name = name;\n          this.definitions = definitions;\n      }\n      return CompileAnimationEntryMetadata;\n  }());\n  var CompileAnimationStateMetadata = (function () {\n      function CompileAnimationStateMetadata() {\n      }\n      return CompileAnimationStateMetadata;\n  }());\n  var CompileAnimationStateDeclarationMetadata = (function (_super) {\n      __extends$7(CompileAnimationStateDeclarationMetadata, _super);\n      function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n          _super.call(this);\n          this.stateNameExpr = stateNameExpr;\n          this.styles = styles;\n      }\n      return CompileAnimationStateDeclarationMetadata;\n  }(CompileAnimationStateMetadata));\n  var CompileAnimationStateTransitionMetadata = (function (_super) {\n      __extends$7(CompileAnimationStateTransitionMetadata, _super);\n      function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n          _super.call(this);\n          this.stateChangeExpr = stateChangeExpr;\n          this.steps = steps;\n      }\n      return CompileAnimationStateTransitionMetadata;\n  }(CompileAnimationStateMetadata));\n  var CompileAnimationMetadata = (function () {\n      function CompileAnimationMetadata() {\n      }\n      return CompileAnimationMetadata;\n  }());\n  var CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n      __extends$7(CompileAnimationKeyframesSequenceMetadata, _super);\n      function CompileAnimationKeyframesSequenceMetadata(steps) {\n          if (steps === void 0) { steps = []; }\n          _super.call(this);\n          this.steps = steps;\n      }\n      return CompileAnimationKeyframesSequenceMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationStyleMetadata = (function (_super) {\n      __extends$7(CompileAnimationStyleMetadata, _super);\n      function CompileAnimationStyleMetadata(offset, styles) {\n          if (styles === void 0) { styles = null; }\n          _super.call(this);\n          this.offset = offset;\n          this.styles = styles;\n      }\n      return CompileAnimationStyleMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationAnimateMetadata = (function (_super) {\n      __extends$7(CompileAnimationAnimateMetadata, _super);\n      function CompileAnimationAnimateMetadata(timings, styles) {\n          if (timings === void 0) { timings = 0; }\n          if (styles === void 0) { styles = null; }\n          _super.call(this);\n          this.timings = timings;\n          this.styles = styles;\n      }\n      return CompileAnimationAnimateMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationWithStepsMetadata = (function (_super) {\n      __extends$7(CompileAnimationWithStepsMetadata, _super);\n      function CompileAnimationWithStepsMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this);\n          this.steps = steps;\n      }\n      return CompileAnimationWithStepsMetadata;\n  }(CompileAnimationMetadata));\n  var CompileAnimationSequenceMetadata = (function (_super) {\n      __extends$7(CompileAnimationSequenceMetadata, _super);\n      function CompileAnimationSequenceMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this, steps);\n      }\n      return CompileAnimationSequenceMetadata;\n  }(CompileAnimationWithStepsMetadata));\n  var CompileAnimationGroupMetadata = (function (_super) {\n      __extends$7(CompileAnimationGroupMetadata, _super);\n      function CompileAnimationGroupMetadata(steps) {\n          if (steps === void 0) { steps = null; }\n          _super.call(this, steps);\n      }\n      return CompileAnimationGroupMetadata;\n  }(CompileAnimationWithStepsMetadata));\n  var CompileIdentifierMetadata = (function () {\n      function CompileIdentifierMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, value = _b.value;\n          this.reference = reference;\n          this.name = name;\n          this.prefix = prefix;\n          this.moduleUrl = moduleUrl;\n          this.value = value;\n      }\n      Object.defineProperty(CompileIdentifierMetadata.prototype, \"identifier\", {\n          get: function () { return this; },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileIdentifierMetadata;\n  }());\n  var CompileDiDependencyMetadata = (function () {\n      function CompileDiDependencyMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, isAttribute = _b.isAttribute, isSelf = _b.isSelf, isHost = _b.isHost, isSkipSelf = _b.isSkipSelf, isOptional = _b.isOptional, isValue = _b.isValue, token = _b.token, value = _b.value;\n          this.isAttribute = !!isAttribute;\n          this.isSelf = !!isSelf;\n          this.isHost = !!isHost;\n          this.isSkipSelf = !!isSkipSelf;\n          this.isOptional = !!isOptional;\n          this.isValue = !!isValue;\n          this.token = token;\n          this.value = value;\n      }\n      return CompileDiDependencyMetadata;\n  }());\n  var CompileProviderMetadata = (function () {\n      function CompileProviderMetadata(_a) {\n          var token = _a.token, useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n          this.token = token;\n          this.useClass = useClass;\n          this.useValue = useValue;\n          this.useExisting = useExisting;\n          this.useFactory = useFactory;\n          this.deps = deps || null;\n          this.multi = !!multi;\n      }\n      return CompileProviderMetadata;\n  }());\n  var CompileFactoryMetadata = (function (_super) {\n      __extends$7(CompileFactoryMetadata, _super);\n      function CompileFactoryMetadata(_a) {\n          var reference = _a.reference, name = _a.name, moduleUrl = _a.moduleUrl, prefix = _a.prefix, diDeps = _a.diDeps, value = _a.value;\n          _super.call(this, { reference: reference, name: name, prefix: prefix, moduleUrl: moduleUrl, value: value });\n          this.diDeps = _normalizeArray(diDeps);\n      }\n      return CompileFactoryMetadata;\n  }(CompileIdentifierMetadata));\n  var CompileTokenMetadata = (function () {\n      function CompileTokenMetadata(_a) {\n          var value = _a.value, identifier = _a.identifier, identifierIsInstance = _a.identifierIsInstance;\n          this.value = value;\n          this.identifier = identifier;\n          this.identifierIsInstance = !!identifierIsInstance;\n      }\n      Object.defineProperty(CompileTokenMetadata.prototype, \"reference\", {\n          get: function () {\n              if (isPresent(this.identifier)) {\n                  return this.identifier.reference;\n              }\n              else {\n                  return this.value;\n              }\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(CompileTokenMetadata.prototype, \"name\", {\n          get: function () {\n              return isPresent(this.value) ? sanitizeIdentifier(this.value) : this.identifier.name;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      return CompileTokenMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a type.\n   */\n  var CompileTypeMetadata = (function (_super) {\n      __extends$7(CompileTypeMetadata, _super);\n      function CompileTypeMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, reference = _b.reference, name = _b.name, moduleUrl = _b.moduleUrl, prefix = _b.prefix, isHost = _b.isHost, value = _b.value, diDeps = _b.diDeps, lifecycleHooks = _b.lifecycleHooks;\n          _super.call(this, { reference: reference, name: name, moduleUrl: moduleUrl, prefix: prefix, value: value });\n          this.isHost = !!isHost;\n          this.diDeps = _normalizeArray(diDeps);\n          this.lifecycleHooks = _normalizeArray(lifecycleHooks);\n      }\n      return CompileTypeMetadata;\n  }(CompileIdentifierMetadata));\n  var CompileQueryMetadata = (function () {\n      function CompileQueryMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, selectors = _b.selectors, descendants = _b.descendants, first = _b.first, propertyName = _b.propertyName, read = _b.read;\n          this.selectors = selectors;\n          this.descendants = !!descendants;\n          this.first = !!first;\n          this.propertyName = propertyName;\n          this.read = read;\n      }\n      return CompileQueryMetadata;\n  }());\n  /**\n   * Metadata about a stylesheet\n   */\n  var CompileStylesheetMetadata = (function () {\n      function CompileStylesheetMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n          this.moduleUrl = moduleUrl;\n          this.styles = _normalizeArray(styles);\n          this.styleUrls = _normalizeArray(styleUrls);\n      }\n      return CompileStylesheetMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a template.\n   */\n  var CompileTemplateMetadata = (function () {\n      function CompileTemplateMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, encapsulation = _b.encapsulation, template = _b.template, templateUrl = _b.templateUrl, styles = _b.styles, styleUrls = _b.styleUrls, externalStylesheets = _b.externalStylesheets, animations = _b.animations, ngContentSelectors = _b.ngContentSelectors, interpolation = _b.interpolation;\n          this.encapsulation = encapsulation;\n          this.template = template;\n          this.templateUrl = templateUrl;\n          this.styles = _normalizeArray(styles);\n          this.styleUrls = _normalizeArray(styleUrls);\n          this.externalStylesheets = _normalizeArray(externalStylesheets);\n          this.animations = animations ? ListWrapper.flatten(animations) : [];\n          this.ngContentSelectors = ngContentSelectors || [];\n          if (interpolation && interpolation.length != 2) {\n              throw new Error(\"'interpolation' should have a start and an end symbol.\");\n          }\n          this.interpolation = interpolation;\n      }\n      CompileTemplateMetadata.prototype.toSummary = function () {\n          return {\n              isSummary: true,\n              animations: this.animations.map(function (anim) { return anim.name; }),\n              ngContentSelectors: this.ngContentSelectors,\n              encapsulation: this.encapsulation\n          };\n      };\n      return CompileTemplateMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a directive.\n   */\n  var CompileDirectiveMetadata = (function () {\n      function CompileDirectiveMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, hostListeners = _b.hostListeners, hostProperties = _b.hostProperties, hostAttributes = _b.hostAttributes, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n          this.type = type;\n          this.isComponent = isComponent;\n          this.selector = selector;\n          this.exportAs = exportAs;\n          this.changeDetection = changeDetection;\n          this.inputs = inputs;\n          this.outputs = outputs;\n          this.hostListeners = hostListeners;\n          this.hostProperties = hostProperties;\n          this.hostAttributes = hostAttributes;\n          this.providers = _normalizeArray(providers);\n          this.viewProviders = _normalizeArray(viewProviders);\n          this.queries = _normalizeArray(queries);\n          this.viewQueries = _normalizeArray(viewQueries);\n          this.entryComponents = _normalizeArray(entryComponents);\n          this.template = template;\n      }\n      CompileDirectiveMetadata.create = function (_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, isComponent = _b.isComponent, selector = _b.selector, exportAs = _b.exportAs, changeDetection = _b.changeDetection, inputs = _b.inputs, outputs = _b.outputs, host = _b.host, providers = _b.providers, viewProviders = _b.viewProviders, queries = _b.queries, viewQueries = _b.viewQueries, entryComponents = _b.entryComponents, template = _b.template;\n          var hostListeners = {};\n          var hostProperties = {};\n          var hostAttributes = {};\n          if (isPresent(host)) {\n              Object.keys(host).forEach(function (key) {\n                  var value = host[key];\n                  var matches = key.match(HOST_REG_EXP);\n                  if (matches === null) {\n                      hostAttributes[key] = value;\n                  }\n                  else if (isPresent(matches[1])) {\n                      hostProperties[matches[1]] = value;\n                  }\n                  else if (isPresent(matches[2])) {\n                      hostListeners[matches[2]] = value;\n                  }\n              });\n          }\n          var inputsMap = {};\n          if (isPresent(inputs)) {\n              inputs.forEach(function (bindConfig) {\n                  // canonical syntax: `dirProp: elProp`\n                  // if there is no `:`, use dirProp = elProp\n                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                  inputsMap[parts[0]] = parts[1];\n              });\n          }\n          var outputsMap = {};\n          if (isPresent(outputs)) {\n              outputs.forEach(function (bindConfig) {\n                  // canonical syntax: `dirProp: elProp`\n                  // if there is no `:`, use dirProp = elProp\n                  var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                  outputsMap[parts[0]] = parts[1];\n              });\n          }\n          return new CompileDirectiveMetadata({\n              type: type,\n              isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n              inputs: inputsMap,\n              outputs: outputsMap,\n              hostListeners: hostListeners,\n              hostProperties: hostProperties,\n              hostAttributes: hostAttributes,\n              providers: providers,\n              viewProviders: viewProviders,\n              queries: queries,\n              viewQueries: viewQueries,\n              entryComponents: entryComponents,\n              template: template,\n          });\n      };\n      Object.defineProperty(CompileDirectiveMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      CompileDirectiveMetadata.prototype.toSummary = function () {\n          return {\n              isSummary: true,\n              type: this.type,\n              isComponent: this.isComponent,\n              selector: this.selector,\n              exportAs: this.exportAs,\n              inputs: this.inputs,\n              outputs: this.outputs,\n              hostListeners: this.hostListeners,\n              hostProperties: this.hostProperties,\n              hostAttributes: this.hostAttributes,\n              providers: this.providers,\n              viewProviders: this.viewProviders,\n              queries: this.queries,\n              entryComponents: this.entryComponents,\n              changeDetection: this.changeDetection,\n              template: this.template && this.template.toSummary()\n          };\n      };\n      return CompileDirectiveMetadata;\n  }());\n  /**\n   * Construct {@link CompileDirectiveMetadata} from {@link ComponentTypeMetadata} and a selector.\n   */\n  function createHostComponentMeta(compMeta) {\n      var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n      return CompileDirectiveMetadata.create({\n          type: new CompileTypeMetadata({\n              reference: Object,\n              name: compMeta.type.name + \"_Host\",\n              moduleUrl: compMeta.type.moduleUrl,\n              isHost: true\n          }),\n          template: new CompileTemplateMetadata({\n              encapsulation: _angular_core.ViewEncapsulation.None,\n              template: template,\n              templateUrl: '',\n              styles: [],\n              styleUrls: [],\n              ngContentSelectors: [],\n              animations: []\n          }),\n          changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n          inputs: [],\n          outputs: [],\n          host: {},\n          isComponent: true,\n          selector: '*',\n          providers: [],\n          viewProviders: [],\n          queries: [],\n          viewQueries: []\n      });\n  }\n  var CompilePipeMetadata = (function () {\n      function CompilePipeMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, name = _b.name, pure = _b.pure;\n          this.type = type;\n          this.name = name;\n          this.pure = !!pure;\n      }\n      Object.defineProperty(CompilePipeMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      CompilePipeMetadata.prototype.toSummary = function () {\n          return { isSummary: true, type: this.type, name: this.name, pure: this.pure };\n      };\n      return CompilePipeMetadata;\n  }());\n  /**\n   * Metadata regarding compilation of a module.\n   */\n  var CompileNgModuleMetadata = (function () {\n      function CompileNgModuleMetadata(_a) {\n          var _b = _a === void 0 ? {} : _a, type = _b.type, providers = _b.providers, declaredDirectives = _b.declaredDirectives, exportedDirectives = _b.exportedDirectives, declaredPipes = _b.declaredPipes, exportedPipes = _b.exportedPipes, entryComponents = _b.entryComponents, bootstrapComponents = _b.bootstrapComponents, importedModules = _b.importedModules, exportedModules = _b.exportedModules, schemas = _b.schemas, transitiveModule = _b.transitiveModule, id = _b.id;\n          this.type = type;\n          this.declaredDirectives = _normalizeArray(declaredDirectives);\n          this.exportedDirectives = _normalizeArray(exportedDirectives);\n          this.declaredPipes = _normalizeArray(declaredPipes);\n          this.exportedPipes = _normalizeArray(exportedPipes);\n          this.providers = _normalizeArray(providers);\n          this.entryComponents = _normalizeArray(entryComponents);\n          this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n          this.importedModules = _normalizeArray(importedModules);\n          this.exportedModules = _normalizeArray(exportedModules);\n          this.schemas = _normalizeArray(schemas);\n          this.id = id;\n          this.transitiveModule = transitiveModule;\n      }\n      Object.defineProperty(CompileNgModuleMetadata.prototype, \"identifier\", {\n          get: function () { return this.type; },\n          enumerable: true,\n          configurable: true\n      });\n      CompileNgModuleMetadata.prototype.toSummary = function () {\n          return {\n              isSummary: true,\n              type: this.type,\n              entryComponents: this.entryComponents,\n              providers: this.providers,\n              importedModules: this.importedModules,\n              exportedModules: this.exportedModules,\n              exportedDirectives: this.exportedDirectives,\n              exportedPipes: this.exportedPipes,\n              directiveLoaders: this.transitiveModule.directiveLoaders\n          };\n      };\n      CompileNgModuleMetadata.prototype.toInjectorSummary = function () {\n          return {\n              isSummary: true,\n              type: this.type,\n              entryComponents: this.entryComponents,\n              providers: this.providers,\n              importedModules: this.importedModules,\n              exportedModules: this.exportedModules\n          };\n      };\n      CompileNgModuleMetadata.prototype.toDirectiveSummary = function () {\n          return {\n              isSummary: true,\n              type: this.type,\n              exportedDirectives: this.exportedDirectives,\n              exportedPipes: this.exportedPipes,\n              exportedModules: this.exportedModules,\n              directiveLoaders: this.transitiveModule.directiveLoaders\n          };\n      };\n      return CompileNgModuleMetadata;\n  }());\n  var TransitiveCompileNgModuleMetadata = (function () {\n      function TransitiveCompileNgModuleMetadata(modules, providers, entryComponents, directives, pipes, directiveLoaders) {\n          var _this = this;\n          this.modules = modules;\n          this.providers = providers;\n          this.entryComponents = entryComponents;\n          this.directives = directives;\n          this.pipes = pipes;\n          this.directiveLoaders = directiveLoaders;\n          this.directivesSet = new Set();\n          this.pipesSet = new Set();\n          directives.forEach(function (dir) { return _this.directivesSet.add(dir.reference); });\n          pipes.forEach(function (pipe) { return _this.pipesSet.add(pipe.reference); });\n      }\n      return TransitiveCompileNgModuleMetadata;\n  }());\n  function removeIdentifierDuplicates(items) {\n      var map = new Map();\n      items.forEach(function (item) {\n          if (!map.get(item.identifier.reference)) {\n              map.set(item.identifier.reference, item);\n          }\n      });\n      return Array.from(map.values());\n  }\n  function _normalizeArray(obj) {\n      return obj || [];\n  }\n  function isStaticSymbol(value) {\n      return typeof value === 'object' && value !== null && value['name'] && value['filePath'];\n  }\n  var ProviderMeta = (function () {\n      function ProviderMeta(token, _a) {\n          var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n          this.token = token;\n          this.useClass = useClass;\n          this.useValue = useValue;\n          this.useExisting = useExisting;\n          this.useFactory = useFactory;\n          this.dependencies = deps;\n          this.multi = !!multi;\n      }\n      return ProviderMeta;\n  }());\n\n  var isDefaultChangeDetectionStrategy = _angular_core.__core_private__.isDefaultChangeDetectionStrategy;\n  var ChangeDetectorStatus = _angular_core.__core_private__.ChangeDetectorStatus;\n  var LifecycleHooks = _angular_core.__core_private__.LifecycleHooks;\n  var LIFECYCLE_HOOKS_VALUES = _angular_core.__core_private__.LIFECYCLE_HOOKS_VALUES;\n  var ReflectorReader = _angular_core.__core_private__.ReflectorReader;\n  var ViewContainer = _angular_core.__core_private__.ViewContainer;\n  var CodegenComponentFactoryResolver = _angular_core.__core_private__.CodegenComponentFactoryResolver;\n  var ComponentRef_ = _angular_core.__core_private__.ComponentRef_;\n  var AppView = _angular_core.__core_private__.AppView;\n  var DebugAppView = _angular_core.__core_private__.DebugAppView;\n  var NgModuleInjector = _angular_core.__core_private__.NgModuleInjector;\n  var registerModuleFactory = _angular_core.__core_private__.registerModuleFactory;\n  var ViewType = _angular_core.__core_private__.ViewType;\n  var view_utils = _angular_core.__core_private__.view_utils;\n  var DebugContext = _angular_core.__core_private__.DebugContext;\n  var StaticNodeDebugInfo = _angular_core.__core_private__.StaticNodeDebugInfo;\n  var devModeEqual = _angular_core.__core_private__.devModeEqual;\n  var UNINITIALIZED = _angular_core.__core_private__.UNINITIALIZED;\n  var ValueUnwrapper = _angular_core.__core_private__.ValueUnwrapper;\n  var TemplateRef_ = _angular_core.__core_private__.TemplateRef_;\n  var Console = _angular_core.__core_private__.Console;\n  var reflector = _angular_core.__core_private__.reflector;\n  var Reflector = _angular_core.__core_private__.Reflector;\n  var ReflectionCapabilities = _angular_core.__core_private__.ReflectionCapabilities;\n  var NoOpAnimationPlayer = _angular_core.__core_private__.NoOpAnimationPlayer;\n  var AnimationSequencePlayer = _angular_core.__core_private__.AnimationSequencePlayer;\n  var AnimationGroupPlayer = _angular_core.__core_private__.AnimationGroupPlayer;\n  var AnimationKeyframe = _angular_core.__core_private__.AnimationKeyframe;\n  var AnimationStyles = _angular_core.__core_private__.AnimationStyles;\n  var ANY_STATE = _angular_core.__core_private__.ANY_STATE;\n  var DEFAULT_STATE = _angular_core.__core_private__.DEFAULT_STATE;\n  var EMPTY_ANIMATION_STATE = _angular_core.__core_private__.EMPTY_STATE;\n  var FILL_STYLE_FLAG = _angular_core.__core_private__.FILL_STYLE_FLAG;\n  var prepareFinalAnimationStyles = _angular_core.__core_private__.prepareFinalAnimationStyles;\n  var balanceAnimationKeyframes = _angular_core.__core_private__.balanceAnimationKeyframes;\n  var clearStyles = _angular_core.__core_private__.clearStyles;\n  var collectAndResolveStyles = _angular_core.__core_private__.collectAndResolveStyles;\n  var renderStyles = _angular_core.__core_private__.renderStyles;\n  var ComponentStillLoadingError = _angular_core.__core_private__.ComponentStillLoadingError;\n  var AnimationTransition = _angular_core.__core_private__.AnimationTransition;\n\n  var APP_VIEW_MODULE_URL = assetUrl('core', 'linker/view');\n  var VIEW_UTILS_MODULE_URL = assetUrl('core', 'linker/view_utils');\n  var CD_MODULE_URL = assetUrl('core', 'change_detection/change_detection');\n  var ANIMATION_STYLE_UTIL_ASSET_URL = assetUrl('core', 'animation/animation_style_util');\n  var Identifiers = (function () {\n      function Identifiers() {\n      }\n      Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n          name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n          moduleUrl: assetUrl('core', 'metadata/di'),\n          runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n      };\n      Identifiers.ViewUtils = {\n          name: 'ViewUtils',\n          moduleUrl: assetUrl('core', 'linker/view_utils'),\n          runtime: view_utils.ViewUtils\n      };\n      Identifiers.AppView = { name: 'AppView', moduleUrl: APP_VIEW_MODULE_URL, runtime: AppView };\n      Identifiers.DebugAppView = {\n          name: 'DebugAppView',\n          moduleUrl: APP_VIEW_MODULE_URL,\n          runtime: DebugAppView\n      };\n      Identifiers.ViewContainer = {\n          name: 'ViewContainer',\n          moduleUrl: assetUrl('core', 'linker/view_container'),\n          runtime: ViewContainer\n      };\n      Identifiers.ElementRef = {\n          name: 'ElementRef',\n          moduleUrl: assetUrl('core', 'linker/element_ref'),\n          runtime: _angular_core.ElementRef\n      };\n      Identifiers.ViewContainerRef = {\n          name: 'ViewContainerRef',\n          moduleUrl: assetUrl('core', 'linker/view_container_ref'),\n          runtime: _angular_core.ViewContainerRef\n      };\n      Identifiers.ChangeDetectorRef = {\n          name: 'ChangeDetectorRef',\n          moduleUrl: assetUrl('core', 'change_detection/change_detector_ref'),\n          runtime: _angular_core.ChangeDetectorRef\n      };\n      Identifiers.RenderComponentType = {\n          name: 'RenderComponentType',\n          moduleUrl: assetUrl('core', 'render/api'),\n          runtime: _angular_core.RenderComponentType\n      };\n      Identifiers.QueryList = {\n          name: 'QueryList',\n          moduleUrl: assetUrl('core', 'linker/query_list'),\n          runtime: _angular_core.QueryList\n      };\n      Identifiers.TemplateRef = {\n          name: 'TemplateRef',\n          moduleUrl: assetUrl('core', 'linker/template_ref'),\n          runtime: _angular_core.TemplateRef\n      };\n      Identifiers.TemplateRef_ = {\n          name: 'TemplateRef_',\n          moduleUrl: assetUrl('core', 'linker/template_ref'),\n          runtime: TemplateRef_\n      };\n      Identifiers.CodegenComponentFactoryResolver = {\n          name: 'CodegenComponentFactoryResolver',\n          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n          runtime: CodegenComponentFactoryResolver\n      };\n      Identifiers.ComponentFactoryResolver = {\n          name: 'ComponentFactoryResolver',\n          moduleUrl: assetUrl('core', 'linker/component_factory_resolver'),\n          runtime: _angular_core.ComponentFactoryResolver\n      };\n      Identifiers.ComponentFactory = {\n          name: 'ComponentFactory',\n          runtime: _angular_core.ComponentFactory,\n          moduleUrl: assetUrl('core', 'linker/component_factory')\n      };\n      Identifiers.ComponentRef_ = {\n          name: 'ComponentRef_',\n          runtime: ComponentRef_,\n          moduleUrl: assetUrl('core', 'linker/component_factory')\n      };\n      Identifiers.ComponentRef = {\n          name: 'ComponentRef',\n          runtime: _angular_core.ComponentRef,\n          moduleUrl: assetUrl('core', 'linker/component_factory')\n      };\n      Identifiers.NgModuleFactory = {\n          name: 'NgModuleFactory',\n          runtime: _angular_core.NgModuleFactory,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n      };\n      Identifiers.NgModuleInjector = {\n          name: 'NgModuleInjector',\n          runtime: NgModuleInjector,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory')\n      };\n      Identifiers.RegisterModuleFactoryFn = {\n          name: 'registerModuleFactory',\n          runtime: registerModuleFactory,\n          moduleUrl: assetUrl('core', 'linker/ng_module_factory_loader')\n      };\n      Identifiers.ValueUnwrapper = { name: 'ValueUnwrapper', moduleUrl: CD_MODULE_URL, runtime: ValueUnwrapper };\n      Identifiers.Injector = {\n          name: 'Injector',\n          moduleUrl: assetUrl('core', 'di/injector'),\n          runtime: _angular_core.Injector\n      };\n      Identifiers.ViewEncapsulation = {\n          name: 'ViewEncapsulation',\n          moduleUrl: assetUrl('core', 'metadata/view'),\n          runtime: _angular_core.ViewEncapsulation\n      };\n      Identifiers.ViewType = {\n          name: 'ViewType',\n          moduleUrl: assetUrl('core', 'linker/view_type'),\n          runtime: ViewType\n      };\n      Identifiers.ChangeDetectionStrategy = {\n          name: 'ChangeDetectionStrategy',\n          moduleUrl: CD_MODULE_URL,\n          runtime: _angular_core.ChangeDetectionStrategy\n      };\n      Identifiers.StaticNodeDebugInfo = {\n          name: 'StaticNodeDebugInfo',\n          moduleUrl: assetUrl('core', 'linker/debug_context'),\n          runtime: StaticNodeDebugInfo\n      };\n      Identifiers.DebugContext = {\n          name: 'DebugContext',\n          moduleUrl: assetUrl('core', 'linker/debug_context'),\n          runtime: DebugContext\n      };\n      Identifiers.Renderer = {\n          name: 'Renderer',\n          moduleUrl: assetUrl('core', 'render/api'),\n          runtime: _angular_core.Renderer\n      };\n      Identifiers.SimpleChange = { name: 'SimpleChange', moduleUrl: CD_MODULE_URL, runtime: _angular_core.SimpleChange };\n      Identifiers.UNINITIALIZED = { name: 'UNINITIALIZED', moduleUrl: CD_MODULE_URL, runtime: UNINITIALIZED };\n      Identifiers.ChangeDetectorStatus = {\n          name: 'ChangeDetectorStatus',\n          moduleUrl: CD_MODULE_URL,\n          runtime: ChangeDetectorStatus\n      };\n      Identifiers.checkBinding = {\n          name: 'checkBinding',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.checkBinding\n      };\n      Identifiers.devModeEqual = { name: 'devModeEqual', moduleUrl: CD_MODULE_URL, runtime: devModeEqual };\n      Identifiers.inlineInterpolate = {\n          name: 'inlineInterpolate',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.inlineInterpolate\n      };\n      Identifiers.interpolate = {\n          name: 'interpolate',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.interpolate\n      };\n      Identifiers.castByValue = {\n          name: 'castByValue',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.castByValue\n      };\n      Identifiers.EMPTY_ARRAY = {\n          name: 'EMPTY_ARRAY',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_ARRAY\n      };\n      Identifiers.EMPTY_MAP = {\n          name: 'EMPTY_MAP',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_MAP\n      };\n      Identifiers.createRenderElement = {\n          name: 'createRenderElement',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.createRenderElement\n      };\n      Identifiers.selectOrCreateRenderHostElement = {\n          name: 'selectOrCreateRenderHostElement',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.selectOrCreateRenderHostElement\n      };\n      Identifiers.pureProxies = [\n          null,\n          { name: 'pureProxy1', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy1 },\n          { name: 'pureProxy2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy2 },\n          { name: 'pureProxy3', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy3 },\n          { name: 'pureProxy4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy4 },\n          { name: 'pureProxy5', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy5 },\n          { name: 'pureProxy6', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy6 },\n          { name: 'pureProxy7', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy7 },\n          { name: 'pureProxy8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy8 },\n          { name: 'pureProxy9', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy9 },\n          { name: 'pureProxy10', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.pureProxy10 },\n      ];\n      Identifiers.SecurityContext = {\n          name: 'SecurityContext',\n          moduleUrl: assetUrl('core', 'security'),\n          runtime: _angular_core.SecurityContext,\n      };\n      Identifiers.AnimationKeyframe = {\n          name: 'AnimationKeyframe',\n          moduleUrl: assetUrl('core', 'animation/animation_keyframe'),\n          runtime: AnimationKeyframe\n      };\n      Identifiers.AnimationStyles = {\n          name: 'AnimationStyles',\n          moduleUrl: assetUrl('core', 'animation/animation_styles'),\n          runtime: AnimationStyles\n      };\n      Identifiers.NoOpAnimationPlayer = {\n          name: 'NoOpAnimationPlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_player'),\n          runtime: NoOpAnimationPlayer\n      };\n      Identifiers.AnimationGroupPlayer = {\n          name: 'AnimationGroupPlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_group_player'),\n          runtime: AnimationGroupPlayer\n      };\n      Identifiers.AnimationSequencePlayer = {\n          name: 'AnimationSequencePlayer',\n          moduleUrl: assetUrl('core', 'animation/animation_sequence_player'),\n          runtime: AnimationSequencePlayer\n      };\n      Identifiers.prepareFinalAnimationStyles = {\n          name: 'prepareFinalAnimationStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: prepareFinalAnimationStyles\n      };\n      Identifiers.balanceAnimationKeyframes = {\n          name: 'balanceAnimationKeyframes',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: balanceAnimationKeyframes\n      };\n      Identifiers.clearStyles = {\n          name: 'clearStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: clearStyles\n      };\n      Identifiers.renderStyles = {\n          name: 'renderStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: renderStyles\n      };\n      Identifiers.collectAndResolveStyles = {\n          name: 'collectAndResolveStyles',\n          moduleUrl: ANIMATION_STYLE_UTIL_ASSET_URL,\n          runtime: collectAndResolveStyles\n      };\n      Identifiers.LOCALE_ID = {\n          name: 'LOCALE_ID',\n          moduleUrl: assetUrl('core', 'i18n/tokens'),\n          runtime: _angular_core.LOCALE_ID\n      };\n      Identifiers.TRANSLATIONS_FORMAT = {\n          name: 'TRANSLATIONS_FORMAT',\n          moduleUrl: assetUrl('core', 'i18n/tokens'),\n          runtime: _angular_core.TRANSLATIONS_FORMAT\n      };\n      Identifiers.setBindingDebugInfo = {\n          name: 'setBindingDebugInfo',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.setBindingDebugInfo\n      };\n      Identifiers.setBindingDebugInfoForChanges = {\n          name: 'setBindingDebugInfoForChanges',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.setBindingDebugInfoForChanges\n      };\n      Identifiers.AnimationTransition = {\n          name: 'AnimationTransition',\n          moduleUrl: assetUrl('core', 'animation/animation_transition'),\n          runtime: AnimationTransition\n      };\n      // This is just the interface!\n      Identifiers.InlineArray = { name: 'InlineArray', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: null };\n      Identifiers.inlineArrays = [\n          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n          { name: 'InlineArray2', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray2 },\n          { name: 'InlineArray4', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray4 },\n          { name: 'InlineArray8', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray8 },\n          { name: 'InlineArray16', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.InlineArray16 },\n      ];\n      Identifiers.EMPTY_INLINE_ARRAY = {\n          name: 'EMPTY_INLINE_ARRAY',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.EMPTY_INLINE_ARRAY\n      };\n      Identifiers.InlineArrayDynamic = {\n          name: 'InlineArrayDynamic',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.InlineArrayDynamic\n      };\n      Identifiers.subscribeToRenderElement = {\n          name: 'subscribeToRenderElement',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.subscribeToRenderElement\n      };\n      Identifiers.createRenderComponentType = {\n          name: 'createRenderComponentType',\n          moduleUrl: VIEW_UTILS_MODULE_URL,\n          runtime: view_utils.createRenderComponentType\n      };\n      Identifiers.noop = { name: 'noop', moduleUrl: VIEW_UTILS_MODULE_URL, runtime: view_utils.noop };\n      return Identifiers;\n  }());\n  function assetUrl(pkg, path, type) {\n      if (path === void 0) { path = null; }\n      if (type === void 0) { type = 'src'; }\n      if (path == null) {\n          return \"asset:@angular/lib/\" + pkg + \"/index\";\n      }\n      else {\n          return \"asset:@angular/lib/\" + pkg + \"/src/\" + path;\n      }\n  }\n  function resolveIdentifier(identifier) {\n      return new CompileIdentifierMetadata({\n          name: identifier.name,\n          moduleUrl: identifier.moduleUrl,\n          reference: reflector.resolveIdentifier(identifier.name, identifier.moduleUrl, identifier.runtime)\n      });\n  }\n  function identifierToken(identifier) {\n      return new CompileTokenMetadata({ identifier: identifier });\n  }\n  function resolveIdentifierToken(identifier) {\n      return identifierToken(resolveIdentifier(identifier));\n  }\n  function resolveEnumIdentifier(enumType, name) {\n      var resolvedEnum = reflector.resolveEnum(enumType.reference, name);\n      return new CompileIdentifierMetadata({ name: enumType.name + \".\" + name, moduleUrl: enumType.moduleUrl, reference: resolvedEnum });\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$8 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var HtmlParser = (function (_super) {\n      __extends$8(HtmlParser, _super);\n      function HtmlParser() {\n          _super.call(this, getHtmlTagDefinition);\n      }\n      HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n          if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n          if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n          return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n      };\n      HtmlParser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      HtmlParser.ctorParameters = [];\n      return HtmlParser;\n  }(Parser$1));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$9 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  // http://cldr.unicode.org/index/cldr-spec/plural-rules\n  var PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n  /**\n   * Expands special forms into elements.\n   *\n   * For example,\n   *\n   * ```\n   * { messages.length, plural,\n   *   =0 {zero}\n   *   =1 {one}\n   *   other {more than one}\n   * }\n   * ```\n   *\n   * will be expanded into\n   *\n   * ```\n   * <ng-container [ngPlural]=\"messages.length\">\n   *   <template ngPluralCase=\"=0\">zero</ng-container>\n   *   <template ngPluralCase=\"=1\">one</ng-container>\n   *   <template ngPluralCase=\"other\">more than one</ng-container>\n   * </ng-container>\n   * ```\n   */\n  function expandNodes(nodes) {\n      var expander = new _Expander();\n      return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n  }\n  var ExpansionResult = (function () {\n      function ExpansionResult(nodes, expanded, errors) {\n          this.nodes = nodes;\n          this.expanded = expanded;\n          this.errors = errors;\n      }\n      return ExpansionResult;\n  }());\n  var ExpansionError = (function (_super) {\n      __extends$9(ExpansionError, _super);\n      function ExpansionError(span, errorMsg) {\n          _super.call(this, span, errorMsg);\n      }\n      return ExpansionError;\n  }(ParseError));\n  /**\n   * Expand expansion forms (plural, select) to directives\n   *\n   * @internal\n   */\n  var _Expander = (function () {\n      function _Expander() {\n          this.isExpanded = false;\n          this.errors = [];\n      }\n      _Expander.prototype.visitElement = function (element, context) {\n          return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n      };\n      _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n      _Expander.prototype.visitText = function (text, context) { return text; };\n      _Expander.prototype.visitComment = function (comment, context) { return comment; };\n      _Expander.prototype.visitExpansion = function (icu, context) {\n          this.isExpanded = true;\n          return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n              _expandDefaultForm(icu, this.errors);\n      };\n      _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n          throw new Error('Should not be reached');\n      };\n      return _Expander;\n  }());\n  function _expandPluralForm(ast, errors) {\n      var children = ast.cases.map(function (c) {\n          if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n              errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n          }\n          var expansionResult = expandNodes(c.expression);\n          errors.push.apply(errors, expansionResult.errors);\n          return new Element(\"template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n      });\n      var switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n  }\n  function _expandDefaultForm(ast, errors) {\n      var children = ast.cases.map(function (c) {\n          var expansionResult = expandNodes(c.expression);\n          errors.push.apply(errors, expansionResult.errors);\n          if (c.value === 'other') {\n              // other is the default case when no values match\n              return new Element(\"template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n          }\n          return new Element(\"template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n      });\n      var switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n      return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$10 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var ProviderError = (function (_super) {\n      __extends$10(ProviderError, _super);\n      function ProviderError(message, span) {\n          _super.call(this, span, message);\n      }\n      return ProviderError;\n  }(ParseError));\n  var ProviderViewContext = (function () {\n      function ProviderViewContext(component, sourceSpan) {\n          var _this = this;\n          this.component = component;\n          this.sourceSpan = sourceSpan;\n          this.errors = [];\n          this.viewQueries = _getViewQueries(component);\n          this.viewProviders = new Map();\n          _normalizeProviders(component.viewProviders, sourceSpan, this.errors).forEach(function (provider) {\n              if (isBlank(_this.viewProviders.get(provider.token.reference))) {\n                  _this.viewProviders.set(provider.token.reference, true);\n              }\n          });\n      }\n      return ProviderViewContext;\n  }());\n  var ProviderElementContext = (function () {\n      function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, _sourceSpan) {\n          var _this = this;\n          this.viewContext = viewContext;\n          this._parent = _parent;\n          this._isViewRoot = _isViewRoot;\n          this._directiveAsts = _directiveAsts;\n          this._sourceSpan = _sourceSpan;\n          this._transformedProviders = new Map();\n          this._seenProviders = new Map();\n          this._hasViewContainer = false;\n          this._attrs = {};\n          attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n          var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n          this._allProviders =\n              _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n          this._contentQueries = _getContentQueries(directivesMeta);\n          var queriedTokens = new Map();\n          Array.from(this._allProviders.values()).forEach(function (provider) {\n              _this._addQueryReadsTo(provider.token, queriedTokens);\n          });\n          refs.forEach(function (refAst) {\n              _this._addQueryReadsTo(new CompileTokenMetadata({ value: refAst.name }), queriedTokens);\n          });\n          if (isPresent(queriedTokens.get(resolveIdentifierToken(Identifiers.ViewContainerRef).reference))) {\n              this._hasViewContainer = true;\n          }\n          // create the providers that we know are eager first\n          Array.from(this._allProviders.values()).forEach(function (provider) {\n              var eager = provider.eager || isPresent(queriedTokens.get(provider.token.reference));\n              if (eager) {\n                  _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n              }\n          });\n      }\n      ProviderElementContext.prototype.afterElement = function () {\n          var _this = this;\n          // collect lazy providers\n          Array.from(this._allProviders.values()).forEach(function (provider) {\n              _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n          });\n      };\n      Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n          get: function () {\n              return Array.from(this._transformedProviders.values());\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n          get: function () {\n              var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n              var sortedDirectives = this._directiveAsts.slice();\n              sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                  sortedProviderTypes.indexOf(dir2.directive.type); });\n              return sortedDirectives;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n          get: function () { return this._hasViewContainer; },\n          enumerable: true,\n          configurable: true\n      });\n      ProviderElementContext.prototype._addQueryReadsTo = function (token, queryReadTokens) {\n          this._getQueriesFor(token).forEach(function (query) {\n              var queryReadToken = query.read || token;\n              if (isBlank(queryReadTokens.get(queryReadToken.reference))) {\n                  queryReadTokens.set(queryReadToken.reference, true);\n              }\n          });\n      };\n      ProviderElementContext.prototype._getQueriesFor = function (token) {\n          var result = [];\n          var currentEl = this;\n          var distance = 0;\n          var queries;\n          while (currentEl !== null) {\n              queries = currentEl._contentQueries.get(token.reference);\n              if (isPresent(queries)) {\n                  result.push.apply(result, queries.filter(function (query) { return query.descendants || distance <= 1; }));\n              }\n              if (currentEl._directiveAsts.length > 0) {\n                  distance++;\n              }\n              currentEl = currentEl._parent;\n          }\n          queries = this.viewContext.viewQueries.get(token.reference);\n          if (isPresent(queries)) {\n              result.push.apply(result, queries);\n          }\n          return result;\n      };\n      ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n          var _this = this;\n          var resolvedProvider = this._allProviders.get(token.reference);\n          if (!resolvedProvider || ((requestingProviderType === exports.ProviderAstType.Directive ||\n              requestingProviderType === exports.ProviderAstType.PublicService) &&\n              resolvedProvider.providerType === exports.ProviderAstType.PrivateService) ||\n              ((requestingProviderType === exports.ProviderAstType.PrivateService ||\n                  requestingProviderType === exports.ProviderAstType.PublicService) &&\n                  resolvedProvider.providerType === exports.ProviderAstType.Builtin)) {\n              return null;\n          }\n          var transformedProviderAst = this._transformedProviders.get(token.reference);\n          if (isPresent(transformedProviderAst)) {\n              return transformedProviderAst;\n          }\n          if (isPresent(this._seenProviders.get(token.reference))) {\n              this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, this._sourceSpan));\n              return null;\n          }\n          this._seenProviders.set(token.reference, true);\n          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n              var transformedUseValue = provider.useValue;\n              var transformedUseExisting = provider.useExisting;\n              var transformedDeps;\n              if (isPresent(provider.useExisting)) {\n                  var existingDiDep = _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }), eager);\n                  if (isPresent(existingDiDep.token)) {\n                      transformedUseExisting = existingDiDep.token;\n                  }\n                  else {\n                      transformedUseExisting = null;\n                      transformedUseValue = existingDiDep.value;\n                  }\n              }\n              else if (isPresent(provider.useFactory)) {\n                  var deps = provider.deps || provider.useFactory.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n              }\n              else if (isPresent(provider.useClass)) {\n                  var deps = provider.deps || provider.useClass.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n              }\n              return _transformProvider(provider, {\n                  useExisting: transformedUseExisting,\n                  useValue: transformedUseValue,\n                  deps: transformedDeps\n              });\n          });\n          transformedProviderAst =\n              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n          this._transformedProviders.set(token.reference, transformedProviderAst);\n          return transformedProviderAst;\n      };\n      ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n          if (eager === void 0) { eager = null; }\n          if (dep.isAttribute) {\n              var attrValue = this._attrs[dep.token.value];\n              return new CompileDiDependencyMetadata({ isValue: true, value: attrValue == null ? null : attrValue });\n          }\n          if (isPresent(dep.token)) {\n              // access builtints\n              if ((requestingProviderType === exports.ProviderAstType.Directive ||\n                  requestingProviderType === exports.ProviderAstType.Component)) {\n                  if (dep.token.reference === resolveIdentifierToken(Identifiers.Renderer).reference ||\n                      dep.token.reference === resolveIdentifierToken(Identifiers.ElementRef).reference ||\n                      dep.token.reference ===\n                          resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference ||\n                      dep.token.reference === resolveIdentifierToken(Identifiers.TemplateRef).reference) {\n                      return dep;\n                  }\n                  if (dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ViewContainerRef).reference) {\n                      this._hasViewContainer = true;\n                  }\n              }\n              // access the injector\n              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference) {\n                  return dep;\n              }\n              // access providers\n              if (isPresent(this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager))) {\n                  return dep;\n              }\n          }\n          return null;\n      };\n      ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n          if (eager === void 0) { eager = null; }\n          var currElement = this;\n          var currEager = eager;\n          var result = null;\n          if (!dep.isSkipSelf) {\n              result = this._getLocalDependency(requestingProviderType, dep, eager);\n          }\n          if (dep.isSelf) {\n              if (!result && dep.isOptional) {\n                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n              }\n          }\n          else {\n              // check parent elements\n              while (!result && isPresent(currElement._parent)) {\n                  var prevElement = currElement;\n                  currElement = currElement._parent;\n                  if (prevElement._isViewRoot) {\n                      currEager = false;\n                  }\n                  result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, dep, currEager);\n              }\n              // check @Host restriction\n              if (!result) {\n                  if (!dep.isHost || this.viewContext.component.type.isHost ||\n                      this.viewContext.component.type.reference === dep.token.reference ||\n                      isPresent(this.viewContext.viewProviders.get(dep.token.reference))) {\n                      result = dep;\n                  }\n                  else {\n                      result = dep.isOptional ?\n                          result = new CompileDiDependencyMetadata({ isValue: true, value: null }) :\n                          null;\n                  }\n              }\n          }\n          if (!result) {\n              this.viewContext.errors.push(new ProviderError(\"No provider for \" + dep.token.name, this._sourceSpan));\n          }\n          return result;\n      };\n      return ProviderElementContext;\n  }());\n  var NgModuleProviderAnalyzer = (function () {\n      function NgModuleProviderAnalyzer(ngModule, extraProviders, sourceSpan) {\n          var _this = this;\n          this._transformedProviders = new Map();\n          this._seenProviders = new Map();\n          this._errors = [];\n          this._allProviders = new Map();\n          var ngModuleTypes = ngModule.transitiveModule.modules.map(function (moduleMeta) { return moduleMeta.type; });\n          ngModuleTypes.forEach(function (ngModuleType) {\n              var ngModuleProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: ngModuleType }), useClass: ngModuleType });\n              _resolveProviders([ngModuleProvider], exports.ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n          });\n          _resolveProviders(_normalizeProviders(ngModule.transitiveModule.providers.concat(extraProviders), sourceSpan, this._errors), exports.ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n      }\n      NgModuleProviderAnalyzer.prototype.parse = function () {\n          var _this = this;\n          Array.from(this._allProviders.values()).forEach(function (provider) {\n              _this._getOrCreateLocalProvider(provider.token, provider.eager);\n          });\n          if (this._errors.length > 0) {\n              var errorString = this._errors.join('\\n');\n              throw new Error(\"Provider parse errors:\\n\" + errorString);\n          }\n          return Array.from(this._transformedProviders.values());\n      };\n      NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n          var _this = this;\n          var resolvedProvider = this._allProviders.get(token.reference);\n          if (!resolvedProvider) {\n              return null;\n          }\n          var transformedProviderAst = this._transformedProviders.get(token.reference);\n          if (isPresent(transformedProviderAst)) {\n              return transformedProviderAst;\n          }\n          if (isPresent(this._seenProviders.get(token.reference))) {\n              this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + token.name, resolvedProvider.sourceSpan));\n              return null;\n          }\n          this._seenProviders.set(token.reference, true);\n          var transformedProviders = resolvedProvider.providers.map(function (provider) {\n              var transformedUseValue = provider.useValue;\n              var transformedUseExisting = provider.useExisting;\n              var transformedDeps;\n              if (isPresent(provider.useExisting)) {\n                  var existingDiDep = _this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }), eager, resolvedProvider.sourceSpan);\n                  if (isPresent(existingDiDep.token)) {\n                      transformedUseExisting = existingDiDep.token;\n                  }\n                  else {\n                      transformedUseExisting = null;\n                      transformedUseValue = existingDiDep.value;\n                  }\n              }\n              else if (isPresent(provider.useFactory)) {\n                  var deps = provider.deps || provider.useFactory.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n              }\n              else if (isPresent(provider.useClass)) {\n                  var deps = provider.deps || provider.useClass.diDeps;\n                  transformedDeps =\n                      deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n              }\n              return _transformProvider(provider, {\n                  useExisting: transformedUseExisting,\n                  useValue: transformedUseValue,\n                  deps: transformedDeps\n              });\n          });\n          transformedProviderAst =\n              _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n          this._transformedProviders.set(token.reference, transformedProviderAst);\n          return transformedProviderAst;\n      };\n      NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n          if (eager === void 0) { eager = null; }\n          var foundLocal = false;\n          if (!dep.isSkipSelf && isPresent(dep.token)) {\n              // access the injector\n              if (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n                  dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference) {\n                  foundLocal = true;\n              }\n              else if (isPresent(this._getOrCreateLocalProvider(dep.token, eager))) {\n                  foundLocal = true;\n              }\n          }\n          var result = dep;\n          if (dep.isSelf && !foundLocal) {\n              if (dep.isOptional) {\n                  result = new CompileDiDependencyMetadata({ isValue: true, value: null });\n              }\n              else {\n                  this._errors.push(new ProviderError(\"No provider for \" + dep.token.name, requestorSourceSpan));\n              }\n          }\n          return result;\n      };\n      return NgModuleProviderAnalyzer;\n  }());\n  function _transformProvider(provider, _a) {\n      var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n      return new CompileProviderMetadata({\n          token: provider.token,\n          useClass: provider.useClass,\n          useExisting: useExisting,\n          useFactory: provider.useFactory,\n          useValue: useValue,\n          deps: deps,\n          multi: provider.multi\n      });\n  }\n  function _transformProviderAst(provider, _a) {\n      var eager = _a.eager, providers = _a.providers;\n      return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n  }\n  function _normalizeProviders(providers, sourceSpan, targetErrors, targetProviders) {\n      if (targetProviders === void 0) { targetProviders = null; }\n      if (!targetProviders) {\n          targetProviders = [];\n      }\n      if (isPresent(providers)) {\n          providers.forEach(function (provider) {\n              if (Array.isArray(provider)) {\n                  _normalizeProviders(provider, sourceSpan, targetErrors, targetProviders);\n              }\n              else {\n                  var normalizeProvider = void 0;\n                  if (provider instanceof CompileProviderMetadata) {\n                      normalizeProvider = provider;\n                  }\n                  else if (provider instanceof CompileTypeMetadata) {\n                      normalizeProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: provider }), useClass: provider });\n                  }\n                  else {\n                      targetErrors.push(new ProviderError(\"Unknown provider type \" + provider, sourceSpan));\n                  }\n                  if (isPresent(normalizeProvider)) {\n                      targetProviders.push(normalizeProvider);\n                  }\n              }\n          });\n      }\n      return targetProviders;\n  }\n  function _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n      var providersByToken = new Map();\n      directives.forEach(function (directive) {\n          var dirProvider = new CompileProviderMetadata({ token: new CompileTokenMetadata({ identifier: directive.type }), useClass: directive.type });\n          _resolveProviders([dirProvider], directive.isComponent ? exports.ProviderAstType.Component : exports.ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n      });\n      // Note: directives need to be able to overwrite providers of a component!\n      var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n      directivesWithComponentFirst.forEach(function (directive) {\n          _resolveProviders(_normalizeProviders(directive.providers, sourceSpan, targetErrors), exports.ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n          _resolveProviders(_normalizeProviders(directive.viewProviders, sourceSpan, targetErrors), exports.ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n      });\n      return providersByToken;\n  }\n  function _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n      providers.forEach(function (provider) {\n          var resolvedProvider = targetProvidersByToken.get(provider.token.reference);\n          if (isPresent(resolvedProvider) && resolvedProvider.multiProvider !== provider.multi) {\n              targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + resolvedProvider.token.name, sourceSpan));\n          }\n          if (!resolvedProvider) {\n              var lifecycleHooks = provider.token.identifier && provider.token.identifier instanceof CompileTypeMetadata ?\n                  provider.token.identifier.lifecycleHooks :\n                  [];\n              resolvedProvider = new ProviderAst(provider.token, provider.multi, eager || lifecycleHooks.length > 0, [provider], providerType, lifecycleHooks, sourceSpan);\n              targetProvidersByToken.set(provider.token.reference, resolvedProvider);\n          }\n          else {\n              if (!provider.multi) {\n                  resolvedProvider.providers.length = 0;\n              }\n              resolvedProvider.providers.push(provider);\n          }\n      });\n  }\n  function _getViewQueries(component) {\n      var viewQueries = new Map();\n      if (isPresent(component.viewQueries)) {\n          component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, query); });\n      }\n      return viewQueries;\n  }\n  function _getContentQueries(directives) {\n      var contentQueries = new Map();\n      directives.forEach(function (directive) {\n          if (isPresent(directive.queries)) {\n              directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, query); });\n          }\n      });\n      return contentQueries;\n  }\n  function _addQueryToTokenMap(map, query) {\n      query.selectors.forEach(function (token) {\n          var entry = map.get(token.reference);\n          if (!entry) {\n              entry = [];\n              map.set(token.reference, entry);\n          }\n          entry.push(query);\n      });\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var ElementSchemaRegistry = (function () {\n      function ElementSchemaRegistry() {\n      }\n      return ElementSchemaRegistry;\n  }());\n\n  var StyleWithImports = (function () {\n      function StyleWithImports(style, styleUrls) {\n          this.style = style;\n          this.styleUrls = styleUrls;\n      }\n      return StyleWithImports;\n  }());\n  function isStyleUrlResolvable(url) {\n      if (isBlank(url) || url.length === 0 || url[0] == '/')\n          return false;\n      var schemeMatch = url.match(_urlWithSchemaRe);\n      return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n  }\n  /**\n   * Rewrites stylesheets by resolving and removing the @import urls that\n   * are either relative or don't have a `package:` scheme\n   */\n  function extractStyleUrls(resolver, baseUrl, cssText) {\n      var foundUrls = [];\n      var modifiedCssText = cssText.replace(_cssImportRe, function () {\n          var m = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              m[_i - 0] = arguments[_i];\n          }\n          var url = m[1] || m[2];\n          if (!isStyleUrlResolvable(url)) {\n              // Do not attempt to resolve non-package absolute URLs with URI scheme\n              return m[0];\n          }\n          foundUrls.push(resolver.resolve(baseUrl, url));\n          return '';\n      });\n      return new StyleWithImports(modifiedCssText, foundUrls);\n  }\n  var _cssImportRe = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n  var _urlWithSchemaRe = /^([^:/?#]+):/;\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$11 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var PROPERTY_PARTS_SEPARATOR = '.';\n  var ATTRIBUTE_PREFIX = 'attr';\n  var CLASS_PREFIX = 'class';\n  var STYLE_PREFIX = 'style';\n  var ANIMATE_PROP_PREFIX = 'animate-';\n  var BoundPropertyType;\n  (function (BoundPropertyType) {\n      BoundPropertyType[BoundPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n      BoundPropertyType[BoundPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n      BoundPropertyType[BoundPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n  })(BoundPropertyType || (BoundPropertyType = {}));\n  /**\n   * Represents a parsed property.\n   */\n  var BoundProperty = (function () {\n      function BoundProperty(name, expression, type, sourceSpan) {\n          this.name = name;\n          this.expression = expression;\n          this.type = type;\n          this.sourceSpan = sourceSpan;\n      }\n      Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n          get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n          get: function () { return this.type === BoundPropertyType.ANIMATION; },\n          enumerable: true,\n          configurable: true\n      });\n      return BoundProperty;\n  }());\n  /**\n   * Parses bindings in templates and in the directive host area.\n   */\n  var BindingParser = (function () {\n      function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n          var _this = this;\n          this._exprParser = _exprParser;\n          this._interpolationConfig = _interpolationConfig;\n          this._schemaRegistry = _schemaRegistry;\n          this._targetErrors = _targetErrors;\n          this.pipesByName = new Map();\n          pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n      }\n      BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, sourceSpan) {\n          var _this = this;\n          if (dirMeta.hostProperties) {\n              var boundProps_1 = [];\n              Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                  var expression = dirMeta.hostProperties[propName];\n                  if (typeof expression === 'string') {\n                      _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                  }\n                  else {\n                      _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                  }\n              });\n              return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(dirMeta.selector, prop); });\n          }\n      };\n      BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n          var _this = this;\n          if (dirMeta.hostListeners) {\n              var targetEventAsts_1 = [];\n              Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                  var expression = dirMeta.hostListeners[propName];\n                  if (typeof expression === 'string') {\n                      _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                  }\n                  else {\n                      _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                  }\n              });\n              return targetEventAsts_1;\n          }\n      };\n      BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n              if (ast)\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              this._checkPipes(ast, sourceSpan);\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype.parseInlineTemplateBinding = function (name, prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n          var bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n          for (var i = 0; i < bindings.length; i++) {\n              var binding = bindings[i];\n              if (binding.keyIsVar) {\n                  targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n              }\n              else if (isPresent(binding.expression)) {\n                  this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n              }\n              else {\n                  targetMatchableAttrs.push([binding.key, '']);\n                  this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n              }\n          }\n      };\n      BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n          var _this = this;\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n              this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n              bindingsResult.templateBindings.forEach(function (binding) {\n                  if (isPresent(binding.expression)) {\n                      _this._checkPipes(binding.expression, sourceSpan);\n                  }\n              });\n              bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, exports.ParseErrorLevel.WARNING); });\n              return bindingsResult.templateBindings;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return [];\n          }\n      };\n      BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n          if (_isAnimationLabel(name)) {\n              name = name.substring(1);\n              if (value) {\n                  this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                      \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, exports.ParseErrorLevel.FATAL);\n              }\n              this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n          }\n          else {\n              targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n          }\n      };\n      BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n          var isAnimationProp = false;\n          if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n              isAnimationProp = true;\n              name = name.substring(ANIMATE_PROP_PREFIX.length);\n          }\n          else if (_isAnimationLabel(name)) {\n              isAnimationProp = true;\n              name = name.substring(1);\n          }\n          if (isAnimationProp) {\n              this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n          }\n          else {\n              this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n          }\n      };\n      BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n          var expr = this.parseInterpolation(value, sourceSpan);\n          if (isPresent(expr)) {\n              this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n              return true;\n          }\n          return false;\n      };\n      BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n          targetMatchableAttrs.push([name, ast.source]);\n          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n      };\n      BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n          // This will occur when a @trigger is not paired with an expression.\n          // For animations it is valid to not have an expression since */void\n          // states will be applied by angular when the element is attached/detached\n          var ast = this._parseBinding(expression || 'null', false, sourceSpan);\n          targetMatchableAttrs.push([name, ast.source]);\n          targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n      };\n      BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = isHostBinding ?\n                  this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                  this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n              if (ast)\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              this._checkPipes(ast, sourceSpan);\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n          if (boundProp.isAnimation) {\n              return new BoundElementPropertyAst(boundProp.name, exports.PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, false, boundProp.expression, null, boundProp.sourceSpan);\n          }\n          var unit = null;\n          var bindingType;\n          var boundPropertyName;\n          var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n          var securityContexts;\n          if (parts.length === 1) {\n              var partValue = parts[0];\n              boundPropertyName = this._schemaRegistry.getMappedPropName(partValue);\n              securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n              bindingType = exports.PropertyBindingType.Property;\n              this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n          }\n          else {\n              if (parts[0] == ATTRIBUTE_PREFIX) {\n                  boundPropertyName = parts[1];\n                  this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                  securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                  var nsSeparatorIdx = boundPropertyName.indexOf(':');\n                  if (nsSeparatorIdx > -1) {\n                      var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                      var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                      boundPropertyName = mergeNsAndName(ns, name_1);\n                  }\n                  bindingType = exports.PropertyBindingType.Attribute;\n              }\n              else if (parts[0] == CLASS_PREFIX) {\n                  boundPropertyName = parts[1];\n                  bindingType = exports.PropertyBindingType.Class;\n                  securityContexts = [_angular_core.SecurityContext.NONE];\n              }\n              else if (parts[0] == STYLE_PREFIX) {\n                  unit = parts.length > 2 ? parts[2] : null;\n                  boundPropertyName = parts[1];\n                  bindingType = exports.PropertyBindingType.Style;\n                  securityContexts = [_angular_core.SecurityContext.STYLE];\n              }\n              else {\n                  this._reportError(\"Invalid property name '\" + boundProp.name + \"'\", boundProp.sourceSpan);\n                  bindingType = null;\n                  securityContexts = [];\n              }\n          }\n          return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts.length === 1 ? securityContexts[0] : null, securityContexts.length > 1, boundProp.expression, unit, boundProp.sourceSpan);\n      };\n      BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          if (_isAnimationLabel(name)) {\n              name = name.substr(1);\n              this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n          }\n          else {\n              this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n          }\n      };\n      BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n          var matches = splitAtPeriod(name, [name, '']);\n          var eventName = matches[0];\n          var phase = matches[1].toLowerCase();\n          if (phase) {\n              switch (phase) {\n                  case 'start':\n                  case 'done':\n                      var ast = this._parseAction(expression, sourceSpan);\n                      targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                      break;\n                  default:\n                      this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                      break;\n              }\n          }\n          else {\n              this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n          }\n      };\n      BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          // long format: 'target: eventName'\n          var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n          var ast = this._parseAction(expression, sourceSpan);\n          targetMatchableAttrs.push([name, ast.source]);\n          targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n          // Don't detect directives for event names for now,\n          // so don't add the event name to the matchableAttrs\n      };\n      BindingParser.prototype._parseAction = function (value, sourceSpan) {\n          var sourceInfo = sourceSpan.start.toString();\n          try {\n              var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n              if (ast) {\n                  this._reportExpressionParserErrors(ast.errors, sourceSpan);\n              }\n              if (!ast || ast.ast instanceof EmptyExpr) {\n                  this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                  return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n              }\n              this._checkPipes(ast, sourceSpan);\n              return ast;\n          }\n          catch (e) {\n              this._reportError(\"\" + e, sourceSpan);\n              return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n          }\n      };\n      BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n      };\n      BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n          for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n              var error = errors_1[_i];\n              this._reportError(error.message, sourceSpan);\n          }\n      };\n      BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n          var _this = this;\n          if (isPresent(ast)) {\n              var collector = new PipeCollector();\n              ast.visit(collector);\n              collector.pipes.forEach(function (pipeName) {\n                  if (!_this.pipesByName.has(pipeName)) {\n                      _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", sourceSpan);\n                  }\n              });\n          }\n      };\n      /**\n       * @param propName the name of the property / attribute\n       * @param sourceSpan\n       * @param isAttr true when binding to an attribute\n       * @private\n       */\n      BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n          var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n              this._schemaRegistry.validateProperty(propName);\n          if (report.error) {\n              this._reportError(report.msg, sourceSpan, exports.ParseErrorLevel.FATAL);\n          }\n      };\n      return BindingParser;\n  }());\n  var PipeCollector = (function (_super) {\n      __extends$11(PipeCollector, _super);\n      function PipeCollector() {\n          _super.apply(this, arguments);\n          this.pipes = new Set();\n      }\n      PipeCollector.prototype.visitPipe = function (ast, context) {\n          this.pipes.add(ast.name);\n          ast.exp.visit(this);\n          this.visitAll(ast.args, context);\n          return null;\n      };\n      return PipeCollector;\n  }(RecursiveAstVisitor));\n  function _isAnimationLabel(name) {\n      return name[0] == '@';\n  }\n  function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n      var ctxs = [];\n      CssSelector.parse(selector).forEach(function (selector) {\n          var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n          var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n              .map(function (selector) { return selector.element; }));\n          var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n          ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n      });\n      return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n  }\n\n  var NG_CONTENT_SELECT_ATTR = 'select';\n  var NG_CONTENT_ELEMENT = 'ng-content';\n  var LINK_ELEMENT = 'link';\n  var LINK_STYLE_REL_ATTR = 'rel';\n  var LINK_STYLE_HREF_ATTR = 'href';\n  var LINK_STYLE_REL_VALUE = 'stylesheet';\n  var STYLE_ELEMENT = 'style';\n  var SCRIPT_ELEMENT = 'script';\n  var NG_NON_BINDABLE_ATTR = 'ngNonBindable';\n  var NG_PROJECT_AS = 'ngProjectAs';\n  function preparseElement(ast) {\n      var selectAttr = null;\n      var hrefAttr = null;\n      var relAttr = null;\n      var nonBindable = false;\n      var projectAs = null;\n      ast.attrs.forEach(function (attr) {\n          var lcAttrName = attr.name.toLowerCase();\n          if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n              selectAttr = attr.value;\n          }\n          else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n              hrefAttr = attr.value;\n          }\n          else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n              relAttr = attr.value;\n          }\n          else if (attr.name == NG_NON_BINDABLE_ATTR) {\n              nonBindable = true;\n          }\n          else if (attr.name == NG_PROJECT_AS) {\n              if (attr.value.length > 0) {\n                  projectAs = attr.value;\n              }\n          }\n      });\n      selectAttr = normalizeNgContentSelect(selectAttr);\n      var nodeName = ast.name.toLowerCase();\n      var type = PreparsedElementType.OTHER;\n      if (splitNsName(nodeName)[1] == NG_CONTENT_ELEMENT) {\n          type = PreparsedElementType.NG_CONTENT;\n      }\n      else if (nodeName == STYLE_ELEMENT) {\n          type = PreparsedElementType.STYLE;\n      }\n      else if (nodeName == SCRIPT_ELEMENT) {\n          type = PreparsedElementType.SCRIPT;\n      }\n      else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n          type = PreparsedElementType.STYLESHEET;\n      }\n      return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n  }\n  var PreparsedElementType;\n  (function (PreparsedElementType) {\n      PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n      PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n      PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n      PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n      PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n  })(PreparsedElementType || (PreparsedElementType = {}));\n  var PreparsedElement = (function () {\n      function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n          this.type = type;\n          this.selectAttr = selectAttr;\n          this.hrefAttr = hrefAttr;\n          this.nonBindable = nonBindable;\n          this.projectAs = projectAs;\n      }\n      return PreparsedElement;\n  }());\n  function normalizeNgContentSelect(selectAttr) {\n      if (selectAttr === null || selectAttr.length === 0) {\n          return '*';\n      }\n      return selectAttr;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  // Group 1 = \"bind-\"\n  // Group 2 = \"let-\"\n  // Group 3 = \"ref-/#\"\n  // Group 4 = \"on-\"\n  // Group 5 = \"bindon-\"\n  // Group 6 = \"@\"\n  // Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n  // Group 8 = identifier inside [()]\n  // Group 9 = identifier inside []\n  // Group 10 = identifier inside ()\n  var BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n  var KW_BIND_IDX = 1;\n  var KW_LET_IDX = 2;\n  var KW_REF_IDX = 3;\n  var KW_ON_IDX = 4;\n  var KW_BINDON_IDX = 5;\n  var KW_AT_IDX = 6;\n  var IDENT_KW_IDX = 7;\n  var IDENT_BANANA_BOX_IDX = 8;\n  var IDENT_PROPERTY_IDX = 9;\n  var IDENT_EVENT_IDX = 10;\n  var TEMPLATE_ELEMENT = 'template';\n  var TEMPLATE_ATTR = 'template';\n  var TEMPLATE_ATTR_PREFIX = '*';\n  var CLASS_ATTR = 'class';\n  var TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n  /**\n   * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n   * parsed templates before compilation is invoked, allowing custom expression syntax\n   * and other advanced transformations.\n   *\n   * This is currently an internal-only feature and not meant for general use.\n   */\n  var TEMPLATE_TRANSFORMS = new _angular_core.OpaqueToken('TemplateTransforms');\n  var TemplateParseError = (function (_super) {\n      __extends(TemplateParseError, _super);\n      function TemplateParseError(message, span, level) {\n          _super.call(this, span, message, level);\n      }\n      return TemplateParseError;\n  }(ParseError));\n  var TemplateParseResult = (function () {\n      function TemplateParseResult(templateAst, errors) {\n          this.templateAst = templateAst;\n          this.errors = errors;\n      }\n      return TemplateParseResult;\n  }());\n  var TemplateParser = (function () {\n      function TemplateParser(_exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n          this._exprParser = _exprParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._htmlParser = _htmlParser;\n          this._console = _console;\n          this.transforms = transforms;\n      }\n      TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n          var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n          var warnings = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n          var errors = result.errors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n          if (warnings.length > 0) {\n              this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n          }\n          if (errors.length > 0) {\n              var errorString = errors.join('\\n');\n              throw new Error(\"Template parse errors:\\n\" + errorString);\n          }\n          return result.templateAst;\n      };\n      TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n          return this.tryParseHtml(this.expandHtml(this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, template, directives, pipes, schemas, templateUrl);\n      };\n      TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, template, directives, pipes, schemas, templateUrl) {\n          var result;\n          var errors = htmlAstWithErrors.errors;\n          if (htmlAstWithErrors.rootNodes.length > 0) {\n              var uniqDirectives = removeSummaryDuplicates(directives);\n              var uniqPipes = removeSummaryDuplicates(pipes);\n              var providerViewContext = new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n              var interpolationConfig = void 0;\n              if (component.template && component.template.interpolation) {\n                  interpolationConfig = {\n                      start: component.template.interpolation[0],\n                      end: component.template.interpolation[1]\n                  };\n              }\n              var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n              var parseVisitor = new TemplateParseVisitor(providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n              result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n              errors.push.apply(errors, providerViewContext.errors);\n          }\n          else {\n              result = [];\n          }\n          this._assertNoReferenceDuplicationOnTemplate(result, errors);\n          if (errors.length > 0) {\n              return new TemplateParseResult(result, errors);\n          }\n          if (isPresent(this.transforms)) {\n              this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n          }\n          return new TemplateParseResult(result, errors);\n      };\n      TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n          if (forced === void 0) { forced = false; }\n          var errors = htmlAstWithErrors.errors;\n          if (errors.length == 0 || forced) {\n              // Transform ICU messages to angular directives\n              var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n              errors.push.apply(errors, expandedHtmlAst.errors);\n              htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n          }\n          return htmlAstWithErrors;\n      };\n      TemplateParser.prototype.getInterpolationConfig = function (component) {\n          if (component.template) {\n              return InterpolationConfig.fromArray(component.template.interpolation);\n          }\n      };\n      /** @internal */\n      TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n          var existingReferences = [];\n          result.filter(function (element) { return !!element.references; })\n              .forEach(function (element) { return element.references.forEach(function (reference) {\n              var name = reference.name;\n              if (existingReferences.indexOf(name) < 0) {\n                  existingReferences.push(name);\n              }\n              else {\n                  var error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, exports.ParseErrorLevel.FATAL);\n                  errors.push(error);\n              }\n          }); });\n      };\n      TemplateParser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      TemplateParser.ctorParameters = [\n          { type: Parser, },\n          { type: ElementSchemaRegistry, },\n          { type: I18NHtmlParser, },\n          { type: Console, },\n          { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n      ];\n      return TemplateParser;\n  }());\n  var TemplateParseVisitor = (function () {\n      function TemplateParseVisitor(providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n          var _this = this;\n          this.providerViewContext = providerViewContext;\n          this._bindingParser = _bindingParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._schemas = _schemas;\n          this._targetErrors = _targetErrors;\n          this.selectorMatcher = new SelectorMatcher();\n          this.directivesIndex = new Map();\n          this.ngContentCount = 0;\n          directives.forEach(function (directive, index) {\n              var selector = CssSelector.parse(directive.selector);\n              _this.selectorMatcher.addSelectables(selector, directive);\n              _this.directivesIndex.set(directive, index);\n          });\n      }\n      TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n      TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n      TemplateParseVisitor.prototype.visitText = function (text, parent) {\n          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n          var expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n          if (isPresent(expr)) {\n              return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n          }\n          else {\n              return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n          }\n      };\n      TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n      };\n      TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n      TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n          var _this = this;\n          var nodeName = element.name;\n          var preparsedElement = preparseElement(element);\n          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n              preparsedElement.type === PreparsedElementType.STYLE) {\n              // Skipping <script> for security reasons\n              // Skipping <style> as we already processed them\n              // in the StyleCompiler\n              return null;\n          }\n          if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n              isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n              // Skipping stylesheets with either relative urls or package scheme as we already processed\n              // them in the StyleCompiler\n              return null;\n          }\n          var matchableAttrs = [];\n          var elementOrDirectiveProps = [];\n          var elementOrDirectiveRefs = [];\n          var elementVars = [];\n          var events = [];\n          var templateElementOrDirectiveProps = [];\n          var templateMatchableAttrs = [];\n          var templateElementVars = [];\n          var hasInlineTemplates = false;\n          var attrs = [];\n          var lcElName = splitNsName(nodeName.toLowerCase())[1];\n          var isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n          element.attrs.forEach(function (attr) {\n              var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n              var templateBindingsSource = undefined;\n              var prefixToken = undefined;\n              if (_this._normalizeAttributeName(attr.name) == TEMPLATE_ATTR) {\n                  templateBindingsSource = attr.value;\n              }\n              else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                  templateBindingsSource = attr.value;\n                  prefixToken = attr.name.substring(TEMPLATE_ATTR_PREFIX.length); // remove the star\n              }\n              var hasTemplateBinding = isPresent(templateBindingsSource);\n              if (hasTemplateBinding) {\n                  if (hasInlineTemplates) {\n                      _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                  }\n                  hasInlineTemplates = true;\n                  _this._bindingParser.parseInlineTemplateBinding(attr.name, prefixToken, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n              }\n              if (!hasBinding && !hasTemplateBinding) {\n                  // don't include the bindings as attributes as well in the AST\n                  attrs.push(_this.visitAttribute(attr, null));\n                  matchableAttrs.push([attr.name, attr.value]);\n              }\n          });\n          var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n          var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n          var references = [];\n          var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references);\n          var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);\n          var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n          var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, element.sourceSpan);\n          var children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n          providerContext.afterElement();\n          // Override the actual selector when the `ngProjectAs` attribute is provided\n          var projectionSelector = isPresent(preparsedElement.projectAs) ?\n              CssSelector.parse(preparsedElement.projectAs)[0] :\n              elementCssSelector;\n          var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n          var parsedElement;\n          if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n              if (element.children && !element.children.every(_isEmptyTextNode)) {\n                  this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n              }\n              parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n          }\n          else if (isTemplateElement) {\n              this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n              this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n              parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n          }\n          else {\n              this._assertElementExists(matchElement, element);\n              this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n              var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n              parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan);\n              this._findComponentDirectives(directiveAsts)\n                  .forEach(function (componentDirectiveAst) { return _this._validateElementAnimationInputOutputs(componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents, componentDirectiveAst.directive.template); });\n              var componentTemplate = providerContext.viewContext.component.template;\n              this._validateElementAnimationInputOutputs(elementProps, events, componentTemplate.toSummary());\n          }\n          if (hasInlineTemplates) {\n              var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n              var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateCssSelector).directives;\n              var templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], element.sourceSpan, []);\n              var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n              this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n              var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], element.sourceSpan);\n              templateProviderContext.afterElement();\n              parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, [parsedElement], ngContentIndex, element.sourceSpan);\n          }\n          return parsedElement;\n      };\n      TemplateParseVisitor.prototype._validateElementAnimationInputOutputs = function (inputs, outputs, template) {\n          var _this = this;\n          var triggerLookup = new Set();\n          template.animations.forEach(function (entry) { triggerLookup.add(entry); });\n          var animationInputs = inputs.filter(function (input) { return input.isAnimation; });\n          animationInputs.forEach(function (input) {\n              var name = input.name;\n              if (!triggerLookup.has(name)) {\n                  _this._reportError(\"Couldn't find an animation entry for \\\"\" + name + \"\\\"\", input.sourceSpan);\n              }\n          });\n          outputs.forEach(function (output) {\n              if (output.isAnimation) {\n                  var found = animationInputs.find(function (input) { return input.name == output.name; });\n                  if (!found) {\n                      _this._reportError(\"Unable to listen on (@\" + output.name + \".\" + output.phase + \") because the animation trigger [@\" + output.name + \"] isn't being used on the same element\", output.sourceSpan);\n                  }\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n          var name = this._normalizeAttributeName(attr.name);\n          var value = attr.value;\n          var srcSpan = attr.sourceSpan;\n          var bindParts = name.match(BIND_NAME_REGEXP);\n          var hasBinding = false;\n          if (bindParts !== null) {\n              hasBinding = true;\n              if (isPresent(bindParts[KW_BIND_IDX])) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[KW_LET_IDX]) {\n                  if (isTemplateElement) {\n                      var identifier = bindParts[IDENT_KW_IDX];\n                      this._parseVariable(identifier, value, srcSpan, targetVars);\n                  }\n                  else {\n                      this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                  }\n              }\n              else if (bindParts[KW_REF_IDX]) {\n                  var identifier = bindParts[IDENT_KW_IDX];\n                  this._parseReference(identifier, value, srcSpan, targetRefs);\n              }\n              else if (bindParts[KW_ON_IDX]) {\n                  this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[KW_BINDON_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                  this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[KW_AT_IDX]) {\n                  this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                  this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n              else if (bindParts[IDENT_PROPERTY_IDX]) {\n                  this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n              }\n              else if (bindParts[IDENT_EVENT_IDX]) {\n                  this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n              }\n          }\n          else {\n              hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n          }\n          if (!hasBinding) {\n              this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n          }\n          return hasBinding;\n      };\n      TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n          return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n      };\n      TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n          if (identifier.indexOf('-') > -1) {\n              this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n          }\n          targetVars.push(new VariableAst(identifier, value, sourceSpan));\n      };\n      TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n          if (identifier.indexOf('-') > -1) {\n              this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n          }\n          targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n      };\n      TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n          this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n      };\n      TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n          var _this = this;\n          // Need to sort the directives so that we get consistent results throughout,\n          // as selectorMatcher uses Maps inside.\n          // Also deduplicate directives as they might match more than one time!\n          var directives = new Array(this.directivesIndex.size);\n          // Whether any directive selector matches on the element name\n          var matchElement = false;\n          selectorMatcher.match(elementCssSelector, function (selector, directive) {\n              directives[_this.directivesIndex.get(directive)] = directive;\n              matchElement = matchElement || selector.hasElementSelector();\n          });\n          return {\n              directives: directives.filter(function (dir) { return !!dir; }),\n              matchElement: matchElement,\n          };\n      };\n      TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences) {\n          var _this = this;\n          var matchedReferences = new Set();\n          var component = null;\n          var directiveAsts = directives.map(function (directive) {\n              var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + directive.type.name);\n              if (directive.isComponent) {\n                  component = directive;\n              }\n              var directiveProperties = [];\n              var hostProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, sourceSpan);\n              // Note: We need to check the host properties here as well,\n              // as we don't know the element name in the DirectiveWrapperCompiler yet.\n              _this._checkPropertiesInSchema(elementName, hostProperties);\n              var hostEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n              _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n              elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                  if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                      (directive.exportAs == elOrDirRef.value)) {\n                      targetReferences.push(new ReferenceAst(elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n                      matchedReferences.add(elOrDirRef.name);\n                  }\n              });\n              return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, sourceSpan);\n          });\n          elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n              if (elOrDirRef.value.length > 0) {\n                  if (!matchedReferences.has(elOrDirRef.name)) {\n                      _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                  }\n              }\n              else if (!component) {\n                  var refToken = null;\n                  if (isTemplateElement) {\n                      refToken = resolveIdentifierToken(Identifiers.TemplateRef);\n                  }\n                  targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n              }\n          }); // fix syntax highlighting issue: `\n          return directiveAsts;\n      };\n      TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps) {\n          if (directiveProperties) {\n              var boundPropsByName_1 = new Map();\n              boundProps.forEach(function (boundProp) {\n                  var prevValue = boundPropsByName_1.get(boundProp.name);\n                  if (!prevValue || prevValue.isLiteral) {\n                      // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                      boundPropsByName_1.set(boundProp.name, boundProp);\n                  }\n              });\n              Object.keys(directiveProperties).forEach(function (dirProp) {\n                  var elProp = directiveProperties[dirProp];\n                  var boundProp = boundPropsByName_1.get(elProp);\n                  // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                  if (boundProp) {\n                      targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                  }\n              });\n          }\n      };\n      TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, directives) {\n          var _this = this;\n          var boundElementProps = [];\n          var boundDirectivePropsIndex = new Map();\n          directives.forEach(function (directive) {\n              directive.inputs.forEach(function (prop) {\n                  boundDirectivePropsIndex.set(prop.templateName, prop);\n              });\n          });\n          props.forEach(function (prop) {\n              if (!prop.isLiteral && !boundDirectivePropsIndex.get(prop.name)) {\n                  boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n              }\n          });\n          this._checkPropertiesInSchema(elementName, boundElementProps);\n          return boundElementProps;\n      };\n      TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n          return directives.filter(function (directive) { return directive.directive.isComponent; });\n      };\n      TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n          return this._findComponentDirectives(directives)\n              .map(function (directive) { return directive.directive.type.name; });\n      };\n      TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n          var componentTypeNames = this._findComponentDirectiveNames(directives);\n          if (componentTypeNames.length > 1) {\n              this._reportError(\"More than one component matched on this element.\\n\" +\n                  \"Make sure that only one component's selector can match a given element.\\n\" +\n                  (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n          }\n      };\n      /**\n       * Make sure that non-angular tags conform to the schemas.\n       *\n       * Note: An element is considered an angular tag when at least one directive selector matches the\n       * tag name.\n       *\n       * @param matchElement Whether any directive has matched on the tag name\n       * @param element the html element\n       */\n      TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n          var elName = element.name.replace(/^:xhtml:/, '');\n          if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n              var errorMsg = (\"'\" + elName + \"' is not a known element:\\n\") +\n                  (\"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\") +\n                  (\"2. If '\" + elName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\");\n              this._reportError(errorMsg, element.sourceSpan);\n          }\n      };\n      TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n          var _this = this;\n          var componentTypeNames = this._findComponentDirectiveNames(directives);\n          if (componentTypeNames.length > 0) {\n              this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n          }\n          elementProps.forEach(function (prop) {\n              _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", sourceSpan);\n          });\n      };\n      TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n          var _this = this;\n          var allDirectiveEvents = new Set();\n          directives.forEach(function (directive) {\n              Object.keys(directive.directive.outputs).forEach(function (k) {\n                  var eventName = directive.directive.outputs[k];\n                  allDirectiveEvents.add(eventName);\n              });\n          });\n          events.forEach(function (event) {\n              if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n                  _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"directives\\\" section.\", event.sourceSpan);\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n          var _this = this;\n          boundProps.forEach(function (boundProp) {\n              if (boundProp.type === exports.PropertyBindingType.Property &&\n                  !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                  var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                  if (elementName.indexOf('-') > -1) {\n                      errorMsg +=\n                          (\"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\") +\n                              (\"\\n2. If '\" + elementName + \"' is a Web Component then add \\\"CUSTOM_ELEMENTS_SCHEMA\\\" to the '@NgModule.schemas' of this component to suppress this message.\\n\");\n                  }\n                  _this._reportError(errorMsg, boundProp.sourceSpan);\n              }\n          });\n      };\n      TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n          if (level === void 0) { level = exports.ParseErrorLevel.FATAL; }\n          this._targetErrors.push(new ParseError(sourceSpan, message, level));\n      };\n      return TemplateParseVisitor;\n  }());\n  var NonBindableVisitor = (function () {\n      function NonBindableVisitor() {\n      }\n      NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n          var preparsedElement = preparseElement(ast);\n          if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n              preparsedElement.type === PreparsedElementType.STYLE ||\n              preparsedElement.type === PreparsedElementType.STYLESHEET) {\n              // Skipping <script> for security reasons\n              // Skipping <style> and stylesheets as we already processed them\n              // in the StyleCompiler\n              return null;\n          }\n          var attrNameAndValues = ast.attrs.map(function (attrAst) { return [attrAst.name, attrAst.value]; });\n          var selector = createElementCssSelector(ast.name, attrNameAndValues);\n          var ngContentIndex = parent.findNgContentIndex(selector);\n          var children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n          return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n      };\n      NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n      NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n          return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n      };\n      NonBindableVisitor.prototype.visitText = function (text, parent) {\n          var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n          return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n      };\n      NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n      NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n      return NonBindableVisitor;\n  }());\n  var ElementOrDirectiveRef = (function () {\n      function ElementOrDirectiveRef(name, value, sourceSpan) {\n          this.name = name;\n          this.value = value;\n          this.sourceSpan = sourceSpan;\n      }\n      return ElementOrDirectiveRef;\n  }());\n  function splitClasses(classAttrValue) {\n      return classAttrValue.trim().split(/\\s+/g);\n  }\n  var ElementContext = (function () {\n      function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n          this.isTemplateElement = isTemplateElement;\n          this._ngContentIndexMatcher = _ngContentIndexMatcher;\n          this._wildcardNgContentIndex = _wildcardNgContentIndex;\n          this.providerContext = providerContext;\n      }\n      ElementContext.create = function (isTemplateElement, directives, providerContext) {\n          var matcher = new SelectorMatcher();\n          var wildcardNgContentIndex = null;\n          var component = directives.find(function (directive) { return directive.directive.isComponent; });\n          if (component) {\n              var ngContentSelectors = component.directive.template.ngContentSelectors;\n              for (var i = 0; i < ngContentSelectors.length; i++) {\n                  var selector = ngContentSelectors[i];\n                  if (selector === '*') {\n                      wildcardNgContentIndex = i;\n                  }\n                  else {\n                      matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                  }\n              }\n          }\n          return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n      };\n      ElementContext.prototype.findNgContentIndex = function (selector) {\n          var ngContentIndices = [];\n          this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n          ngContentIndices.sort();\n          if (isPresent(this._wildcardNgContentIndex)) {\n              ngContentIndices.push(this._wildcardNgContentIndex);\n          }\n          return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n      };\n      return ElementContext;\n  }());\n  function createElementCssSelector(elementName, matchableAttrs) {\n      var cssSelector = new CssSelector();\n      var elNameNoNs = splitNsName(elementName)[1];\n      cssSelector.setElement(elNameNoNs);\n      for (var i = 0; i < matchableAttrs.length; i++) {\n          var attrName = matchableAttrs[i][0];\n          var attrNameNoNs = splitNsName(attrName)[1];\n          var attrValue = matchableAttrs[i][1];\n          cssSelector.addAttribute(attrNameNoNs, attrValue);\n          if (attrName.toLowerCase() == CLASS_ATTR) {\n              var classes = splitClasses(attrValue);\n              classes.forEach(function (className) { return cssSelector.addClassName(className); });\n          }\n      }\n      return cssSelector;\n  }\n  var EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\n  var NON_BINDABLE_VISITOR = new NonBindableVisitor();\n  function _isEmptyTextNode(node) {\n      return node instanceof Text && node.value.trim().length == 0;\n  }\n  function removeSummaryDuplicates(items) {\n      var map = new Map();\n      items.forEach(function (item) {\n          if (!map.get(item.type.reference)) {\n              map.set(item.type.reference, item);\n          }\n      });\n      return Array.from(map.values());\n  }\n\n  function unimplemented$1() {\n      throw new Error('unimplemented');\n  }\n  var CompilerConfig = (function () {\n      function CompilerConfig(_a) {\n          var _b = _a === void 0 ? {} : _a, _c = _b.renderTypes, renderTypes = _c === void 0 ? new DefaultRenderTypes() : _c, _d = _b.defaultEncapsulation, defaultEncapsulation = _d === void 0 ? _angular_core.ViewEncapsulation.Emulated : _d, genDebugInfo = _b.genDebugInfo, logBindingUpdate = _b.logBindingUpdate, _e = _b.useJit, useJit = _e === void 0 ? true : _e;\n          this.renderTypes = renderTypes;\n          this.defaultEncapsulation = defaultEncapsulation;\n          this._genDebugInfo = genDebugInfo;\n          this._logBindingUpdate = logBindingUpdate;\n          this.useJit = useJit;\n      }\n      Object.defineProperty(CompilerConfig.prototype, \"genDebugInfo\", {\n          get: function () {\n              return this._genDebugInfo === void 0 ? _angular_core.isDevMode() : this._genDebugInfo;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(CompilerConfig.prototype, \"logBindingUpdate\", {\n          get: function () {\n              return this._logBindingUpdate === void 0 ? _angular_core.isDevMode() : this._logBindingUpdate;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      return CompilerConfig;\n  }());\n  /**\n   * Types used for the renderer.\n   * Can be replaced to specialize the generated output to a specific renderer\n   * to help tree shaking.\n   */\n  var RenderTypes = (function () {\n      function RenderTypes() {\n      }\n      Object.defineProperty(RenderTypes.prototype, \"renderer\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderText\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderElement\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderComment\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderNode\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(RenderTypes.prototype, \"renderEvent\", {\n          get: function () { return unimplemented$1(); },\n          enumerable: true,\n          configurable: true\n      });\n      return RenderTypes;\n  }());\n  var DefaultRenderTypes = (function () {\n      function DefaultRenderTypes() {\n          this.renderText = null;\n          this.renderElement = null;\n          this.renderComment = null;\n          this.renderNode = null;\n          this.renderEvent = null;\n      }\n      Object.defineProperty(DefaultRenderTypes.prototype, \"renderer\", {\n          get: function () { return resolveIdentifier(Identifiers.Renderer); },\n          enumerable: true,\n          configurable: true\n      });\n      ;\n      return DefaultRenderTypes;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$12 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  //// Types\n  var TypeModifier;\n  (function (TypeModifier) {\n      TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n  })(TypeModifier || (TypeModifier = {}));\n  var Type$1 = (function () {\n      function Type(modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return Type;\n  }());\n  var BuiltinTypeName;\n  (function (BuiltinTypeName) {\n      BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n      BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n      BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n      BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n      BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n      BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n      BuiltinTypeName[BuiltinTypeName[\"Null\"] = 6] = \"Null\";\n  })(BuiltinTypeName || (BuiltinTypeName = {}));\n  var BuiltinType = (function (_super) {\n      __extends$12(BuiltinType, _super);\n      function BuiltinType(name, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n      }\n      BuiltinType.prototype.visitType = function (visitor, context) {\n          return visitor.visitBuiltintType(this, context);\n      };\n      return BuiltinType;\n  }(Type$1));\n  var ExternalType = (function (_super) {\n      __extends$12(ExternalType, _super);\n      function ExternalType(value, typeParams, modifiers) {\n          if (typeParams === void 0) { typeParams = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.value = value;\n          this.typeParams = typeParams;\n      }\n      ExternalType.prototype.visitType = function (visitor, context) {\n          return visitor.visitExternalType(this, context);\n      };\n      return ExternalType;\n  }(Type$1));\n  var ArrayType = (function (_super) {\n      __extends$12(ArrayType, _super);\n      function ArrayType(of, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.of = of;\n      }\n      ArrayType.prototype.visitType = function (visitor, context) {\n          return visitor.visitArrayType(this, context);\n      };\n      return ArrayType;\n  }(Type$1));\n  var MapType = (function (_super) {\n      __extends$12(MapType, _super);\n      function MapType(valueType, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.valueType = valueType;\n      }\n      MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n      return MapType;\n  }(Type$1));\n  var DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\n  var BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\n  var INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\n  var NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\n  var STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\n  var FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n  var NULL_TYPE = new BuiltinType(BuiltinTypeName.Null);\n  ///// Expressions\n  var BinaryOperator;\n  (function (BinaryOperator) {\n      BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n      BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n      BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n      BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n      BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n      BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n      BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n      BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n      BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n      BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n      BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n      BinaryOperator[BinaryOperator[\"Lower\"] = 11] = \"Lower\";\n      BinaryOperator[BinaryOperator[\"LowerEquals\"] = 12] = \"LowerEquals\";\n      BinaryOperator[BinaryOperator[\"Bigger\"] = 13] = \"Bigger\";\n      BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 14] = \"BiggerEquals\";\n  })(BinaryOperator || (BinaryOperator = {}));\n  var Expression = (function () {\n      function Expression(type) {\n          this.type = type;\n      }\n      Expression.prototype.prop = function (name) { return new ReadPropExpr(this, name); };\n      Expression.prototype.key = function (index, type) {\n          if (type === void 0) { type = null; }\n          return new ReadKeyExpr(this, index, type);\n      };\n      Expression.prototype.callMethod = function (name, params) {\n          return new InvokeMethodExpr(this, name, params);\n      };\n      Expression.prototype.callFn = function (params) { return new InvokeFunctionExpr(this, params); };\n      Expression.prototype.instantiate = function (params, type) {\n          if (type === void 0) { type = null; }\n          return new InstantiateExpr(this, params, type);\n      };\n      Expression.prototype.conditional = function (trueCase, falseCase) {\n          if (falseCase === void 0) { falseCase = null; }\n          return new ConditionalExpr(this, trueCase, falseCase);\n      };\n      Expression.prototype.equals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs);\n      };\n      Expression.prototype.notEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs);\n      };\n      Expression.prototype.identical = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs);\n      };\n      Expression.prototype.notIdentical = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs);\n      };\n      Expression.prototype.minus = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs);\n      };\n      Expression.prototype.plus = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs);\n      };\n      Expression.prototype.divide = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs);\n      };\n      Expression.prototype.multiply = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs);\n      };\n      Expression.prototype.modulo = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs);\n      };\n      Expression.prototype.and = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.And, this, rhs);\n      };\n      Expression.prototype.or = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs);\n      };\n      Expression.prototype.lower = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs);\n      };\n      Expression.prototype.lowerEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs);\n      };\n      Expression.prototype.bigger = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs);\n      };\n      Expression.prototype.biggerEquals = function (rhs) {\n          return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs);\n      };\n      Expression.prototype.isBlank = function () {\n          // Note: We use equals by purpose here to compare to null and undefined in JS.\n          // We use the typed null to allow strictNullChecks to narrow types.\n          return this.equals(TYPED_NULL_EXPR);\n      };\n      Expression.prototype.cast = function (type) { return new CastExpr(this, type); };\n      Expression.prototype.toStmt = function () { return new ExpressionStatement(this); };\n      return Expression;\n  }());\n  var BuiltinVar;\n  (function (BuiltinVar) {\n      BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n      BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n      BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n      BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n  })(BuiltinVar || (BuiltinVar = {}));\n  var ReadVarExpr = (function (_super) {\n      __extends$12(ReadVarExpr, _super);\n      function ReadVarExpr(name, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          if (typeof name === 'string') {\n              this.name = name;\n              this.builtin = null;\n          }\n          else {\n              this.name = null;\n              this.builtin = name;\n          }\n      }\n      ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadVarExpr(this, context);\n      };\n      ReadVarExpr.prototype.set = function (value) { return new WriteVarExpr(this.name, value); };\n      return ReadVarExpr;\n  }(Expression));\n  var WriteVarExpr = (function (_super) {\n      __extends$12(WriteVarExpr, _super);\n      function WriteVarExpr(name, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.name = name;\n          this.value = value;\n      }\n      WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWriteVarExpr(this, context);\n      };\n      WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          return new DeclareVarStmt(this.name, this.value, type, modifiers);\n      };\n      return WriteVarExpr;\n  }(Expression));\n  var WriteKeyExpr = (function (_super) {\n      __extends$12(WriteKeyExpr, _super);\n      function WriteKeyExpr(receiver, index, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.receiver = receiver;\n          this.index = index;\n          this.value = value;\n      }\n      WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWriteKeyExpr(this, context);\n      };\n      return WriteKeyExpr;\n  }(Expression));\n  var WritePropExpr = (function (_super) {\n      __extends$12(WritePropExpr, _super);\n      function WritePropExpr(receiver, name, value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || value.type);\n          this.receiver = receiver;\n          this.name = name;\n          this.value = value;\n      }\n      WritePropExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitWritePropExpr(this, context);\n      };\n      return WritePropExpr;\n  }(Expression));\n  var BuiltinMethod;\n  (function (BuiltinMethod) {\n      BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n      BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n      BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n  })(BuiltinMethod || (BuiltinMethod = {}));\n  var InvokeMethodExpr = (function (_super) {\n      __extends$12(InvokeMethodExpr, _super);\n      function InvokeMethodExpr(receiver, method, args, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.args = args;\n          if (typeof method === 'string') {\n              this.name = method;\n              this.builtin = null;\n          }\n          else {\n              this.name = null;\n              this.builtin = method;\n          }\n      }\n      InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInvokeMethodExpr(this, context);\n      };\n      return InvokeMethodExpr;\n  }(Expression));\n  var InvokeFunctionExpr = (function (_super) {\n      __extends$12(InvokeFunctionExpr, _super);\n      function InvokeFunctionExpr(fn, args, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.fn = fn;\n          this.args = args;\n      }\n      InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInvokeFunctionExpr(this, context);\n      };\n      return InvokeFunctionExpr;\n  }(Expression));\n  var InstantiateExpr = (function (_super) {\n      __extends$12(InstantiateExpr, _super);\n      function InstantiateExpr(classExpr, args, type) {\n          _super.call(this, type);\n          this.classExpr = classExpr;\n          this.args = args;\n      }\n      InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitInstantiateExpr(this, context);\n      };\n      return InstantiateExpr;\n  }(Expression));\n  var LiteralExpr = (function (_super) {\n      __extends$12(LiteralExpr, _super);\n      function LiteralExpr(value, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.value = value;\n      }\n      LiteralExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralExpr(this, context);\n      };\n      return LiteralExpr;\n  }(Expression));\n  var ExternalExpr = (function (_super) {\n      __extends$12(ExternalExpr, _super);\n      function ExternalExpr(value, type, typeParams) {\n          if (type === void 0) { type = null; }\n          if (typeParams === void 0) { typeParams = null; }\n          _super.call(this, type);\n          this.value = value;\n          this.typeParams = typeParams;\n      }\n      ExternalExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitExternalExpr(this, context);\n      };\n      return ExternalExpr;\n  }(Expression));\n  var ConditionalExpr = (function (_super) {\n      __extends$12(ConditionalExpr, _super);\n      function ConditionalExpr(condition, trueCase, falseCase, type) {\n          if (falseCase === void 0) { falseCase = null; }\n          if (type === void 0) { type = null; }\n          _super.call(this, type || trueCase.type);\n          this.condition = condition;\n          this.falseCase = falseCase;\n          this.trueCase = trueCase;\n      }\n      ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitConditionalExpr(this, context);\n      };\n      return ConditionalExpr;\n  }(Expression));\n  var NotExpr = (function (_super) {\n      __extends$12(NotExpr, _super);\n      function NotExpr(condition) {\n          _super.call(this, BOOL_TYPE);\n          this.condition = condition;\n      }\n      NotExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitNotExpr(this, context);\n      };\n      return NotExpr;\n  }(Expression));\n  var CastExpr = (function (_super) {\n      __extends$12(CastExpr, _super);\n      function CastExpr(value, type) {\n          _super.call(this, type);\n          this.value = value;\n      }\n      CastExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitCastExpr(this, context);\n      };\n      return CastExpr;\n  }(Expression));\n  var FnParam = (function () {\n      function FnParam(name, type) {\n          if (type === void 0) { type = null; }\n          this.name = name;\n          this.type = type;\n      }\n      return FnParam;\n  }());\n  var FunctionExpr = (function (_super) {\n      __extends$12(FunctionExpr, _super);\n      function FunctionExpr(params, statements, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.params = params;\n          this.statements = statements;\n      }\n      FunctionExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitFunctionExpr(this, context);\n      };\n      FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers);\n      };\n      return FunctionExpr;\n  }(Expression));\n  var BinaryOperatorExpr = (function (_super) {\n      __extends$12(BinaryOperatorExpr, _super);\n      function BinaryOperatorExpr(operator, lhs, rhs, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type || lhs.type);\n          this.operator = operator;\n          this.rhs = rhs;\n          this.lhs = lhs;\n      }\n      BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitBinaryOperatorExpr(this, context);\n      };\n      return BinaryOperatorExpr;\n  }(Expression));\n  var ReadPropExpr = (function (_super) {\n      __extends$12(ReadPropExpr, _super);\n      function ReadPropExpr(receiver, name, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.name = name;\n      }\n      ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadPropExpr(this, context);\n      };\n      ReadPropExpr.prototype.set = function (value) {\n          return new WritePropExpr(this.receiver, this.name, value);\n      };\n      return ReadPropExpr;\n  }(Expression));\n  var ReadKeyExpr = (function (_super) {\n      __extends$12(ReadKeyExpr, _super);\n      function ReadKeyExpr(receiver, index, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.receiver = receiver;\n          this.index = index;\n      }\n      ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitReadKeyExpr(this, context);\n      };\n      ReadKeyExpr.prototype.set = function (value) {\n          return new WriteKeyExpr(this.receiver, this.index, value);\n      };\n      return ReadKeyExpr;\n  }(Expression));\n  var LiteralArrayExpr = (function (_super) {\n      __extends$12(LiteralArrayExpr, _super);\n      function LiteralArrayExpr(entries, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.entries = entries;\n      }\n      LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralArrayExpr(this, context);\n      };\n      return LiteralArrayExpr;\n  }(Expression));\n  var LiteralMapExpr = (function (_super) {\n      __extends$12(LiteralMapExpr, _super);\n      function LiteralMapExpr(entries, type) {\n          if (type === void 0) { type = null; }\n          _super.call(this, type);\n          this.entries = entries;\n          this.valueType = null;\n          if (isPresent(type)) {\n              this.valueType = type.valueType;\n          }\n      }\n      LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n          return visitor.visitLiteralMapExpr(this, context);\n      };\n      return LiteralMapExpr;\n  }(Expression));\n  var THIS_EXPR = new ReadVarExpr(BuiltinVar.This);\n  var SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super);\n  var CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError);\n  var CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack);\n  var NULL_EXPR = new LiteralExpr(null, null);\n  var TYPED_NULL_EXPR = new LiteralExpr(null, NULL_TYPE);\n  //// Statements\n  var StmtModifier;\n  (function (StmtModifier) {\n      StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n      StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n  })(StmtModifier || (StmtModifier = {}));\n  var Statement = (function () {\n      function Statement(modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return Statement;\n  }());\n  var DeclareVarStmt = (function (_super) {\n      __extends$12(DeclareVarStmt, _super);\n      function DeclareVarStmt(name, value, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.value = value;\n          this.type = type || value.type;\n      }\n      DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareVarStmt(this, context);\n      };\n      return DeclareVarStmt;\n  }(Statement));\n  var DeclareFunctionStmt = (function (_super) {\n      __extends$12(DeclareFunctionStmt, _super);\n      function DeclareFunctionStmt(name, params, statements, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.params = params;\n          this.statements = statements;\n          this.type = type;\n      }\n      DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareFunctionStmt(this, context);\n      };\n      return DeclareFunctionStmt;\n  }(Statement));\n  var ExpressionStatement = (function (_super) {\n      __extends$12(ExpressionStatement, _super);\n      function ExpressionStatement(expr) {\n          _super.call(this);\n          this.expr = expr;\n      }\n      ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitExpressionStmt(this, context);\n      };\n      return ExpressionStatement;\n  }(Statement));\n  var ReturnStatement = (function (_super) {\n      __extends$12(ReturnStatement, _super);\n      function ReturnStatement(value) {\n          _super.call(this);\n          this.value = value;\n      }\n      ReturnStatement.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitReturnStmt(this, context);\n      };\n      return ReturnStatement;\n  }(Statement));\n  var AbstractClassPart = (function () {\n      function AbstractClassPart(type, modifiers) {\n          if (type === void 0) { type = null; }\n          this.type = type;\n          this.modifiers = modifiers;\n          if (!modifiers) {\n              this.modifiers = [];\n          }\n      }\n      AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n      return AbstractClassPart;\n  }());\n  var ClassField = (function (_super) {\n      __extends$12(ClassField, _super);\n      function ClassField(name, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n      }\n      return ClassField;\n  }(AbstractClassPart));\n  var ClassMethod = (function (_super) {\n      __extends$12(ClassMethod, _super);\n      function ClassMethod(name, params, body, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n          this.params = params;\n          this.body = body;\n      }\n      return ClassMethod;\n  }(AbstractClassPart));\n  var ClassGetter = (function (_super) {\n      __extends$12(ClassGetter, _super);\n      function ClassGetter(name, body, type, modifiers) {\n          if (type === void 0) { type = null; }\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, type, modifiers);\n          this.name = name;\n          this.body = body;\n      }\n      return ClassGetter;\n  }(AbstractClassPart));\n  var ClassStmt = (function (_super) {\n      __extends$12(ClassStmt, _super);\n      function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers) {\n          if (modifiers === void 0) { modifiers = null; }\n          _super.call(this, modifiers);\n          this.name = name;\n          this.parent = parent;\n          this.fields = fields;\n          this.getters = getters;\n          this.constructorMethod = constructorMethod;\n          this.methods = methods;\n      }\n      ClassStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitDeclareClassStmt(this, context);\n      };\n      return ClassStmt;\n  }(Statement));\n  var IfStmt = (function (_super) {\n      __extends$12(IfStmt, _super);\n      function IfStmt(condition, trueCase, falseCase) {\n          if (falseCase === void 0) { falseCase = []; }\n          _super.call(this);\n          this.condition = condition;\n          this.trueCase = trueCase;\n          this.falseCase = falseCase;\n      }\n      IfStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitIfStmt(this, context);\n      };\n      return IfStmt;\n  }(Statement));\n  var CommentStmt = (function (_super) {\n      __extends$12(CommentStmt, _super);\n      function CommentStmt(comment) {\n          _super.call(this);\n          this.comment = comment;\n      }\n      CommentStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitCommentStmt(this, context);\n      };\n      return CommentStmt;\n  }(Statement));\n  var TryCatchStmt = (function (_super) {\n      __extends$12(TryCatchStmt, _super);\n      function TryCatchStmt(bodyStmts, catchStmts) {\n          _super.call(this);\n          this.bodyStmts = bodyStmts;\n          this.catchStmts = catchStmts;\n      }\n      TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitTryCatchStmt(this, context);\n      };\n      return TryCatchStmt;\n  }(Statement));\n  var ThrowStmt = (function (_super) {\n      __extends$12(ThrowStmt, _super);\n      function ThrowStmt(error) {\n          _super.call(this);\n          this.error = error;\n      }\n      ThrowStmt.prototype.visitStatement = function (visitor, context) {\n          return visitor.visitThrowStmt(this, context);\n      };\n      return ThrowStmt;\n  }(Statement));\n  var ExpressionTransformer = (function () {\n      function ExpressionTransformer() {\n      }\n      ExpressionTransformer.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n          return new WriteVarExpr(expr.name, expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n          return new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitWritePropExpr = function (expr, context) {\n          return new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n          var method = ast.builtin || ast.name;\n          return new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n          return new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n          return new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitExternalExpr = function (ast, context) { return ast; };\n      ExpressionTransformer.prototype.visitConditionalExpr = function (ast, context) {\n          return new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitNotExpr = function (ast, context) {\n          return new NotExpr(ast.condition.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitCastExpr = function (ast, context) {\n          return new CastExpr(ast.value.visitExpression(this, context), context);\n      };\n      ExpressionTransformer.prototype.visitFunctionExpr = function (ast, context) {\n          // Don't descend into nested functions\n          return ast;\n      };\n      ExpressionTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n          return new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitReadPropExpr = function (ast, context) {\n          return new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type);\n      };\n      ExpressionTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n          return new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type);\n      };\n      ExpressionTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n          return new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context));\n      };\n      ExpressionTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n          var _this = this;\n          var entries = ast.entries.map(function (entry) { return [entry[0], entry[1].visitExpression(_this, context),]; });\n          return new LiteralMapExpr(entries);\n      };\n      ExpressionTransformer.prototype.visitAllExpressions = function (exprs, context) {\n          var _this = this;\n          return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n      };\n      ExpressionTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n          return new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers);\n      };\n      ExpressionTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      ExpressionTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n          return new ExpressionStatement(stmt.expr.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitReturnStmt = function (stmt, context) {\n          return new ReturnStatement(stmt.value.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      ExpressionTransformer.prototype.visitIfStmt = function (stmt, context) {\n          return new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context));\n      };\n      ExpressionTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n          return new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context));\n      };\n      ExpressionTransformer.prototype.visitThrowStmt = function (stmt, context) {\n          return new ThrowStmt(stmt.error.visitExpression(this, context));\n      };\n      ExpressionTransformer.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n      ExpressionTransformer.prototype.visitAllStatements = function (stmts, context) {\n          var _this = this;\n          return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n      };\n      return ExpressionTransformer;\n  }());\n  var RecursiveExpressionVisitor = (function () {\n      function RecursiveExpressionVisitor() {\n      }\n      RecursiveExpressionVisitor.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitWriteVarExpr = function (expr, context) {\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitWriteKeyExpr = function (expr, context) {\n          expr.receiver.visitExpression(this, context);\n          expr.index.visitExpression(this, context);\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitWritePropExpr = function (expr, context) {\n          expr.receiver.visitExpression(this, context);\n          expr.value.visitExpression(this, context);\n          return expr;\n      };\n      RecursiveExpressionVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n          ast.fn.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n          ast.classExpr.visitExpression(this, context);\n          this.visitAllExpressions(ast.args, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitExternalExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitConditionalExpr = function (ast, context) {\n          ast.condition.visitExpression(this, context);\n          ast.trueCase.visitExpression(this, context);\n          ast.falseCase.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitNotExpr = function (ast, context) {\n          ast.condition.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitCastExpr = function (ast, context) {\n          ast.value.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitFunctionExpr = function (ast, context) { return ast; };\n      RecursiveExpressionVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n          ast.lhs.visitExpression(this, context);\n          ast.rhs.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitReadPropExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n          ast.receiver.visitExpression(this, context);\n          ast.index.visitExpression(this, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n          this.visitAllExpressions(ast.entries, context);\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n          var _this = this;\n          ast.entries.forEach(function (entry) { return entry[1].visitExpression(_this, context); });\n          return ast;\n      };\n      RecursiveExpressionVisitor.prototype.visitAllExpressions = function (exprs, context) {\n          var _this = this;\n          exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n          stmt.value.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n          stmt.expr.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitReturnStmt = function (stmt, context) {\n          stmt.value.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n          // Don't descend into nested functions\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitIfStmt = function (stmt, context) {\n          stmt.condition.visitExpression(this, context);\n          this.visitAllStatements(stmt.trueCase, context);\n          this.visitAllStatements(stmt.falseCase, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n          this.visitAllStatements(stmt.bodyStmts, context);\n          this.visitAllStatements(stmt.catchStmts, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitThrowStmt = function (stmt, context) {\n          stmt.error.visitExpression(this, context);\n          return stmt;\n      };\n      RecursiveExpressionVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n      RecursiveExpressionVisitor.prototype.visitAllStatements = function (stmts, context) {\n          var _this = this;\n          stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n      };\n      return RecursiveExpressionVisitor;\n  }());\n  function replaceVarInExpression(varName, newValue, expression) {\n      var transformer = new _ReplaceVariableTransformer(varName, newValue);\n      return expression.visitExpression(transformer, null);\n  }\n  var _ReplaceVariableTransformer = (function (_super) {\n      __extends$12(_ReplaceVariableTransformer, _super);\n      function _ReplaceVariableTransformer(_varName, _newValue) {\n          _super.call(this);\n          this._varName = _varName;\n          this._newValue = _newValue;\n      }\n      _ReplaceVariableTransformer.prototype.visitReadVarExpr = function (ast, context) {\n          return ast.name == this._varName ? this._newValue : ast;\n      };\n      return _ReplaceVariableTransformer;\n  }(ExpressionTransformer));\n  function findReadVarNames(stmts) {\n      var finder = new _VariableFinder();\n      finder.visitAllStatements(stmts, null);\n      return finder.varNames;\n  }\n  var _VariableFinder = (function (_super) {\n      __extends$12(_VariableFinder, _super);\n      function _VariableFinder() {\n          _super.apply(this, arguments);\n          this.varNames = new Set();\n      }\n      _VariableFinder.prototype.visitReadVarExpr = function (ast, context) {\n          this.varNames.add(ast.name);\n          return null;\n      };\n      return _VariableFinder;\n  }(RecursiveExpressionVisitor));\n  function variable(name, type) {\n      if (type === void 0) { type = null; }\n      return new ReadVarExpr(name, type);\n  }\n  function importExpr(id, typeParams) {\n      if (typeParams === void 0) { typeParams = null; }\n      return new ExternalExpr(id, null, typeParams);\n  }\n  function importType(id, typeParams, typeModifiers) {\n      if (typeParams === void 0) { typeParams = null; }\n      if (typeModifiers === void 0) { typeModifiers = null; }\n      return isPresent(id) ? new ExternalType(id, typeParams, typeModifiers) : null;\n  }\n  function literalArr(values, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralArrayExpr(values, type);\n  }\n  function literalMap(values, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralMapExpr(values, type);\n  }\n  function not(expr) {\n      return new NotExpr(expr);\n  }\n  function fn(params, body, type) {\n      if (type === void 0) { type = null; }\n      return new FunctionExpr(params, body, type);\n  }\n  function literal(value, type) {\n      if (type === void 0) { type = null; }\n      return new LiteralExpr(value, type);\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$13 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var AnimationAst = (function () {\n      function AnimationAst() {\n          this.startTime = 0;\n          this.playTime = 0;\n      }\n      return AnimationAst;\n  }());\n  var AnimationStateAst = (function (_super) {\n      __extends$13(AnimationStateAst, _super);\n      function AnimationStateAst() {\n          _super.apply(this, arguments);\n      }\n      return AnimationStateAst;\n  }(AnimationAst));\n  var AnimationEntryAst = (function (_super) {\n      __extends$13(AnimationEntryAst, _super);\n      function AnimationEntryAst(name, stateDeclarations, stateTransitions) {\n          _super.call(this);\n          this.name = name;\n          this.stateDeclarations = stateDeclarations;\n          this.stateTransitions = stateTransitions;\n      }\n      AnimationEntryAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationEntry(this, context);\n      };\n      return AnimationEntryAst;\n  }(AnimationAst));\n  var AnimationStateDeclarationAst = (function (_super) {\n      __extends$13(AnimationStateDeclarationAst, _super);\n      function AnimationStateDeclarationAst(stateName, styles) {\n          _super.call(this);\n          this.stateName = stateName;\n          this.styles = styles;\n      }\n      AnimationStateDeclarationAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStateDeclaration(this, context);\n      };\n      return AnimationStateDeclarationAst;\n  }(AnimationStateAst));\n  var AnimationStateTransitionExpression = (function () {\n      function AnimationStateTransitionExpression(fromState, toState) {\n          this.fromState = fromState;\n          this.toState = toState;\n      }\n      return AnimationStateTransitionExpression;\n  }());\n  var AnimationStateTransitionAst = (function (_super) {\n      __extends$13(AnimationStateTransitionAst, _super);\n      function AnimationStateTransitionAst(stateChanges, animation) {\n          _super.call(this);\n          this.stateChanges = stateChanges;\n          this.animation = animation;\n      }\n      AnimationStateTransitionAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStateTransition(this, context);\n      };\n      return AnimationStateTransitionAst;\n  }(AnimationStateAst));\n  var AnimationStepAst = (function (_super) {\n      __extends$13(AnimationStepAst, _super);\n      function AnimationStepAst(startingStyles, keyframes, duration, delay, easing) {\n          _super.call(this);\n          this.startingStyles = startingStyles;\n          this.keyframes = keyframes;\n          this.duration = duration;\n          this.delay = delay;\n          this.easing = easing;\n      }\n      AnimationStepAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStep(this, context);\n      };\n      return AnimationStepAst;\n  }(AnimationAst));\n  var AnimationStylesAst = (function (_super) {\n      __extends$13(AnimationStylesAst, _super);\n      function AnimationStylesAst(styles) {\n          _super.call(this);\n          this.styles = styles;\n      }\n      AnimationStylesAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationStyles(this, context);\n      };\n      return AnimationStylesAst;\n  }(AnimationAst));\n  var AnimationKeyframeAst = (function (_super) {\n      __extends$13(AnimationKeyframeAst, _super);\n      function AnimationKeyframeAst(offset, styles) {\n          _super.call(this);\n          this.offset = offset;\n          this.styles = styles;\n      }\n      AnimationKeyframeAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationKeyframe(this, context);\n      };\n      return AnimationKeyframeAst;\n  }(AnimationAst));\n  var AnimationWithStepsAst = (function (_super) {\n      __extends$13(AnimationWithStepsAst, _super);\n      function AnimationWithStepsAst(steps) {\n          _super.call(this);\n          this.steps = steps;\n      }\n      return AnimationWithStepsAst;\n  }(AnimationAst));\n  var AnimationGroupAst = (function (_super) {\n      __extends$13(AnimationGroupAst, _super);\n      function AnimationGroupAst(steps) {\n          _super.call(this, steps);\n      }\n      AnimationGroupAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationGroup(this, context);\n      };\n      return AnimationGroupAst;\n  }(AnimationWithStepsAst));\n  var AnimationSequenceAst = (function (_super) {\n      __extends$13(AnimationSequenceAst, _super);\n      function AnimationSequenceAst(steps) {\n          _super.call(this, steps);\n      }\n      AnimationSequenceAst.prototype.visit = function (visitor, context) {\n          return visitor.visitAnimationSequence(this, context);\n      };\n      return AnimationSequenceAst;\n  }(AnimationWithStepsAst));\n\n  var AnimationEntryCompileResult = (function () {\n      function AnimationEntryCompileResult(name, statements, fnExp) {\n          this.name = name;\n          this.statements = statements;\n          this.fnExp = fnExp;\n      }\n      return AnimationEntryCompileResult;\n  }());\n  var AnimationCompiler = (function () {\n      function AnimationCompiler() {\n      }\n      AnimationCompiler.prototype.compile = function (factoryNamePrefix, parsedAnimations) {\n          return parsedAnimations.map(function (entry) {\n              var factoryName = factoryNamePrefix + \"_\" + entry.name;\n              var visitor = new _AnimationBuilder(entry.name, factoryName);\n              return visitor.build(entry);\n          });\n      };\n      return AnimationCompiler;\n  }());\n  var _ANIMATION_FACTORY_ELEMENT_VAR = variable('element');\n  var _ANIMATION_DEFAULT_STATE_VAR = variable('defaultStateStyles');\n  var _ANIMATION_FACTORY_VIEW_VAR = variable('view');\n  var _ANIMATION_FACTORY_VIEW_CONTEXT = _ANIMATION_FACTORY_VIEW_VAR.prop('animationContext');\n  var _ANIMATION_FACTORY_RENDERER_VAR = _ANIMATION_FACTORY_VIEW_VAR.prop('renderer');\n  var _ANIMATION_CURRENT_STATE_VAR = variable('currentState');\n  var _ANIMATION_NEXT_STATE_VAR = variable('nextState');\n  var _ANIMATION_PLAYER_VAR = variable('player');\n  var _ANIMATION_TIME_VAR = variable('totalTime');\n  var _ANIMATION_START_STATE_STYLES_VAR = variable('startStateStyles');\n  var _ANIMATION_END_STATE_STYLES_VAR = variable('endStateStyles');\n  var _ANIMATION_COLLECTED_STYLES = variable('collectedStyles');\n  var _PREVIOUS_ANIMATION_PLAYERS = variable('previousPlayers');\n  var _EMPTY_MAP = literalMap([]);\n  var _EMPTY_ARRAY = literalArr([]);\n  var _AnimationBuilder = (function () {\n      function _AnimationBuilder(animationName, factoryName) {\n          this.animationName = animationName;\n          this._fnVarName = factoryName + '_factory';\n          this._statesMapVarName = factoryName + '_states';\n          this._statesMapVar = variable(this._statesMapVarName);\n      }\n      _AnimationBuilder.prototype.visitAnimationStyles = function (ast, context) {\n          var stylesArr = [];\n          if (context.isExpectingFirstStyleStep) {\n              stylesArr.push(_ANIMATION_START_STATE_STYLES_VAR);\n              context.isExpectingFirstStyleStep = false;\n          }\n          ast.styles.forEach(function (entry) {\n              var entries = Object.keys(entry).map(function (key) { return [key, literal(entry[key])]; });\n              stylesArr.push(literalMap(entries));\n          });\n          return importExpr(resolveIdentifier(Identifiers.AnimationStyles)).instantiate([\n              importExpr(resolveIdentifier(Identifiers.collectAndResolveStyles)).callFn([\n                  _ANIMATION_COLLECTED_STYLES, literalArr(stylesArr)\n              ])\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationKeyframe = function (ast, context) {\n          return importExpr(resolveIdentifier(Identifiers.AnimationKeyframe)).instantiate([\n              literal(ast.offset), ast.styles.visit(this, context)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationStep = function (ast, context) {\n          var _this = this;\n          if (context.endStateAnimateStep === ast) {\n              return this._visitEndStateAnimation(ast, context);\n          }\n          var startingStylesExpr = ast.startingStyles.visit(this, context);\n          var keyframeExpressions = ast.keyframes.map(function (keyframeEntry) { return keyframeEntry.visit(_this, context); });\n          return this._callAnimateMethod(ast, startingStylesExpr, literalArr(keyframeExpressions), context);\n      };\n      /** @internal */\n      _AnimationBuilder.prototype._visitEndStateAnimation = function (ast, context) {\n          var _this = this;\n          var startingStylesExpr = ast.startingStyles.visit(this, context);\n          var keyframeExpressions = ast.keyframes.map(function (keyframe) { return keyframe.visit(_this, context); });\n          var keyframesExpr = importExpr(resolveIdentifier(Identifiers.balanceAnimationKeyframes)).callFn([\n              _ANIMATION_COLLECTED_STYLES, _ANIMATION_END_STATE_STYLES_VAR,\n              literalArr(keyframeExpressions)\n          ]);\n          return this._callAnimateMethod(ast, startingStylesExpr, keyframesExpr, context);\n      };\n      /** @internal */\n      _AnimationBuilder.prototype._callAnimateMethod = function (ast, startingStylesExpr, keyframesExpr, context) {\n          var previousStylesValue = _EMPTY_ARRAY;\n          if (context.isExpectingFirstAnimateStep) {\n              previousStylesValue = _PREVIOUS_ANIMATION_PLAYERS;\n              context.isExpectingFirstAnimateStep = false;\n          }\n          context.totalTransitionTime += ast.duration + ast.delay;\n          return _ANIMATION_FACTORY_RENDERER_VAR.callMethod('animate', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, startingStylesExpr, keyframesExpr, literal(ast.duration),\n              literal(ast.delay), literal(ast.easing), previousStylesValue\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationSequence = function (ast, context) {\n          var _this = this;\n          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n          return importExpr(resolveIdentifier(Identifiers.AnimationSequencePlayer)).instantiate([\n              literalArr(playerExprs)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationGroup = function (ast, context) {\n          var _this = this;\n          var playerExprs = ast.steps.map(function (step) { return step.visit(_this, context); });\n          return importExpr(resolveIdentifier(Identifiers.AnimationGroupPlayer)).instantiate([\n              literalArr(playerExprs)\n          ]);\n      };\n      _AnimationBuilder.prototype.visitAnimationStateDeclaration = function (ast, context) {\n          var flatStyles = {};\n          _getStylesArray(ast).forEach(function (entry) { Object.keys(entry).forEach(function (key) { flatStyles[key] = entry[key]; }); });\n          context.stateMap.registerState(ast.stateName, flatStyles);\n      };\n      _AnimationBuilder.prototype.visitAnimationStateTransition = function (ast, context) {\n          var steps = ast.animation.steps;\n          var lastStep = steps[steps.length - 1];\n          if (_isEndStateAnimateStep(lastStep)) {\n              context.endStateAnimateStep = lastStep;\n          }\n          context.totalTransitionTime = 0;\n          context.isExpectingFirstStyleStep = true;\n          context.isExpectingFirstAnimateStep = true;\n          var stateChangePreconditions = [];\n          ast.stateChanges.forEach(function (stateChange) {\n              stateChangePreconditions.push(_compareToAnimationStateExpr(_ANIMATION_CURRENT_STATE_VAR, stateChange.fromState)\n                  .and(_compareToAnimationStateExpr(_ANIMATION_NEXT_STATE_VAR, stateChange.toState)));\n              if (stateChange.fromState != ANY_STATE) {\n                  context.stateMap.registerState(stateChange.fromState);\n              }\n              if (stateChange.toState != ANY_STATE) {\n                  context.stateMap.registerState(stateChange.toState);\n              }\n          });\n          var animationPlayerExpr = ast.animation.visit(this, context);\n          var reducedStateChangesPrecondition = stateChangePreconditions.reduce(function (a, b) { return a.or(b); });\n          var precondition = _ANIMATION_PLAYER_VAR.equals(NULL_EXPR).and(reducedStateChangesPrecondition);\n          var animationStmt = _ANIMATION_PLAYER_VAR.set(animationPlayerExpr).toStmt();\n          var totalTimeStmt = _ANIMATION_TIME_VAR.set(literal(context.totalTransitionTime)).toStmt();\n          return new IfStmt(precondition, [animationStmt, totalTimeStmt]);\n      };\n      _AnimationBuilder.prototype.visitAnimationEntry = function (ast, context) {\n          var _this = this;\n          // visit each of the declarations first to build the context state map\n          ast.stateDeclarations.forEach(function (def) { return def.visit(_this, context); });\n          // this should always be defined even if the user overrides it\n          context.stateMap.registerState(DEFAULT_STATE, {});\n          var statements = [];\n          statements.push(_PREVIOUS_ANIMATION_PLAYERS\n              .set(_ANIMATION_FACTORY_VIEW_CONTEXT.callMethod('getAnimationPlayers', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n              _ANIMATION_NEXT_STATE_VAR.equals(literal(EMPTY_ANIMATION_STATE))\n          ]))\n              .toDeclStmt());\n          statements.push(_ANIMATION_COLLECTED_STYLES.set(_EMPTY_MAP).toDeclStmt());\n          statements.push(_ANIMATION_PLAYER_VAR.set(NULL_EXPR).toDeclStmt());\n          statements.push(_ANIMATION_TIME_VAR.set(literal(0)).toDeclStmt());\n          statements.push(_ANIMATION_DEFAULT_STATE_VAR.set(this._statesMapVar.key(literal(DEFAULT_STATE)))\n              .toDeclStmt());\n          statements.push(_ANIMATION_START_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_CURRENT_STATE_VAR))\n              .toDeclStmt());\n          statements.push(new IfStmt(_ANIMATION_START_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_START_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n          statements.push(_ANIMATION_END_STATE_STYLES_VAR.set(this._statesMapVar.key(_ANIMATION_NEXT_STATE_VAR))\n              .toDeclStmt());\n          statements.push(new IfStmt(_ANIMATION_END_STATE_STYLES_VAR.equals(NULL_EXPR), [_ANIMATION_END_STATE_STYLES_VAR.set(_ANIMATION_DEFAULT_STATE_VAR).toStmt()]));\n          var RENDER_STYLES_FN = importExpr(resolveIdentifier(Identifiers.renderStyles));\n          ast.stateTransitions.forEach(function (transAst) { return statements.push(transAst.visit(_this, context)); });\n          // this check ensures that the animation factory always returns a player\n          // so that the onDone callback can be used for tracking\n          statements.push(new IfStmt(_ANIMATION_PLAYER_VAR.equals(NULL_EXPR), [_ANIMATION_PLAYER_VAR\n                  .set(importExpr(resolveIdentifier(Identifiers.NoOpAnimationPlayer)).instantiate([]))\n                  .toStmt()]));\n          // once complete we want to apply the styles on the element\n          // since the destination state's values should persist once\n          // the animation sequence has completed.\n          statements.push(_ANIMATION_PLAYER_VAR\n              .callMethod('onDone', [fn([], [\n                  _ANIMATION_PLAYER_VAR.callMethod('destroy', []).toStmt(),\n                  RENDER_STYLES_FN\n                      .callFn([\n                      _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n                      importExpr(resolveIdentifier(Identifiers.prepareFinalAnimationStyles))\n                          .callFn([\n                          _ANIMATION_START_STATE_STYLES_VAR,\n                          _ANIMATION_END_STATE_STYLES_VAR\n                      ])\n                  ])\n                      .toStmt()\n              ])])\n              .toStmt());\n          statements.push(importExpr(resolveIdentifier(Identifiers.AnimationSequencePlayer))\n              .instantiate([_PREVIOUS_ANIMATION_PLAYERS])\n              .callMethod('destroy', [])\n              .toStmt());\n          // before we start any animation we want to clear out the starting\n          // styles from the element's style property (since they were placed\n          // there at the end of the last animation\n          statements.push(RENDER_STYLES_FN\n              .callFn([\n              _ANIMATION_FACTORY_ELEMENT_VAR, _ANIMATION_FACTORY_RENDERER_VAR,\n              importExpr(resolveIdentifier(Identifiers.clearStyles))\n                  .callFn([_ANIMATION_START_STATE_STYLES_VAR])\n          ])\n              .toStmt());\n          statements.push(_ANIMATION_FACTORY_VIEW_CONTEXT\n              .callMethod('queueAnimation', [\n              _ANIMATION_FACTORY_ELEMENT_VAR, literal(this.animationName),\n              _ANIMATION_PLAYER_VAR\n          ])\n              .toStmt());\n          statements.push(new ReturnStatement(importExpr(resolveIdentifier(Identifiers.AnimationTransition)).instantiate([\n              _ANIMATION_PLAYER_VAR, _ANIMATION_CURRENT_STATE_VAR, _ANIMATION_NEXT_STATE_VAR,\n              _ANIMATION_TIME_VAR\n          ])));\n          return fn([\n              new FnParam(_ANIMATION_FACTORY_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n              new FnParam(_ANIMATION_FACTORY_ELEMENT_VAR.name, DYNAMIC_TYPE),\n              new FnParam(_ANIMATION_CURRENT_STATE_VAR.name, DYNAMIC_TYPE),\n              new FnParam(_ANIMATION_NEXT_STATE_VAR.name, DYNAMIC_TYPE)\n          ], statements, importType(resolveIdentifier(Identifiers.AnimationTransition)));\n      };\n      _AnimationBuilder.prototype.build = function (ast) {\n          var context = new _AnimationBuilderContext();\n          var fnStatement = ast.visit(this, context).toDeclStmt(this._fnVarName);\n          var fnVariable = variable(this._fnVarName);\n          var lookupMap = [];\n          Object.keys(context.stateMap.states).forEach(function (stateName) {\n              var value = context.stateMap.states[stateName];\n              var variableValue = _EMPTY_MAP;\n              if (isPresent(value)) {\n                  var styleMap_1 = [];\n                  Object.keys(value).forEach(function (key) { styleMap_1.push([key, literal(value[key])]); });\n                  variableValue = literalMap(styleMap_1);\n              }\n              lookupMap.push([stateName, variableValue]);\n          });\n          var compiledStatesMapStmt = this._statesMapVar.set(literalMap(lookupMap)).toDeclStmt();\n          var statements = [compiledStatesMapStmt, fnStatement];\n          return new AnimationEntryCompileResult(this.animationName, statements, fnVariable);\n      };\n      return _AnimationBuilder;\n  }());\n  var _AnimationBuilderContext = (function () {\n      function _AnimationBuilderContext() {\n          this.stateMap = new _AnimationBuilderStateMap();\n          this.endStateAnimateStep = null;\n          this.isExpectingFirstStyleStep = false;\n          this.isExpectingFirstAnimateStep = false;\n          this.totalTransitionTime = 0;\n      }\n      return _AnimationBuilderContext;\n  }());\n  var _AnimationBuilderStateMap = (function () {\n      function _AnimationBuilderStateMap() {\n          this._states = {};\n      }\n      Object.defineProperty(_AnimationBuilderStateMap.prototype, \"states\", {\n          get: function () { return this._states; },\n          enumerable: true,\n          configurable: true\n      });\n      _AnimationBuilderStateMap.prototype.registerState = function (name, value) {\n          if (value === void 0) { value = null; }\n          var existingEntry = this._states[name];\n          if (!existingEntry) {\n              this._states[name] = value;\n          }\n      };\n      return _AnimationBuilderStateMap;\n  }());\n  function _compareToAnimationStateExpr(value, animationState) {\n      var emptyStateLiteral = literal(EMPTY_ANIMATION_STATE);\n      switch (animationState) {\n          case EMPTY_ANIMATION_STATE:\n              return value.equals(emptyStateLiteral);\n          case ANY_STATE:\n              return literal(true);\n          default:\n              return value.equals(literal(animationState));\n      }\n  }\n  function _isEndStateAnimateStep(step) {\n      // the final animation step is characterized by having only TWO\n      // keyframe values and it must have zero styles for both keyframes\n      if (step instanceof AnimationStepAst && step.duration > 0 && step.keyframes.length == 2) {\n          var styles1 = _getStylesArray(step.keyframes[0])[0];\n          var styles2 = _getStylesArray(step.keyframes[1])[0];\n          return Object.keys(styles1).length === 0 && Object.keys(styles2).length === 0;\n      }\n      return false;\n  }\n  function _getStylesArray(obj) {\n      return obj.styles.styles;\n  }\n\n  function createDiTokenExpression(token) {\n      if (isPresent(token.value)) {\n          return literal(token.value);\n      }\n      else if (token.identifierIsInstance) {\n          return importExpr(token.identifier)\n              .instantiate([], importType(token.identifier, [], [TypeModifier.Const]));\n      }\n      else {\n          return importExpr(token.identifier);\n      }\n  }\n  function createInlineArray(values) {\n      if (values.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_INLINE_ARRAY));\n      }\n      var log2 = Math.log(values.length) / Math.log(2);\n      var index = Math.ceil(log2);\n      var identifierSpec = index < Identifiers.inlineArrays.length ? Identifiers.inlineArrays[index] :\n          Identifiers.InlineArrayDynamic;\n      var identifier = resolveIdentifier(identifierSpec);\n      return importExpr(identifier).instantiate([\n          literal(values.length)\n      ].concat(values));\n  }\n  function createPureProxy(fn, argCount, pureProxyProp, builder) {\n      builder.fields.push(new ClassField(pureProxyProp.name, null));\n      var pureProxyId = argCount < Identifiers.pureProxies.length ? Identifiers.pureProxies[argCount] : null;\n      if (!pureProxyId) {\n          throw new Error(\"Unsupported number of argument for pure functions: \" + argCount);\n      }\n      builder.ctorStmts.push(THIS_EXPR.prop(pureProxyProp.name)\n          .set(importExpr(resolveIdentifier(pureProxyId)).callFn([fn]))\n          .toStmt());\n  }\n  function createEnumExpression(enumType, enumValue) {\n      var enumName = Object.keys(enumType.runtime).find(function (propName) { return enumType.runtime[propName] === enumValue; });\n      if (!enumName) {\n          throw new Error(\"Unknown enum value \" + enumValue + \" in \" + enumType.name);\n      }\n      return importExpr(resolveEnumIdentifier(resolveIdentifier(enumType), enumName));\n  }\n\n  var CheckBindingField = (function () {\n      function CheckBindingField(expression, bindingId) {\n          this.expression = expression;\n          this.bindingId = bindingId;\n      }\n      return CheckBindingField;\n  }());\n  function createCheckBindingField(builder) {\n      var bindingId = \"\" + builder.fields.length;\n      var fieldExpr = createBindFieldExpr(bindingId);\n      // private is fine here as no child view will reference the cached value...\n      builder.fields.push(new ClassField(fieldExpr.name, null, [StmtModifier.Private]));\n      builder.ctorStmts.push(THIS_EXPR.prop(fieldExpr.name)\n          .set(importExpr(resolveIdentifier(Identifiers.UNINITIALIZED)))\n          .toStmt());\n      return new CheckBindingField(fieldExpr, bindingId);\n  }\n  function createCheckBindingStmt(evalResult, fieldExpr, throwOnChangeVar, actions) {\n      var condition = importExpr(resolveIdentifier(Identifiers.checkBinding)).callFn([\n          throwOnChangeVar, fieldExpr, evalResult.currValExpr\n      ]);\n      if (evalResult.forceUpdate) {\n          condition = evalResult.forceUpdate.or(condition);\n      }\n      return evalResult.stmts.concat([\n          new IfStmt(condition, actions.concat([\n              THIS_EXPR.prop(fieldExpr.name).set(evalResult.currValExpr).toStmt()\n          ]))\n      ]);\n  }\n  function createBindFieldExpr(bindingId) {\n      return THIS_EXPR.prop(\"_expr_\" + bindingId);\n  }\n\n  var VAL_UNWRAPPER_VAR = variable(\"valUnwrapper\");\n  var EventHandlerVars = (function () {\n      function EventHandlerVars() {\n      }\n      EventHandlerVars.event = variable('$event');\n      return EventHandlerVars;\n  }());\n  var ConvertPropertyBindingResult = (function () {\n      function ConvertPropertyBindingResult(stmts, currValExpr, forceUpdate) {\n          this.stmts = stmts;\n          this.currValExpr = currValExpr;\n          this.forceUpdate = forceUpdate;\n      }\n      return ConvertPropertyBindingResult;\n  }());\n  /**\n   * Converts the given expression AST into an executable output AST, assuming the expression is\n   * used in a property binding.\n   */\n  function convertPropertyBinding(builder, nameResolver, implicitReceiver, expression, bindingId) {\n      var currValExpr = createCurrValueExpr(bindingId);\n      var stmts = [];\n      if (!nameResolver) {\n          nameResolver = new DefaultNameResolver();\n      }\n      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, VAL_UNWRAPPER_VAR, bindingId, false);\n      var outputExpr = expression.visit(visitor, _Mode.Expression);\n      if (!outputExpr) {\n          // e.g. an empty expression was given\n          return null;\n      }\n      if (visitor.temporaryCount) {\n          for (var i = 0; i < visitor.temporaryCount; i++) {\n              stmts.push(temporaryDeclaration(bindingId, i));\n          }\n      }\n      if (visitor.needsValueUnwrapper) {\n          var initValueUnwrapperStmt = VAL_UNWRAPPER_VAR.callMethod('reset', []).toStmt();\n          stmts.push(initValueUnwrapperStmt);\n      }\n      stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n      if (visitor.needsValueUnwrapper) {\n          return new ConvertPropertyBindingResult(stmts, currValExpr, VAL_UNWRAPPER_VAR.prop('hasWrappedValue'));\n      }\n      else {\n          return new ConvertPropertyBindingResult(stmts, currValExpr, null);\n      }\n  }\n  var ConvertActionBindingResult = (function () {\n      function ConvertActionBindingResult(stmts, preventDefault) {\n          this.stmts = stmts;\n          this.preventDefault = preventDefault;\n      }\n      return ConvertActionBindingResult;\n  }());\n  /**\n   * Converts the given expression AST into an executable output AST, assuming the expression is\n   * used in an action binding (e.g. an event handler).\n   */\n  function convertActionBinding(builder, nameResolver, implicitReceiver, action, bindingId) {\n      if (!nameResolver) {\n          nameResolver = new DefaultNameResolver();\n      }\n      var visitor = new _AstToIrVisitor(builder, nameResolver, implicitReceiver, null, bindingId, true);\n      var actionStmts = [];\n      flattenStatements(action.visit(visitor, _Mode.Statement), actionStmts);\n      prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n      var lastIndex = actionStmts.length - 1;\n      var preventDefaultVar = null;\n      if (lastIndex >= 0) {\n          var lastStatement = actionStmts[lastIndex];\n          var returnExpr = convertStmtIntoExpression(lastStatement);\n          if (returnExpr) {\n              // Note: We need to cast the result of the method call to dynamic,\n              // as it might be a void method!\n              preventDefaultVar = createPreventDefaultVar(bindingId);\n              actionStmts[lastIndex] =\n                  preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                      .toDeclStmt(null, [StmtModifier.Final]);\n          }\n      }\n      return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n  }\n  /**\n   * Creates variables that are shared by multiple calls to `convertActionBinding` /\n   * `convertPropertyBinding`\n   */\n  function createSharedBindingVariablesIfNeeded(stmts) {\n      var unwrapperStmts = [];\n      var readVars = findReadVarNames(stmts);\n      if (readVars.has(VAL_UNWRAPPER_VAR.name)) {\n          unwrapperStmts.push(VAL_UNWRAPPER_VAR\n              .set(importExpr(resolveIdentifier(Identifiers.ValueUnwrapper)).instantiate([]))\n              .toDeclStmt(null, [StmtModifier.Final]));\n      }\n      return unwrapperStmts;\n  }\n  function temporaryName(bindingId, temporaryNumber) {\n      return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n  }\n  function temporaryDeclaration(bindingId, temporaryNumber) {\n      return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n  }\n  function prependTemporaryDecls(temporaryCount, bindingId, statements) {\n      for (var i = temporaryCount - 1; i >= 0; i--) {\n          statements.unshift(temporaryDeclaration(bindingId, i));\n      }\n  }\n  var _Mode;\n  (function (_Mode) {\n      _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n      _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n  })(_Mode || (_Mode = {}));\n  function ensureStatementMode(mode, ast) {\n      if (mode !== _Mode.Statement) {\n          throw new Error(\"Expected a statement, but saw \" + ast);\n      }\n  }\n  function ensureExpressionMode(mode, ast) {\n      if (mode !== _Mode.Expression) {\n          throw new Error(\"Expected an expression, but saw \" + ast);\n      }\n  }\n  function convertToStatementIfNeeded(mode, expr) {\n      if (mode === _Mode.Statement) {\n          return expr.toStmt();\n      }\n      else {\n          return expr;\n      }\n  }\n  var _AstToIrVisitor = (function () {\n      function _AstToIrVisitor(_builder, _nameResolver, _implicitReceiver, _valueUnwrapper, bindingId, isAction) {\n          this._builder = _builder;\n          this._nameResolver = _nameResolver;\n          this._implicitReceiver = _implicitReceiver;\n          this._valueUnwrapper = _valueUnwrapper;\n          this.bindingId = bindingId;\n          this.isAction = isAction;\n          this._nodeMap = new Map();\n          this._resultMap = new Map();\n          this._currentTemporary = 0;\n          this.needsValueUnwrapper = false;\n          this.temporaryCount = 0;\n      }\n      _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n          var op;\n          switch (ast.operation) {\n              case '+':\n                  op = BinaryOperator.Plus;\n                  break;\n              case '-':\n                  op = BinaryOperator.Minus;\n                  break;\n              case '*':\n                  op = BinaryOperator.Multiply;\n                  break;\n              case '/':\n                  op = BinaryOperator.Divide;\n                  break;\n              case '%':\n                  op = BinaryOperator.Modulo;\n                  break;\n              case '&&':\n                  op = BinaryOperator.And;\n                  break;\n              case '||':\n                  op = BinaryOperator.Or;\n                  break;\n              case '==':\n                  op = BinaryOperator.Equals;\n                  break;\n              case '!=':\n                  op = BinaryOperator.NotEquals;\n                  break;\n              case '===':\n                  op = BinaryOperator.Identical;\n                  break;\n              case '!==':\n                  op = BinaryOperator.NotIdentical;\n                  break;\n              case '<':\n                  op = BinaryOperator.Lower;\n                  break;\n              case '>':\n                  op = BinaryOperator.Bigger;\n                  break;\n              case '<=':\n                  op = BinaryOperator.LowerEquals;\n                  break;\n              case '>=':\n                  op = BinaryOperator.BiggerEquals;\n                  break;\n              default:\n                  throw new Error(\"Unsupported operation \" + ast.operation);\n          }\n          return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this.visit(ast.left, _Mode.Expression), this.visit(ast.right, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n          ensureStatementMode(mode, ast);\n          return this.visitAll(ast.expressions, mode);\n      };\n      _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n          var value = this.visit(ast.condition, _Mode.Expression);\n          return convertToStatementIfNeeded(mode, value.conditional(this.visit(ast.trueExp, _Mode.Expression), this.visit(ast.falseExp, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n          var input = this.visit(ast.exp, _Mode.Expression);\n          var args = this.visitAll(ast.args, _Mode.Expression);\n          var value = this._nameResolver.callPipe(ast.name, input, args);\n          if (!value) {\n              throw new Error(\"Illegal state: Pipe \" + ast.name + \" is not allowed here!\");\n          }\n          this.needsValueUnwrapper = true;\n          return convertToStatementIfNeeded(mode, this._valueUnwrapper.callMethod('unwrap', [value]));\n      };\n      _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, this.visit(ast.target, _Mode.Expression).callFn(this.visitAll(ast.args, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n          ensureExpressionMode(mode, ast);\n          return this._implicitReceiver;\n      };\n      _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n          ensureExpressionMode(mode, ast);\n          var args = [literal(ast.expressions.length)];\n          for (var i = 0; i < ast.strings.length - 1; i++) {\n              args.push(literal(ast.strings[i]));\n              args.push(this.visit(ast.expressions[i], _Mode.Expression));\n          }\n          args.push(literal(ast.strings[ast.strings.length - 1]));\n          return ast.expressions.length <= 9 ?\n              importExpr(resolveIdentifier(Identifiers.inlineInterpolate)).callFn(args) :\n              importExpr(resolveIdentifier(Identifiers.interpolate)).callFn([\n                  args[0], literalArr(args.slice(1))\n              ]);\n      };\n      _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, this.visit(ast.obj, _Mode.Expression).key(this.visit(ast.key, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n          var obj = this.visit(ast.obj, _Mode.Expression);\n          var key = this.visit(ast.key, _Mode.Expression);\n          var value = this.visit(ast.value, _Mode.Expression);\n          return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n      };\n      _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n          var parts = this.visitAll(ast.expressions, mode);\n          var literalArr$$ = this.isAction ? literalArr(parts) : createCachedLiteralArray(this._builder, parts);\n          return convertToStatementIfNeeded(mode, literalArr$$);\n      };\n      _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n          var parts = [];\n          for (var i = 0; i < ast.keys.length; i++) {\n              parts.push([ast.keys[i], this.visit(ast.values[i], _Mode.Expression)]);\n          }\n          var literalMap$$ = this.isAction ? literalMap(parts) : createCachedLiteralMap(this._builder, parts);\n          return convertToStatementIfNeeded(mode, literalMap$$);\n      };\n      _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, literal(ast.value));\n      };\n      _AstToIrVisitor.prototype._getLocal = function (name) {\n          if (this.isAction && name == EventHandlerVars.event.name) {\n              return EventHandlerVars.event;\n          }\n          return this._nameResolver.getLocal(name);\n      };\n      _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n          var leftMostSafe = this.leftMostSafeNode(ast);\n          if (leftMostSafe) {\n              return this.convertSafeAccess(ast, leftMostSafe, mode);\n          }\n          else {\n              var args = this.visitAll(ast.args, _Mode.Expression);\n              var result = null;\n              var receiver = this.visit(ast.receiver, _Mode.Expression);\n              if (receiver === this._implicitReceiver) {\n                  var varExpr = this._getLocal(ast.name);\n                  if (isPresent(varExpr)) {\n                      result = varExpr.callFn(args);\n                  }\n              }\n              if (isBlank(result)) {\n                  result = receiver.callMethod(ast.name, args);\n              }\n              return convertToStatementIfNeeded(mode, result);\n          }\n      };\n      _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n          return convertToStatementIfNeeded(mode, not(this.visit(ast.expression, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n          var leftMostSafe = this.leftMostSafeNode(ast);\n          if (leftMostSafe) {\n              return this.convertSafeAccess(ast, leftMostSafe, mode);\n          }\n          else {\n              var result = null;\n              var receiver = this.visit(ast.receiver, _Mode.Expression);\n              if (receiver === this._implicitReceiver) {\n                  result = this._getLocal(ast.name);\n              }\n              if (isBlank(result)) {\n                  result = receiver.prop(ast.name);\n              }\n              return convertToStatementIfNeeded(mode, result);\n          }\n      };\n      _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n          var receiver = this.visit(ast.receiver, _Mode.Expression);\n          if (receiver === this._implicitReceiver) {\n              var varExpr = this._getLocal(ast.name);\n              if (isPresent(varExpr)) {\n                  throw new Error('Cannot assign to a reference or variable!');\n              }\n          }\n          return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this.visit(ast.value, _Mode.Expression)));\n      };\n      _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n      };\n      _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n          return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n      };\n      _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n          var _this = this;\n          return asts.map(function (ast) { return _this.visit(ast, mode); });\n      };\n      _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n          throw new Error('Quotes are not supported for evaluation!');\n      };\n      _AstToIrVisitor.prototype.visit = function (ast, mode) {\n          var result = this._resultMap.get(ast);\n          if (result)\n              return result;\n          return (this._nodeMap.get(ast) || ast).visit(this, mode);\n      };\n      _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n          // If the expression contains a safe access node on the left it needs to be converted to\n          // an expression that guards the access to the member by checking the receiver for blank. As\n          // execution proceeds from left to right, the left most part of the expression must be guarded\n          // first but, because member access is left associative, the right side of the expression is at\n          // the top of the AST. The desired result requires lifting a copy of the the left part of the\n          // expression up to test it for blank before generating the unguarded version.\n          // Consider, for example the following expression: a?.b.c?.d.e\n          // This results in the ast:\n          //         .\n          //        / \\\n          //       ?.   e\n          //      /  \\\n          //     .    d\n          //    / \\\n          //   ?.  c\n          //  /  \\\n          // a    b\n          // The following tree should be generated:\n          //\n          //        /---- ? ----\\\n          //       /      |      \\\n          //     a   /--- ? ---\\  null\n          //        /     |     \\\n          //       .      .     null\n          //      / \\    / \\\n          //     .  c   .   e\n          //    / \\    / \\\n          //   a   b  ,   d\n          //         / \\\n          //        .   c\n          //       / \\\n          //      a   b\n          //\n          // Notice that the first guard condition is the left hand of the left most safe access node\n          // which comes in as leftMostSafe to this routine.\n          var guardedExpression = this.visit(leftMostSafe.receiver, _Mode.Expression);\n          var temporary;\n          if (this.needsTemporary(leftMostSafe.receiver)) {\n              // If the expression has method calls or pipes then we need to save the result into a\n              // temporary variable to avoid calling stateful or impure code more than once.\n              temporary = this.allocateTemporary();\n              // Preserve the result in the temporary variable\n              guardedExpression = temporary.set(guardedExpression);\n              // Ensure all further references to the guarded expression refer to the temporary instead.\n              this._resultMap.set(leftMostSafe.receiver, temporary);\n          }\n          var condition = guardedExpression.isBlank();\n          // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n          // leftMostNode with its unguarded version in the call to `this.visit()`.\n          if (leftMostSafe instanceof SafeMethodCall) {\n              this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n          }\n          else {\n              this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n          }\n          // Recursively convert the node now without the guarded member access.\n          var access = this.visit(ast, _Mode.Expression);\n          // Remove the mapping. This is not strictly required as the converter only traverses each node\n          // once but is safer if the conversion is changed to traverse the nodes more than once.\n          this._nodeMap.delete(leftMostSafe);\n          // If we allcoated a temporary, release it.\n          if (temporary) {\n              this.releaseTemporary(temporary);\n          }\n          // Produce the conditional\n          return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n      };\n      // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n      // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n      // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n      // safe method call as this needs be transform initially to:\n      //   a == null ? null : a.c.b.c?.d.e\n      // then to:\n      //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n      _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n          var _this = this;\n          var visit = function (visitor, ast) {\n              return (_this._nodeMap.get(ast) || ast).visit(visitor);\n          };\n          return ast.visit({\n              visitBinary: function (ast) { return null; },\n              visitChain: function (ast) { return null; },\n              visitConditional: function (ast) { return null; },\n              visitFunctionCall: function (ast) { return null; },\n              visitImplicitReceiver: function (ast) { return null; },\n              visitInterpolation: function (ast) { return null; },\n              visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n              visitKeyedWrite: function (ast) { return null; },\n              visitLiteralArray: function (ast) { return null; },\n              visitLiteralMap: function (ast) { return null; },\n              visitLiteralPrimitive: function (ast) { return null; },\n              visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n              visitPipe: function (ast) { return null; },\n              visitPrefixNot: function (ast) { return null; },\n              visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n              visitPropertyWrite: function (ast) { return null; },\n              visitQuote: function (ast) { return null; },\n              visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n              visitSafePropertyRead: function (ast) {\n                  return visit(this, ast.receiver) || ast;\n              }\n          });\n      };\n      // Returns true of the AST includes a method or a pipe indicating that, if the\n      // expression is used as the target of a safe property or method access then\n      // the expression should be stored into a temporary variable.\n      _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n          var _this = this;\n          var visit = function (visitor, ast) {\n              return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n          };\n          var visitSome = function (visitor, ast) {\n              return ast.some(function (ast) { return visit(visitor, ast); });\n          };\n          return ast.visit({\n              visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n              visitChain: function (ast) { return false; },\n              visitConditional: function (ast) {\n                  return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                      visit(this, ast.falseExp);\n              },\n              visitFunctionCall: function (ast) { return true; },\n              visitImplicitReceiver: function (ast) { return false; },\n              visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n              visitKeyedRead: function (ast) { return false; },\n              visitKeyedWrite: function (ast) { return false; },\n              visitLiteralArray: function (ast) { return true; },\n              visitLiteralMap: function (ast) { return true; },\n              visitLiteralPrimitive: function (ast) { return false; },\n              visitMethodCall: function (ast) { return true; },\n              visitPipe: function (ast) { return true; },\n              visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n              visitPropertyRead: function (ast) { return false; },\n              visitPropertyWrite: function (ast) { return false; },\n              visitQuote: function (ast) { return false; },\n              visitSafeMethodCall: function (ast) { return true; },\n              visitSafePropertyRead: function (ast) { return false; }\n          });\n      };\n      _AstToIrVisitor.prototype.allocateTemporary = function () {\n          var tempNumber = this._currentTemporary++;\n          this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n          return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n      };\n      _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n          this._currentTemporary--;\n          if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n              throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n          }\n      };\n      return _AstToIrVisitor;\n  }());\n  function flattenStatements(arg, output) {\n      if (Array.isArray(arg)) {\n          arg.forEach(function (entry) { return flattenStatements(entry, output); });\n      }\n      else {\n          output.push(arg);\n      }\n  }\n  function createCachedLiteralArray(builder, values) {\n      if (values.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_ARRAY));\n      }\n      var proxyExpr = THIS_EXPR.prop(\"_arr_\" + builder.fields.length);\n      var proxyParams = [];\n      var proxyReturnEntries = [];\n      for (var i = 0; i < values.length; i++) {\n          var paramName = \"p\" + i;\n          proxyParams.push(new FnParam(paramName));\n          proxyReturnEntries.push(variable(paramName));\n      }\n      createPureProxy(fn(proxyParams, [new ReturnStatement(literalArr(proxyReturnEntries))], new ArrayType(DYNAMIC_TYPE)), values.length, proxyExpr, builder);\n      return proxyExpr.callFn(values);\n  }\n  function createCachedLiteralMap(builder, entries) {\n      if (entries.length === 0) {\n          return importExpr(resolveIdentifier(Identifiers.EMPTY_MAP));\n      }\n      var proxyExpr = THIS_EXPR.prop(\"_map_\" + builder.fields.length);\n      var proxyParams = [];\n      var proxyReturnEntries = [];\n      var values = [];\n      for (var i = 0; i < entries.length; i++) {\n          var paramName = \"p\" + i;\n          proxyParams.push(new FnParam(paramName));\n          proxyReturnEntries.push([entries[i][0], variable(paramName)]);\n          values.push(entries[i][1]);\n      }\n      createPureProxy(fn(proxyParams, [new ReturnStatement(literalMap(proxyReturnEntries))], new MapType(DYNAMIC_TYPE)), entries.length, proxyExpr, builder);\n      return proxyExpr.callFn(values);\n  }\n  var DefaultNameResolver = (function () {\n      function DefaultNameResolver() {\n      }\n      DefaultNameResolver.prototype.callPipe = function (name, input, args) { return null; };\n      DefaultNameResolver.prototype.getLocal = function (name) { return null; };\n      return DefaultNameResolver;\n  }());\n  function createCurrValueExpr(bindingId) {\n      return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n  }\n  function createPreventDefaultVar(bindingId) {\n      return variable(\"pd_\" + bindingId);\n  }\n  function convertStmtIntoExpression(stmt) {\n      if (stmt instanceof ExpressionStatement) {\n          return stmt.expr;\n      }\n      else if (stmt instanceof ReturnStatement) {\n          return stmt.value;\n      }\n      return null;\n  }\n\n  function writeToRenderer(view, boundProp, renderElement, renderValue, logBindingUpdate, securityContextExpression) {\n      var updateStmts = [];\n      var renderer = view.prop('renderer');\n      renderValue = sanitizedValue(view, boundProp, renderValue, securityContextExpression);\n      switch (boundProp.type) {\n          case exports.PropertyBindingType.Property:\n              if (logBindingUpdate) {\n                  updateStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfo))\n                      .callFn([renderer, renderElement, literal(boundProp.name), renderValue])\n                      .toStmt());\n              }\n              updateStmts.push(renderer\n                  .callMethod('setElementProperty', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Attribute:\n              renderValue =\n                  renderValue.isBlank().conditional(NULL_EXPR, renderValue.callMethod('toString', []));\n              updateStmts.push(renderer\n                  .callMethod('setElementAttribute', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Class:\n              updateStmts.push(renderer\n                  .callMethod('setElementClass', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Style:\n              var strValue = renderValue.callMethod('toString', []);\n              if (isPresent(boundProp.unit)) {\n                  strValue = strValue.plus(literal(boundProp.unit));\n              }\n              renderValue = renderValue.isBlank().conditional(NULL_EXPR, strValue);\n              updateStmts.push(renderer\n                  .callMethod('setElementStyle', [renderElement, literal(boundProp.name), renderValue])\n                  .toStmt());\n              break;\n          case exports.PropertyBindingType.Animation:\n              throw new Error('Illegal state: Should not come here!');\n      }\n      return updateStmts;\n  }\n  function sanitizedValue(view, boundProp, renderValue, securityContextExpression) {\n      if (boundProp.securityContext === _angular_core.SecurityContext.NONE) {\n          return renderValue; // No sanitization needed.\n      }\n      if (!boundProp.needsRuntimeSecurityContext) {\n          securityContextExpression =\n              createEnumExpression(Identifiers.SecurityContext, boundProp.securityContext);\n      }\n      if (!securityContextExpression) {\n          throw new Error(\"internal error, no SecurityContext given \" + boundProp.name);\n      }\n      var ctx = view.prop('viewUtils').prop('sanitizer');\n      var args = [securityContextExpression, renderValue];\n      return ctx.callMethod('sanitize', args);\n  }\n  function triggerAnimation(view, componentView, boundProp, eventListener, renderElement, renderValue, lastRenderValue) {\n      var detachStmts = [];\n      var updateStmts = [];\n      var animationName = boundProp.name;\n      var animationFnExpr = componentView.prop('componentType').prop('animations').key(literal(animationName));\n      // it's important to normalize the void value as `void` explicitly\n      // so that the styles data can be obtained from the stringmap\n      var emptyStateValue = literal(EMPTY_ANIMATION_STATE);\n      var unitializedValue = importExpr(resolveIdentifier(Identifiers.UNINITIALIZED));\n      var animationTransitionVar = variable('animationTransition_' + animationName);\n      updateStmts.push(animationTransitionVar\n          .set(animationFnExpr.callFn([\n          view, renderElement,\n          lastRenderValue.equals(unitializedValue).conditional(emptyStateValue, lastRenderValue),\n          renderValue.equals(unitializedValue).conditional(emptyStateValue, renderValue)\n      ]))\n          .toDeclStmt());\n      detachStmts.push(animationTransitionVar\n          .set(animationFnExpr.callFn([view, renderElement, lastRenderValue, emptyStateValue]))\n          .toDeclStmt());\n      var registerStmts = [\n          animationTransitionVar\n              .callMethod('onStart', [eventListener.callMethod(BuiltinMethod.Bind, [view, literal(BoundEventAst.calcFullName(animationName, null, 'start'))])])\n              .toStmt(),\n          animationTransitionVar\n              .callMethod('onDone', [eventListener.callMethod(BuiltinMethod.Bind, [view, literal(BoundEventAst.calcFullName(animationName, null, 'done'))])])\n              .toStmt(),\n      ];\n      updateStmts.push.apply(updateStmts, registerStmts);\n      detachStmts.push.apply(detachStmts, registerStmts);\n      return { updateStmts: updateStmts, detachStmts: detachStmts };\n  }\n\n  /**\n   * Create a new class stmts based on the given data.\n   */\n  function createClassStmt(config) {\n      var parentArgs = config.parentArgs || [];\n      var superCtorStmts = config.parent ? [SUPER_EXPR.callFn(parentArgs).toStmt()] : [];\n      var builder = concatClassBuilderParts(Array.isArray(config.builders) ? config.builders : [config.builders]);\n      var ctor = new ClassMethod(null, config.ctorParams || [], superCtorStmts.concat(builder.ctorStmts));\n      return new ClassStmt(config.name, config.parent, builder.fields, builder.getters, ctor, builder.methods, config.modifiers || []);\n  }\n  function concatClassBuilderParts(builders) {\n      return {\n          fields: (_a = []).concat.apply(_a, builders.map(function (builder) { return builder.fields || []; })),\n          methods: (_b = []).concat.apply(_b, builders.map(function (builder) { return builder.methods || []; })),\n          getters: (_c = []).concat.apply(_c, builders.map(function (builder) { return builder.getters || []; })),\n          ctorStmts: (_d = []).concat.apply(_d, builders.map(function (builder) { return builder.ctorStmts || []; })),\n      };\n      var _a, _b, _c, _d;\n  }\n\n  var DirectiveWrapperCompileResult = (function () {\n      function DirectiveWrapperCompileResult(statements, dirWrapperClassVar) {\n          this.statements = statements;\n          this.dirWrapperClassVar = dirWrapperClassVar;\n      }\n      return DirectiveWrapperCompileResult;\n  }());\n  var CONTEXT_FIELD_NAME = 'context';\n  var CHANGES_FIELD_NAME = '_changes';\n  var CHANGED_FIELD_NAME = '_changed';\n  var EVENT_HANDLER_FIELD_NAME = '_eventHandler';\n  var CURR_VALUE_VAR = variable('currValue');\n  var THROW_ON_CHANGE_VAR = variable('throwOnChange');\n  var FORCE_UPDATE_VAR = variable('forceUpdate');\n  var VIEW_VAR = variable('view');\n  var COMPONENT_VIEW_VAR = variable('componentView');\n  var RENDER_EL_VAR = variable('el');\n  var EVENT_NAME_VAR = variable('eventName');\n  var RESET_CHANGES_STMT = THIS_EXPR.prop(CHANGES_FIELD_NAME).set(literalMap([])).toStmt();\n  /**\n   * We generate directive wrappers to prevent code bloat when a directive is used.\n   * A directive wrapper encapsulates\n   * the dirty checking for `@Input`, the handling of `@HostListener` / `@HostBinding`\n   * and calling the lifecyclehooks `ngOnInit`, `ngOnChanges`, `ngDoCheck`.\n   *\n   * So far, only `@Input` and the lifecycle hooks have been implemented.\n   */\n  var DirectiveWrapperCompiler = (function () {\n      function DirectiveWrapperCompiler(compilerConfig, _exprParser, _schemaRegistry, _console) {\n          this.compilerConfig = compilerConfig;\n          this._exprParser = _exprParser;\n          this._schemaRegistry = _schemaRegistry;\n          this._console = _console;\n      }\n      DirectiveWrapperCompiler.dirWrapperClassName = function (id) { return \"Wrapper_\" + id.name; };\n      DirectiveWrapperCompiler.prototype.compile = function (dirMeta) {\n          var hostParseResult = parseHostBindings(dirMeta, this._exprParser, this._schemaRegistry);\n          reportParseErrors(hostParseResult.errors, this._console);\n          var builder = new DirectiveWrapperBuilder(this.compilerConfig, dirMeta);\n          Object.keys(dirMeta.inputs).forEach(function (inputFieldName) {\n              addCheckInputMethod(inputFieldName, builder);\n          });\n          addNgDoCheckMethod(builder);\n          addCheckHostMethod(hostParseResult.hostProps, builder);\n          addHandleEventMethod(hostParseResult.hostListeners, builder);\n          addSubscribeMethod(dirMeta, builder);\n          var classStmt = builder.build();\n          return new DirectiveWrapperCompileResult([classStmt], classStmt.name);\n      };\n      DirectiveWrapperCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveWrapperCompiler.ctorParameters = [\n          { type: CompilerConfig, },\n          { type: Parser, },\n          { type: ElementSchemaRegistry, },\n          { type: Console, },\n      ];\n      return DirectiveWrapperCompiler;\n  }());\n  var DirectiveWrapperBuilder = (function () {\n      function DirectiveWrapperBuilder(compilerConfig, dirMeta) {\n          this.compilerConfig = compilerConfig;\n          this.dirMeta = dirMeta;\n          this.fields = [];\n          this.getters = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          this.detachStmts = [];\n          this.destroyStmts = [];\n          var dirLifecycleHooks = dirMeta.type.lifecycleHooks;\n          this.genChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1 ||\n              this.compilerConfig.logBindingUpdate;\n          this.ngOnChanges = dirLifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1;\n          this.ngOnInit = dirLifecycleHooks.indexOf(LifecycleHooks.OnInit) !== -1;\n          this.ngDoCheck = dirLifecycleHooks.indexOf(LifecycleHooks.DoCheck) !== -1;\n          this.ngOnDestroy = dirLifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1;\n          if (this.ngOnDestroy) {\n              this.destroyStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnDestroy', []).toStmt());\n          }\n      }\n      DirectiveWrapperBuilder.prototype.build = function () {\n          var dirDepParamNames = [];\n          for (var i = 0; i < this.dirMeta.type.diDeps.length; i++) {\n              dirDepParamNames.push(\"p\" + i);\n          }\n          var methods = [\n              new ClassMethod('ngOnDetach', [\n                  new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n                  new FnParam(COMPONENT_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n                  new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n              ], this.detachStmts),\n              new ClassMethod('ngOnDestroy', [], this.destroyStmts),\n          ];\n          var fields = [\n              new ClassField(EVENT_HANDLER_FIELD_NAME, FUNCTION_TYPE, [StmtModifier.Private]),\n              new ClassField(CONTEXT_FIELD_NAME, importType(this.dirMeta.type)),\n              new ClassField(CHANGED_FIELD_NAME, BOOL_TYPE, [StmtModifier.Private]),\n          ];\n          var ctorStmts = [THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt()];\n          if (this.genChanges) {\n              fields.push(new ClassField(CHANGES_FIELD_NAME, new MapType(DYNAMIC_TYPE), [StmtModifier.Private]));\n              ctorStmts.push(RESET_CHANGES_STMT);\n          }\n          ctorStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n              .set(importExpr(this.dirMeta.type)\n              .instantiate(dirDepParamNames.map(function (paramName) { return variable(paramName); })))\n              .toStmt());\n          return createClassStmt({\n              name: DirectiveWrapperCompiler.dirWrapperClassName(this.dirMeta.type),\n              ctorParams: dirDepParamNames.map(function (paramName) { return new FnParam(paramName, DYNAMIC_TYPE); }),\n              builders: [{ fields: fields, ctorStmts: ctorStmts, methods: methods }, this]\n          });\n      };\n      return DirectiveWrapperBuilder;\n  }());\n  function addNgDoCheckMethod(builder) {\n      var changedVar = variable('changed');\n      var stmts = [\n          changedVar.set(THIS_EXPR.prop(CHANGED_FIELD_NAME)).toDeclStmt(),\n          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(false)).toStmt(),\n      ];\n      var lifecycleStmts = [];\n      if (builder.genChanges) {\n          var onChangesStmts = [];\n          if (builder.ngOnChanges) {\n              onChangesStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n                  .callMethod('ngOnChanges', [THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n                  .toStmt());\n          }\n          if (builder.compilerConfig.logBindingUpdate) {\n              onChangesStmts.push(importExpr(resolveIdentifier(Identifiers.setBindingDebugInfoForChanges))\n                  .callFn([VIEW_VAR.prop('renderer'), RENDER_EL_VAR, THIS_EXPR.prop(CHANGES_FIELD_NAME)])\n                  .toStmt());\n          }\n          onChangesStmts.push(RESET_CHANGES_STMT);\n          lifecycleStmts.push(new IfStmt(changedVar, onChangesStmts));\n      }\n      if (builder.ngOnInit) {\n          lifecycleStmts.push(new IfStmt(VIEW_VAR.prop('numberOfChecks').identical(new LiteralExpr(0)), [THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngOnInit', []).toStmt()]));\n      }\n      if (builder.ngDoCheck) {\n          lifecycleStmts.push(THIS_EXPR.prop(CONTEXT_FIELD_NAME).callMethod('ngDoCheck', []).toStmt());\n      }\n      if (lifecycleStmts.length > 0) {\n          stmts.push(new IfStmt(not(THROW_ON_CHANGE_VAR), lifecycleStmts));\n      }\n      stmts.push(new ReturnStatement(changedVar));\n      builder.methods.push(new ClassMethod('ngDoCheck', [\n          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n      ], stmts, BOOL_TYPE));\n  }\n  function addCheckInputMethod(input, builder) {\n      var field = createCheckBindingField(builder);\n      var onChangeStatements = [\n          THIS_EXPR.prop(CHANGED_FIELD_NAME).set(literal(true)).toStmt(),\n          THIS_EXPR.prop(CONTEXT_FIELD_NAME).prop(input).set(CURR_VALUE_VAR).toStmt(),\n      ];\n      if (builder.genChanges) {\n          onChangeStatements.push(THIS_EXPR.prop(CHANGES_FIELD_NAME)\n              .key(literal(input))\n              .set(importExpr(resolveIdentifier(Identifiers.SimpleChange))\n              .instantiate([field.expression, CURR_VALUE_VAR]))\n              .toStmt());\n      }\n      var methodBody = createCheckBindingStmt({ currValExpr: CURR_VALUE_VAR, forceUpdate: FORCE_UPDATE_VAR, stmts: [] }, field.expression, THROW_ON_CHANGE_VAR, onChangeStatements);\n      builder.methods.push(new ClassMethod(\"check_\" + input, [\n          new FnParam(CURR_VALUE_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n          new FnParam(FORCE_UPDATE_VAR.name, BOOL_TYPE),\n      ], methodBody));\n  }\n  function addCheckHostMethod(hostProps, builder) {\n      var stmts = [];\n      var methodParams = [\n          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(COMPONENT_VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(RENDER_EL_VAR.name, DYNAMIC_TYPE),\n          new FnParam(THROW_ON_CHANGE_VAR.name, BOOL_TYPE),\n      ];\n      hostProps.forEach(function (hostProp, hostPropIdx) {\n          var field = createCheckBindingField(builder);\n          var evalResult = convertPropertyBinding(builder, null, THIS_EXPR.prop(CONTEXT_FIELD_NAME), hostProp.value, field.bindingId);\n          if (!evalResult) {\n              return;\n          }\n          var securityContextExpr;\n          if (hostProp.needsRuntimeSecurityContext) {\n              securityContextExpr = variable(\"secCtx_\" + methodParams.length);\n              methodParams.push(new FnParam(securityContextExpr.name, importType(resolveIdentifier(Identifiers.SecurityContext))));\n          }\n          var checkBindingStmts;\n          if (hostProp.isAnimation) {\n              var _a = triggerAnimation(VIEW_VAR, COMPONENT_VIEW_VAR, hostProp, THIS_EXPR.prop(EVENT_HANDLER_FIELD_NAME)\n                  .or(importExpr(resolveIdentifier(Identifiers.noop))), RENDER_EL_VAR, evalResult.currValExpr, field.expression), updateStmts = _a.updateStmts, detachStmts = _a.detachStmts;\n              checkBindingStmts = updateStmts;\n              (_b = builder.detachStmts).push.apply(_b, detachStmts);\n          }\n          else {\n              checkBindingStmts = writeToRenderer(VIEW_VAR, hostProp, RENDER_EL_VAR, evalResult.currValExpr, builder.compilerConfig.logBindingUpdate, securityContextExpr);\n          }\n          stmts.push.apply(stmts, createCheckBindingStmt(evalResult, field.expression, THROW_ON_CHANGE_VAR, checkBindingStmts));\n          var _b;\n      });\n      builder.methods.push(new ClassMethod('checkHost', methodParams, stmts));\n  }\n  function addHandleEventMethod(hostListeners, builder) {\n      var resultVar = variable(\"result\");\n      var actionStmts = [resultVar.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n      hostListeners.forEach(function (hostListener, eventIdx) {\n          var evalResult = convertActionBinding(builder, null, THIS_EXPR.prop(CONTEXT_FIELD_NAME), hostListener.handler, \"sub_\" + eventIdx);\n          var trueStmts = evalResult.stmts;\n          if (evalResult.preventDefault) {\n              trueStmts.push(resultVar.set(evalResult.preventDefault.and(resultVar)).toStmt());\n          }\n          // TODO(tbosch): convert this into a `switch` once our OutputAst supports it.\n          actionStmts.push(new IfStmt(EVENT_NAME_VAR.equals(literal(hostListener.fullName)), trueStmts));\n      });\n      actionStmts.push(new ReturnStatement(resultVar));\n      builder.methods.push(new ClassMethod('handleEvent', [\n          new FnParam(EVENT_NAME_VAR.name, STRING_TYPE),\n          new FnParam(EventHandlerVars.event.name, DYNAMIC_TYPE)\n      ], actionStmts, BOOL_TYPE));\n  }\n  function addSubscribeMethod(dirMeta, builder) {\n      var methodParams = [\n          new FnParam(VIEW_VAR.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(EVENT_HANDLER_FIELD_NAME, DYNAMIC_TYPE)\n      ];\n      var stmts = [\n          THIS_EXPR.prop(EVENT_HANDLER_FIELD_NAME).set(variable(EVENT_HANDLER_FIELD_NAME)).toStmt()\n      ];\n      Object.keys(dirMeta.outputs).forEach(function (emitterPropName, emitterIdx) {\n          var eventName = dirMeta.outputs[emitterPropName];\n          var paramName = \"emit\" + emitterIdx;\n          methodParams.push(new FnParam(paramName, BOOL_TYPE));\n          var subscriptionFieldName = \"subscription\" + emitterIdx;\n          builder.fields.push(new ClassField(subscriptionFieldName, DYNAMIC_TYPE));\n          stmts.push(new IfStmt(variable(paramName), [\n              THIS_EXPR.prop(subscriptionFieldName)\n                  .set(THIS_EXPR.prop(CONTEXT_FIELD_NAME)\n                  .prop(emitterPropName)\n                  .callMethod(BuiltinMethod.SubscribeObservable, [variable(EVENT_HANDLER_FIELD_NAME)\n                      .callMethod(BuiltinMethod.Bind, [VIEW_VAR, literal(eventName)])]))\n                  .toStmt()\n          ]));\n          builder.destroyStmts.push(THIS_EXPR.prop(subscriptionFieldName)\n              .and(THIS_EXPR.prop(subscriptionFieldName).callMethod('unsubscribe', []))\n              .toStmt());\n      });\n      builder.methods.push(new ClassMethod('subscribe', methodParams, stmts));\n  }\n  var ParseResult = (function () {\n      function ParseResult(hostProps, hostListeners, errors) {\n          this.hostProps = hostProps;\n          this.hostListeners = hostListeners;\n          this.errors = errors;\n      }\n      return ParseResult;\n  }());\n  function parseHostBindings(dirMeta, exprParser, schemaRegistry) {\n      var errors = [];\n      var parser = new BindingParser(exprParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n      var sourceFileName = dirMeta.type.moduleUrl ?\n          \"in Directive \" + dirMeta.type.name + \" in \" + dirMeta.type.moduleUrl :\n          \"in Directive \" + dirMeta.type.name;\n      var sourceFile = new ParseSourceFile('', sourceFileName);\n      var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n      var parsedHostProps = parser.createDirectiveHostPropertyAsts(dirMeta.toSummary(), sourceSpan);\n      var parsedHostListeners = parser.createDirectiveHostEventAsts(dirMeta.toSummary(), sourceSpan);\n      return new ParseResult(parsedHostProps, parsedHostListeners, errors);\n  }\n  function reportParseErrors(parseErrors, console) {\n      var warnings = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.WARNING; });\n      var errors = parseErrors.filter(function (error) { return error.level === exports.ParseErrorLevel.FATAL; });\n      if (warnings.length > 0) {\n          this._console.warn(\"Directive parse warnings:\\n\" + warnings.join('\\n'));\n      }\n      if (errors.length > 0) {\n          throw new Error(\"Directive parse errors:\\n\" + errors.join('\\n'));\n      }\n  }\n  var DirectiveWrapperExpressions = (function () {\n      function DirectiveWrapperExpressions() {\n      }\n      DirectiveWrapperExpressions.create = function (dir, depsExpr) {\n          return importExpr(dir).instantiate(depsExpr, importType(dir));\n      };\n      DirectiveWrapperExpressions.context = function (dirWrapper) {\n          return dirWrapper.prop(CONTEXT_FIELD_NAME);\n      };\n      DirectiveWrapperExpressions.ngDoCheck = function (dirWrapper, view, renderElement, throwOnChange) {\n          return dirWrapper.callMethod('ngDoCheck', [view, renderElement, throwOnChange]);\n      };\n      DirectiveWrapperExpressions.checkHost = function (hostProps, dirWrapper, view, componentView, renderElement, throwOnChange, runtimeSecurityContexts) {\n          if (hostProps.length) {\n              return [dirWrapper\n                      .callMethod('checkHost', [view, componentView, renderElement, throwOnChange].concat(runtimeSecurityContexts))\n                      .toStmt()];\n          }\n          else {\n              return [];\n          }\n      };\n      DirectiveWrapperExpressions.ngOnDetach = function (hostProps, dirWrapper, view, componentView, renderEl) {\n          if (hostProps.some(function (prop) { return prop.isAnimation; })) {\n              return [dirWrapper\n                      .callMethod('ngOnDetach', [\n                      view,\n                      componentView,\n                      renderEl,\n                  ])\n                      .toStmt()];\n          }\n          else {\n              return [];\n          }\n      };\n      DirectiveWrapperExpressions.ngOnDestroy = function (dir, dirWrapper) {\n          if (dir.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1 ||\n              Object.keys(dir.outputs).length > 0) {\n              return [dirWrapper.callMethod('ngOnDestroy', []).toStmt()];\n          }\n          else {\n              return [];\n          }\n      };\n      DirectiveWrapperExpressions.subscribe = function (dirMeta, hostProps, usedEvents, dirWrapper, view, eventListener) {\n          var needsSubscribe = false;\n          var eventFlags = [];\n          Object.keys(dirMeta.outputs).forEach(function (propName) {\n              var eventName = dirMeta.outputs[propName];\n              var eventUsed = usedEvents.indexOf(eventName) > -1;\n              needsSubscribe = needsSubscribe || eventUsed;\n              eventFlags.push(literal(eventUsed));\n          });\n          hostProps.forEach(function (hostProp) {\n              if (hostProp.isAnimation && usedEvents.length > 0) {\n                  needsSubscribe = true;\n              }\n          });\n          if (needsSubscribe) {\n              return [\n                  dirWrapper.callMethod('subscribe', [view, eventListener].concat(eventFlags)).toStmt()\n              ];\n          }\n          else {\n              return [];\n          }\n      };\n      DirectiveWrapperExpressions.handleEvent = function (hostEvents, dirWrapper, eventName, event) {\n          return dirWrapper.callMethod('handleEvent', [eventName, event]);\n      };\n      return DirectiveWrapperExpressions;\n  }());\n\n  function convertValueToOutputAst(value, type) {\n      if (type === void 0) { type = null; }\n      return visitValue(value, new _ValueOutputAstTransformer(), type);\n  }\n  var _ValueOutputAstTransformer = (function () {\n      function _ValueOutputAstTransformer() {\n      }\n      _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n          var _this = this;\n          return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n      };\n      _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n          var _this = this;\n          var entries = [];\n          Object.keys(map).forEach(function (key) { entries.push([key, visitValue(map[key], _this, null)]); });\n          return literalMap(entries, type);\n      };\n      _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n      _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n          if (value instanceof CompileIdentifierMetadata) {\n              return importExpr(value);\n          }\n          else if (value instanceof Expression) {\n              return value;\n          }\n          else {\n              throw new Error(\"Illegal state: Don't now how to compile value \" + value);\n          }\n      };\n      return _ValueOutputAstTransformer;\n  }());\n\n  var _DebugState = (function () {\n      function _DebugState(nodeIndex, sourceAst) {\n          this.nodeIndex = nodeIndex;\n          this.sourceAst = sourceAst;\n      }\n      return _DebugState;\n  }());\n  var NULL_DEBUG_STATE = new _DebugState(null, null);\n  var CompileMethod = (function () {\n      function CompileMethod(_view) {\n          this._view = _view;\n          this._newState = NULL_DEBUG_STATE;\n          this._currState = NULL_DEBUG_STATE;\n          this._bodyStatements = [];\n          this._debugEnabled = this._view.genConfig.genDebugInfo;\n      }\n      CompileMethod.prototype._updateDebugContextIfNeeded = function () {\n          if (this._newState.nodeIndex !== this._currState.nodeIndex ||\n              this._newState.sourceAst !== this._currState.sourceAst) {\n              var expr = this._updateDebugContext(this._newState);\n              if (isPresent(expr)) {\n                  this._bodyStatements.push(expr.toStmt());\n              }\n          }\n      };\n      CompileMethod.prototype._updateDebugContext = function (newState) {\n          this._currState = this._newState = newState;\n          if (this._debugEnabled) {\n              var sourceLocation = isPresent(newState.sourceAst) ? newState.sourceAst.sourceSpan.start : null;\n              return THIS_EXPR.callMethod('debug', [\n                  literal(newState.nodeIndex),\n                  isPresent(sourceLocation) ? literal(sourceLocation.line) : NULL_EXPR,\n                  isPresent(sourceLocation) ? literal(sourceLocation.col) : NULL_EXPR\n              ]);\n          }\n          else {\n              return null;\n          }\n      };\n      CompileMethod.prototype.resetDebugInfoExpr = function (nodeIndex, templateAst) {\n          var res = this._updateDebugContext(new _DebugState(nodeIndex, templateAst));\n          return res || NULL_EXPR;\n      };\n      CompileMethod.prototype.resetDebugInfo = function (nodeIndex, templateAst) {\n          this._newState = new _DebugState(nodeIndex, templateAst);\n      };\n      CompileMethod.prototype.push = function () {\n          var stmts = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              stmts[_i - 0] = arguments[_i];\n          }\n          this.addStmts(stmts);\n      };\n      CompileMethod.prototype.addStmt = function (stmt) {\n          this._updateDebugContextIfNeeded();\n          this._bodyStatements.push(stmt);\n      };\n      CompileMethod.prototype.addStmts = function (stmts) {\n          this._updateDebugContextIfNeeded();\n          (_a = this._bodyStatements).push.apply(_a, stmts);\n          var _a;\n      };\n      CompileMethod.prototype.finish = function () { return this._bodyStatements; };\n      CompileMethod.prototype.isEmpty = function () { return this._bodyStatements.length === 0; };\n      return CompileMethod;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$15 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function getPropertyInView(property, callingView, definedView) {\n      if (callingView === definedView) {\n          return property;\n      }\n      else {\n          var viewProp = THIS_EXPR;\n          var currView = callingView;\n          while (currView !== definedView && isPresent(currView.declarationElement.view)) {\n              currView = currView.declarationElement.view;\n              viewProp = viewProp.prop('parentView');\n          }\n          if (currView !== definedView) {\n              throw new Error(\"Internal error: Could not calculate a property in a parent view: \" + property);\n          }\n          return property.visitExpression(new _ReplaceViewTransformer(viewProp, definedView), null);\n      }\n  }\n  var _ReplaceViewTransformer = (function (_super) {\n      __extends$15(_ReplaceViewTransformer, _super);\n      function _ReplaceViewTransformer(_viewExpr, _view) {\n          _super.call(this);\n          this._viewExpr = _viewExpr;\n          this._view = _view;\n      }\n      _ReplaceViewTransformer.prototype._isThis = function (expr) {\n          return expr instanceof ReadVarExpr && expr.builtin === BuiltinVar.This;\n      };\n      _ReplaceViewTransformer.prototype.visitReadVarExpr = function (ast, context) {\n          return this._isThis(ast) ? this._viewExpr : ast;\n      };\n      _ReplaceViewTransformer.prototype.visitReadPropExpr = function (ast, context) {\n          if (this._isThis(ast.receiver)) {\n              // Note: Don't cast for members of the AppView base class...\n              if (this._view.fields.some(function (field) { return field.name == ast.name; }) ||\n                  this._view.getters.some(function (field) { return field.name == ast.name; })) {\n                  return this._viewExpr.cast(this._view.classType).prop(ast.name);\n              }\n          }\n          return _super.prototype.visitReadPropExpr.call(this, ast, context);\n      };\n      return _ReplaceViewTransformer;\n  }(ExpressionTransformer));\n  function injectFromViewParentInjector(view, token, optional) {\n      var viewExpr;\n      if (view.viewType === ViewType.HOST) {\n          viewExpr = THIS_EXPR;\n      }\n      else {\n          viewExpr = THIS_EXPR.prop('parentView');\n      }\n      var args = [createDiTokenExpression(token), THIS_EXPR.prop('parentIndex')];\n      if (optional) {\n          args.push(NULL_EXPR);\n      }\n      return viewExpr.callMethod('injectorGet', args);\n  }\n  function getViewClassName(component, embeddedTemplateIndex) {\n      return \"View_\" + component.type.name + embeddedTemplateIndex;\n  }\n  function getHandleEventMethodName(elementIndex) {\n      return \"handleEvent_\" + elementIndex;\n  }\n\n  var ViewQueryValues = (function () {\n      function ViewQueryValues(view, values) {\n          this.view = view;\n          this.values = values;\n      }\n      return ViewQueryValues;\n  }());\n  var CompileQuery = (function () {\n      function CompileQuery(meta, queryList, ownerDirectiveExpression, view) {\n          this.meta = meta;\n          this.queryList = queryList;\n          this.ownerDirectiveExpression = ownerDirectiveExpression;\n          this.view = view;\n          this._values = new ViewQueryValues(view, []);\n      }\n      CompileQuery.prototype.addValue = function (value, view) {\n          var currentView = view;\n          var elPath = [];\n          while (isPresent(currentView) && currentView !== this.view) {\n              var parentEl = currentView.declarationElement;\n              elPath.unshift(parentEl);\n              currentView = parentEl.view;\n          }\n          var queryListForDirtyExpr = getPropertyInView(this.queryList, view, this.view);\n          var viewValues = this._values;\n          elPath.forEach(function (el) {\n              var last = viewValues.values.length > 0 ? viewValues.values[viewValues.values.length - 1] : null;\n              if (last instanceof ViewQueryValues && last.view === el.embeddedView) {\n                  viewValues = last;\n              }\n              else {\n                  var newViewValues = new ViewQueryValues(el.embeddedView, []);\n                  viewValues.values.push(newViewValues);\n                  viewValues = newViewValues;\n              }\n          });\n          viewValues.values.push(value);\n          if (elPath.length > 0) {\n              view.dirtyParentQueriesMethod.addStmt(queryListForDirtyExpr.callMethod('setDirty', []).toStmt());\n          }\n      };\n      CompileQuery.prototype._isStatic = function () {\n          return !this._values.values.some(function (value) { return value instanceof ViewQueryValues; });\n      };\n      CompileQuery.prototype.afterChildren = function (targetStaticMethod, targetDynamicMethod) {\n          var values = createQueryValues(this._values);\n          var updateStmts = [this.queryList.callMethod('reset', [literalArr(values)]).toStmt()];\n          if (isPresent(this.ownerDirectiveExpression)) {\n              var valueExpr = this.meta.first ? this.queryList.prop('first') : this.queryList;\n              updateStmts.push(this.ownerDirectiveExpression.prop(this.meta.propertyName).set(valueExpr).toStmt());\n          }\n          if (!this.meta.first) {\n              updateStmts.push(this.queryList.callMethod('notifyOnChanges', []).toStmt());\n          }\n          if (this.meta.first && this._isStatic()) {\n              // for queries that don't change and the user asked for a single element,\n              // set it immediately. That is e.g. needed for querying for ViewContainerRefs, ...\n              // we don't do this for QueryLists for now as this would break the timing when\n              // we call QueryList listeners...\n              targetStaticMethod.addStmts(updateStmts);\n          }\n          else {\n              targetDynamicMethod.addStmt(new IfStmt(this.queryList.prop('dirty'), updateStmts));\n          }\n      };\n      return CompileQuery;\n  }());\n  function createQueryValues(viewValues) {\n      return ListWrapper.flatten(viewValues.values.map(function (entry) {\n          if (entry instanceof ViewQueryValues) {\n              return mapNestedViews(entry.view.declarationElement.viewContainer, entry.view, createQueryValues(entry));\n          }\n          else {\n              return entry;\n          }\n      }));\n  }\n  function mapNestedViews(viewContainer, view, expressions) {\n      var adjustedExpressions = expressions.map(function (expr) { return replaceVarInExpression(THIS_EXPR.name, variable('nestedView'), expr); });\n      return viewContainer.callMethod('mapNestedViews', [\n          variable(view.className),\n          fn([new FnParam('nestedView', view.classType)], [new ReturnStatement(literalArr(adjustedExpressions))], DYNAMIC_TYPE)\n      ]);\n  }\n  function createQueryList(query, directiveInstance, propertyName, compileView) {\n      compileView.fields.push(new ClassField(propertyName, importType(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])));\n      var expr = THIS_EXPR.prop(propertyName);\n      compileView.createMethod.addStmt(THIS_EXPR.prop(propertyName)\n          .set(importExpr(resolveIdentifier(Identifiers.QueryList), [DYNAMIC_TYPE])\n          .instantiate([]))\n          .toStmt());\n      return expr;\n  }\n  function addQueryToTokenMap(map, query) {\n      query.meta.selectors.forEach(function (selector) {\n          var entry = map.get(selector.reference);\n          if (!entry) {\n              entry = [];\n              map.set(selector.reference, entry);\n          }\n          entry.push(query);\n      });\n  }\n\n  var ViewTypeEnum = (function () {\n      function ViewTypeEnum() {\n      }\n      ViewTypeEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ViewType, value);\n      };\n      return ViewTypeEnum;\n  }());\n  var ViewEncapsulationEnum = (function () {\n      function ViewEncapsulationEnum() {\n      }\n      ViewEncapsulationEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ViewEncapsulation, value);\n      };\n      return ViewEncapsulationEnum;\n  }());\n  var ChangeDetectorStatusEnum = (function () {\n      function ChangeDetectorStatusEnum() {\n      }\n      ChangeDetectorStatusEnum.fromValue = function (value) {\n          return createEnumExpression(Identifiers.ChangeDetectorStatus, value);\n      };\n      return ChangeDetectorStatusEnum;\n  }());\n  var ViewConstructorVars = (function () {\n      function ViewConstructorVars() {\n      }\n      ViewConstructorVars.viewUtils = variable('viewUtils');\n      ViewConstructorVars.parentView = variable('parentView');\n      ViewConstructorVars.parentIndex = variable('parentIndex');\n      ViewConstructorVars.parentElement = variable('parentElement');\n      return ViewConstructorVars;\n  }());\n  var ViewProperties = (function () {\n      function ViewProperties() {\n      }\n      ViewProperties.renderer = THIS_EXPR.prop('renderer');\n      ViewProperties.viewUtils = THIS_EXPR.prop('viewUtils');\n      return ViewProperties;\n  }());\n  var InjectMethodVars = (function () {\n      function InjectMethodVars() {\n      }\n      InjectMethodVars.token = variable('token');\n      InjectMethodVars.requestNodeIndex = variable('requestNodeIndex');\n      InjectMethodVars.notFoundResult = variable('notFoundResult');\n      return InjectMethodVars;\n  }());\n  var DetectChangesVars = (function () {\n      function DetectChangesVars() {\n      }\n      DetectChangesVars.throwOnChange = variable(\"throwOnChange\");\n      DetectChangesVars.changes = variable(\"changes\");\n      DetectChangesVars.changed = variable(\"changed\");\n      return DetectChangesVars;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var ViewClassDependency = (function () {\n      function ViewClassDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ViewClassDependency;\n  }());\n  var ComponentFactoryDependency = (function () {\n      function ComponentFactoryDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ComponentFactoryDependency;\n  }());\n  var DirectiveWrapperDependency = (function () {\n      function DirectiveWrapperDependency(dir, placeholder) {\n          this.dir = dir;\n          this.placeholder = placeholder;\n      }\n      return DirectiveWrapperDependency;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$14 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var CompileNode = (function () {\n      function CompileNode(parent, view, nodeIndex, renderNode, sourceAst) {\n          this.parent = parent;\n          this.view = view;\n          this.nodeIndex = nodeIndex;\n          this.renderNode = renderNode;\n          this.sourceAst = sourceAst;\n      }\n      CompileNode.prototype.isNull = function () { return !this.renderNode; };\n      CompileNode.prototype.isRootElement = function () { return this.view != this.parent.view; };\n      return CompileNode;\n  }());\n  var CompileElement = (function (_super) {\n      __extends$14(CompileElement, _super);\n      function CompileElement(parent, view, nodeIndex, renderNode, sourceAst, component, _directives, _resolvedProvidersArray, hasViewContainer, hasEmbeddedView, references, _targetDependencies) {\n          var _this = this;\n          _super.call(this, parent, view, nodeIndex, renderNode, sourceAst);\n          this.component = component;\n          this._directives = _directives;\n          this._resolvedProvidersArray = _resolvedProvidersArray;\n          this.hasViewContainer = hasViewContainer;\n          this.hasEmbeddedView = hasEmbeddedView;\n          this._targetDependencies = _targetDependencies;\n          this.compViewExpr = null;\n          this.instances = new Map();\n          this.directiveWrapperInstance = new Map();\n          this._queryCount = 0;\n          this._queries = new Map();\n          this.contentNodesByNgContentIndex = null;\n          this.referenceTokens = {};\n          references.forEach(function (ref) { return _this.referenceTokens[ref.name] = ref.value; });\n          this.elementRef =\n              importExpr(resolveIdentifier(Identifiers.ElementRef)).instantiate([this.renderNode]);\n          this.instances.set(resolveIdentifierToken(Identifiers.ElementRef).reference, this.elementRef);\n          this.instances.set(resolveIdentifierToken(Identifiers.Injector).reference, THIS_EXPR.callMethod('injector', [literal(this.nodeIndex)]));\n          this.instances.set(resolveIdentifierToken(Identifiers.Renderer).reference, THIS_EXPR.prop('renderer'));\n          if (this.hasViewContainer || this.hasEmbeddedView) {\n              this._createViewContainer();\n          }\n          if (this.component) {\n              this._createComponentFactoryResolver();\n          }\n      }\n      CompileElement.createNull = function () {\n          return new CompileElement(null, null, null, null, null, null, [], [], false, false, [], []);\n      };\n      CompileElement.prototype._createViewContainer = function () {\n          var fieldName = \"_vc_\" + this.nodeIndex;\n          var parentNodeIndex = this.isRootElement() ? null : this.parent.nodeIndex;\n          // private is fine here as no child view will reference a ViewContainer\n          this.view.fields.push(new ClassField(fieldName, importType(resolveIdentifier(Identifiers.ViewContainer)), [StmtModifier.Private]));\n          var statement = THIS_EXPR.prop(fieldName)\n              .set(importExpr(resolveIdentifier(Identifiers.ViewContainer)).instantiate([\n              literal(this.nodeIndex), literal(parentNodeIndex), THIS_EXPR, this.renderNode\n          ]))\n              .toStmt();\n          this.view.createMethod.addStmt(statement);\n          this.viewContainer = THIS_EXPR.prop(fieldName);\n          this.instances.set(resolveIdentifierToken(Identifiers.ViewContainer).reference, this.viewContainer);\n          this.view.viewContainers.push(this.viewContainer);\n      };\n      CompileElement.prototype._createComponentFactoryResolver = function () {\n          var _this = this;\n          var entryComponents = this.component.entryComponents.map(function (entryComponent) {\n              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n              _this._targetDependencies.push(new ComponentFactoryDependency(entryComponent, id));\n              return id;\n          });\n          if (!entryComponents || entryComponents.length === 0) {\n              return;\n          }\n          var createComponentFactoryResolverExpr = importExpr(resolveIdentifier(Identifiers.CodegenComponentFactoryResolver)).instantiate([\n              literalArr(entryComponents.map(function (entryComponent) { return importExpr(entryComponent); })),\n              injectFromViewParentInjector(this.view, resolveIdentifierToken(Identifiers.ComponentFactoryResolver), false)\n          ]);\n          var provider = new CompileProviderMetadata({\n              token: resolveIdentifierToken(Identifiers.ComponentFactoryResolver),\n              useValue: createComponentFactoryResolverExpr\n          });\n          // Add ComponentFactoryResolver as first provider as it does not have deps on other providers\n          // ProviderAstType.PrivateService as only the component and its view can see it,\n          // but nobody else\n          this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.PrivateService, [], this.sourceAst.sourceSpan));\n      };\n      CompileElement.prototype.setComponentView = function (compViewExpr) {\n          this.compViewExpr = compViewExpr;\n          this.contentNodesByNgContentIndex =\n              new Array(this.component.template.ngContentSelectors.length);\n          for (var i = 0; i < this.contentNodesByNgContentIndex.length; i++) {\n              this.contentNodesByNgContentIndex[i] = [];\n          }\n      };\n      CompileElement.prototype.setEmbeddedView = function (embeddedView) {\n          this.embeddedView = embeddedView;\n          if (isPresent(embeddedView)) {\n              var createTemplateRefExpr = importExpr(resolveIdentifier(Identifiers.TemplateRef_)).instantiate([\n                  THIS_EXPR, literal(this.nodeIndex), this.renderNode\n              ]);\n              var provider = new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.TemplateRef),\n                  useValue: createTemplateRefExpr\n              });\n              // Add TemplateRef as first provider as it does not have deps on other providers\n              this._resolvedProvidersArray.unshift(new ProviderAst(provider.token, false, true, [provider], exports.ProviderAstType.Builtin, [], this.sourceAst.sourceSpan));\n          }\n      };\n      CompileElement.prototype.beforeChildren = function () {\n          var _this = this;\n          if (this.hasViewContainer) {\n              this.instances.set(resolveIdentifierToken(Identifiers.ViewContainerRef).reference, this.viewContainer.prop('vcRef'));\n          }\n          this._resolvedProviders = new Map();\n          this._resolvedProvidersArray.forEach(function (provider) { return _this._resolvedProviders.set(provider.token.reference, provider); });\n          // create all the provider instances, some in the view constructor,\n          // some as getters. We rely on the fact that they are already sorted topologically.\n          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n              var isDirectiveWrapper = resolvedProvider.providerType === exports.ProviderAstType.Component ||\n                  resolvedProvider.providerType === exports.ProviderAstType.Directive;\n              var providerValueExpressions = resolvedProvider.providers.map(function (provider) {\n                  if (provider.useExisting) {\n                      return _this._getDependency(resolvedProvider.providerType, new CompileDiDependencyMetadata({ token: provider.useExisting }));\n                  }\n                  else if (provider.useFactory) {\n                      var deps = provider.deps || provider.useFactory.diDeps;\n                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n                      return importExpr(provider.useFactory).callFn(depsExpr);\n                  }\n                  else if (provider.useClass) {\n                      var deps = provider.deps || provider.useClass.diDeps;\n                      var depsExpr = deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep); });\n                      if (isDirectiveWrapper) {\n                          var directiveWrapperIdentifier = new CompileIdentifierMetadata({ name: DirectiveWrapperCompiler.dirWrapperClassName(provider.useClass) });\n                          _this._targetDependencies.push(new DirectiveWrapperDependency(provider.useClass, directiveWrapperIdentifier));\n                          return DirectiveWrapperExpressions.create(directiveWrapperIdentifier, depsExpr);\n                      }\n                      else {\n                          return importExpr(provider.useClass)\n                              .instantiate(depsExpr, importType(provider.useClass));\n                      }\n                  }\n                  else {\n                      return convertValueToOutputAst(provider.useValue);\n                  }\n              });\n              var propName = \"_\" + resolvedProvider.token.name + \"_\" + _this.nodeIndex + \"_\" + _this.instances.size;\n              var instance = createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager, _this);\n              if (isDirectiveWrapper) {\n                  _this.directiveWrapperInstance.set(resolvedProvider.token.reference, instance);\n                  _this.instances.set(resolvedProvider.token.reference, DirectiveWrapperExpressions.context(instance));\n              }\n              else {\n                  _this.instances.set(resolvedProvider.token.reference, instance);\n              }\n          });\n          var _loop_1 = function(i) {\n              var directive = this_1._directives[i];\n              var directiveInstance = this_1.instances.get(identifierToken(directive.type).reference);\n              directive.queries.forEach(function (queryMeta) { _this._addQuery(queryMeta, directiveInstance); });\n          };\n          var this_1 = this;\n          for (var i = 0; i < this._directives.length; i++) {\n              _loop_1(i);\n          }\n          var queriesWithReads = [];\n          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n              var queriesForProvider = _this._getQueriesFor(resolvedProvider.token);\n              queriesWithReads.push.apply(queriesWithReads, queriesForProvider.map(function (query) { return new _QueryWithRead(query, resolvedProvider.token); }));\n          });\n          Object.keys(this.referenceTokens).forEach(function (varName) {\n              var token = _this.referenceTokens[varName];\n              var varValue;\n              if (token) {\n                  varValue = _this.instances.get(token.reference);\n              }\n              else {\n                  varValue = _this.renderNode;\n              }\n              _this.view.locals.set(varName, varValue);\n              var varToken = new CompileTokenMetadata({ value: varName });\n              queriesWithReads.push.apply(queriesWithReads, _this._getQueriesFor(varToken).map(function (query) { return new _QueryWithRead(query, varToken); }));\n          });\n          queriesWithReads.forEach(function (queryWithRead) {\n              var value;\n              if (isPresent(queryWithRead.read.identifier)) {\n                  // query for an identifier\n                  value = _this.instances.get(queryWithRead.read.reference);\n              }\n              else {\n                  // query for a reference\n                  var token = _this.referenceTokens[queryWithRead.read.value];\n                  if (isPresent(token)) {\n                      value = _this.instances.get(token.reference);\n                  }\n                  else {\n                      value = _this.elementRef;\n                  }\n              }\n              if (isPresent(value)) {\n                  queryWithRead.query.addValue(value, _this.view);\n              }\n          });\n      };\n      CompileElement.prototype.afterChildren = function (childNodeCount) {\n          var _this = this;\n          Array.from(this._resolvedProviders.values()).forEach(function (resolvedProvider) {\n              // Note: afterChildren is called after recursing into children.\n              // This is good so that an injector match in an element that is closer to a requesting element\n              // matches first.\n              var providerExpr = _this.instances.get(resolvedProvider.token.reference);\n              // Note: view providers are only visible on the injector of that element.\n              // This is not fully correct as the rules during codegen don't allow a directive\n              // to get hold of a view provdier on the same element. We still do this semantic\n              // as it simplifies our model to having only one runtime injector per element.\n              var providerChildNodeCount = resolvedProvider.providerType === exports.ProviderAstType.PrivateService ? 0 : childNodeCount;\n              _this.view.injectorGetMethod.addStmt(createInjectInternalCondition(_this.nodeIndex, providerChildNodeCount, resolvedProvider, providerExpr));\n          });\n          Array.from(this._queries.values())\n              .forEach(function (queries) { return queries.forEach(function (q) {\n              return q.afterChildren(_this.view.createMethod, _this.view.updateContentQueriesMethod);\n          }); });\n      };\n      CompileElement.prototype.addContentNode = function (ngContentIndex, nodeExpr) {\n          this.contentNodesByNgContentIndex[ngContentIndex].push(nodeExpr);\n      };\n      CompileElement.prototype.getComponent = function () {\n          return isPresent(this.component) ?\n              this.instances.get(identifierToken(this.component.type).reference) :\n              null;\n      };\n      CompileElement.prototype.getProviderTokens = function () {\n          return Array.from(this._resolvedProviders.values())\n              .map(function (resolvedProvider) { return createDiTokenExpression(resolvedProvider.token); });\n      };\n      CompileElement.prototype._getQueriesFor = function (token) {\n          var result = [];\n          var currentEl = this;\n          var distance = 0;\n          var queries;\n          while (!currentEl.isNull()) {\n              queries = currentEl._queries.get(token.reference);\n              if (isPresent(queries)) {\n                  result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n              }\n              if (currentEl._directives.length > 0) {\n                  distance++;\n              }\n              currentEl = currentEl.parent;\n          }\n          queries = this.view.componentView.viewQueries.get(token.reference);\n          if (isPresent(queries)) {\n              result.push.apply(result, queries);\n          }\n          return result;\n      };\n      CompileElement.prototype._addQuery = function (queryMeta, directiveInstance) {\n          var propName = \"_query_\" + queryMeta.selectors[0].name + \"_\" + this.nodeIndex + \"_\" + this._queryCount++;\n          var queryList = createQueryList(queryMeta, directiveInstance, propName, this.view);\n          var query = new CompileQuery(queryMeta, queryList, directiveInstance, this.view);\n          addQueryToTokenMap(this._queries, query);\n          return query;\n      };\n      CompileElement.prototype._getLocalDependency = function (requestingProviderType, dep) {\n          var result = null;\n          if (isPresent(dep.token)) {\n              // access builtins with special visibility\n              if (!result) {\n                  if (dep.token.reference ===\n                      resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n                      if (requestingProviderType === exports.ProviderAstType.Component) {\n                          return this.compViewExpr.prop('ref');\n                      }\n                      else {\n                          return getPropertyInView(THIS_EXPR.prop('ref'), this.view, this.view.componentView);\n                      }\n                  }\n              }\n              // access regular providers on the element\n              if (!result) {\n                  var resolvedProvider = this._resolvedProviders.get(dep.token.reference);\n                  // don't allow directives / public services to access private services.\n                  // only components and private services can access private services.\n                  if (resolvedProvider && (requestingProviderType === exports.ProviderAstType.Directive ||\n                      requestingProviderType === exports.ProviderAstType.PublicService) &&\n                      resolvedProvider.providerType === exports.ProviderAstType.PrivateService) {\n                      return null;\n                  }\n                  result = this.instances.get(dep.token.reference);\n              }\n          }\n          return result;\n      };\n      CompileElement.prototype._getDependency = function (requestingProviderType, dep) {\n          var currElement = this;\n          var result = null;\n          if (dep.isValue) {\n              result = literal(dep.value);\n          }\n          if (!result && !dep.isSkipSelf) {\n              result = this._getLocalDependency(requestingProviderType, dep);\n          }\n          // check parent elements\n          while (!result && !currElement.parent.isNull()) {\n              currElement = currElement.parent;\n              result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, new CompileDiDependencyMetadata({ token: dep.token }));\n          }\n          if (!result) {\n              result = injectFromViewParentInjector(this.view, dep.token, dep.isOptional);\n          }\n          if (!result) {\n              result = NULL_EXPR;\n          }\n          return getPropertyInView(result, this.view, currElement.view);\n      };\n      return CompileElement;\n  }(CompileNode));\n  function createInjectInternalCondition(nodeIndex, childNodeCount, provider, providerExpr) {\n      var indexCondition;\n      if (childNodeCount > 0) {\n          indexCondition = literal(nodeIndex)\n              .lowerEquals(InjectMethodVars.requestNodeIndex)\n              .and(InjectMethodVars.requestNodeIndex.lowerEquals(literal(nodeIndex + childNodeCount)));\n      }\n      else {\n          indexCondition = literal(nodeIndex).identical(InjectMethodVars.requestNodeIndex);\n      }\n      return new IfStmt(InjectMethodVars.token.identical(createDiTokenExpression(provider.token)).and(indexCondition), [new ReturnStatement(providerExpr)]);\n  }\n  function createProviderProperty(propName, provider, providerValueExpressions, isMulti, isEager, compileElement) {\n      var view = compileElement.view;\n      var resolvedProviderValueExpr;\n      var type;\n      if (isMulti) {\n          resolvedProviderValueExpr = literalArr(providerValueExpressions);\n          type = new ArrayType(DYNAMIC_TYPE);\n      }\n      else {\n          resolvedProviderValueExpr = providerValueExpressions[0];\n          type = providerValueExpressions[0].type;\n      }\n      if (!type) {\n          type = DYNAMIC_TYPE;\n      }\n      if (isEager) {\n          view.fields.push(new ClassField(propName, type));\n          view.createMethod.addStmt(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n      }\n      else {\n          var internalField = \"_\" + propName;\n          view.fields.push(new ClassField(internalField, type));\n          var getter = new CompileMethod(view);\n          getter.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n          // Note: Equals is important for JS so that it also checks the undefined case!\n          getter.addStmt(new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]));\n          getter.addStmt(new ReturnStatement(THIS_EXPR.prop(internalField)));\n          view.getters.push(new ClassGetter(propName, getter.finish(), type));\n      }\n      return THIS_EXPR.prop(propName);\n  }\n  var _QueryWithRead = (function () {\n      function _QueryWithRead(query, match) {\n          this.query = query;\n          this.read = query.meta.read || match;\n      }\n      return _QueryWithRead;\n  }());\n\n  var CompilePipe = (function () {\n      function CompilePipe(view, meta) {\n          var _this = this;\n          this.view = view;\n          this.meta = meta;\n          this._purePipeProxyCount = 0;\n          this.instance = THIS_EXPR.prop(\"_pipe_\" + meta.name + \"_\" + view.pipeCount++);\n          var deps = this.meta.type.diDeps.map(function (diDep) {\n              if (diDep.token.reference ===\n                  resolveIdentifierToken(Identifiers.ChangeDetectorRef).reference) {\n                  return getPropertyInView(THIS_EXPR.prop('ref'), _this.view, _this.view.componentView);\n              }\n              return injectFromViewParentInjector(view, diDep.token, false);\n          });\n          this.view.fields.push(new ClassField(this.instance.name, importType(this.meta.type)));\n          this.view.createMethod.resetDebugInfo(null, null);\n          this.view.createMethod.addStmt(THIS_EXPR.prop(this.instance.name)\n              .set(importExpr(this.meta.type).instantiate(deps))\n              .toStmt());\n      }\n      CompilePipe.call = function (view, name, args) {\n          var compView = view.componentView;\n          var meta = _findPipeMeta(compView, name);\n          var pipe;\n          if (meta.pure) {\n              // pure pipes live on the component view\n              pipe = compView.purePipes.get(name);\n              if (!pipe) {\n                  pipe = new CompilePipe(compView, meta);\n                  compView.purePipes.set(name, pipe);\n                  compView.pipes.push(pipe);\n              }\n          }\n          else {\n              // Non pure pipes live on the view that called it\n              pipe = new CompilePipe(view, meta);\n              view.pipes.push(pipe);\n          }\n          return pipe._call(view, args);\n      };\n      Object.defineProperty(CompilePipe.prototype, \"pure\", {\n          get: function () { return this.meta.pure; },\n          enumerable: true,\n          configurable: true\n      });\n      CompilePipe.prototype._call = function (callingView, args) {\n          if (this.meta.pure) {\n              // PurePipeProxies live on the view that called them.\n              var purePipeProxyInstance = THIS_EXPR.prop(this.instance.name + \"_\" + this._purePipeProxyCount++);\n              var pipeInstanceSeenFromPureProxy = getPropertyInView(this.instance, callingView, this.view);\n              createPureProxy(pipeInstanceSeenFromPureProxy.prop('transform')\n                  .callMethod(BuiltinMethod.Bind, [pipeInstanceSeenFromPureProxy]), args.length, purePipeProxyInstance, { fields: callingView.fields, ctorStmts: callingView.createMethod });\n              return importExpr(resolveIdentifier(Identifiers.castByValue))\n                  .callFn([purePipeProxyInstance, pipeInstanceSeenFromPureProxy.prop('transform')])\n                  .callFn(args);\n          }\n          else {\n              return getPropertyInView(this.instance, callingView, this.view).callMethod('transform', args);\n          }\n      };\n      return CompilePipe;\n  }());\n  function _findPipeMeta(view, name) {\n      var pipeMeta = null;\n      for (var i = view.pipeMetas.length - 1; i >= 0; i--) {\n          var localPipeMeta = view.pipeMetas[i];\n          if (localPipeMeta.name == name) {\n              pipeMeta = localPipeMeta;\n              break;\n          }\n      }\n      if (!pipeMeta) {\n          throw new Error(\"Illegal state: Could not find pipe \" + name + \" although the parser should have detected this error!\");\n      }\n      return pipeMeta;\n  }\n\n  var CompileViewRootNodeType;\n  (function (CompileViewRootNodeType) {\n      CompileViewRootNodeType[CompileViewRootNodeType[\"Node\"] = 0] = \"Node\";\n      CompileViewRootNodeType[CompileViewRootNodeType[\"ViewContainer\"] = 1] = \"ViewContainer\";\n      CompileViewRootNodeType[CompileViewRootNodeType[\"NgContent\"] = 2] = \"NgContent\";\n  })(CompileViewRootNodeType || (CompileViewRootNodeType = {}));\n  var CompileViewRootNode = (function () {\n      function CompileViewRootNode(type, expr, ngContentIndex) {\n          this.type = type;\n          this.expr = expr;\n          this.ngContentIndex = ngContentIndex;\n      }\n      return CompileViewRootNode;\n  }());\n  var CompileView = (function () {\n      function CompileView(component, genConfig, pipeMetas, styles, animations, viewIndex, declarationElement, templateVariableBindings) {\n          var _this = this;\n          this.component = component;\n          this.genConfig = genConfig;\n          this.pipeMetas = pipeMetas;\n          this.styles = styles;\n          this.animations = animations;\n          this.viewIndex = viewIndex;\n          this.declarationElement = declarationElement;\n          this.templateVariableBindings = templateVariableBindings;\n          this.viewChildren = [];\n          this.nodes = [];\n          this.rootNodes = [];\n          this.lastRenderNode = NULL_EXPR;\n          this.viewContainers = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          this.fields = [];\n          this.getters = [];\n          this.disposables = [];\n          this.purePipes = new Map();\n          this.pipes = [];\n          this.locals = new Map();\n          this.literalArrayCount = 0;\n          this.literalMapCount = 0;\n          this.pipeCount = 0;\n          this.createMethod = new CompileMethod(this);\n          this.animationBindingsMethod = new CompileMethod(this);\n          this.injectorGetMethod = new CompileMethod(this);\n          this.updateContentQueriesMethod = new CompileMethod(this);\n          this.dirtyParentQueriesMethod = new CompileMethod(this);\n          this.updateViewQueriesMethod = new CompileMethod(this);\n          this.detectChangesInInputsMethod = new CompileMethod(this);\n          this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n          this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n          this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n          this.destroyMethod = new CompileMethod(this);\n          this.detachMethod = new CompileMethod(this);\n          this.viewType = getViewType(component, viewIndex);\n          this.className = getViewClassName(component, viewIndex);\n          this.classType = importType(new CompileIdentifierMetadata({ name: this.className }));\n          this.classExpr = variable(this.className);\n          if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n              this.componentView = this;\n          }\n          else {\n              this.componentView = this.declarationElement.view.componentView;\n          }\n          this.componentContext =\n              getPropertyInView(THIS_EXPR.prop('context'), this, this.componentView);\n          var viewQueries = new Map();\n          if (this.viewType === ViewType.COMPONENT) {\n              var directiveInstance_1 = THIS_EXPR.prop('context');\n              this.component.viewQueries.forEach(function (queryMeta, queryIndex) {\n                  var propName = \"_viewQuery_\" + queryMeta.selectors[0].name + \"_\" + queryIndex;\n                  var queryList = createQueryList(queryMeta, directiveInstance_1, propName, _this);\n                  var query = new CompileQuery(queryMeta, queryList, directiveInstance_1, _this);\n                  addQueryToTokenMap(viewQueries, query);\n              });\n          }\n          this.viewQueries = viewQueries;\n          templateVariableBindings.forEach(function (entry) { _this.locals.set(entry[1], THIS_EXPR.prop('context').prop(entry[0])); });\n          if (!this.declarationElement.isNull()) {\n              this.declarationElement.setEmbeddedView(this);\n          }\n      }\n      CompileView.prototype.callPipe = function (name, input, args) {\n          return CompilePipe.call(this, name, [input].concat(args));\n      };\n      CompileView.prototype.getLocal = function (name) {\n          if (name == EventHandlerVars.event.name) {\n              return EventHandlerVars.event;\n          }\n          var currView = this;\n          var result = currView.locals.get(name);\n          while (!result && isPresent(currView.declarationElement.view)) {\n              currView = currView.declarationElement.view;\n              result = currView.locals.get(name);\n          }\n          if (isPresent(result)) {\n              return getPropertyInView(result, this, currView);\n          }\n          else {\n              return null;\n          }\n      };\n      CompileView.prototype.afterNodes = function () {\n          var _this = this;\n          Array.from(this.viewQueries.values())\n              .forEach(function (queries) { return queries.forEach(function (q) { return q.afterChildren(_this.createMethod, _this.updateViewQueriesMethod); }); });\n      };\n      return CompileView;\n  }());\n  function getViewType(component, embeddedTemplateIndex) {\n      if (embeddedTemplateIndex > 0) {\n          return ViewType.EMBEDDED;\n      }\n      if (component.type.isHost) {\n          return ViewType.HOST;\n      }\n      return ViewType.COMPONENT;\n  }\n\n  function bindOutputs(boundEvents, directives, compileElement, bindToRenderer) {\n      var usedEvents = collectEvents(boundEvents, directives);\n      if (!usedEvents.size) {\n          return false;\n      }\n      if (bindToRenderer) {\n          subscribeToRenderEvents(usedEvents, compileElement);\n      }\n      subscribeToDirectiveEvents(usedEvents, directives, compileElement);\n      generateHandleEventMethod(boundEvents, directives, compileElement);\n      return true;\n  }\n  function collectEvents(boundEvents, directives) {\n      var usedEvents = new Map();\n      boundEvents.forEach(function (event) { usedEvents.set(event.fullName, event); });\n      directives.forEach(function (dirAst) {\n          dirAst.hostEvents.forEach(function (event) { usedEvents.set(event.fullName, event); });\n      });\n      return usedEvents;\n  }\n  function subscribeToRenderEvents(usedEvents, compileElement) {\n      var eventAndTargetExprs = [];\n      usedEvents.forEach(function (event) {\n          if (!event.phase) {\n              eventAndTargetExprs.push(literal(event.name), literal(event.target));\n          }\n      });\n      if (eventAndTargetExprs.length) {\n          var disposableVar = variable(\"disposable_\" + compileElement.view.disposables.length);\n          compileElement.view.disposables.push(disposableVar);\n          compileElement.view.createMethod.addStmt(disposableVar\n              .set(importExpr(resolveIdentifier(Identifiers.subscribeToRenderElement)).callFn([\n              THIS_EXPR, compileElement.renderNode, createInlineArray(eventAndTargetExprs),\n              handleEventExpr(compileElement)\n          ]))\n              .toDeclStmt(FUNCTION_TYPE, [StmtModifier.Private]));\n      }\n  }\n  function subscribeToDirectiveEvents(usedEvents, directives, compileElement) {\n      var usedEventNames = Array.from(usedEvents.keys());\n      directives.forEach(function (dirAst) {\n          var dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n          compileElement.view.createMethod.addStmts(DirectiveWrapperExpressions.subscribe(dirAst.directive, dirAst.hostProperties, usedEventNames, dirWrapper, THIS_EXPR, handleEventExpr(compileElement)));\n      });\n  }\n  function generateHandleEventMethod(boundEvents, directives, compileElement) {\n      var hasComponentHostListener = directives.some(function (dirAst) { return dirAst.hostEvents.some(function (event) { return dirAst.directive.isComponent; }); });\n      var markPathToRootStart = hasComponentHostListener ? compileElement.compViewExpr : THIS_EXPR;\n      var handleEventStmts = new CompileMethod(compileElement.view);\n      handleEventStmts.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      handleEventStmts.push(markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt());\n      var eventNameVar = variable('eventName');\n      var resultVar = variable('result');\n      handleEventStmts.push(resultVar.set(literal(true)).toDeclStmt(BOOL_TYPE));\n      directives.forEach(function (dirAst, dirIdx) {\n          var dirWrapper = compileElement.directiveWrapperInstance.get(dirAst.directive.type.reference);\n          if (dirAst.hostEvents.length > 0) {\n              handleEventStmts.push(resultVar\n                  .set(DirectiveWrapperExpressions\n                  .handleEvent(dirAst.hostEvents, dirWrapper, eventNameVar, EventHandlerVars.event)\n                  .and(resultVar))\n                  .toStmt());\n          }\n      });\n      boundEvents.forEach(function (renderEvent, renderEventIdx) {\n          var evalResult = convertActionBinding(compileElement.view, compileElement.view, compileElement.view.componentContext, renderEvent.handler, \"sub_\" + renderEventIdx);\n          var trueStmts = evalResult.stmts;\n          if (evalResult.preventDefault) {\n              trueStmts.push(resultVar.set(evalResult.preventDefault.and(resultVar)).toStmt());\n          }\n          // TODO(tbosch): convert this into a `switch` once our OutputAst supports it.\n          handleEventStmts.push(new IfStmt(eventNameVar.equals(literal(renderEvent.fullName)), trueStmts));\n      });\n      handleEventStmts.push(new ReturnStatement(resultVar));\n      compileElement.view.methods.push(new ClassMethod(getHandleEventMethodName(compileElement.nodeIndex), [\n          new FnParam(eventNameVar.name, STRING_TYPE),\n          new FnParam(EventHandlerVars.event.name, DYNAMIC_TYPE)\n      ], handleEventStmts.finish(), BOOL_TYPE));\n  }\n  function handleEventExpr(compileElement) {\n      var handleEventMethodName = getHandleEventMethodName(compileElement.nodeIndex);\n      return THIS_EXPR.callMethod('eventHandler', [THIS_EXPR.prop(handleEventMethodName)]);\n  }\n\n  var STATE_IS_NEVER_CHECKED = THIS_EXPR.prop('numberOfChecks').identical(new LiteralExpr(0));\n  var NOT_THROW_ON_CHANGES = not(DetectChangesVars.throwOnChange);\n  function bindDirectiveAfterContentLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n      var view = compileElement.view;\n      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n      var afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;\n      afterContentLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentInit) !== -1) {\n          afterContentLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));\n      }\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentChecked) !== -1) {\n          afterContentLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());\n      }\n  }\n  function bindDirectiveAfterViewLifecycleCallbacks(directiveMeta, directiveInstance, compileElement) {\n      var view = compileElement.view;\n      var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n      var afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;\n      afterViewLifecycleCallbacksMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewInit) !== -1) {\n          afterViewLifecycleCallbacksMethod.addStmt(new IfStmt(STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));\n      }\n      if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewChecked) !== -1) {\n          afterViewLifecycleCallbacksMethod.addStmt(directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());\n      }\n  }\n  function bindDirectiveWrapperLifecycleCallbacks(dir, directiveWrapperIntance, compileElement) {\n      compileElement.view.destroyMethod.addStmts(DirectiveWrapperExpressions.ngOnDestroy(dir.directive, directiveWrapperIntance));\n      compileElement.view.detachMethod.addStmts(DirectiveWrapperExpressions.ngOnDetach(dir.hostProperties, directiveWrapperIntance, THIS_EXPR, compileElement.compViewExpr || THIS_EXPR, compileElement.renderNode));\n  }\n  function bindInjectableDestroyLifecycleCallbacks(provider, providerInstance, compileElement) {\n      var onDestroyMethod = compileElement.view.destroyMethod;\n      onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      if (provider.providerType !== exports.ProviderAstType.Directive &&\n          provider.providerType !== exports.ProviderAstType.Component &&\n          provider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n          onDestroyMethod.addStmt(providerInstance.callMethod('ngOnDestroy', []).toStmt());\n      }\n  }\n  function bindPipeDestroyLifecycleCallbacks(pipeMeta, pipeInstance, view) {\n      var onDestroyMethod = view.destroyMethod;\n      if (pipeMeta.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n          onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());\n      }\n  }\n\n  function bindRenderText(boundText, compileNode, view) {\n      var valueField = createCheckBindingField(view);\n      var evalResult = convertPropertyBinding(view, view, view.componentContext, boundText.value, valueField.bindingId);\n      if (!evalResult) {\n          return null;\n      }\n      view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);\n      view.detectChangesRenderPropertiesMethod.addStmts(createCheckBindingStmt(evalResult, valueField.expression, DetectChangesVars.throwOnChange, [THIS_EXPR.prop('renderer')\n              .callMethod('setText', [compileNode.renderNode, evalResult.currValExpr])\n              .toStmt()]));\n  }\n  function bindRenderInputs(boundProps, hasEvents, compileElement) {\n      var view = compileElement.view;\n      var renderNode = compileElement.renderNode;\n      boundProps.forEach(function (boundProp) {\n          var bindingField = createCheckBindingField(view);\n          view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);\n          var evalResult = convertPropertyBinding(view, view, compileElement.view.componentContext, boundProp.value, bindingField.bindingId);\n          if (!evalResult) {\n              return;\n          }\n          var checkBindingStmts = [];\n          var compileMethod = view.detectChangesRenderPropertiesMethod;\n          switch (boundProp.type) {\n              case exports.PropertyBindingType.Property:\n              case exports.PropertyBindingType.Attribute:\n              case exports.PropertyBindingType.Class:\n              case exports.PropertyBindingType.Style:\n                  checkBindingStmts.push.apply(checkBindingStmts, writeToRenderer(THIS_EXPR, boundProp, renderNode, evalResult.currValExpr, view.genConfig.logBindingUpdate));\n                  break;\n              case exports.PropertyBindingType.Animation:\n                  compileMethod = view.animationBindingsMethod;\n                  var _a = triggerAnimation(THIS_EXPR, THIS_EXPR, boundProp, (hasEvents ? THIS_EXPR.prop(getHandleEventMethodName(compileElement.nodeIndex)) :\n                      importExpr(resolveIdentifier(Identifiers.noop)))\n                      .callMethod(BuiltinMethod.Bind, [THIS_EXPR]), compileElement.renderNode, evalResult.currValExpr, bindingField.expression), updateStmts = _a.updateStmts, detachStmts = _a.detachStmts;\n                  checkBindingStmts.push.apply(checkBindingStmts, updateStmts);\n                  view.detachMethod.addStmts(detachStmts);\n                  break;\n          }\n          compileMethod.addStmts(createCheckBindingStmt(evalResult, bindingField.expression, DetectChangesVars.throwOnChange, checkBindingStmts));\n      });\n  }\n  function bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, elementName, schemaRegistry) {\n      // We need to provide the SecurityContext for properties that could need sanitization.\n      var runtimeSecurityCtxExprs = directiveAst.hostProperties.filter(function (boundProp) { return boundProp.needsRuntimeSecurityContext; })\n          .map(function (boundProp) {\n          var ctx;\n          switch (boundProp.type) {\n              case exports.PropertyBindingType.Property:\n                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, false);\n                  break;\n              case exports.PropertyBindingType.Attribute:\n                  ctx = schemaRegistry.securityContext(elementName, boundProp.name, true);\n                  break;\n              default:\n                  throw new Error(\"Illegal state: Only property / attribute bindings can have an unknown security context! Binding \" + boundProp.name);\n          }\n          return createEnumExpression(Identifiers.SecurityContext, ctx);\n      });\n      compileElement.view.detectChangesRenderPropertiesMethod.addStmts(DirectiveWrapperExpressions.checkHost(directiveAst.hostProperties, directiveWrapperInstance, THIS_EXPR, compileElement.compViewExpr || THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange, runtimeSecurityCtxExprs));\n  }\n  function bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement) {\n      var view = compileElement.view;\n      var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n      detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n      directiveAst.inputs.forEach(function (input, inputIdx) {\n          // Note: We can't use `fields.length` here, as we are not adding a field!\n          var bindingId = compileElement.nodeIndex + \"_\" + dirIndex + \"_\" + inputIdx;\n          detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);\n          var evalResult = convertPropertyBinding(view, view, view.componentContext, input.value, bindingId);\n          if (!evalResult) {\n              return;\n          }\n          detectChangesInInputsMethod.addStmts(evalResult.stmts);\n          detectChangesInInputsMethod.addStmt(directiveWrapperInstance\n              .callMethod(\"check_\" + input.directiveName, [\n              evalResult.currValExpr, DetectChangesVars.throwOnChange,\n              evalResult.forceUpdate || literal(false)\n          ])\n              .toStmt());\n      });\n      var isOnPushComp = directiveAst.directive.isComponent &&\n          !isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);\n      var directiveDetectChangesExpr = DirectiveWrapperExpressions.ngDoCheck(directiveWrapperInstance, THIS_EXPR, compileElement.renderNode, DetectChangesVars.throwOnChange);\n      var directiveDetectChangesStmt = isOnPushComp ?\n          new IfStmt(directiveDetectChangesExpr, [compileElement.compViewExpr.callMethod('markAsCheckOnce', []).toStmt()]) :\n          directiveDetectChangesExpr.toStmt();\n      detectChangesInInputsMethod.addStmt(directiveDetectChangesStmt);\n  }\n\n  function bindView(view, parsedTemplate, schemaRegistry) {\n      var visitor = new ViewBinderVisitor(view, schemaRegistry);\n      templateVisitAll(visitor, parsedTemplate);\n      view.pipes.forEach(function (pipe) { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n  }\n  var ViewBinderVisitor = (function () {\n      function ViewBinderVisitor(view, _schemaRegistry) {\n          this.view = view;\n          this._schemaRegistry = _schemaRegistry;\n          this._nodeIndex = 0;\n      }\n      ViewBinderVisitor.prototype.visitBoundText = function (ast, parent) {\n          var node = this.view.nodes[this._nodeIndex++];\n          bindRenderText(ast, node, this.view);\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitText = function (ast, parent) {\n          this._nodeIndex++;\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitNgContent = function (ast, parent) { return null; };\n      ViewBinderVisitor.prototype.visitElement = function (ast, parent) {\n          var _this = this;\n          var compileElement = this.view.nodes[this._nodeIndex++];\n          var hasEvents = bindOutputs(ast.outputs, ast.directives, compileElement, true);\n          bindRenderInputs(ast.inputs, hasEvents, compileElement);\n          ast.directives.forEach(function (directiveAst, dirIndex) {\n              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n              bindDirectiveHostProps(directiveAst, directiveWrapperInstance, compileElement, ast.name, _this._schemaRegistry);\n          });\n          templateVisitAll(this, ast.children, compileElement);\n          // afterContent and afterView lifecycles need to be called bottom up\n          // so that children are notified before parents\n          ast.directives.forEach(function (directiveAst) {\n              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveWrapperLifecycleCallbacks(directiveAst, directiveWrapperInstance, compileElement);\n          });\n          ast.providers.forEach(function (providerAst) {\n              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n          });\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n          var compileElement = this.view.nodes[this._nodeIndex++];\n          bindOutputs(ast.outputs, ast.directives, compileElement, false);\n          ast.directives.forEach(function (directiveAst, dirIndex) {\n              var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n              var directiveWrapperInstance = compileElement.directiveWrapperInstance.get(directiveAst.directive.type.reference);\n              bindDirectiveInputs(directiveAst, directiveWrapperInstance, dirIndex, compileElement);\n              bindDirectiveAfterContentLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveAfterViewLifecycleCallbacks(directiveAst.directive, directiveInstance, compileElement);\n              bindDirectiveWrapperLifecycleCallbacks(directiveAst, directiveWrapperInstance, compileElement);\n          });\n          ast.providers.forEach(function (providerAst) {\n              var providerInstance = compileElement.instances.get(providerAst.token.reference);\n              bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n          });\n          bindView(compileElement.embeddedView, ast.children, this._schemaRegistry);\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n          return null;\n      };\n      ViewBinderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n      ViewBinderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n      ViewBinderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n      return ViewBinderVisitor;\n  }());\n\n  var IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n  var CLASS_ATTR$1 = 'class';\n  var STYLE_ATTR = 'style';\n  var NG_CONTAINER_TAG = 'ng-container';\n  var parentRenderNodeVar = variable('parentRenderNode');\n  var rootSelectorVar = variable('rootSelector');\n  function buildView(view, template, targetDependencies) {\n      var builderVisitor = new ViewBuilderVisitor(view, targetDependencies);\n      var parentEl = view.declarationElement.isNull() ? view.declarationElement : view.declarationElement.parent;\n      templateVisitAll(builderVisitor, template, parentEl);\n      if (view.viewType === ViewType.EMBEDDED || view.viewType === ViewType.HOST) {\n          view.lastRenderNode = builderVisitor.getOrCreateLastRenderNode();\n      }\n      return builderVisitor.nestedViewCount;\n  }\n  function finishView(view, targetStatements) {\n      view.afterNodes();\n      createViewTopLevelStmts(view, targetStatements);\n      view.nodes.forEach(function (node) {\n          if (node instanceof CompileElement && node.hasEmbeddedView) {\n              finishView(node.embeddedView, targetStatements);\n          }\n      });\n  }\n  var ViewBuilderVisitor = (function () {\n      function ViewBuilderVisitor(view, targetDependencies) {\n          this.view = view;\n          this.targetDependencies = targetDependencies;\n          this.nestedViewCount = 0;\n      }\n      ViewBuilderVisitor.prototype._isRootNode = function (parent) { return parent.view !== this.view; };\n      ViewBuilderVisitor.prototype._addRootNodeAndProject = function (node) {\n          var projectedNode = _getOuterContainerOrSelf(node);\n          var parent = projectedNode.parent;\n          var ngContentIndex = projectedNode.sourceAst.ngContentIndex;\n          var viewContainer = (node instanceof CompileElement && node.hasViewContainer) ? node.viewContainer : null;\n          if (this._isRootNode(parent)) {\n              if (this.view.viewType !== ViewType.COMPONENT) {\n                  this.view.rootNodes.push(new CompileViewRootNode(viewContainer ? CompileViewRootNodeType.ViewContainer : CompileViewRootNodeType.Node, viewContainer || node.renderNode));\n              }\n          }\n          else if (isPresent(parent.component) && isPresent(ngContentIndex)) {\n              parent.addContentNode(ngContentIndex, new CompileViewRootNode(viewContainer ? CompileViewRootNodeType.ViewContainer : CompileViewRootNodeType.Node, viewContainer || node.renderNode));\n          }\n      };\n      ViewBuilderVisitor.prototype._getParentRenderNode = function (parent) {\n          parent = _getOuterContainerParentOrSelf(parent);\n          if (this._isRootNode(parent)) {\n              if (this.view.viewType === ViewType.COMPONENT) {\n                  return parentRenderNodeVar;\n              }\n              else {\n                  // root node of an embedded/host view\n                  return NULL_EXPR;\n              }\n          }\n          else {\n              return isPresent(parent.component) &&\n                  parent.component.template.encapsulation !== _angular_core.ViewEncapsulation.Native ?\n                  NULL_EXPR :\n                  parent.renderNode;\n          }\n      };\n      ViewBuilderVisitor.prototype.getOrCreateLastRenderNode = function () {\n          var view = this.view;\n          if (view.rootNodes.length === 0 ||\n              view.rootNodes[view.rootNodes.length - 1].type !== CompileViewRootNodeType.Node) {\n              var fieldName = \"_el_\" + view.nodes.length;\n              view.fields.push(new ClassField(fieldName, importType(view.genConfig.renderTypes.renderElement)));\n              view.createMethod.addStmt(THIS_EXPR.prop(fieldName)\n                  .set(ViewProperties.renderer.callMethod('createTemplateAnchor', [NULL_EXPR, NULL_EXPR]))\n                  .toStmt());\n              view.rootNodes.push(new CompileViewRootNode(CompileViewRootNodeType.Node, THIS_EXPR.prop(fieldName)));\n          }\n          return view.rootNodes[view.rootNodes.length - 1].expr;\n      };\n      ViewBuilderVisitor.prototype.visitBoundText = function (ast, parent) {\n          return this._visitText(ast, '', parent);\n      };\n      ViewBuilderVisitor.prototype.visitText = function (ast, parent) {\n          return this._visitText(ast, ast.value, parent);\n      };\n      ViewBuilderVisitor.prototype._visitText = function (ast, value, parent) {\n          var fieldName = \"_text_\" + this.view.nodes.length;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderText)));\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var compileNode = new CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);\n          var createRenderNode = THIS_EXPR.prop(fieldName)\n              .set(ViewProperties.renderer.callMethod('createText', [\n              this._getParentRenderNode(parent), literal(value),\n              this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)\n          ]))\n              .toStmt();\n          this.view.nodes.push(compileNode);\n          this.view.createMethod.addStmt(createRenderNode);\n          this._addRootNodeAndProject(compileNode);\n          return renderNode;\n      };\n      ViewBuilderVisitor.prototype.visitNgContent = function (ast, parent) {\n          // the projected nodes originate from a different view, so we don't\n          // have debug information for them...\n          this.view.createMethod.resetDebugInfo(null, ast);\n          var parentRenderNode = this._getParentRenderNode(parent);\n          if (parentRenderNode !== NULL_EXPR) {\n              this.view.createMethod.addStmt(THIS_EXPR.callMethod('projectNodes', [parentRenderNode, literal(ast.index)])\n                  .toStmt());\n          }\n          else if (this._isRootNode(parent)) {\n              if (this.view.viewType !== ViewType.COMPONENT) {\n                  // store root nodes only for embedded/host views\n                  this.view.rootNodes.push(new CompileViewRootNode(CompileViewRootNodeType.NgContent, null, ast.index));\n              }\n          }\n          else {\n              if (isPresent(parent.component) && isPresent(ast.ngContentIndex)) {\n                  parent.addContentNode(ast.ngContentIndex, new CompileViewRootNode(CompileViewRootNodeType.NgContent, null, ast.index));\n              }\n          }\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitElement = function (ast, parent) {\n          var nodeIndex = this.view.nodes.length;\n          var createRenderNodeExpr;\n          var debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);\n          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n          var component = directives.find(function (directive) { return directive.isComponent; });\n          if (ast.name === NG_CONTAINER_TAG) {\n              createRenderNodeExpr = ViewProperties.renderer.callMethod('createTemplateAnchor', [this._getParentRenderNode(parent), debugContextExpr]);\n          }\n          else {\n              var htmlAttrs = _readHtmlAttrs(ast.attrs);\n              var attrNameAndValues = createInlineArray(_mergeHtmlAndDirectiveAttrs(htmlAttrs, directives).map(function (v) { return literal(v); }));\n              if (nodeIndex === 0 && this.view.viewType === ViewType.HOST) {\n                  createRenderNodeExpr =\n                      importExpr(resolveIdentifier(Identifiers.selectOrCreateRenderHostElement)).callFn([\n                          ViewProperties.renderer, literal(ast.name), attrNameAndValues, rootSelectorVar,\n                          debugContextExpr\n                      ]);\n              }\n              else {\n                  createRenderNodeExpr =\n                      importExpr(resolveIdentifier(Identifiers.createRenderElement)).callFn([\n                          ViewProperties.renderer, this._getParentRenderNode(parent), literal(ast.name),\n                          attrNameAndValues, debugContextExpr\n                      ]);\n              }\n          }\n          var fieldName = \"_el_\" + nodeIndex;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderElement)));\n          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, component, directives, ast.providers, ast.hasViewContainer, false, ast.references, this.targetDependencies);\n          this.view.nodes.push(compileElement);\n          var compViewExpr = null;\n          if (isPresent(component)) {\n              var nestedComponentIdentifier = new CompileIdentifierMetadata({ name: getViewClassName(component, 0) });\n              this.targetDependencies.push(new ViewClassDependency(component.type, nestedComponentIdentifier));\n              compViewExpr = THIS_EXPR.prop(\"compView_\" + nodeIndex); // fix highlighting: `\n              this.view.fields.push(new ClassField(compViewExpr.name, importType(resolveIdentifier(Identifiers.AppView), [importType(component.type)])));\n              this.view.viewChildren.push(compViewExpr);\n              compileElement.setComponentView(compViewExpr);\n              this.view.createMethod.addStmt(compViewExpr\n                  .set(importExpr(nestedComponentIdentifier).instantiate([\n                  ViewProperties.viewUtils, THIS_EXPR, literal(nodeIndex), renderNode\n              ]))\n                  .toStmt());\n          }\n          compileElement.beforeChildren();\n          this._addRootNodeAndProject(compileElement);\n          templateVisitAll(this, ast.children, compileElement);\n          compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);\n          if (isPresent(compViewExpr)) {\n              this.view.createMethod.addStmt(compViewExpr.callMethod('create', [compileElement.getComponent()]).toStmt());\n          }\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitEmbeddedTemplate = function (ast, parent) {\n          var nodeIndex = this.view.nodes.length;\n          var fieldName = \"_anchor_\" + nodeIndex;\n          this.view.fields.push(new ClassField(fieldName, importType(this.view.genConfig.renderTypes.renderComment)));\n          this.view.createMethod.addStmt(THIS_EXPR.prop(fieldName)\n              .set(ViewProperties.renderer.callMethod('createTemplateAnchor', [\n              this._getParentRenderNode(parent),\n              this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)\n          ]))\n              .toStmt());\n          var renderNode = THIS_EXPR.prop(fieldName);\n          var templateVariableBindings = ast.variables.map(function (varAst) { return [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]; });\n          var directives = ast.directives.map(function (directiveAst) { return directiveAst.directive; });\n          var compileElement = new CompileElement(parent, this.view, nodeIndex, renderNode, ast, null, directives, ast.providers, ast.hasViewContainer, true, ast.references, this.targetDependencies);\n          this.view.nodes.push(compileElement);\n          this.nestedViewCount++;\n          var embeddedView = new CompileView(this.view.component, this.view.genConfig, this.view.pipeMetas, NULL_EXPR, this.view.animations, this.view.viewIndex + this.nestedViewCount, compileElement, templateVariableBindings);\n          this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);\n          compileElement.beforeChildren();\n          this._addRootNodeAndProject(compileElement);\n          compileElement.afterChildren(0);\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitAttr = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitDirective = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitEvent = function (ast, eventTargetAndNames) {\n          return null;\n      };\n      ViewBuilderVisitor.prototype.visitReference = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitVariable = function (ast, ctx) { return null; };\n      ViewBuilderVisitor.prototype.visitDirectiveProperty = function (ast, context) { return null; };\n      ViewBuilderVisitor.prototype.visitElementProperty = function (ast, context) { return null; };\n      return ViewBuilderVisitor;\n  }());\n  /**\n   * Walks up the nodes while the direct parent is a container.\n   *\n   * Returns the outer container or the node itself when it is not a direct child of a container.\n   *\n   * @internal\n   */\n  function _getOuterContainerOrSelf(node) {\n      var view = node.view;\n      while (_isNgContainer(node.parent, view)) {\n          node = node.parent;\n      }\n      return node;\n  }\n  /**\n   * Walks up the nodes while they are container and returns the first parent which is not.\n   *\n   * Returns the parent of the outer container or the node itself when it is not a container.\n   *\n   * @internal\n   */\n  function _getOuterContainerParentOrSelf(el) {\n      var view = el.view;\n      while (_isNgContainer(el, view)) {\n          el = el.parent;\n      }\n      return el;\n  }\n  function _isNgContainer(node, view) {\n      return !node.isNull() && node.sourceAst.name === NG_CONTAINER_TAG &&\n          node.view === view;\n  }\n  function _mergeHtmlAndDirectiveAttrs(declaredHtmlAttrs, directives) {\n      var mapResult = {};\n      Object.keys(declaredHtmlAttrs).forEach(function (key) { mapResult[key] = declaredHtmlAttrs[key]; });\n      directives.forEach(function (directiveMeta) {\n          Object.keys(directiveMeta.hostAttributes).forEach(function (name) {\n              var value = directiveMeta.hostAttributes[name];\n              var prevValue = mapResult[name];\n              mapResult[name] = isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\n          });\n      });\n      var arrResult = [];\n      // Note: We need to sort to get a defined output order\n      // for tests and for caching generated artifacts...\n      Object.keys(mapResult).sort().forEach(function (attrName) { arrResult.push(attrName, mapResult[attrName]); });\n      return arrResult;\n  }\n  function _readHtmlAttrs(attrs) {\n      var htmlAttrs = {};\n      attrs.forEach(function (ast) { htmlAttrs[ast.name] = ast.value; });\n      return htmlAttrs;\n  }\n  function mergeAttributeValue(attrName, attrValue1, attrValue2) {\n      if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n          return attrValue1 + \" \" + attrValue2;\n      }\n      else {\n          return attrValue2;\n      }\n  }\n  function createViewTopLevelStmts(view, targetStatements) {\n      var nodeDebugInfosVar = NULL_EXPR;\n      if (view.genConfig.genDebugInfo) {\n          nodeDebugInfosVar = variable(\"nodeDebugInfos_\" + view.component.type.name + view.viewIndex); // fix highlighting: `\n          targetStatements.push(nodeDebugInfosVar\n              .set(literalArr(view.nodes.map(createStaticNodeDebugInfo), new ArrayType(new ExternalType(resolveIdentifier(Identifiers.StaticNodeDebugInfo)), [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]));\n      }\n      var renderCompTypeVar = variable(\"renderType_\" + view.component.type.name); // fix highlighting: `\n      if (view.viewIndex === 0) {\n          var templateUrlInfo = void 0;\n          if (view.component.template.templateUrl == view.component.type.moduleUrl) {\n              templateUrlInfo =\n                  view.component.type.moduleUrl + \" class \" + view.component.type.name + \" - inline template\";\n          }\n          else {\n              templateUrlInfo = view.component.template.templateUrl;\n          }\n          targetStatements.push(renderCompTypeVar\n              .set(importExpr(resolveIdentifier(Identifiers.createRenderComponentType)).callFn([\n              view.genConfig.genDebugInfo ? literal(templateUrlInfo) : literal(''),\n              literal(view.component.template.ngContentSelectors.length),\n              ViewEncapsulationEnum.fromValue(view.component.template.encapsulation),\n              view.styles,\n              literalMap(view.animations.map(function (entry) { return [entry.name, entry.fnExp]; })),\n          ]))\n              .toDeclStmt(importType(resolveIdentifier(Identifiers.RenderComponentType))));\n      }\n      var viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);\n      targetStatements.push(viewClass);\n  }\n  function createStaticNodeDebugInfo(node) {\n      var compileElement = node instanceof CompileElement ? node : null;\n      var providerTokens = [];\n      var componentToken = NULL_EXPR;\n      var varTokenEntries = [];\n      if (isPresent(compileElement)) {\n          providerTokens = compileElement.getProviderTokens();\n          if (isPresent(compileElement.component)) {\n              componentToken = createDiTokenExpression(identifierToken(compileElement.component.type));\n          }\n          Object.keys(compileElement.referenceTokens).forEach(function (varName) {\n              var token = compileElement.referenceTokens[varName];\n              varTokenEntries.push([varName, isPresent(token) ? createDiTokenExpression(token) : NULL_EXPR]);\n          });\n      }\n      return importExpr(resolveIdentifier(Identifiers.StaticNodeDebugInfo))\n          .instantiate([\n          literalArr(providerTokens, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])),\n          componentToken,\n          literalMap(varTokenEntries, new MapType(DYNAMIC_TYPE, [TypeModifier.Const]))\n      ], importType(resolveIdentifier(Identifiers.StaticNodeDebugInfo), null, [TypeModifier.Const]));\n  }\n  function createViewClass(view, renderCompTypeVar, nodeDebugInfosVar) {\n      var viewConstructorArgs = [\n          new FnParam(ViewConstructorVars.viewUtils.name, importType(resolveIdentifier(Identifiers.ViewUtils))),\n          new FnParam(ViewConstructorVars.parentView.name, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE])),\n          new FnParam(ViewConstructorVars.parentIndex.name, NUMBER_TYPE),\n          new FnParam(ViewConstructorVars.parentElement.name, DYNAMIC_TYPE)\n      ];\n      var superConstructorArgs = [\n          variable(view.className), renderCompTypeVar, ViewTypeEnum.fromValue(view.viewType),\n          ViewConstructorVars.viewUtils, ViewConstructorVars.parentView, ViewConstructorVars.parentIndex,\n          ViewConstructorVars.parentElement,\n          ChangeDetectorStatusEnum.fromValue(getChangeDetectionMode(view))\n      ];\n      if (view.genConfig.genDebugInfo) {\n          superConstructorArgs.push(nodeDebugInfosVar);\n      }\n      if (view.viewType === ViewType.EMBEDDED) {\n          viewConstructorArgs.push(new FnParam('declaredViewContainer', importType(resolveIdentifier(Identifiers.ViewContainer))));\n          superConstructorArgs.push(variable('declaredViewContainer'));\n      }\n      var viewMethods = [\n          new ClassMethod('createInternal', [new FnParam(rootSelectorVar.name, STRING_TYPE)], generateCreateMethod(view), importType(resolveIdentifier(Identifiers.ComponentRef), [DYNAMIC_TYPE])),\n          new ClassMethod('injectorGetInternal', [\n              new FnParam(InjectMethodVars.token.name, DYNAMIC_TYPE),\n              // Note: Can't use o.INT_TYPE here as the method in AppView uses number\n              new FnParam(InjectMethodVars.requestNodeIndex.name, NUMBER_TYPE),\n              new FnParam(InjectMethodVars.notFoundResult.name, DYNAMIC_TYPE)\n          ], addReturnValuefNotEmpty(view.injectorGetMethod.finish(), InjectMethodVars.notFoundResult), DYNAMIC_TYPE),\n          new ClassMethod('detectChangesInternal', [new FnParam(DetectChangesVars.throwOnChange.name, BOOL_TYPE)], generateDetectChangesMethod(view)),\n          new ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()),\n          new ClassMethod('destroyInternal', [], generateDestroyMethod(view)),\n          new ClassMethod('detachInternal', [], view.detachMethod.finish()),\n          generateVisitRootNodesMethod(view), generateVisitProjectableNodesMethod(view),\n          generateCreateEmbeddedViewsMethod(view)\n      ].filter(function (method) { return method.body.length > 0; });\n      var superClass = view.genConfig.genDebugInfo ? Identifiers.DebugAppView : Identifiers.AppView;\n      var viewClass = createClassStmt({\n          name: view.className,\n          parent: importExpr(resolveIdentifier(superClass), [getContextType(view)]),\n          parentArgs: superConstructorArgs,\n          ctorParams: viewConstructorArgs,\n          builders: [{ methods: viewMethods }, view]\n      });\n      return viewClass;\n  }\n  function generateDestroyMethod(view) {\n      var stmts = [];\n      view.viewContainers.forEach(function (viewContainer) {\n          stmts.push(viewContainer.callMethod('destroyNestedViews', []).toStmt());\n      });\n      view.viewChildren.forEach(function (viewChild) { stmts.push(viewChild.callMethod('destroy', []).toStmt()); });\n      stmts.push.apply(stmts, view.destroyMethod.finish());\n      return stmts;\n  }\n  function generateCreateMethod(view) {\n      var parentRenderNodeExpr = NULL_EXPR;\n      var parentRenderNodeStmts = [];\n      if (view.viewType === ViewType.COMPONENT) {\n          parentRenderNodeExpr =\n              ViewProperties.renderer.callMethod('createViewRoot', [THIS_EXPR.prop('parentElement')]);\n          parentRenderNodeStmts =\n              [parentRenderNodeVar.set(parentRenderNodeExpr)\n                      .toDeclStmt(importType(view.genConfig.renderTypes.renderNode), [StmtModifier.Final])];\n      }\n      var resultExpr;\n      if (view.viewType === ViewType.HOST) {\n          var hostEl = view.nodes[0];\n          resultExpr =\n              importExpr(resolveIdentifier(Identifiers.ComponentRef_), [DYNAMIC_TYPE]).instantiate([\n                  literal(hostEl.nodeIndex), THIS_EXPR, hostEl.renderNode, hostEl.getComponent()\n              ]);\n      }\n      else {\n          resultExpr = NULL_EXPR;\n      }\n      var allNodesExpr = ViewProperties.renderer.cast(DYNAMIC_TYPE)\n          .prop('directRenderer')\n          .conditional(NULL_EXPR, literalArr(view.nodes.map(function (node) { return node.renderNode; })));\n      return parentRenderNodeStmts.concat(view.createMethod.finish(), [\n          THIS_EXPR\n              .callMethod('init', [\n              view.lastRenderNode,\n              allNodesExpr,\n              view.disposables.length ? literalArr(view.disposables) : NULL_EXPR,\n          ])\n              .toStmt(),\n          new ReturnStatement(resultExpr)\n      ]);\n  }\n  function generateDetectChangesMethod(view) {\n      var stmts = [];\n      if (view.animationBindingsMethod.isEmpty() && view.detectChangesInInputsMethod.isEmpty() &&\n          view.updateContentQueriesMethod.isEmpty() &&\n          view.afterContentLifecycleCallbacksMethod.isEmpty() &&\n          view.detectChangesRenderPropertiesMethod.isEmpty() &&\n          view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty() &&\n          view.viewContainers.length === 0 && view.viewChildren.length === 0) {\n          return stmts;\n      }\n      stmts.push.apply(stmts, view.animationBindingsMethod.finish());\n      stmts.push.apply(stmts, view.detectChangesInInputsMethod.finish());\n      view.viewContainers.forEach(function (viewContainer) {\n          stmts.push(viewContainer.callMethod('detectChangesInNestedViews', [DetectChangesVars.throwOnChange])\n              .toStmt());\n      });\n      var afterContentStmts = view.updateContentQueriesMethod.finish().concat(view.afterContentLifecycleCallbacksMethod.finish());\n      if (afterContentStmts.length > 0) {\n          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterContentStmts));\n      }\n      stmts.push.apply(stmts, view.detectChangesRenderPropertiesMethod.finish());\n      view.viewChildren.forEach(function (viewChild) {\n          stmts.push(viewChild.callMethod('detectChanges', [DetectChangesVars.throwOnChange]).toStmt());\n      });\n      var afterViewStmts = view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());\n      if (afterViewStmts.length > 0) {\n          stmts.push(new IfStmt(not(DetectChangesVars.throwOnChange), afterViewStmts));\n      }\n      var varStmts = [];\n      var readVars = findReadVarNames(stmts);\n      if (readVars.has(DetectChangesVars.changed.name)) {\n          varStmts.push(DetectChangesVars.changed.set(literal(true)).toDeclStmt(BOOL_TYPE));\n      }\n      if (readVars.has(DetectChangesVars.changes.name)) {\n          varStmts.push(DetectChangesVars.changes.set(NULL_EXPR)\n              .toDeclStmt(new MapType(importType(resolveIdentifier(Identifiers.SimpleChange)))));\n      }\n      varStmts.push.apply(varStmts, createSharedBindingVariablesIfNeeded(stmts));\n      return varStmts.concat(stmts);\n  }\n  function addReturnValuefNotEmpty(statements, value) {\n      if (statements.length > 0) {\n          return statements.concat([new ReturnStatement(value)]);\n      }\n      else {\n          return statements;\n      }\n  }\n  function getContextType(view) {\n      if (view.viewType === ViewType.COMPONENT) {\n          return importType(view.component.type);\n      }\n      return DYNAMIC_TYPE;\n  }\n  function getChangeDetectionMode(view) {\n      var mode;\n      if (view.viewType === ViewType.COMPONENT) {\n          mode = isDefaultChangeDetectionStrategy(view.component.changeDetection) ?\n              ChangeDetectorStatus.CheckAlways :\n              ChangeDetectorStatus.CheckOnce;\n      }\n      else {\n          mode = ChangeDetectorStatus.CheckAlways;\n      }\n      return mode;\n  }\n  function generateVisitRootNodesMethod(view) {\n      var cbVar = variable('cb');\n      var ctxVar = variable('ctx');\n      var stmts = generateVisitNodesStmts(view.rootNodes, cbVar, ctxVar);\n      return new ClassMethod('visitRootNodesInternal', [new FnParam(cbVar.name, DYNAMIC_TYPE), new FnParam(ctxVar.name, DYNAMIC_TYPE)], stmts);\n  }\n  function generateVisitProjectableNodesMethod(view) {\n      var nodeIndexVar = variable('nodeIndex');\n      var ngContentIndexVar = variable('ngContentIndex');\n      var cbVar = variable('cb');\n      var ctxVar = variable('ctx');\n      var stmts = [];\n      view.nodes.forEach(function (node) {\n          if (node instanceof CompileElement && node.component) {\n              node.contentNodesByNgContentIndex.forEach(function (projectedNodes, ngContentIndex) {\n                  stmts.push(new IfStmt(nodeIndexVar.equals(literal(node.nodeIndex))\n                      .and(ngContentIndexVar.equals(literal(ngContentIndex))), generateVisitNodesStmts(projectedNodes, cbVar, ctxVar)));\n              });\n          }\n      });\n      return new ClassMethod('visitProjectableNodesInternal', [\n          new FnParam(nodeIndexVar.name, NUMBER_TYPE),\n          new FnParam(ngContentIndexVar.name, NUMBER_TYPE),\n          new FnParam(cbVar.name, DYNAMIC_TYPE), new FnParam(ctxVar.name, DYNAMIC_TYPE)\n      ], stmts);\n  }\n  function generateVisitNodesStmts(nodes, cb, ctx) {\n      var stmts = [];\n      nodes.forEach(function (node) {\n          switch (node.type) {\n              case CompileViewRootNodeType.Node:\n                  stmts.push(cb.callFn([node.expr, ctx]).toStmt());\n                  break;\n              case CompileViewRootNodeType.ViewContainer:\n                  stmts.push(cb.callFn([node.expr.prop('nativeElement'), ctx]).toStmt());\n                  stmts.push(node.expr.callMethod('visitNestedViewRootNodes', [cb, ctx]).toStmt());\n                  break;\n              case CompileViewRootNodeType.NgContent:\n                  stmts.push(THIS_EXPR.callMethod('visitProjectedNodes', [literal(node.ngContentIndex), cb, ctx])\n                      .toStmt());\n                  break;\n          }\n      });\n      return stmts;\n  }\n  function generateCreateEmbeddedViewsMethod(view) {\n      var nodeIndexVar = variable('nodeIndex');\n      var stmts = [];\n      view.nodes.forEach(function (node) {\n          if (node instanceof CompileElement) {\n              if (node.embeddedView) {\n                  var parentNodeIndex = node.isRootElement() ? null : node.parent.nodeIndex;\n                  stmts.push(new IfStmt(nodeIndexVar.equals(literal(node.nodeIndex)), [new ReturnStatement(node.embeddedView.classExpr.instantiate([\n                          ViewProperties.viewUtils, THIS_EXPR, literal(node.nodeIndex), node.renderNode,\n                          node.viewContainer\n                      ]))]));\n              }\n          }\n      });\n      if (stmts.length > 0) {\n          stmts.push(new ReturnStatement(NULL_EXPR));\n      }\n      return new ClassMethod('createEmbeddedViewInternal', [new FnParam(nodeIndexVar.name, NUMBER_TYPE)], stmts, importType(resolveIdentifier(Identifiers.AppView), [DYNAMIC_TYPE]));\n  }\n\n  var ViewCompileResult = (function () {\n      function ViewCompileResult(statements, viewClassVar, dependencies) {\n          this.statements = statements;\n          this.viewClassVar = viewClassVar;\n          this.dependencies = dependencies;\n      }\n      return ViewCompileResult;\n  }());\n  var ViewCompiler = (function () {\n      function ViewCompiler(_genConfig, _schemaRegistry) {\n          this._genConfig = _genConfig;\n          this._schemaRegistry = _schemaRegistry;\n      }\n      ViewCompiler.prototype.compileComponent = function (component, template, styles, pipes, compiledAnimations) {\n          var dependencies = [];\n          var view = new CompileView(component, this._genConfig, pipes, styles, compiledAnimations, 0, CompileElement.createNull(), []);\n          var statements = [];\n          buildView(view, template, dependencies);\n          // Need to separate binding from creation to be able to refer to\n          // variables that have been declared after usage.\n          bindView(view, template, this._schemaRegistry);\n          finishView(view, statements);\n          return new ViewCompileResult(statements, view.classExpr.name, dependencies);\n      };\n      ViewCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      ViewCompiler.ctorParameters = [\n          { type: CompilerConfig, },\n          { type: ElementSchemaRegistry, },\n      ];\n      return ViewCompiler;\n  }());\n\n  var SourceModule = (function () {\n      function SourceModule(fileUrl, moduleUrl, source) {\n          this.fileUrl = fileUrl;\n          this.moduleUrl = moduleUrl;\n          this.source = source;\n      }\n      return SourceModule;\n  }());\n  // Returns all the source files and a mapping from modules to directives\n  function analyzeNgModules(programStaticSymbols, options, metadataResolver) {\n      var _a = _createNgModules(programStaticSymbols, options, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n      return _analyzeNgModules(ngModules, symbolsMissingModule);\n  }\n  function analyzeAndValidateNgModules(programStaticSymbols, options, metadataResolver) {\n      var result = analyzeNgModules(programStaticSymbols, options, metadataResolver);\n      if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n          var messages = result.symbolsMissingModule.map(function (s) { return (\"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"!\"); });\n          throw new Error(messages.join('\\n'));\n      }\n      return result;\n  }\n  // Wait for the directives in the given modules have been loaded\n  function loadNgModuleDirectives(ngModules) {\n      return Promise\n          .all(ListWrapper.flatten(ngModules.map(function (ngModule) { return ngModule.transitiveModule.directiveLoaders.map(function (loader) { return loader(); }); })))\n          .then(function () { });\n  }\n  function _analyzeNgModules(ngModuleMetas, symbolsMissingModule) {\n      var moduleMetasByRef = new Map();\n      ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n      var ngModuleByPipeOrDirective = new Map();\n      var ngModulesByFile = new Map();\n      var ngDirectivesByFile = new Map();\n      var filePaths = new Set();\n      // Looping over all modules to construct:\n      // - a map from file to modules `ngModulesByFile`,\n      // - a map from file to directives `ngDirectivesByFile`,\n      // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n      ngModuleMetas.forEach(function (ngModuleMeta) {\n          var srcFileUrl = ngModuleMeta.type.reference.filePath;\n          filePaths.add(srcFileUrl);\n          ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n          ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n              var fileUrl = dirIdentifier.reference.filePath;\n              filePaths.add(fileUrl);\n              ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n              ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n          });\n          ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n              var fileUrl = pipeIdentifier.reference.filePath;\n              filePaths.add(fileUrl);\n              ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n          });\n      });\n      var files = [];\n      filePaths.forEach(function (srcUrl) {\n          var directives = ngDirectivesByFile.get(srcUrl) || [];\n          var ngModules = ngModulesByFile.get(srcUrl) || [];\n          files.push({ srcUrl: srcUrl, directives: directives, ngModules: ngModules });\n      });\n      return {\n          // map directive/pipe to module\n          ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n          // list modules and directives for every source file\n          files: files,\n          ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n      };\n  }\n  var OfflineCompiler = (function () {\n      function OfflineCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _dirWrapperCompiler, _ngModuleCompiler, _outputEmitter, _localeId, _translationFormat, _animationParser) {\n          this._metadataResolver = _metadataResolver;\n          this._templateParser = _templateParser;\n          this._styleCompiler = _styleCompiler;\n          this._viewCompiler = _viewCompiler;\n          this._dirWrapperCompiler = _dirWrapperCompiler;\n          this._ngModuleCompiler = _ngModuleCompiler;\n          this._outputEmitter = _outputEmitter;\n          this._localeId = _localeId;\n          this._translationFormat = _translationFormat;\n          this._animationParser = _animationParser;\n          this._animationCompiler = new AnimationCompiler();\n      }\n      OfflineCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n      OfflineCompiler.prototype.compileModules = function (staticSymbols, options) {\n          var _this = this;\n          var _a = analyzeAndValidateNgModules(staticSymbols, options, this._metadataResolver), ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files, ngModules = _a.ngModules;\n          return loadNgModuleDirectives(ngModules).then(function () {\n              var sourceModules = files.map(function (file) { return _this._compileSrcFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.ngModules); });\n              return ListWrapper.flatten(sourceModules);\n          });\n      };\n      OfflineCompiler.prototype._compileSrcFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, ngModules) {\n          var _this = this;\n          var fileSuffix = _splitTypescriptSuffix(srcFileUrl)[1];\n          var statements = [];\n          var exportedVars = [];\n          var outputSourceModules = [];\n          // compile all ng modules\n          exportedVars.push.apply(exportedVars, ngModules.map(function (ngModuleType) { return _this._compileModule(ngModuleType, statements); }));\n          // compile directive wrappers\n          exportedVars.push.apply(exportedVars, directives.map(function (directiveType) { return _this._compileDirectiveWrapper(directiveType, statements); }));\n          // compile components\n          directives.forEach(function (dirType) {\n              var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n              if (!compMeta.isComponent) {\n                  return Promise.resolve(null);\n              }\n              var ngModule = ngModuleByPipeOrDirective.get(dirType);\n              if (!ngModule) {\n                  throw new Error(\"Internal Error: cannot determine the module for component \" + compMeta.type.name + \"!\");\n              }\n              _assertComponent(compMeta);\n              // compile styles\n              var stylesCompileResults = _this._styleCompiler.compileComponent(compMeta);\n              stylesCompileResults.externalStylesheets.forEach(function (compiledStyleSheet) {\n                  outputSourceModules.push(_this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n              });\n              // compile components\n              exportedVars.push(_this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements), _this._compileComponent(compMeta, ngModule, ngModule.transitiveModule.directives, stylesCompileResults.componentStylesheet, fileSuffix, statements));\n          });\n          if (statements.length > 0) {\n              var srcModule = this._codegenSourceModule(srcFileUrl, _ngfactoryModuleUrl(srcFileUrl), statements, exportedVars);\n              outputSourceModules.unshift(srcModule);\n          }\n          return outputSourceModules;\n      };\n      OfflineCompiler.prototype._compileModule = function (ngModuleType, targetStatements) {\n          var ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n          var providers = [];\n          if (this._localeId) {\n              providers.push(new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.LOCALE_ID),\n                  useValue: this._localeId,\n              }));\n          }\n          if (this._translationFormat) {\n              providers.push(new CompileProviderMetadata({\n                  token: resolveIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n                  useValue: this._translationFormat\n              }));\n          }\n          var appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n          appCompileResult.dependencies.forEach(function (dep) {\n              dep.placeholder.name = _componentFactoryName(dep.comp);\n              dep.placeholder.moduleUrl = _ngfactoryModuleUrl(dep.comp.moduleUrl);\n          });\n          targetStatements.push.apply(targetStatements, appCompileResult.statements);\n          return appCompileResult.ngModuleFactoryVar;\n      };\n      OfflineCompiler.prototype._compileDirectiveWrapper = function (directiveType, targetStatements) {\n          var dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n          var dirCompileResult = this._dirWrapperCompiler.compile(dirMeta);\n          targetStatements.push.apply(targetStatements, dirCompileResult.statements);\n          return dirCompileResult.dirWrapperClassVar;\n      };\n      OfflineCompiler.prototype._compileComponentFactory = function (compMeta, ngModule, fileSuffix, targetStatements) {\n          var hostMeta = createHostComponentMeta(compMeta);\n          var hostViewFactoryVar = this._compileComponent(hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements);\n          var compFactoryVar = _componentFactoryName(compMeta.type);\n          targetStatements.push(variable(compFactoryVar)\n              .set(importExpr(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)])\n              .instantiate([\n              literal(compMeta.selector),\n              variable(hostViewFactoryVar),\n              importExpr(compMeta.type),\n          ], importType(resolveIdentifier(Identifiers.ComponentFactory), [importType(compMeta.type)], [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]));\n          return compFactoryVar;\n      };\n      OfflineCompiler.prototype._compileComponent = function (compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix, targetStatements) {\n          var _this = this;\n          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n          var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n          var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, ngModule.schemas, compMeta.type.name);\n          var stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n          var viewResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, stylesExpr, pipes, compiledAnimations);\n          if (componentStyles) {\n              targetStatements.push.apply(targetStatements, _resolveStyleStatements(componentStyles, fileSuffix));\n          }\n          compiledAnimations.forEach(function (entry) { return targetStatements.push.apply(targetStatements, entry.statements); });\n          targetStatements.push.apply(targetStatements, _resolveViewStatements(viewResult));\n          return viewResult.viewClassVar;\n      };\n      OfflineCompiler.prototype._codgenStyles = function (fileUrl, stylesCompileResult, fileSuffix) {\n          _resolveStyleStatements(stylesCompileResult, fileSuffix);\n          return this._codegenSourceModule(fileUrl, _stylesModuleUrl(stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix), stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n      };\n      OfflineCompiler.prototype._codegenSourceModule = function (fileUrl, moduleUrl, statements, exportedVars) {\n          return new SourceModule(fileUrl, moduleUrl, this._outputEmitter.emitStatements(moduleUrl, statements, exportedVars));\n      };\n      return OfflineCompiler;\n  }());\n  function _resolveViewStatements(compileResult) {\n      compileResult.dependencies.forEach(function (dep) {\n          if (dep instanceof ViewClassDependency) {\n              var vfd = dep;\n              vfd.placeholder.moduleUrl = _ngfactoryModuleUrl(vfd.comp.moduleUrl);\n          }\n          else if (dep instanceof ComponentFactoryDependency) {\n              var cfd = dep;\n              cfd.placeholder.name = _componentFactoryName(cfd.comp);\n              cfd.placeholder.moduleUrl = _ngfactoryModuleUrl(cfd.comp.moduleUrl);\n          }\n          else if (dep instanceof DirectiveWrapperDependency) {\n              var dwd = dep;\n              dwd.placeholder.moduleUrl = _ngfactoryModuleUrl(dwd.dir.moduleUrl);\n          }\n      });\n      return compileResult.statements;\n  }\n  function _resolveStyleStatements(compileResult, fileSuffix) {\n      compileResult.dependencies.forEach(function (dep) {\n          dep.valuePlaceholder.moduleUrl = _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix);\n      });\n      return compileResult.statements;\n  }\n  function _ngfactoryModuleUrl(dirUrl) {\n      var urlWithSuffix = _splitTypescriptSuffix(dirUrl);\n      return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n  }\n  function _componentFactoryName(comp) {\n      return comp.name + \"NgFactory\";\n  }\n  function _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n      return shim ? stylesheetUrl + \".shim\" + suffix : \"\" + stylesheetUrl + suffix;\n  }\n  function _assertComponent(meta) {\n      if (!meta.isComponent) {\n          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n      }\n  }\n  function _splitTypescriptSuffix(path) {\n      if (path.endsWith('.d.ts')) {\n          return [path.slice(0, -5), '.ts'];\n      }\n      var lastDot = path.lastIndexOf('.');\n      if (lastDot !== -1) {\n          return [path.substring(0, lastDot), path.substring(lastDot)];\n      }\n      return [path, ''];\n  }\n  // Load the NgModules and check\n  // that all directives / pipes that are present in the program\n  // are also declared by a module.\n  function _createNgModules(programStaticSymbols, options, metadataResolver) {\n      var ngModules = new Map();\n      var programPipesAndDirectives = [];\n      var ngModulePipesAndDirective = new Set();\n      var addNgModule = function (staticSymbol) {\n          if (ngModules.has(staticSymbol)) {\n              return false;\n          }\n          var ngModule = metadataResolver.getUnloadedNgModuleMetadata(staticSymbol, false, false);\n          if (ngModule) {\n              ngModules.set(ngModule.type.reference, ngModule);\n              ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n              ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n              if (options.transitiveModules) {\n                  // For every input modules add the list of transitively included modules\n                  ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.type.reference); });\n              }\n          }\n          return !!ngModule;\n      };\n      programStaticSymbols.forEach(function (staticSymbol) {\n          if (!addNgModule(staticSymbol) &&\n              (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n              programPipesAndDirectives.push(staticSymbol);\n          }\n      });\n      // Throw an error if any of the program pipe or directives is not declared by a module\n      var symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n      return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n  }\n\n  var StylesCollectionEntry = (function () {\n      function StylesCollectionEntry(time, value) {\n          this.time = time;\n          this.value = value;\n      }\n      StylesCollectionEntry.prototype.matches = function (time, value) {\n          return time == this.time && value == this.value;\n      };\n      return StylesCollectionEntry;\n  }());\n  var StylesCollection = (function () {\n      function StylesCollection() {\n          this.styles = {};\n      }\n      StylesCollection.prototype.insertAtTime = function (property, time, value) {\n          var tuple = new StylesCollectionEntry(time, value);\n          var entries = this.styles[property];\n          if (!isPresent(entries)) {\n              entries = this.styles[property] = [];\n          }\n          // insert this at the right stop in the array\n          // this way we can keep it sorted\n          var insertionIndex = 0;\n          for (var i = entries.length - 1; i >= 0; i--) {\n              if (entries[i].time <= time) {\n                  insertionIndex = i + 1;\n                  break;\n              }\n          }\n          entries.splice(insertionIndex, 0, tuple);\n      };\n      StylesCollection.prototype.getByIndex = function (property, index) {\n          var items = this.styles[property];\n          if (isPresent(items)) {\n              return index >= items.length ? null : items[index];\n          }\n          return null;\n      };\n      StylesCollection.prototype.indexOfAtOrBeforeTime = function (property, time) {\n          var entries = this.styles[property];\n          if (isPresent(entries)) {\n              for (var i = entries.length - 1; i >= 0; i--) {\n                  if (entries[i].time <= time)\n                      return i;\n              }\n          }\n          return null;\n      };\n      return StylesCollection;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$16 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _INITIAL_KEYFRAME = 0;\n  var _TERMINAL_KEYFRAME = 1;\n  var _ONE_SECOND = 1000;\n  var AnimationParseError = (function (_super) {\n      __extends$16(AnimationParseError, _super);\n      function AnimationParseError(message) {\n          _super.call(this, null, message);\n      }\n      AnimationParseError.prototype.toString = function () { return \"\" + this.msg; };\n      return AnimationParseError;\n  }(ParseError));\n  var AnimationEntryParseResult = (function () {\n      function AnimationEntryParseResult(ast, errors) {\n          this.ast = ast;\n          this.errors = errors;\n      }\n      return AnimationEntryParseResult;\n  }());\n  var AnimationParser = (function () {\n      function AnimationParser(_schema) {\n          this._schema = _schema;\n      }\n      AnimationParser.prototype.parseComponent = function (component) {\n          var _this = this;\n          var errors = [];\n          var componentName = component.type.name;\n          var animationTriggerNames = new Set();\n          var asts = component.template.animations.map(function (entry) {\n              var result = _this.parseEntry(entry);\n              var ast = result.ast;\n              var triggerName = ast.name;\n              if (animationTriggerNames.has(triggerName)) {\n                  result.errors.push(new AnimationParseError(\"The animation trigger \\\"\" + triggerName + \"\\\" has already been registered for the \" + componentName + \" component\"));\n              }\n              else {\n                  animationTriggerNames.add(triggerName);\n              }\n              if (result.errors.length > 0) {\n                  var errorMessage_1 = \"- Unable to parse the animation sequence for \\\"\" + triggerName + \"\\\" on the \" + componentName + \" component due to the following errors:\";\n                  result.errors.forEach(function (error) { errorMessage_1 += '\\n-- ' + error.msg; });\n                  errors.push(errorMessage_1);\n              }\n              return ast;\n          });\n          if (errors.length > 0) {\n              var errorString = errors.join('\\n');\n              throw new Error(\"Animation parse errors:\\n\" + errorString);\n          }\n          return asts;\n      };\n      AnimationParser.prototype.parseEntry = function (entry) {\n          var _this = this;\n          var errors = [];\n          var stateStyles = {};\n          var transitions = [];\n          var stateDeclarationAsts = [];\n          entry.definitions.forEach(function (def) {\n              if (def instanceof CompileAnimationStateDeclarationMetadata) {\n                  _parseAnimationDeclarationStates(def, _this._schema, errors).forEach(function (ast) {\n                      stateDeclarationAsts.push(ast);\n                      stateStyles[ast.stateName] = ast.styles;\n                  });\n              }\n              else {\n                  transitions.push(def);\n              }\n          });\n          var stateTransitionAsts = transitions.map(function (transDef) { return _parseAnimationStateTransition(transDef, stateStyles, _this._schema, errors); });\n          var ast = new AnimationEntryAst(entry.name, stateDeclarationAsts, stateTransitionAsts);\n          return new AnimationEntryParseResult(ast, errors);\n      };\n      AnimationParser.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      AnimationParser.ctorParameters = [\n          { type: ElementSchemaRegistry, },\n      ];\n      return AnimationParser;\n  }());\n  function _parseAnimationDeclarationStates(stateMetadata, schema, errors) {\n      var normalizedStyles = _normalizeStyleMetadata(stateMetadata.styles, {}, schema, errors, false);\n      var defStyles = new AnimationStylesAst(normalizedStyles);\n      var states = stateMetadata.stateNameExpr.split(/\\s*,\\s*/);\n      return states.map(function (state) { return new AnimationStateDeclarationAst(state, defStyles); });\n  }\n  function _parseAnimationStateTransition(transitionStateMetadata, stateStyles, schema, errors) {\n      var styles = new StylesCollection();\n      var transitionExprs = [];\n      var transitionStates = transitionStateMetadata.stateChangeExpr.split(/\\s*,\\s*/);\n      transitionStates.forEach(function (expr) { transitionExprs.push.apply(transitionExprs, _parseAnimationTransitionExpr(expr, errors)); });\n      var entry = _normalizeAnimationEntry(transitionStateMetadata.steps);\n      var animation = _normalizeStyleSteps(entry, stateStyles, schema, errors);\n      var animationAst = _parseTransitionAnimation(animation, 0, styles, stateStyles, errors);\n      if (errors.length == 0) {\n          _fillAnimationAstStartingKeyframes(animationAst, styles, errors);\n      }\n      var stepsAst = (animationAst instanceof AnimationWithStepsAst) ?\n          animationAst :\n          new AnimationSequenceAst([animationAst]);\n      return new AnimationStateTransitionAst(transitionExprs, stepsAst);\n  }\n  function _parseAnimationAlias(alias, errors) {\n      switch (alias) {\n          case ':enter':\n              return 'void => *';\n          case ':leave':\n              return '* => void';\n          default:\n              errors.push(new AnimationParseError(\"the transition alias value \\\"\" + alias + \"\\\" is not supported\"));\n              return '* => *';\n      }\n  }\n  function _parseAnimationTransitionExpr(eventStr, errors) {\n      var expressions = [];\n      if (eventStr[0] == ':') {\n          eventStr = _parseAnimationAlias(eventStr, errors);\n      }\n      var match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n      if (!isPresent(match) || match.length < 4) {\n          errors.push(new AnimationParseError(\"the provided \" + eventStr + \" is not of a supported format\"));\n          return expressions;\n      }\n      var fromState = match[1];\n      var separator = match[2];\n      var toState = match[3];\n      expressions.push(new AnimationStateTransitionExpression(fromState, toState));\n      var isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n      if (separator[0] == '<' && !isFullAnyStateExpr) {\n          expressions.push(new AnimationStateTransitionExpression(toState, fromState));\n      }\n      return expressions;\n  }\n  function _normalizeAnimationEntry(entry) {\n      return Array.isArray(entry) ? new CompileAnimationSequenceMetadata(entry) : entry;\n  }\n  function _normalizeStyleMetadata(entry, stateStyles, schema, errors, permitStateReferences) {\n      var normalizedStyles = [];\n      entry.styles.forEach(function (styleEntry) {\n          if (typeof styleEntry === 'string') {\n              if (permitStateReferences) {\n                  normalizedStyles.push.apply(normalizedStyles, _resolveStylesFromState(styleEntry, stateStyles, errors));\n              }\n              else {\n                  errors.push(new AnimationParseError(\"State based animations cannot contain references to other states\"));\n              }\n          }\n          else {\n              var stylesObj_1 = styleEntry;\n              var normalizedStylesObj_1 = {};\n              Object.keys(stylesObj_1).forEach(function (propName) {\n                  var normalizedProp = schema.normalizeAnimationStyleProperty(propName);\n                  var normalizedOutput = schema.normalizeAnimationStyleValue(normalizedProp, propName, stylesObj_1[propName]);\n                  var normalizationError = normalizedOutput['error'];\n                  if (normalizationError) {\n                      errors.push(new AnimationParseError(normalizationError));\n                  }\n                  normalizedStylesObj_1[normalizedProp] = normalizedOutput['value'];\n              });\n              normalizedStyles.push(normalizedStylesObj_1);\n          }\n      });\n      return normalizedStyles;\n  }\n  function _normalizeStyleSteps(entry, stateStyles, schema, errors) {\n      var steps = _normalizeStyleStepEntry(entry, stateStyles, schema, errors);\n      return (entry instanceof CompileAnimationGroupMetadata) ?\n          new CompileAnimationGroupMetadata(steps) :\n          new CompileAnimationSequenceMetadata(steps);\n  }\n  function _mergeAnimationStyles(stylesList, newItem) {\n      if (typeof newItem === 'object' && newItem !== null && stylesList.length > 0) {\n          var lastIndex = stylesList.length - 1;\n          var lastItem = stylesList[lastIndex];\n          if (typeof lastItem === 'object' && lastItem !== null) {\n              stylesList[lastIndex] = StringMapWrapper.merge(lastItem, newItem);\n              return;\n          }\n      }\n      stylesList.push(newItem);\n  }\n  function _normalizeStyleStepEntry(entry, stateStyles, schema, errors) {\n      var steps;\n      if (entry instanceof CompileAnimationWithStepsMetadata) {\n          steps = entry.steps;\n      }\n      else {\n          return [entry];\n      }\n      var newSteps = [];\n      var combinedStyles;\n      steps.forEach(function (step) {\n          if (step instanceof CompileAnimationStyleMetadata) {\n              // this occurs when a style step is followed by a previous style step\n              // or when the first style step is run. We want to concatenate all subsequent\n              // style steps together into a single style step such that we have the correct\n              // starting keyframe data to pass into the animation player.\n              if (!isPresent(combinedStyles)) {\n                  combinedStyles = [];\n              }\n              _normalizeStyleMetadata(step, stateStyles, schema, errors, true)\n                  .forEach(function (entry) { _mergeAnimationStyles(combinedStyles, entry); });\n          }\n          else {\n              // it is important that we create a metadata entry of the combined styles\n              // before we go on an process the animate, sequence or group metadata steps.\n              // This will ensure that the AST will have the previous styles painted on\n              // screen before any further animations that use the styles take place.\n              if (isPresent(combinedStyles)) {\n                  newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n                  combinedStyles = null;\n              }\n              if (step instanceof CompileAnimationAnimateMetadata) {\n                  // we do not recurse into CompileAnimationAnimateMetadata since\n                  // those style steps are not going to be squashed\n                  var animateStyleValue = step.styles;\n                  if (animateStyleValue instanceof CompileAnimationStyleMetadata) {\n                      animateStyleValue.styles =\n                          _normalizeStyleMetadata(animateStyleValue, stateStyles, schema, errors, true);\n                  }\n                  else if (animateStyleValue instanceof CompileAnimationKeyframesSequenceMetadata) {\n                      animateStyleValue.steps.forEach(function (step) {\n                          step.styles = _normalizeStyleMetadata(step, stateStyles, schema, errors, true);\n                      });\n                  }\n              }\n              else if (step instanceof CompileAnimationWithStepsMetadata) {\n                  var innerSteps = _normalizeStyleStepEntry(step, stateStyles, schema, errors);\n                  step = step instanceof CompileAnimationGroupMetadata ?\n                      new CompileAnimationGroupMetadata(innerSteps) :\n                      new CompileAnimationSequenceMetadata(innerSteps);\n              }\n              newSteps.push(step);\n          }\n      });\n      // this happens when only styles were animated within the sequence\n      if (isPresent(combinedStyles)) {\n          newSteps.push(new CompileAnimationStyleMetadata(0, combinedStyles));\n      }\n      return newSteps;\n  }\n  function _resolveStylesFromState(stateName, stateStyles, errors) {\n      var styles = [];\n      if (stateName[0] != ':') {\n          errors.push(new AnimationParseError(\"Animation states via styles must be prefixed with a \\\":\\\"\"));\n      }\n      else {\n          var normalizedStateName = stateName.substring(1);\n          var value = stateStyles[normalizedStateName];\n          if (!isPresent(value)) {\n              errors.push(new AnimationParseError(\"Unable to apply styles due to missing a state: \\\"\" + normalizedStateName + \"\\\"\"));\n          }\n          else {\n              value.styles.forEach(function (stylesEntry) {\n                  if (typeof stylesEntry === 'object' && stylesEntry !== null) {\n                      styles.push(stylesEntry);\n                  }\n              });\n          }\n      }\n      return styles;\n  }\n  var _AnimationTimings = (function () {\n      function _AnimationTimings(duration, delay, easing) {\n          this.duration = duration;\n          this.delay = delay;\n          this.easing = easing;\n      }\n      return _AnimationTimings;\n  }());\n  function _parseAnimationKeyframes(keyframeSequence, currentTime, collectedStyles, stateStyles, errors) {\n      var totalEntries = keyframeSequence.steps.length;\n      var totalOffsets = 0;\n      keyframeSequence.steps.forEach(function (step) { return totalOffsets += (isPresent(step.offset) ? 1 : 0); });\n      if (totalOffsets > 0 && totalOffsets < totalEntries) {\n          errors.push(new AnimationParseError(\"Not all style() entries contain an offset for the provided keyframe()\"));\n          totalOffsets = totalEntries;\n      }\n      var limit = totalEntries - 1;\n      var margin = totalOffsets == 0 ? (1 / limit) : 0;\n      var rawKeyframes = [];\n      var index = 0;\n      var doSortKeyframes = false;\n      var lastOffset = 0;\n      keyframeSequence.steps.forEach(function (styleMetadata) {\n          var offset = styleMetadata.offset;\n          var keyframeStyles = {};\n          styleMetadata.styles.forEach(function (entry) {\n              Object.keys(entry).forEach(function (prop) {\n                  if (prop != 'offset') {\n                      keyframeStyles[prop] = entry[prop];\n                  }\n              });\n          });\n          if (isPresent(offset)) {\n              doSortKeyframes = doSortKeyframes || (offset < lastOffset);\n          }\n          else {\n              offset = index == limit ? _TERMINAL_KEYFRAME : (margin * index);\n          }\n          rawKeyframes.push([offset, keyframeStyles]);\n          lastOffset = offset;\n          index++;\n      });\n      if (doSortKeyframes) {\n          rawKeyframes.sort(function (a, b) { return a[0] <= b[0] ? -1 : 1; });\n      }\n      var firstKeyframe = rawKeyframes[0];\n      if (firstKeyframe[0] != _INITIAL_KEYFRAME) {\n          rawKeyframes.splice(0, 0, firstKeyframe = [_INITIAL_KEYFRAME, {}]);\n      }\n      var firstKeyframeStyles = firstKeyframe[1];\n      limit = rawKeyframes.length - 1;\n      var lastKeyframe = rawKeyframes[limit];\n      if (lastKeyframe[0] != _TERMINAL_KEYFRAME) {\n          rawKeyframes.push(lastKeyframe = [_TERMINAL_KEYFRAME, {}]);\n          limit++;\n      }\n      var lastKeyframeStyles = lastKeyframe[1];\n      for (var i = 1; i <= limit; i++) {\n          var entry = rawKeyframes[i];\n          var styles = entry[1];\n          Object.keys(styles).forEach(function (prop) {\n              if (!isPresent(firstKeyframeStyles[prop])) {\n                  firstKeyframeStyles[prop] = FILL_STYLE_FLAG;\n              }\n          });\n      }\n      var _loop_1 = function(i) {\n          var entry = rawKeyframes[i];\n          var styles = entry[1];\n          Object.keys(styles).forEach(function (prop) {\n              if (!isPresent(lastKeyframeStyles[prop])) {\n                  lastKeyframeStyles[prop] = styles[prop];\n              }\n          });\n      };\n      for (var i = limit - 1; i >= 0; i--) {\n          _loop_1(i);\n      }\n      return rawKeyframes.map(function (entry) { return new AnimationKeyframeAst(entry[0], new AnimationStylesAst([entry[1]])); });\n  }\n  function _parseTransitionAnimation(entry, currentTime, collectedStyles, stateStyles, errors) {\n      var ast;\n      var playTime = 0;\n      var startingTime = currentTime;\n      if (entry instanceof CompileAnimationWithStepsMetadata) {\n          var maxDuration_1 = 0;\n          var steps_1 = [];\n          var isGroup_1 = entry instanceof CompileAnimationGroupMetadata;\n          var previousStyles_1;\n          entry.steps.forEach(function (entry) {\n              // these will get picked up by the next step...\n              var time = isGroup_1 ? startingTime : currentTime;\n              if (entry instanceof CompileAnimationStyleMetadata) {\n                  entry.styles.forEach(function (stylesEntry) {\n                      // by this point we know that we only have stringmap values\n                      var map = stylesEntry;\n                      Object.keys(map).forEach(function (prop) { collectedStyles.insertAtTime(prop, time, map[prop]); });\n                  });\n                  previousStyles_1 = entry.styles;\n                  return;\n              }\n              var innerAst = _parseTransitionAnimation(entry, time, collectedStyles, stateStyles, errors);\n              if (isPresent(previousStyles_1)) {\n                  if (entry instanceof CompileAnimationWithStepsMetadata) {\n                      var startingStyles = new AnimationStylesAst(previousStyles_1);\n                      steps_1.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n                  }\n                  else {\n                      var innerStep = innerAst;\n                      (_a = innerStep.startingStyles.styles).push.apply(_a, previousStyles_1);\n                  }\n                  previousStyles_1 = null;\n              }\n              var astDuration = innerAst.playTime;\n              currentTime += astDuration;\n              playTime += astDuration;\n              maxDuration_1 = Math.max(astDuration, maxDuration_1);\n              steps_1.push(innerAst);\n              var _a;\n          });\n          if (isPresent(previousStyles_1)) {\n              var startingStyles = new AnimationStylesAst(previousStyles_1);\n              steps_1.push(new AnimationStepAst(startingStyles, [], 0, 0, ''));\n          }\n          if (isGroup_1) {\n              ast = new AnimationGroupAst(steps_1);\n              playTime = maxDuration_1;\n              currentTime = startingTime + playTime;\n          }\n          else {\n              ast = new AnimationSequenceAst(steps_1);\n          }\n      }\n      else if (entry instanceof CompileAnimationAnimateMetadata) {\n          var timings = _parseTimeExpression(entry.timings, errors);\n          var styles = entry.styles;\n          var keyframes = void 0;\n          if (styles instanceof CompileAnimationKeyframesSequenceMetadata) {\n              keyframes =\n                  _parseAnimationKeyframes(styles, currentTime, collectedStyles, stateStyles, errors);\n          }\n          else {\n              var styleData = styles;\n              var offset = _TERMINAL_KEYFRAME;\n              var styleAst = new AnimationStylesAst(styleData.styles);\n              var keyframe = new AnimationKeyframeAst(offset, styleAst);\n              keyframes = [keyframe];\n          }\n          ast = new AnimationStepAst(new AnimationStylesAst([]), keyframes, timings.duration, timings.delay, timings.easing);\n          playTime = timings.duration + timings.delay;\n          currentTime += playTime;\n          keyframes.forEach(function (keyframe /** TODO #9100 */) { return keyframe.styles.styles.forEach(function (entry /** TODO #9100 */) { return Object.keys(entry).forEach(function (prop) { collectedStyles.insertAtTime(prop, currentTime, entry[prop]); }); }); });\n      }\n      else {\n          // if the code reaches this stage then an error\n          // has already been populated within the _normalizeStyleSteps()\n          // operation...\n          ast = new AnimationStepAst(null, [], 0, 0, '');\n      }\n      ast.playTime = playTime;\n      ast.startTime = startingTime;\n      return ast;\n  }\n  function _fillAnimationAstStartingKeyframes(ast, collectedStyles, errors) {\n      // steps that only contain style will not be filled\n      if ((ast instanceof AnimationStepAst) && ast.keyframes.length > 0) {\n          var keyframes = ast.keyframes;\n          if (keyframes.length == 1) {\n              var endKeyframe = keyframes[0];\n              var startKeyframe = _createStartKeyframeFromEndKeyframe(endKeyframe, ast.startTime, ast.playTime, collectedStyles, errors);\n              ast.keyframes = [startKeyframe, endKeyframe];\n          }\n      }\n      else if (ast instanceof AnimationWithStepsAst) {\n          ast.steps.forEach(function (entry) { return _fillAnimationAstStartingKeyframes(entry, collectedStyles, errors); });\n      }\n  }\n  function _parseTimeExpression(exp, errors) {\n      var regex = /^([\\.\\d]+)(m?s)(?:\\s+([\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?/i;\n      var duration;\n      var delay = 0;\n      var easing = null;\n      if (typeof exp === 'string') {\n          var matches = exp.match(regex);\n          if (matches === null) {\n              errors.push(new AnimationParseError(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\"));\n              return new _AnimationTimings(0, 0, null);\n          }\n          var durationMatch = parseFloat(matches[1]);\n          var durationUnit = matches[2];\n          if (durationUnit == 's') {\n              durationMatch *= _ONE_SECOND;\n          }\n          duration = Math.floor(durationMatch);\n          var delayMatch = matches[3];\n          var delayUnit = matches[4];\n          if (isPresent(delayMatch)) {\n              var delayVal = parseFloat(delayMatch);\n              if (isPresent(delayUnit) && delayUnit == 's') {\n                  delayVal *= _ONE_SECOND;\n              }\n              delay = Math.floor(delayVal);\n          }\n          var easingVal = matches[5];\n          if (!isBlank(easingVal)) {\n              easing = easingVal;\n          }\n      }\n      else {\n          duration = exp;\n      }\n      return new _AnimationTimings(duration, delay, easing);\n  }\n  function _createStartKeyframeFromEndKeyframe(endKeyframe, startTime, duration, collectedStyles, errors) {\n      var values = {};\n      var endTime = startTime + duration;\n      endKeyframe.styles.styles.forEach(function (styleData) {\n          Object.keys(styleData).forEach(function (prop) {\n              var val = styleData[prop];\n              if (prop == 'offset')\n                  return;\n              var resultIndex = collectedStyles.indexOfAtOrBeforeTime(prop, startTime);\n              var resultEntry /** TODO #9100 */, nextEntry /** TODO #9100 */, value;\n              if (isPresent(resultIndex)) {\n                  resultEntry = collectedStyles.getByIndex(prop, resultIndex);\n                  value = resultEntry.value;\n                  nextEntry = collectedStyles.getByIndex(prop, resultIndex + 1);\n              }\n              else {\n                  // this is a flag that the runtime code uses to pass\n                  // in a value either from the state declaration styles\n                  // or using the AUTO_STYLE value (e.g. getComputedStyle)\n                  value = FILL_STYLE_FLAG;\n              }\n              if (isPresent(nextEntry) && !nextEntry.matches(endTime, val)) {\n                  errors.push(new AnimationParseError(\"The animated CSS property \\\"\" + prop + \"\\\" unexpectedly changes between steps \\\"\" + resultEntry.time + \"ms\\\" and \\\"\" + endTime + \"ms\\\" at \\\"\" + nextEntry.time + \"ms\\\"\"));\n              }\n              values[prop] = value;\n          });\n      });\n      return new AnimationKeyframeAst(_INITIAL_KEYFRAME, new AnimationStylesAst([values]));\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * An interface for retrieving documents by URL that the compiler uses\n   * to load templates.\n   */\n  var ResourceLoader = (function () {\n      function ResourceLoader() {\n      }\n      ResourceLoader.prototype.get = function (url) { return null; };\n      return ResourceLoader;\n  }());\n\n  var _ASSET_SCHEME = 'asset:';\n  /**\n   * Create a {@link UrlResolver} with no package prefix.\n   */\n  function createUrlResolverWithoutPackagePrefix() {\n      return new UrlResolver();\n  }\n  function createOfflineCompileUrlResolver() {\n      return new UrlResolver(_ASSET_SCHEME);\n  }\n  /**\n   * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n   */\n  var DEFAULT_PACKAGE_URL_PROVIDER = {\n      provide: _angular_core.PACKAGE_ROOT_URL,\n      useValue: '/'\n  };\n  /**\n   * Used by the {@link Compiler} when resolving HTML and CSS template URLs.\n   *\n   * This class can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   *\n   * ## Example\n   *\n   * {@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n   *\n   * @security  When compiling templates at runtime, you must\n   * ensure that the entire template comes from a trusted source.\n   * Attacker-controlled data introduced by a template could expose your\n   * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n   */\n  var UrlResolver = (function () {\n      function UrlResolver(_packagePrefix) {\n          if (_packagePrefix === void 0) { _packagePrefix = null; }\n          this._packagePrefix = _packagePrefix;\n      }\n      /**\n       * Resolves the `url` given the `baseUrl`:\n       * - when the `url` is null, the `baseUrl` is returned,\n       * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n       * `baseUrl` and `url`,\n       * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n       * returned as is (ignoring the `baseUrl`)\n       */\n      UrlResolver.prototype.resolve = function (baseUrl, url) {\n          var resolvedUrl = url;\n          if (isPresent(baseUrl) && baseUrl.length > 0) {\n              resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n          }\n          var resolvedParts = _split(resolvedUrl);\n          var prefix = this._packagePrefix;\n          if (isPresent(prefix) && isPresent(resolvedParts) &&\n              resolvedParts[_ComponentIndex.Scheme] == 'package') {\n              var path = resolvedParts[_ComponentIndex.Path];\n              if (this._packagePrefix === _ASSET_SCHEME) {\n                  var pathSegements = path.split(/\\//);\n                  resolvedUrl = \"asset:\" + pathSegements[0] + \"/lib/\" + pathSegements.slice(1).join('/');\n              }\n              else {\n                  prefix = prefix.replace(/\\/+$/, '');\n                  path = path.replace(/^\\/+/, '');\n                  return prefix + \"/\" + path;\n              }\n          }\n          return resolvedUrl;\n      };\n      UrlResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      UrlResolver.ctorParameters = [\n          { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n      ];\n      return UrlResolver;\n  }());\n  /**\n   * Extract the scheme of a URL.\n   */\n  function getUrlScheme(url) {\n      var match = _split(url);\n      return (match && match[_ComponentIndex.Scheme]) || '';\n  }\n  // The code below is adapted from Traceur:\n  // https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n  /**\n   * Builds a URI string from already-encoded parts.\n   *\n   * No encoding is performed.  Any component may be omitted as either null or\n   * undefined.\n   *\n   * @param opt_scheme The scheme such as 'http'.\n   * @param opt_userInfo The user name before the '@'.\n   * @param opt_domain The domain such as 'www.google.com', already\n   *     URI-encoded.\n   * @param opt_port The port number.\n   * @param opt_path The path, already URI-encoded.  If it is not\n   *     empty, it must begin with a slash.\n   * @param opt_queryData The URI-encoded query data.\n   * @param opt_fragment The URI-encoded fragment identifier.\n   * @return The fully combined URI.\n   */\n  function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n      var out = [];\n      if (isPresent(opt_scheme)) {\n          out.push(opt_scheme + ':');\n      }\n      if (isPresent(opt_domain)) {\n          out.push('//');\n          if (isPresent(opt_userInfo)) {\n              out.push(opt_userInfo + '@');\n          }\n          out.push(opt_domain);\n          if (isPresent(opt_port)) {\n              out.push(':' + opt_port);\n          }\n      }\n      if (isPresent(opt_path)) {\n          out.push(opt_path);\n      }\n      if (isPresent(opt_queryData)) {\n          out.push('?' + opt_queryData);\n      }\n      if (isPresent(opt_fragment)) {\n          out.push('#' + opt_fragment);\n      }\n      return out.join('');\n  }\n  /**\n   * A regular expression for breaking a URI into its component parts.\n   *\n   * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n   * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n   * disambiguation method used by POSIX regular expressions, it is natural and\n   * commonplace to use a regular expression for parsing the potential five\n   * components of a URI reference.\n   *\n   * The following line is the regular expression for breaking-down a\n   * well-formed URI reference into its components.\n   *\n   * <pre>\n   * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n   *  12            3  4          5       6  7        8 9\n   * </pre>\n   *\n   * The numbers in the second line above are only to assist readability; they\n   * indicate the reference points for each subexpression (i.e., each paired\n   * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n   * For example, matching the above expression to\n   * <pre>\n   *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n   * </pre>\n   * results in the following subexpression matches:\n   * <pre>\n   *    $1 = http:\n   *    $2 = http\n   *    $3 = //www.ics.uci.edu\n   *    $4 = www.ics.uci.edu\n   *    $5 = /pub/ietf/uri/\n   *    $6 = <undefined>\n   *    $7 = <undefined>\n   *    $8 = #Related\n   *    $9 = Related\n   * </pre>\n   * where <undefined> indicates that the component is not present, as is the\n   * case for the query component in the above example. Therefore, we can\n   * determine the value of the five components as\n   * <pre>\n   *    scheme    = $2\n   *    authority = $4\n   *    path      = $5\n   *    query     = $7\n   *    fragment  = $9\n   * </pre>\n   *\n   * The regular expression has been modified slightly to expose the\n   * userInfo, domain, and port separately from the authority.\n   * The modified version yields\n   * <pre>\n   *    $1 = http              scheme\n   *    $2 = <undefined>       userInfo -\\\n   *    $3 = www.ics.uci.edu   domain     | authority\n   *    $4 = <undefined>       port     -/\n   *    $5 = /pub/ietf/uri/    path\n   *    $6 = <undefined>       query without ?\n   *    $7 = Related           fragment without #\n   * </pre>\n   * @type {!RegExp}\n   * @internal\n   */\n  var _splitRe = new RegExp('^' +\n      '(?:' +\n      '([^:/?#.]+)' +\n      // used by other URL parts such as :,\n      // ?, /, #, and .\n      ':)?' +\n      '(?://' +\n      '(?:([^/?#]*)@)?' +\n      '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n      // digits, dashes, dots, percent\n      // escapes, and unicode characters.\n      '(?::([0-9]+))?' +\n      ')?' +\n      '([^?#]+)?' +\n      '(?:\\\\?([^#]*))?' +\n      '(?:#(.*))?' +\n      '$');\n  /**\n   * The index of each URI component in the return value of goog.uri.utils.split.\n   * @enum {number}\n   */\n  var _ComponentIndex;\n  (function (_ComponentIndex) {\n      _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n      _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n      _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n      _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n      _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n      _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n      _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n  })(_ComponentIndex || (_ComponentIndex = {}));\n  /**\n   * Splits a URI into its component parts.\n   *\n   * Each component can be accessed via the component indices; for example:\n   * <pre>\n   * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n   * </pre>\n   *\n   * @param uri The URI string to examine.\n   * @return Each component still URI-encoded.\n   *     Each component that is present will contain the encoded value, whereas\n   *     components that are not present will be undefined or empty, depending\n   *     on the browser's regular expression implementation.  Never null, since\n   *     arbitrary strings may still look like path names.\n   */\n  function _split(uri) {\n      return uri.match(_splitRe);\n  }\n  /**\n    * Removes dot segments in given path component, as described in\n    * RFC 3986, section 5.2.4.\n    *\n    * @param path A non-empty path component.\n    * @return Path component with removed dot segments.\n    */\n  function _removeDotSegments(path) {\n      if (path == '/')\n          return '/';\n      var leadingSlash = path[0] == '/' ? '/' : '';\n      var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n      var segments = path.split('/');\n      var out = [];\n      var up = 0;\n      for (var pos = 0; pos < segments.length; pos++) {\n          var segment = segments[pos];\n          switch (segment) {\n              case '':\n              case '.':\n                  break;\n              case '..':\n                  if (out.length > 0) {\n                      out.pop();\n                  }\n                  else {\n                      up++;\n                  }\n                  break;\n              default:\n                  out.push(segment);\n          }\n      }\n      if (leadingSlash == '') {\n          while (up-- > 0) {\n              out.unshift('..');\n          }\n          if (out.length === 0)\n              out.push('.');\n      }\n      return leadingSlash + out.join('/') + trailingSlash;\n  }\n  /**\n   * Takes an array of the parts from split and canonicalizes the path part\n   * and then joins all the parts.\n   */\n  function _joinAndCanonicalizePath(parts) {\n      var path = parts[_ComponentIndex.Path];\n      path = isBlank(path) ? '' : _removeDotSegments(path);\n      parts[_ComponentIndex.Path] = path;\n      return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n  }\n  /**\n   * Resolves a URL.\n   * @param base The URL acting as the base URL.\n   * @param to The URL to resolve.\n   */\n  function _resolveUrl(base, url) {\n      var parts = _split(encodeURI(url));\n      var baseParts = _split(base);\n      if (isPresent(parts[_ComponentIndex.Scheme])) {\n          return _joinAndCanonicalizePath(parts);\n      }\n      else {\n          parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n      }\n      for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n          if (isBlank(parts[i])) {\n              parts[i] = baseParts[i];\n          }\n      }\n      if (parts[_ComponentIndex.Path][0] == '/') {\n          return _joinAndCanonicalizePath(parts);\n      }\n      var path = baseParts[_ComponentIndex.Path];\n      if (isBlank(path))\n          path = '/';\n      var index = path.lastIndexOf('/');\n      path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n      parts[_ComponentIndex.Path] = path;\n      return _joinAndCanonicalizePath(parts);\n  }\n\n  var DirectiveNormalizer = (function () {\n      function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n          this._resourceLoader = _resourceLoader;\n          this._urlResolver = _urlResolver;\n          this._htmlParser = _htmlParser;\n          this._config = _config;\n          this._resourceLoaderCache = new Map();\n      }\n      DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n      DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n          var _this = this;\n          if (!normalizedDirective.isComponent) {\n              return;\n          }\n          this._resourceLoaderCache.delete(normalizedDirective.template.templateUrl);\n          normalizedDirective.template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n      };\n      DirectiveNormalizer.prototype._fetch = function (url) {\n          var result = this._resourceLoaderCache.get(url);\n          if (!result) {\n              result = this._resourceLoader.get(url);\n              this._resourceLoaderCache.set(url, result);\n          }\n          return result;\n      };\n      DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n          var _this = this;\n          var normalizedTemplateSync = null;\n          var normalizedTemplateAsync;\n          if (isPresent(prenormData.template)) {\n              normalizedTemplateSync = this.normalizeTemplateSync(prenormData);\n              normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n          }\n          else if (prenormData.templateUrl) {\n              normalizedTemplateAsync = this.normalizeTemplateAsync(prenormData);\n          }\n          else {\n              throw new Error(\"No template specified for component \" + stringify(prenormData.componentType));\n          }\n          if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n              // sync case\n              return new SyncAsyncResult(normalizedTemplateSync);\n          }\n          else {\n              // async case\n              return new SyncAsyncResult(null, normalizedTemplateAsync.then(function (normalizedTemplate) { return _this.normalizeExternalStylesheets(normalizedTemplate); }));\n          }\n      };\n      DirectiveNormalizer.prototype.normalizeTemplateSync = function (prenomData) {\n          return this.normalizeLoadedTemplate(prenomData, prenomData.template, prenomData.moduleUrl);\n      };\n      DirectiveNormalizer.prototype.normalizeTemplateAsync = function (prenomData) {\n          var _this = this;\n          var templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n          return this._fetch(templateUrl)\n              .then(function (value) { return _this.normalizeLoadedTemplate(prenomData, value, templateUrl); });\n      };\n      DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenomData, template, templateAbsUrl) {\n          var interpolationConfig = InterpolationConfig.fromArray(prenomData.interpolation);\n          var rootNodesAndErrors = this._htmlParser.parse(template, stringify(prenomData.componentType), false, interpolationConfig);\n          if (rootNodesAndErrors.errors.length > 0) {\n              var errorString = rootNodesAndErrors.errors.join('\\n');\n              throw new Error(\"Template parse errors:\\n\" + errorString);\n          }\n          var templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n              styles: prenomData.styles,\n              styleUrls: prenomData.styleUrls,\n              moduleUrl: prenomData.moduleUrl\n          }));\n          var visitor = new TemplatePreparseVisitor();\n          visitAll(visitor, rootNodesAndErrors.rootNodes);\n          var templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n          var encapsulation = prenomData.encapsulation;\n          if (isBlank(encapsulation)) {\n              encapsulation = this._config.defaultEncapsulation;\n          }\n          var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n          var styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n          if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n              styleUrls.length === 0) {\n              encapsulation = _angular_core.ViewEncapsulation.None;\n          }\n          return new CompileTemplateMetadata({\n              encapsulation: encapsulation,\n              template: template,\n              templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n              ngContentSelectors: visitor.ngContentSelectors,\n              animations: prenomData.animations,\n              interpolation: prenomData.interpolation,\n          });\n      };\n      DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n          return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n              .then(function (externalStylesheets) { return new CompileTemplateMetadata({\n              encapsulation: templateMeta.encapsulation,\n              template: templateMeta.template,\n              templateUrl: templateMeta.templateUrl,\n              styles: templateMeta.styles,\n              styleUrls: templateMeta.styleUrls,\n              externalStylesheets: externalStylesheets,\n              ngContentSelectors: templateMeta.ngContentSelectors,\n              animations: templateMeta.animations,\n              interpolation: templateMeta.interpolation\n          }); });\n      };\n      DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n          var _this = this;\n          if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n          return Promise\n              .all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n              .map(function (styleUrl) { return _this._fetch(styleUrl).then(function (loadedStyle) {\n              var stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n              loadedStylesheets.set(styleUrl, stylesheet);\n              return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n          }); }))\n              .then(function (_) { return Array.from(loadedStylesheets.values()); });\n      };\n      DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n          var _this = this;\n          var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n              .map(function (url) { return _this._urlResolver.resolve(stylesheet.moduleUrl, url); });\n          var allStyles = stylesheet.styles.map(function (style) {\n              var styleWithImports = extractStyleUrls(_this._urlResolver, stylesheet.moduleUrl, style);\n              allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n              return styleWithImports.style;\n          });\n          return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl });\n      };\n      DirectiveNormalizer.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveNormalizer.ctorParameters = [\n          { type: ResourceLoader, },\n          { type: UrlResolver, },\n          { type: HtmlParser, },\n          { type: CompilerConfig, },\n      ];\n      return DirectiveNormalizer;\n  }());\n  var TemplatePreparseVisitor = (function () {\n      function TemplatePreparseVisitor() {\n          this.ngContentSelectors = [];\n          this.styles = [];\n          this.styleUrls = [];\n          this.ngNonBindableStackCount = 0;\n      }\n      TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n          var preparsedElement = preparseElement(ast);\n          switch (preparsedElement.type) {\n              case PreparsedElementType.NG_CONTENT:\n                  if (this.ngNonBindableStackCount === 0) {\n                      this.ngContentSelectors.push(preparsedElement.selectAttr);\n                  }\n                  break;\n              case PreparsedElementType.STYLE:\n                  var textContent_1 = '';\n                  ast.children.forEach(function (child) {\n                      if (child instanceof Text) {\n                          textContent_1 += child.value;\n                      }\n                  });\n                  this.styles.push(textContent_1);\n                  break;\n              case PreparsedElementType.STYLESHEET:\n                  this.styleUrls.push(preparsedElement.hrefAttr);\n                  break;\n              default:\n                  break;\n          }\n          if (preparsedElement.nonBindable) {\n              this.ngNonBindableStackCount++;\n          }\n          visitAll(this, ast.children);\n          if (preparsedElement.nonBindable) {\n              this.ngNonBindableStackCount--;\n          }\n          return null;\n      };\n      TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { return null; };\n      TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) { return null; };\n      return TemplatePreparseVisitor;\n  }());\n\n  /*\n   * Resolve a `Type` for {@link Directive}.\n   *\n   * This interface can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   */\n  var DirectiveResolver = (function () {\n      function DirectiveResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      DirectiveResolver.prototype.isDirective = function (type) {\n          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n      };\n      /**\n       * Return {@link Directive} for a given `Type`.\n       */\n      DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          if (typeMetadata) {\n              var metadata = typeMetadata.find(isDirectiveMetadata);\n              if (metadata) {\n                  var propertyMetadata = this._reflector.propMetadata(type);\n                  return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n              }\n          }\n          if (throwIfNotFound) {\n              throw new Error(\"No Directive annotation found on \" + stringify(type));\n          }\n          return null;\n      };\n      DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n          var inputs = [];\n          var outputs = [];\n          var host = {};\n          var queries = {};\n          Object.keys(propertyMetadata).forEach(function (propName) {\n              propertyMetadata[propName].forEach(function (a) {\n                  if (a instanceof _angular_core.Input) {\n                      if (a.bindingPropertyName) {\n                          inputs.push(propName + \": \" + a.bindingPropertyName);\n                      }\n                      else {\n                          inputs.push(propName);\n                      }\n                  }\n                  else if (a instanceof _angular_core.Output) {\n                      var output = a;\n                      if (output.bindingPropertyName) {\n                          outputs.push(propName + \": \" + output.bindingPropertyName);\n                      }\n                      else {\n                          outputs.push(propName);\n                      }\n                  }\n                  else if (a instanceof _angular_core.HostBinding) {\n                      var hostBinding = a;\n                      if (hostBinding.hostPropertyName) {\n                          var startWith = hostBinding.hostPropertyName[0];\n                          if (startWith === '(') {\n                              throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                          }\n                          else if (startWith === '[') {\n                              throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                          }\n                          host[(\"[\" + hostBinding.hostPropertyName + \"]\")] = propName;\n                      }\n                      else {\n                          host[(\"[\" + propName + \"]\")] = propName;\n                      }\n                  }\n                  else if (a instanceof _angular_core.HostListener) {\n                      var hostListener = a;\n                      var args = hostListener.args || [];\n                      host[(\"(\" + hostListener.eventName + \")\")] = propName + \"(\" + args.join(',') + \")\";\n                  }\n                  else if (a instanceof _angular_core.Query) {\n                      queries[propName] = a;\n                  }\n              });\n          });\n          return this._merge(dm, inputs, outputs, host, queries, directiveType);\n      };\n      DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n      DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n          var _this = this;\n          var mergedInputs = inputs;\n          if (directive.inputs) {\n              var inputNames_1 = directive.inputs.map(function (def) { return _this._extractPublicName(def); });\n              inputs.forEach(function (inputDef) {\n                  var publicName = _this._extractPublicName(inputDef);\n                  if (inputNames_1.indexOf(publicName) > -1) {\n                      throw new Error(\"Input '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n                  }\n              });\n              mergedInputs.unshift.apply(mergedInputs, directive.inputs);\n          }\n          var mergedOutputs = outputs;\n          if (directive.outputs) {\n              var outputNames_1 = directive.outputs.map(function (def) { return _this._extractPublicName(def); });\n              outputs.forEach(function (outputDef) {\n                  var publicName = _this._extractPublicName(outputDef);\n                  if (outputNames_1.indexOf(publicName) > -1) {\n                      throw new Error(\"Output event '\" + publicName + \"' defined multiple times in '\" + stringify(directiveType) + \"'\");\n                  }\n              });\n              mergedOutputs.unshift.apply(mergedOutputs, directive.outputs);\n          }\n          var mergedHost = directive.host ? StringMapWrapper.merge(directive.host, host) : host;\n          var mergedQueries = directive.queries ? StringMapWrapper.merge(directive.queries, queries) : queries;\n          if (directive instanceof _angular_core.Component) {\n              return new _angular_core.Component({\n                  selector: directive.selector,\n                  inputs: mergedInputs,\n                  outputs: mergedOutputs,\n                  host: mergedHost,\n                  exportAs: directive.exportAs,\n                  moduleId: directive.moduleId,\n                  queries: mergedQueries,\n                  changeDetection: directive.changeDetection,\n                  providers: directive.providers,\n                  viewProviders: directive.viewProviders,\n                  entryComponents: directive.entryComponents,\n                  template: directive.template,\n                  templateUrl: directive.templateUrl,\n                  styles: directive.styles,\n                  styleUrls: directive.styleUrls,\n                  encapsulation: directive.encapsulation,\n                  animations: directive.animations,\n                  interpolation: directive.interpolation\n              });\n          }\n          else {\n              return new _angular_core.Directive({\n                  selector: directive.selector,\n                  inputs: mergedInputs,\n                  outputs: mergedOutputs,\n                  host: mergedHost,\n                  exportAs: directive.exportAs,\n                  queries: mergedQueries,\n                  providers: directive.providers\n              });\n          }\n      };\n      DirectiveResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DirectiveResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return DirectiveResolver;\n  }());\n  function isDirectiveMetadata(type) {\n      return type instanceof _angular_core.Directive;\n  }\n\n  function hasLifecycleHook(hook, token) {\n      return reflector.hasLifecycleHook(token, getHookName(hook));\n  }\n  function getHookName(hook) {\n      switch (hook) {\n          case LifecycleHooks.OnInit:\n              return 'ngOnInit';\n          case LifecycleHooks.OnDestroy:\n              return 'ngOnDestroy';\n          case LifecycleHooks.DoCheck:\n              return 'ngDoCheck';\n          case LifecycleHooks.OnChanges:\n              return 'ngOnChanges';\n          case LifecycleHooks.AfterContentInit:\n              return 'ngAfterContentInit';\n          case LifecycleHooks.AfterContentChecked:\n              return 'ngAfterContentChecked';\n          case LifecycleHooks.AfterViewInit:\n              return 'ngAfterViewInit';\n          case LifecycleHooks.AfterViewChecked:\n              return 'ngAfterViewChecked';\n      }\n  }\n\n  function _isNgModuleMetadata(obj) {\n      return obj instanceof _angular_core.NgModule;\n  }\n  /**\n   * Resolves types to {@link NgModule}.\n   */\n  var NgModuleResolver = (function () {\n      function NgModuleResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n      NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var ngModuleMeta = this._reflector.annotations(type).find(_isNgModuleMetadata);\n          if (isPresent(ngModuleMeta)) {\n              return ngModuleMeta;\n          }\n          else {\n              if (throwIfNotFound) {\n                  throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n              }\n              return null;\n          }\n      };\n      NgModuleResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      NgModuleResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return NgModuleResolver;\n  }());\n\n  function _isPipeMetadata(type) {\n      return type instanceof _angular_core.Pipe;\n  }\n  /**\n   * Resolve a `Type` for {@link Pipe}.\n   *\n   * This interface can be overridden by the application developer to create custom behavior.\n   *\n   * See {@link Compiler}\n   */\n  var PipeResolver = (function () {\n      function PipeResolver(_reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._reflector = _reflector;\n      }\n      PipeResolver.prototype.isPipe = function (type) {\n          var typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          return typeMetadata && typeMetadata.some(_isPipeMetadata);\n      };\n      /**\n       * Return {@link Pipe} for a given `Type`.\n       */\n      PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n          if (isPresent(metas)) {\n              var annotation = metas.find(_isPipeMetadata);\n              if (isPresent(annotation)) {\n                  return annotation;\n              }\n          }\n          if (throwIfNotFound) {\n              throw new Error(\"No Pipe decorator found on \" + stringify(type));\n          }\n          return null;\n      };\n      PipeResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      PipeResolver.ctorParameters = [\n          { type: ReflectorReader, },\n      ];\n      return PipeResolver;\n  }());\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$17 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  // Design notes:\n  // - don't lazily create metadata:\n  //   For some metadata, we need to do async work sometimes,\n  //   so the user has to kick off this loading.\n  //   But we want to report errors even when the async work is\n  //   not required to check that the user would have been able\n  //   to wait correctly.\n  var CompileMetadataResolver = (function () {\n      function CompileMetadataResolver(_ngModuleResolver, _directiveResolver, _pipeResolver, _schemaRegistry, _directiveNormalizer, _reflector) {\n          if (_reflector === void 0) { _reflector = reflector; }\n          this._ngModuleResolver = _ngModuleResolver;\n          this._directiveResolver = _directiveResolver;\n          this._pipeResolver = _pipeResolver;\n          this._schemaRegistry = _schemaRegistry;\n          this._directiveNormalizer = _directiveNormalizer;\n          this._reflector = _reflector;\n          this._directiveCache = new Map();\n          this._directiveSummaryCache = new Map();\n          this._pipeCache = new Map();\n          this._pipeSummaryCache = new Map();\n          this._ngModuleCache = new Map();\n          this._ngModuleOfTypes = new Map();\n          this._anonymousTypes = new Map();\n          this._anonymousTypeIndex = 0;\n      }\n      CompileMetadataResolver.prototype.sanitizeTokenName = function (token) {\n          var identifier = stringify(token);\n          if (identifier.indexOf('(') >= 0) {\n              // case: anonymous functions!\n              var found = this._anonymousTypes.get(token);\n              if (!found) {\n                  this._anonymousTypes.set(token, this._anonymousTypeIndex++);\n                  found = this._anonymousTypes.get(token);\n              }\n              identifier = \"anonymous_token_\" + found + \"_\";\n          }\n          return sanitizeIdentifier(identifier);\n      };\n      CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n          var dirMeta = this._directiveCache.get(type);\n          this._directiveCache.delete(type);\n          this._directiveSummaryCache.delete(type);\n          this._pipeCache.delete(type);\n          this._pipeSummaryCache.delete(type);\n          this._ngModuleOfTypes.delete(type);\n          // Clear all of the NgModule as they contain transitive information!\n          this._ngModuleCache.clear();\n          if (dirMeta) {\n              this._directiveNormalizer.clearCacheFor(dirMeta);\n          }\n      };\n      CompileMetadataResolver.prototype.clearCache = function () {\n          this._directiveCache.clear();\n          this._directiveSummaryCache.clear();\n          this._pipeCache.clear();\n          this._pipeSummaryCache.clear();\n          this._ngModuleCache.clear();\n          this._ngModuleOfTypes.clear();\n          this._directiveNormalizer.clearCache();\n      };\n      CompileMetadataResolver.prototype.getAnimationEntryMetadata = function (entry) {\n          var _this = this;\n          var defs = entry.definitions.map(function (def) { return _this._getAnimationStateMetadata(def); });\n          return new CompileAnimationEntryMetadata(entry.name, defs);\n      };\n      CompileMetadataResolver.prototype._getAnimationStateMetadata = function (value) {\n          if (value instanceof _angular_core.AnimationStateDeclarationMetadata) {\n              var styles = this._getAnimationStyleMetadata(value.styles);\n              return new CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n          }\n          if (value instanceof _angular_core.AnimationStateTransitionMetadata) {\n              return new CompileAnimationStateTransitionMetadata(value.stateChangeExpr, this._getAnimationMetadata(value.steps));\n          }\n          return null;\n      };\n      CompileMetadataResolver.prototype._getAnimationStyleMetadata = function (value) {\n          return new CompileAnimationStyleMetadata(value.offset, value.styles);\n      };\n      CompileMetadataResolver.prototype._getAnimationMetadata = function (value) {\n          var _this = this;\n          if (value instanceof _angular_core.AnimationStyleMetadata) {\n              return this._getAnimationStyleMetadata(value);\n          }\n          if (value instanceof _angular_core.AnimationKeyframesSequenceMetadata) {\n              return new CompileAnimationKeyframesSequenceMetadata(value.steps.map(function (entry) { return _this._getAnimationStyleMetadata(entry); }));\n          }\n          if (value instanceof _angular_core.AnimationAnimateMetadata) {\n              var animateData = this\n                  ._getAnimationMetadata(value.styles);\n              return new CompileAnimationAnimateMetadata(value.timings, animateData);\n          }\n          if (value instanceof _angular_core.AnimationWithStepsMetadata) {\n              var steps = value.steps.map(function (step) { return _this._getAnimationMetadata(step); });\n              if (value instanceof _angular_core.AnimationGroupMetadata) {\n                  return new CompileAnimationGroupMetadata(steps);\n              }\n              return new CompileAnimationSequenceMetadata(steps);\n          }\n          return null;\n      };\n      CompileMetadataResolver.prototype._loadDirectiveMetadata = function (directiveType, isSync) {\n          var _this = this;\n          if (this._directiveCache.has(directiveType)) {\n              return;\n          }\n          directiveType = _angular_core.resolveForwardRef(directiveType);\n          var nonNormalizedMetadata = this.getNonNormalizedDirectiveMetadata(directiveType);\n          var createDirectiveMetadata = function (templateMetadata) {\n              var normalizedDirMeta = new CompileDirectiveMetadata({\n                  type: nonNormalizedMetadata.type,\n                  isComponent: nonNormalizedMetadata.isComponent,\n                  selector: nonNormalizedMetadata.selector,\n                  exportAs: nonNormalizedMetadata.exportAs,\n                  changeDetection: nonNormalizedMetadata.changeDetection,\n                  inputs: nonNormalizedMetadata.inputs,\n                  outputs: nonNormalizedMetadata.outputs,\n                  hostListeners: nonNormalizedMetadata.hostListeners,\n                  hostProperties: nonNormalizedMetadata.hostProperties,\n                  hostAttributes: nonNormalizedMetadata.hostAttributes,\n                  providers: nonNormalizedMetadata.providers,\n                  viewProviders: nonNormalizedMetadata.viewProviders,\n                  queries: nonNormalizedMetadata.queries,\n                  viewQueries: nonNormalizedMetadata.viewQueries,\n                  entryComponents: nonNormalizedMetadata.entryComponents,\n                  template: templateMetadata\n              });\n              _this._directiveCache.set(directiveType, normalizedDirMeta);\n              _this._directiveSummaryCache.set(directiveType, normalizedDirMeta.toSummary());\n              return normalizedDirMeta;\n          };\n          if (nonNormalizedMetadata.isComponent) {\n              var templateMeta_1 = this._directiveNormalizer.normalizeTemplate({\n                  componentType: directiveType,\n                  moduleUrl: nonNormalizedMetadata.type.moduleUrl,\n                  encapsulation: nonNormalizedMetadata.template.encapsulation,\n                  template: nonNormalizedMetadata.template.template,\n                  templateUrl: nonNormalizedMetadata.template.templateUrl,\n                  styles: nonNormalizedMetadata.template.styles,\n                  styleUrls: nonNormalizedMetadata.template.styleUrls,\n                  animations: nonNormalizedMetadata.template.animations,\n                  interpolation: nonNormalizedMetadata.template.interpolation\n              });\n              if (templateMeta_1.syncResult) {\n                  createDirectiveMetadata(templateMeta_1.syncResult);\n                  return null;\n              }\n              else {\n                  if (isSync) {\n                      throw new ComponentStillLoadingError(directiveType);\n                  }\n                  return function () { return templateMeta_1.asyncResult.then(createDirectiveMetadata); };\n              }\n          }\n          else {\n              // directive\n              createDirectiveMetadata(null);\n              return null;\n          }\n      };\n      CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n          var _this = this;\n          directiveType = _angular_core.resolveForwardRef(directiveType);\n          var dirMeta = this._directiveResolver.resolve(directiveType);\n          if (!dirMeta) {\n              return null;\n          }\n          var moduleUrl = staticTypeModuleUrl(directiveType);\n          var nonNormalizedTemplateMetadata;\n          if (dirMeta instanceof _angular_core.Component) {\n              // component\n              moduleUrl = componentModuleUrl(this._reflector, directiveType, dirMeta);\n              assertArrayOfStrings('styles', dirMeta.styles);\n              assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n              assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n              var animations = dirMeta.animations ?\n                  dirMeta.animations.map(function (e) { return _this.getAnimationEntryMetadata(e); }) :\n                  null;\n              nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                  encapsulation: dirMeta.encapsulation,\n                  template: dirMeta.template,\n                  templateUrl: dirMeta.templateUrl,\n                  styles: dirMeta.styles,\n                  styleUrls: dirMeta.styleUrls,\n                  animations: animations,\n                  interpolation: dirMeta.interpolation\n              });\n          }\n          var changeDetectionStrategy = null;\n          var viewProviders = [];\n          var entryComponentMetadata = [];\n          var selector = dirMeta.selector;\n          if (dirMeta instanceof _angular_core.Component) {\n              // Component\n              changeDetectionStrategy = dirMeta.changeDetection;\n              if (dirMeta.viewProviders) {\n                  viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringify(directiveType) + \"\\\"\");\n              }\n              if (dirMeta.entryComponents) {\n                  entryComponentMetadata =\n                      flattenAndDedupeArray(dirMeta.entryComponents)\n                          .map(function (type) { return _this._getIdentifierMetadata(type, staticTypeModuleUrl(type)); })\n                          .concat(entryComponentMetadata);\n              }\n              if (!selector) {\n                  selector = this._schemaRegistry.getDefaultComponentElementName();\n              }\n          }\n          else {\n              // Directive\n              if (!selector) {\n                  throw new Error(\"Directive \" + stringify(directiveType) + \" has no selector, please add it!\");\n              }\n          }\n          var providers = [];\n          if (isPresent(dirMeta.providers)) {\n              providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringify(directiveType) + \"\\\"\");\n          }\n          var queries = [];\n          var viewQueries = [];\n          if (isPresent(dirMeta.queries)) {\n              queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n              viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n          }\n          return CompileDirectiveMetadata.create({\n              selector: selector,\n              exportAs: dirMeta.exportAs,\n              isComponent: !!nonNormalizedTemplateMetadata,\n              type: this._getTypeMetadata(directiveType, moduleUrl),\n              template: nonNormalizedTemplateMetadata,\n              changeDetection: changeDetectionStrategy,\n              inputs: dirMeta.inputs,\n              outputs: dirMeta.outputs,\n              host: dirMeta.host,\n              providers: providers,\n              viewProviders: viewProviders,\n              queries: queries,\n              viewQueries: viewQueries,\n              entryComponents: entryComponentMetadata\n          });\n      };\n      /**\n       * Gets the metadata for the given directive.\n       * This assumes `loadNgModuleMetadata` has been called first.\n       */\n      CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n          var dirMeta = this._directiveCache.get(directiveType);\n          if (!dirMeta) {\n              throw new Error(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleMetadata for a module that declares it. Directive \" + stringify(directiveType) + \".\");\n          }\n          return dirMeta;\n      };\n      CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n          var dirSummary = this._directiveSummaryCache.get(dirType);\n          if (!dirSummary) {\n              throw new Error(\"Illegal state: getDirectiveSummary can only be called after loadNgModuleMetadata for a module that imports it. Directive \" + stringify(dirType) + \".\");\n          }\n          return dirSummary;\n      };\n      CompileMetadataResolver.prototype.isDirective = function (type) { return this._directiveResolver.isDirective(type); };\n      CompileMetadataResolver.prototype.isPipe = function (type) { return this._pipeResolver.isPipe(type); };\n      /**\n       * Gets the metadata for the given module.\n       * This assumes `loadNgModuleMetadata` has been called first.\n       */\n      CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType) {\n          var modMeta = this._ngModuleCache.get(moduleType);\n          if (!modMeta) {\n              throw new Error(\"Illegal state: getNgModuleMetadata can only be called after loadNgModuleMetadata. Module \" + stringify(moduleType) + \".\");\n          }\n          return modMeta;\n      };\n      CompileMetadataResolver.prototype._loadNgModuleSummary = function (moduleType, isSync) {\n          // TODO(tbosch): add logic to read summary files!\n          // - needs to add directive / pipe summaries to this._directiveSummaryCache /\n          // this._pipeSummaryCache as well!\n          var moduleMeta = this._loadNgModuleMetadata(moduleType, isSync, false);\n          return moduleMeta ? moduleMeta.toSummary() : null;\n      };\n      /**\n       * Loads an NgModule and all of its directives. This includes loading the exported directives of\n       * imported modules,\n       * but not private directives of imported modules.\n       */\n      CompileMetadataResolver.prototype.loadNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          var ngModule = this._loadNgModuleMetadata(moduleType, isSync, throwIfNotFound);\n          var loading = ngModule ?\n              Promise.all(ngModule.transitiveModule.directiveLoaders.map(function (loader) { return loader(); })) :\n              Promise.resolve(null);\n          return { ngModule: ngModule, loading: loading };\n      };\n      /**\n       * Get the NgModule metadata without loading the directives.\n       */\n      CompileMetadataResolver.prototype.getUnloadedNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          return this._loadNgModuleMetadata(moduleType, isSync, throwIfNotFound);\n      };\n      CompileMetadataResolver.prototype._loadNgModuleMetadata = function (moduleType, isSync, throwIfNotFound) {\n          var _this = this;\n          if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n          moduleType = _angular_core.resolveForwardRef(moduleType);\n          var compileMeta = this._ngModuleCache.get(moduleType);\n          if (compileMeta) {\n              return compileMeta;\n          }\n          var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n          if (!meta) {\n              return null;\n          }\n          var declaredDirectives = [];\n          var exportedNonModuleIdentifiers = [];\n          var declaredPipes = [];\n          var importedModules = [];\n          var exportedModules = [];\n          var providers = [];\n          var entryComponents = [];\n          var bootstrapComponents = [];\n          var schemas = [];\n          if (meta.imports) {\n              flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                  var importedModuleType;\n                  if (isValidType(importedType)) {\n                      importedModuleType = importedType;\n                  }\n                  else if (importedType && importedType.ngModule) {\n                      var moduleWithProviders = importedType;\n                      importedModuleType = moduleWithProviders.ngModule;\n                      if (moduleWithProviders.providers) {\n                          providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringify(importedModuleType) + \"'\"));\n                      }\n                  }\n                  if (importedModuleType) {\n                      var importedModuleSummary = _this._loadNgModuleSummary(importedModuleType, isSync);\n                      if (!importedModuleSummary) {\n                          throw new Error(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n                      }\n                      importedModules.push(importedModuleSummary);\n                  }\n                  else {\n                      throw new Error(\"Unexpected value '\" + stringify(importedType) + \"' imported by the module '\" + stringify(moduleType) + \"'\");\n                  }\n              });\n          }\n          if (meta.exports) {\n              flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                  if (!isValidType(exportedType)) {\n                      throw new Error(\"Unexpected value '\" + stringify(exportedType) + \"' exported by the module '\" + stringify(moduleType) + \"'\");\n                  }\n                  var exportedModuleSummary = _this._loadNgModuleSummary(exportedType, isSync);\n                  if (exportedModuleSummary) {\n                      exportedModules.push(exportedModuleSummary);\n                  }\n                  else {\n                      exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType, staticTypeModuleUrl(exportedType)));\n                  }\n              });\n          }\n          // Note: This will be modified later, so we rely on\n          // getting a new instance every time!\n          var transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n          if (meta.declarations) {\n              flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                  if (!isValidType(declaredType)) {\n                      throw new Error(\"Unexpected value '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n                  }\n                  var declaredIdentifier = _this._getIdentifierMetadata(declaredType, staticTypeModuleUrl(declaredType));\n                  if (_this._directiveResolver.isDirective(declaredType)) {\n                      transitiveModule.directivesSet.add(declaredType);\n                      transitiveModule.directives.push(declaredIdentifier);\n                      declaredDirectives.push(declaredIdentifier);\n                      _this._addTypeToModule(declaredType, moduleType);\n                      var loader = _this._loadDirectiveMetadata(declaredType, isSync);\n                      if (loader) {\n                          transitiveModule.directiveLoaders.push(loader);\n                      }\n                  }\n                  else if (_this._pipeResolver.isPipe(declaredType)) {\n                      transitiveModule.pipesSet.add(declaredType);\n                      transitiveModule.pipes.push(declaredIdentifier);\n                      declaredPipes.push(declaredIdentifier);\n                      _this._addTypeToModule(declaredType, moduleType);\n                      _this._loadPipeMetadata(declaredType);\n                  }\n                  else {\n                      throw new Error(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringify(declaredType) + \"' declared by the module '\" + stringify(moduleType) + \"'\");\n                  }\n              });\n          }\n          var exportedDirectives = [];\n          var exportedPipes = [];\n          exportedNonModuleIdentifiers.forEach(function (exportedId) {\n              if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                  exportedDirectives.push(exportedId);\n              }\n              else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                  exportedPipes.push(exportedId);\n              }\n              else {\n                  throw new Error(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringify(exportedId.reference) + \" from \" + stringify(moduleType) + \" as it was neither declared nor imported!\");\n              }\n          });\n          // The providers of the module have to go last\n          // so that they overwrite any other provider we already added.\n          if (meta.providers) {\n              providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringify(moduleType) + \"'\"));\n          }\n          if (meta.entryComponents) {\n              entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                  .map(function (type) { return _this._getTypeMetadata(type, staticTypeModuleUrl(type)); }));\n          }\n          if (meta.bootstrap) {\n              var typeMetadata = flattenAndDedupeArray(meta.bootstrap).map(function (type) {\n                  if (!isValidType(type)) {\n                      throw new Error(\"Unexpected value '\" + stringify(type) + \"' used in the bootstrap property of module '\" + stringify(moduleType) + \"'\");\n                  }\n                  return _this._getTypeMetadata(type, staticTypeModuleUrl(type));\n              });\n              bootstrapComponents.push.apply(bootstrapComponents, typeMetadata);\n          }\n          entryComponents.push.apply(entryComponents, bootstrapComponents);\n          if (meta.schemas) {\n              schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n          }\n          (_a = transitiveModule.entryComponents).push.apply(_a, entryComponents);\n          (_b = transitiveModule.providers).push.apply(_b, providers);\n          compileMeta = new CompileNgModuleMetadata({\n              type: this._getTypeMetadata(moduleType, staticTypeModuleUrl(moduleType)),\n              providers: providers,\n              entryComponents: entryComponents,\n              bootstrapComponents: bootstrapComponents,\n              schemas: schemas,\n              declaredDirectives: declaredDirectives,\n              exportedDirectives: exportedDirectives,\n              declaredPipes: declaredPipes,\n              exportedPipes: exportedPipes,\n              importedModules: importedModules,\n              exportedModules: exportedModules,\n              transitiveModule: transitiveModule,\n              id: meta.id,\n          });\n          transitiveModule.modules.push(compileMeta.toInjectorSummary());\n          this._ngModuleCache.set(moduleType, compileMeta);\n          return compileMeta;\n          var _a, _b;\n      };\n      CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n          if (this._directiveResolver.isDirective(type)) {\n              return 'directive';\n          }\n          if (this._pipeResolver.isPipe(type)) {\n              return 'pipe';\n          }\n          if (this._ngModuleResolver.isNgModule(type)) {\n              return 'module';\n          }\n          if (type.provide) {\n              return 'provider';\n          }\n          return 'value';\n      };\n      CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n          var oldModule = this._ngModuleOfTypes.get(type);\n          if (oldModule && oldModule !== moduleType) {\n              throw new Error((\"Type \" + stringify(type) + \" is part of the declarations of 2 modules: \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \"! \") +\n                  (\"Please consider moving \" + stringify(type) + \" to a higher module that imports \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \". \") +\n                  (\"You can also create a new NgModule that exports and includes \" + stringify(type) + \" then import that NgModule in \" + stringify(oldModule) + \" and \" + stringify(moduleType) + \".\"));\n          }\n          this._ngModuleOfTypes.set(type, moduleType);\n      };\n      CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n          // collect `providers` / `entryComponents` from all imported and all exported modules\n          var transitiveModules = getTransitiveImportedModules(importedModules.concat(exportedModules));\n          var providers = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.providers; }));\n          var entryComponents = flattenArray(transitiveModules.map(function (ngModule) { return ngModule.entryComponents; }));\n          var transitiveExportedModules = getTransitiveExportedModules(importedModules);\n          var directives = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedDirectives; }));\n          var pipes = flattenArray(transitiveExportedModules.map(function (ngModule) { return ngModule.exportedPipes; }));\n          var directiveLoaders = ListWrapper.flatten(transitiveExportedModules.map(function (ngModule) { return ngModule.directiveLoaders; }));\n          return new TransitiveCompileNgModuleMetadata(transitiveModules, providers, entryComponents, directives, pipes, directiveLoaders);\n      };\n      CompileMetadataResolver.prototype._getIdentifierMetadata = function (type, moduleUrl) {\n          type = _angular_core.resolveForwardRef(type);\n          return new CompileIdentifierMetadata({ name: this.sanitizeTokenName(type), moduleUrl: moduleUrl, reference: type });\n      };\n      CompileMetadataResolver.prototype._getTypeMetadata = function (type, moduleUrl, dependencies) {\n          if (dependencies === void 0) { dependencies = null; }\n          var identifier = this._getIdentifierMetadata(type, moduleUrl);\n          return new CompileTypeMetadata({\n              name: identifier.name,\n              moduleUrl: identifier.moduleUrl,\n              reference: identifier.reference,\n              diDeps: this._getDependenciesMetadata(identifier.reference, dependencies),\n              lifecycleHooks: LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(hook, identifier.reference); }),\n          });\n      };\n      CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, moduleUrl, dependencies) {\n          if (dependencies === void 0) { dependencies = null; }\n          factory = _angular_core.resolveForwardRef(factory);\n          return new CompileFactoryMetadata({\n              name: this.sanitizeTokenName(factory),\n              moduleUrl: moduleUrl,\n              reference: factory,\n              diDeps: this._getDependenciesMetadata(factory, dependencies)\n          });\n      };\n      /**\n       * Gets the metadata for the given pipe.\n       * This assumes `loadNgModuleMetadata` has been called first.\n       */\n      CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n          var pipeMeta = this._pipeCache.get(pipeType);\n          if (!pipeMeta) {\n              throw new Error(\"Illegal state: getPipeMetadata can only be called after loadNgModuleMetadata for a module that declares it. Pipe \" + stringify(pipeType) + \".\");\n          }\n          return pipeMeta;\n      };\n      CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n          var pipeSummary = this._pipeSummaryCache.get(pipeType);\n          if (!pipeSummary) {\n              throw new Error(\"Illegal state: getPipeSummary can only be called after loadNgModuleMetadata for a module that imports it. Pipe \" + stringify(pipeType) + \".\");\n          }\n          return pipeSummary;\n      };\n      CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n          var pipeMeta = this._pipeCache.get(pipeType);\n          if (!pipeMeta) {\n              pipeMeta = this._loadPipeMetadata(pipeType);\n          }\n          return pipeMeta;\n      };\n      CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n          pipeType = _angular_core.resolveForwardRef(pipeType);\n          var pipeAnnotation = this._pipeResolver.resolve(pipeType);\n          var pipeMeta = new CompilePipeMetadata({\n              type: this._getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),\n              name: pipeAnnotation.name,\n              pure: pipeAnnotation.pure\n          });\n          this._pipeCache.set(pipeType, pipeMeta);\n          this._pipeSummaryCache.set(pipeType, pipeMeta.toSummary());\n          return pipeMeta;\n      };\n      CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies) {\n          var _this = this;\n          var hasUnknownDeps = false;\n          var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n          var dependenciesMetadata = params.map(function (param) {\n              var isAttribute = false;\n              var isHost = false;\n              var isSelf = false;\n              var isSkipSelf = false;\n              var isOptional = false;\n              var token = null;\n              if (Array.isArray(param)) {\n                  param.forEach(function (paramEntry) {\n                      if (paramEntry instanceof _angular_core.Host) {\n                          isHost = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Self) {\n                          isSelf = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.SkipSelf) {\n                          isSkipSelf = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Optional) {\n                          isOptional = true;\n                      }\n                      else if (paramEntry instanceof _angular_core.Attribute) {\n                          isAttribute = true;\n                          token = paramEntry.attributeName;\n                      }\n                      else if (paramEntry instanceof _angular_core.Inject) {\n                          token = paramEntry.token;\n                      }\n                      else if (isValidType(paramEntry) && isBlank(token)) {\n                          token = paramEntry;\n                      }\n                  });\n              }\n              else {\n                  token = param;\n              }\n              if (isBlank(token)) {\n                  hasUnknownDeps = true;\n                  return null;\n              }\n              return new CompileDiDependencyMetadata({\n                  isAttribute: isAttribute,\n                  isHost: isHost,\n                  isSelf: isSelf,\n                  isSkipSelf: isSkipSelf,\n                  isOptional: isOptional,\n                  token: _this._getTokenMetadata(token)\n              });\n          });\n          if (hasUnknownDeps) {\n              var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringify(dep.token) : '?'; }).join(', ');\n              throw new Error(\"Can't resolve all parameters for \" + stringify(typeOrFunc) + \": (\" + depsTokens + \").\");\n          }\n          return dependenciesMetadata;\n      };\n      CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n          token = _angular_core.resolveForwardRef(token);\n          var compileToken;\n          if (typeof token === 'string') {\n              compileToken = new CompileTokenMetadata({ value: token });\n          }\n          else {\n              compileToken = new CompileTokenMetadata({\n                  identifier: new CompileIdentifierMetadata({\n                      reference: token,\n                      name: this.sanitizeTokenName(token),\n                      moduleUrl: staticTypeModuleUrl(token)\n                  })\n              });\n          }\n          return compileToken;\n      };\n      CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo) {\n          var _this = this;\n          var compileProviders = [];\n          providers.forEach(function (provider, providerIdx) {\n              provider = _angular_core.resolveForwardRef(provider);\n              if (provider && typeof provider == 'object' && provider.hasOwnProperty('provide')) {\n                  provider = new ProviderMeta(provider.provide, provider);\n              }\n              var compileProvider;\n              if (Array.isArray(provider)) {\n                  compileProvider = _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo);\n              }\n              else if (provider instanceof ProviderMeta) {\n                  var tokenMeta = _this._getTokenMetadata(provider.token);\n                  if (tokenMeta.reference ===\n                      resolveIdentifierToken(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS).reference) {\n                      targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(provider));\n                  }\n                  else {\n                      compileProvider = _this.getProviderMetadata(provider);\n                  }\n              }\n              else if (isValidType(provider)) {\n                  compileProvider = _this._getTypeMetadata(provider, staticTypeModuleUrl(provider));\n              }\n              else {\n                  var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                      if (seenProviderIdx < providerIdx) {\n                          soFar.push(\"\" + stringify(seenProvider));\n                      }\n                      else if (seenProviderIdx == providerIdx) {\n                          soFar.push(\"?\" + stringify(seenProvider) + \"?\");\n                      }\n                      else if (seenProviderIdx == providerIdx + 1) {\n                          soFar.push('...');\n                      }\n                      return soFar;\n                  }, [])\n                      .join(', ');\n                  throw new Error(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\");\n              }\n              if (compileProvider) {\n                  compileProviders.push(compileProvider);\n              }\n          });\n          return compileProviders;\n      };\n      CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider) {\n          var _this = this;\n          var components = [];\n          var collectedIdentifiers = [];\n          if (provider.useFactory || provider.useExisting || provider.useClass) {\n              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\");\n          }\n          if (!provider.multi) {\n              throw new Error(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\");\n          }\n          convertToCompileValue(provider.useValue, collectedIdentifiers);\n          collectedIdentifiers.forEach(function (identifier) {\n              if (_this._directiveResolver.isDirective(identifier.reference)) {\n                  components.push(identifier);\n              }\n          });\n          return components;\n      };\n      CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n          var compileDeps;\n          var compileTypeMetadata = null;\n          var compileFactoryMetadata = null;\n          if (provider.useClass) {\n              compileTypeMetadata = this._getTypeMetadata(provider.useClass, staticTypeModuleUrl(provider.useClass), provider.dependencies);\n              compileDeps = compileTypeMetadata.diDeps;\n          }\n          else if (provider.useFactory) {\n              compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, staticTypeModuleUrl(provider.useFactory), provider.dependencies);\n              compileDeps = compileFactoryMetadata.diDeps;\n          }\n          return new CompileProviderMetadata({\n              token: this._getTokenMetadata(provider.token),\n              useClass: compileTypeMetadata,\n              useValue: convertToCompileValue(provider.useValue, []),\n              useFactory: compileFactoryMetadata,\n              useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n              deps: compileDeps,\n              multi: provider.multi\n          });\n      };\n      CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n          var _this = this;\n          var res = [];\n          Object.keys(queries).forEach(function (propertyName) {\n              var query = queries[propertyName];\n              if (query.isViewQuery === isViewQuery) {\n                  res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n              }\n          });\n          return res;\n      };\n      CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n      CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n          var _this = this;\n          var selectors;\n          if (typeof q.selector === 'string') {\n              selectors =\n                  this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n          }\n          else {\n              if (!q.selector) {\n                  throw new Error(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringify(typeOrFunc) + \"\\\" since the query selector wasn't defined.\");\n              }\n              selectors = [this._getTokenMetadata(q.selector)];\n          }\n          return new CompileQueryMetadata({\n              selectors: selectors,\n              first: q.first,\n              descendants: q.descendants, propertyName: propertyName,\n              read: q.read ? this._getTokenMetadata(q.read) : null\n          });\n      };\n      CompileMetadataResolver.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      CompileMetadataResolver.ctorParameters = [\n          { type: NgModuleResolver, },\n          { type: DirectiveResolver, },\n          { type: PipeResolver, },\n          { type: ElementSchemaRegistry, },\n          { type: DirectiveNormalizer, },\n          { type: ReflectorReader, },\n      ];\n      return CompileMetadataResolver;\n  }());\n  function getTransitiveExportedModules(modules, targetModules, visitedModules) {\n      if (targetModules === void 0) { targetModules = []; }\n      if (visitedModules === void 0) { visitedModules = new Set(); }\n      modules.forEach(function (ngModule) {\n          if (!visitedModules.has(ngModule.type.reference)) {\n              visitedModules.add(ngModule.type.reference);\n              getTransitiveExportedModules(ngModule.exportedModules, targetModules, visitedModules);\n              // Add after recursing so imported/exported modules are before the module itself.\n              // This is important for overwriting providers of imported modules!\n              targetModules.push(ngModule);\n          }\n      });\n      return targetModules;\n  }\n  function getTransitiveImportedModules(modules, targetModules, visitedModules) {\n      if (targetModules === void 0) { targetModules = []; }\n      if (visitedModules === void 0) { visitedModules = new Set(); }\n      modules.forEach(function (ngModule) {\n          if (!visitedModules.has(ngModule.type.reference)) {\n              visitedModules.add(ngModule.type.reference);\n              var nestedModules = ngModule.importedModules.concat(ngModule.exportedModules);\n              getTransitiveImportedModules(nestedModules, targetModules, visitedModules);\n              // Add after recursing so imported/exported modules are before the module itself.\n              // This is important for overwriting providers of imported modules!\n              targetModules.push(ngModule);\n          }\n      });\n      return targetModules;\n  }\n  function flattenArray(tree, out) {\n      if (out === void 0) { out = []; }\n      if (tree) {\n          for (var i = 0; i < tree.length; i++) {\n              var item = _angular_core.resolveForwardRef(tree[i]);\n              if (Array.isArray(item)) {\n                  flattenArray(item, out);\n              }\n              else {\n                  out.push(item);\n              }\n          }\n      }\n      return out;\n  }\n  function dedupeArray(array) {\n      if (array) {\n          return Array.from(new Set(array));\n      }\n      return [];\n  }\n  function flattenAndDedupeArray(tree) {\n      return dedupeArray(flattenArray(tree));\n  }\n  function isValidType(value) {\n      return isStaticSymbol(value) || (value instanceof _angular_core.Type);\n  }\n  function staticTypeModuleUrl(value) {\n      return isStaticSymbol(value) ? value.filePath : null;\n  }\n  function componentModuleUrl(reflector, type, cmpMetadata) {\n      if (isStaticSymbol(type)) {\n          return staticTypeModuleUrl(type);\n      }\n      var moduleId = cmpMetadata.moduleId;\n      if (typeof moduleId === 'string') {\n          var scheme = getUrlScheme(moduleId);\n          return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n      }\n      else if (moduleId !== null && moduleId !== void 0) {\n          throw new Error((\"moduleId should be a string in \\\"\" + stringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\") +\n              \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n      }\n      return reflector.importUri(type);\n  }\n  function convertToCompileValue(value, targetIdentifiers) {\n      return visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n  }\n  var _CompileValueConverter = (function (_super) {\n      __extends$17(_CompileValueConverter, _super);\n      function _CompileValueConverter() {\n          _super.apply(this, arguments);\n      }\n      _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n          var identifier;\n          if (isStaticSymbol(value)) {\n              identifier = new CompileIdentifierMetadata({ name: value.name, moduleUrl: value.filePath, reference: value });\n          }\n          else {\n              identifier = new CompileIdentifierMetadata({ reference: value });\n          }\n          targetIdentifiers.push(identifier);\n          return identifier;\n      };\n      return _CompileValueConverter;\n  }(ValueTransformer));\n\n  var ComponentFactoryDependency$1 = (function () {\n      function ComponentFactoryDependency(comp, placeholder) {\n          this.comp = comp;\n          this.placeholder = placeholder;\n      }\n      return ComponentFactoryDependency;\n  }());\n  var NgModuleCompileResult = (function () {\n      function NgModuleCompileResult(statements, ngModuleFactoryVar, dependencies) {\n          this.statements = statements;\n          this.ngModuleFactoryVar = ngModuleFactoryVar;\n          this.dependencies = dependencies;\n      }\n      return NgModuleCompileResult;\n  }());\n  var NgModuleCompiler = (function () {\n      function NgModuleCompiler() {\n      }\n      NgModuleCompiler.prototype.compile = function (ngModuleMeta, extraProviders) {\n          var sourceFileName = isPresent(ngModuleMeta.type.moduleUrl) ?\n              \"in NgModule \" + ngModuleMeta.type.name + \" in \" + ngModuleMeta.type.moduleUrl :\n              \"in NgModule \" + ngModuleMeta.type.name;\n          var sourceFile = new ParseSourceFile('', sourceFileName);\n          var sourceSpan = new ParseSourceSpan(new ParseLocation(sourceFile, null, null, null), new ParseLocation(sourceFile, null, null, null));\n          var deps = [];\n          var bootstrapComponentFactories = [];\n          var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents.map(function (entryComponent) {\n              var id = new CompileIdentifierMetadata({ name: entryComponent.name });\n              if (ngModuleMeta.bootstrapComponents.indexOf(entryComponent) > -1) {\n                  bootstrapComponentFactories.push(id);\n              }\n              deps.push(new ComponentFactoryDependency$1(entryComponent, id));\n              return id;\n          });\n          var builder = new _InjectorBuilder(ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n          var providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n          providerParser.parse().forEach(function (provider) { return builder.addProvider(provider); });\n          var injectorClass = builder.build();\n          var ngModuleFactoryVar = ngModuleMeta.type.name + \"NgFactory\";\n          var ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n              .set(importExpr(resolveIdentifier(Identifiers.NgModuleFactory))\n              .instantiate([variable(injectorClass.name), importExpr(ngModuleMeta.type)], importType(resolveIdentifier(Identifiers.NgModuleFactory), [importType(ngModuleMeta.type)], [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]);\n          var stmts = [injectorClass, ngModuleFactoryStmt];\n          if (ngModuleMeta.id) {\n              var registerFactoryStmt = importExpr(resolveIdentifier(Identifiers.RegisterModuleFactoryFn))\n                  .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                  .toStmt();\n              stmts.push(registerFactoryStmt);\n          }\n          return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n      };\n      NgModuleCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      NgModuleCompiler.ctorParameters = [];\n      return NgModuleCompiler;\n  }());\n  var _InjectorBuilder = (function () {\n      function _InjectorBuilder(_ngModuleMeta, _entryComponentFactories, _bootstrapComponentFactories, _sourceSpan) {\n          this._ngModuleMeta = _ngModuleMeta;\n          this._entryComponentFactories = _entryComponentFactories;\n          this._bootstrapComponentFactories = _bootstrapComponentFactories;\n          this._sourceSpan = _sourceSpan;\n          this.fields = [];\n          this.getters = [];\n          this.methods = [];\n          this.ctorStmts = [];\n          this._tokens = [];\n          this._instances = new Map();\n          this._createStmts = [];\n          this._destroyStmts = [];\n      }\n      _InjectorBuilder.prototype.addProvider = function (resolvedProvider) {\n          var _this = this;\n          var providerValueExpressions = resolvedProvider.providers.map(function (provider) { return _this._getProviderValue(provider); });\n          var propName = \"_\" + resolvedProvider.token.name + \"_\" + this._instances.size;\n          var instance = this._createProviderProperty(propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider, resolvedProvider.eager);\n          if (resolvedProvider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n              this._destroyStmts.push(instance.callMethod('ngOnDestroy', []).toStmt());\n          }\n          this._tokens.push(resolvedProvider.token);\n          this._instances.set(resolvedProvider.token.reference, instance);\n      };\n      _InjectorBuilder.prototype.build = function () {\n          var _this = this;\n          var getMethodStmts = this._tokens.map(function (token) {\n              var providerExpr = _this._instances.get(token.reference);\n              return new IfStmt(InjectMethodVars$1.token.identical(createDiTokenExpression(token)), [new ReturnStatement(providerExpr)]);\n          });\n          var methods = [\n              new ClassMethod('createInternal', [], this._createStmts.concat(new ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))), importType(this._ngModuleMeta.type)),\n              new ClassMethod('getInternal', [\n                  new FnParam(InjectMethodVars$1.token.name, DYNAMIC_TYPE),\n                  new FnParam(InjectMethodVars$1.notFoundResult.name, DYNAMIC_TYPE)\n              ], getMethodStmts.concat([new ReturnStatement(InjectMethodVars$1.notFoundResult)]), DYNAMIC_TYPE),\n              new ClassMethod('destroyInternal', [], this._destroyStmts),\n          ];\n          var parentArgs = [\n              variable(InjectorProps.parent.name),\n              literalArr(this._entryComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); })),\n              literalArr(this._bootstrapComponentFactories.map(function (componentFactory) { return importExpr(componentFactory); }))\n          ];\n          var injClassName = this._ngModuleMeta.type.name + \"Injector\";\n          return createClassStmt({\n              name: injClassName,\n              ctorParams: [new FnParam(InjectorProps.parent.name, importType(resolveIdentifier(Identifiers.Injector)))],\n              parent: importExpr(resolveIdentifier(Identifiers.NgModuleInjector), [importType(this._ngModuleMeta.type)]),\n              parentArgs: parentArgs,\n              builders: [{ methods: methods }, this]\n          });\n      };\n      _InjectorBuilder.prototype._getProviderValue = function (provider) {\n          var _this = this;\n          var result;\n          if (isPresent(provider.useExisting)) {\n              result = this._getDependency(new CompileDiDependencyMetadata({ token: provider.useExisting }));\n          }\n          else if (isPresent(provider.useFactory)) {\n              var deps = provider.deps || provider.useFactory.diDeps;\n              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n              result = importExpr(provider.useFactory).callFn(depsExpr);\n          }\n          else if (isPresent(provider.useClass)) {\n              var deps = provider.deps || provider.useClass.diDeps;\n              var depsExpr = deps.map(function (dep) { return _this._getDependency(dep); });\n              result =\n                  importExpr(provider.useClass).instantiate(depsExpr, importType(provider.useClass));\n          }\n          else {\n              result = convertValueToOutputAst(provider.useValue);\n          }\n          return result;\n      };\n      _InjectorBuilder.prototype._createProviderProperty = function (propName, provider, providerValueExpressions, isMulti, isEager) {\n          var resolvedProviderValueExpr;\n          var type;\n          if (isMulti) {\n              resolvedProviderValueExpr = literalArr(providerValueExpressions);\n              type = new ArrayType(DYNAMIC_TYPE);\n          }\n          else {\n              resolvedProviderValueExpr = providerValueExpressions[0];\n              type = providerValueExpressions[0].type;\n          }\n          if (!type) {\n              type = DYNAMIC_TYPE;\n          }\n          if (isEager) {\n              this.fields.push(new ClassField(propName, type));\n              this._createStmts.push(THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n          }\n          else {\n              var internalField = \"_\" + propName;\n              this.fields.push(new ClassField(internalField, type));\n              // Note: Equals is important for JS so that it also checks the undefined case!\n              var getterStmts = [\n                  new IfStmt(THIS_EXPR.prop(internalField).isBlank(), [THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),\n                  new ReturnStatement(THIS_EXPR.prop(internalField))\n              ];\n              this.getters.push(new ClassGetter(propName, getterStmts, type));\n          }\n          return THIS_EXPR.prop(propName);\n      };\n      _InjectorBuilder.prototype._getDependency = function (dep) {\n          var result = null;\n          if (dep.isValue) {\n              result = literal(dep.value);\n          }\n          if (!dep.isSkipSelf) {\n              if (dep.token &&\n                  (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n                      dep.token.reference ===\n                          resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference)) {\n                  result = THIS_EXPR;\n              }\n              if (!result) {\n                  result = this._instances.get(dep.token.reference);\n              }\n          }\n          if (!result) {\n              var args = [createDiTokenExpression(dep.token)];\n              if (dep.isOptional) {\n                  args.push(NULL_EXPR);\n              }\n              result = InjectorProps.parent.callMethod('get', args);\n          }\n          return result;\n      };\n      return _InjectorBuilder;\n  }());\n  var InjectorProps = (function () {\n      function InjectorProps() {\n      }\n      InjectorProps.parent = THIS_EXPR.prop('parent');\n      return InjectorProps;\n  }());\n  var InjectMethodVars$1 = (function () {\n      function InjectMethodVars() {\n      }\n      InjectMethodVars.token = variable('token');\n      InjectMethodVars.notFoundResult = variable('notFoundResult');\n      return InjectMethodVars;\n  }());\n\n  var _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\n  var _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\n  var CATCH_ERROR_VAR$2 = variable('error');\n  var CATCH_STACK_VAR$2 = variable('stack');\n  var _EmittedLine = (function () {\n      function _EmittedLine(indent) {\n          this.indent = indent;\n          this.parts = [];\n      }\n      return _EmittedLine;\n  }());\n  var EmitterVisitorContext = (function () {\n      function EmitterVisitorContext(_exportedVars, _indent) {\n          this._exportedVars = _exportedVars;\n          this._indent = _indent;\n          this._classes = [];\n          this._lines = [new _EmittedLine(_indent)];\n      }\n      EmitterVisitorContext.createRoot = function (exportedVars) {\n          return new EmitterVisitorContext(exportedVars, 0);\n      };\n      Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n          get: function () { return this._lines[this._lines.length - 1]; },\n          enumerable: true,\n          configurable: true\n      });\n      EmitterVisitorContext.prototype.isExportedVar = function (varName) { return this._exportedVars.indexOf(varName) !== -1; };\n      EmitterVisitorContext.prototype.println = function (lastPart) {\n          if (lastPart === void 0) { lastPart = ''; }\n          this.print(lastPart, true);\n      };\n      EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n      EmitterVisitorContext.prototype.print = function (part, newLine) {\n          if (newLine === void 0) { newLine = false; }\n          if (part.length > 0) {\n              this._currentLine.parts.push(part);\n          }\n          if (newLine) {\n              this._lines.push(new _EmittedLine(this._indent));\n          }\n      };\n      EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n          if (this.lineIsEmpty()) {\n              this._lines.pop();\n          }\n      };\n      EmitterVisitorContext.prototype.incIndent = function () {\n          this._indent++;\n          this._currentLine.indent = this._indent;\n      };\n      EmitterVisitorContext.prototype.decIndent = function () {\n          this._indent--;\n          this._currentLine.indent = this._indent;\n      };\n      EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n      EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n      Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n          get: function () {\n              return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      EmitterVisitorContext.prototype.toSource = function () {\n          var lines = this._lines;\n          if (lines[lines.length - 1].parts.length === 0) {\n              lines = lines.slice(0, lines.length - 1);\n          }\n          return lines\n              .map(function (line) {\n              if (line.parts.length > 0) {\n                  return _createIndent(line.indent) + line.parts.join('');\n              }\n              else {\n                  return '';\n              }\n          })\n              .join('\\n');\n      };\n      return EmitterVisitorContext;\n  }());\n  var AbstractEmitterVisitor = (function () {\n      function AbstractEmitterVisitor(_escapeDollarInStrings) {\n          this._escapeDollarInStrings = _escapeDollarInStrings;\n      }\n      AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n          stmt.expr.visitExpression(this, ctx);\n          ctx.println(';');\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n          ctx.print(\"return \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(';');\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n          ctx.print(\"if (\");\n          stmt.condition.visitExpression(this, ctx);\n          ctx.print(\") {\");\n          var hasElseCase = isPresent(stmt.falseCase) && stmt.falseCase.length > 0;\n          if (stmt.trueCase.length <= 1 && !hasElseCase) {\n              ctx.print(\" \");\n              this.visitAllStatements(stmt.trueCase, ctx);\n              ctx.removeEmptyLastLine();\n              ctx.print(\" \");\n          }\n          else {\n              ctx.println();\n              ctx.incIndent();\n              this.visitAllStatements(stmt.trueCase, ctx);\n              ctx.decIndent();\n              if (hasElseCase) {\n                  ctx.println(\"} else {\");\n                  ctx.incIndent();\n                  this.visitAllStatements(stmt.falseCase, ctx);\n                  ctx.decIndent();\n              }\n          }\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n          ctx.print(\"throw \");\n          stmt.error.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n          var lines = stmt.comment.split('\\n');\n          lines.forEach(function (line) { ctx.println(\"// \" + line); });\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          ctx.print(expr.name + \" = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          expr.receiver.visitExpression(this, ctx);\n          ctx.print(\"[\");\n          expr.index.visitExpression(this, ctx);\n          ctx.print(\"] = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n          var lineWasEmpty = ctx.lineIsEmpty();\n          if (!lineWasEmpty) {\n              ctx.print('(');\n          }\n          expr.receiver.visitExpression(this, ctx);\n          ctx.print(\".\" + expr.name + \" = \");\n          expr.value.visitExpression(this, ctx);\n          if (!lineWasEmpty) {\n              ctx.print(')');\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n          expr.receiver.visitExpression(this, ctx);\n          var name = expr.name;\n          if (isPresent(expr.builtin)) {\n              name = this.getBuiltinMethodName(expr.builtin);\n              if (isBlank(name)) {\n                  // some builtins just mean to skip the call.\n                  return null;\n              }\n          }\n          ctx.print(\".\" + name + \"(\");\n          this.visitAllExpressions(expr.args, ctx, \",\");\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n          expr.fn.visitExpression(this, ctx);\n          ctx.print(\"(\");\n          this.visitAllExpressions(expr.args, ctx, ',');\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n          var varName = ast.name;\n          if (isPresent(ast.builtin)) {\n              switch (ast.builtin) {\n                  case BuiltinVar.Super:\n                      varName = 'super';\n                      break;\n                  case BuiltinVar.This:\n                      varName = 'this';\n                      break;\n                  case BuiltinVar.CatchError:\n                      varName = CATCH_ERROR_VAR$2.name;\n                      break;\n                  case BuiltinVar.CatchStack:\n                      varName = CATCH_STACK_VAR$2.name;\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n              }\n          }\n          ctx.print(varName);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n          ctx.print(\"new \");\n          ast.classExpr.visitExpression(this, ctx);\n          ctx.print(\"(\");\n          this.visitAllExpressions(ast.args, ctx, ',');\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n          var value = ast.value;\n          if (typeof value === 'string') {\n              ctx.print(escapeIdentifier(value, this._escapeDollarInStrings));\n          }\n          else {\n              ctx.print(\"\" + value);\n          }\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n          ctx.print(\"(\");\n          ast.condition.visitExpression(this, ctx);\n          ctx.print('? ');\n          ast.trueCase.visitExpression(this, ctx);\n          ctx.print(': ');\n          ast.falseCase.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n          ctx.print('!');\n          ast.condition.visitExpression(this, ctx);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n          var opStr;\n          switch (ast.operator) {\n              case BinaryOperator.Equals:\n                  opStr = '==';\n                  break;\n              case BinaryOperator.Identical:\n                  opStr = '===';\n                  break;\n              case BinaryOperator.NotEquals:\n                  opStr = '!=';\n                  break;\n              case BinaryOperator.NotIdentical:\n                  opStr = '!==';\n                  break;\n              case BinaryOperator.And:\n                  opStr = '&&';\n                  break;\n              case BinaryOperator.Or:\n                  opStr = '||';\n                  break;\n              case BinaryOperator.Plus:\n                  opStr = '+';\n                  break;\n              case BinaryOperator.Minus:\n                  opStr = '-';\n                  break;\n              case BinaryOperator.Divide:\n                  opStr = '/';\n                  break;\n              case BinaryOperator.Multiply:\n                  opStr = '*';\n                  break;\n              case BinaryOperator.Modulo:\n                  opStr = '%';\n                  break;\n              case BinaryOperator.Lower:\n                  opStr = '<';\n                  break;\n              case BinaryOperator.LowerEquals:\n                  opStr = '<=';\n                  break;\n              case BinaryOperator.Bigger:\n                  opStr = '>';\n                  break;\n              case BinaryOperator.BiggerEquals:\n                  opStr = '>=';\n                  break;\n              default:\n                  throw new Error(\"Unknown operator \" + ast.operator);\n          }\n          ctx.print(\"(\");\n          ast.lhs.visitExpression(this, ctx);\n          ctx.print(\" \" + opStr + \" \");\n          ast.rhs.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n          ast.receiver.visitExpression(this, ctx);\n          ctx.print(\".\");\n          ctx.print(ast.name);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n          ast.receiver.visitExpression(this, ctx);\n          ctx.print(\"[\");\n          ast.index.visitExpression(this, ctx);\n          ctx.print(\"]\");\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          var useNewLine = ast.entries.length > 1;\n          ctx.print(\"[\", useNewLine);\n          ctx.incIndent();\n          this.visitAllExpressions(ast.entries, ctx, ',', useNewLine);\n          ctx.decIndent();\n          ctx.print(\"]\", useNewLine);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n          var _this = this;\n          var useNewLine = ast.entries.length > 1;\n          ctx.print(\"{\", useNewLine);\n          ctx.incIndent();\n          this.visitAllObjects(function (entry) {\n              ctx.print(escapeIdentifier(entry[0], _this._escapeDollarInStrings, false) + \": \");\n              entry[1].visitExpression(_this, ctx);\n          }, ast.entries, ctx, ',', useNewLine);\n          ctx.decIndent();\n          ctx.print(\"}\", useNewLine);\n          return null;\n      };\n      AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator, newLine) {\n          var _this = this;\n          if (newLine === void 0) { newLine = false; }\n          this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator, newLine);\n      };\n      AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator, newLine) {\n          if (newLine === void 0) { newLine = false; }\n          for (var i = 0; i < expressions.length; i++) {\n              if (i > 0) {\n                  ctx.print(separator, newLine);\n              }\n              handler(expressions[i]);\n          }\n          if (newLine) {\n              ctx.println();\n          }\n      };\n      AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n          var _this = this;\n          statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n      };\n      return AbstractEmitterVisitor;\n  }());\n  function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n      if (alwaysQuote === void 0) { alwaysQuote = true; }\n      if (isBlank(input)) {\n          return null;\n      }\n      var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n          var match = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              match[_i - 0] = arguments[_i];\n          }\n          if (match[0] == '$') {\n              return escapeDollar ? '\\\\$' : '$';\n          }\n          else if (match[0] == '\\n') {\n              return '\\\\n';\n          }\n          else if (match[0] == '\\r') {\n              return '\\\\r';\n          }\n          else {\n              return \"\\\\\" + match[0];\n          }\n      });\n      var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n      return requiresQuotes ? \"'\" + body + \"'\" : body;\n  }\n  function _createIndent(count) {\n      var res = '';\n      for (var i = 0; i < count; i++) {\n          res += '  ';\n      }\n      return res;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$18 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var _debugModuleUrl = 'asset://debug/lib';\n  function debugOutputAstAsTypeScript(ast) {\n      var converter = new _TsEmitterVisitor(_debugModuleUrl);\n      var ctx = EmitterVisitorContext.createRoot([]);\n      var asts = Array.isArray(ast) ? ast : [ast];\n      asts.forEach(function (ast) {\n          if (ast instanceof Statement) {\n              ast.visitStatement(converter, ctx);\n          }\n          else if (ast instanceof Expression) {\n              ast.visitExpression(converter, ctx);\n          }\n          else if (ast instanceof Type$1) {\n              ast.visitType(converter, ctx);\n          }\n          else {\n              throw new Error(\"Don't know how to print debug info for \" + ast);\n          }\n      });\n      return ctx.toSource();\n  }\n  var TypeScriptEmitter = (function () {\n      function TypeScriptEmitter(_importGenerator) {\n          this._importGenerator = _importGenerator;\n      }\n      TypeScriptEmitter.prototype.emitStatements = function (moduleUrl, stmts, exportedVars) {\n          var _this = this;\n          var converter = new _TsEmitterVisitor(moduleUrl);\n          var ctx = EmitterVisitorContext.createRoot(exportedVars);\n          converter.visitAllStatements(stmts, ctx);\n          var srcParts = [];\n          converter.importsWithPrefixes.forEach(function (prefix, importedModuleUrl) {\n              // Note: can't write the real word for import as it screws up system.js auto detection...\n              srcParts.push(\"imp\" +\n                  (\"ort * as \" + prefix + \" from '\" + _this._importGenerator.getImportPath(moduleUrl, importedModuleUrl) + \"';\"));\n          });\n          srcParts.push(ctx.toSource());\n          return srcParts.join('\\n');\n      };\n      return TypeScriptEmitter;\n  }());\n  var _TsEmitterVisitor = (function (_super) {\n      __extends$18(_TsEmitterVisitor, _super);\n      function _TsEmitterVisitor(_moduleUrl) {\n          _super.call(this, false);\n          this._moduleUrl = _moduleUrl;\n          this.importsWithPrefixes = new Map();\n      }\n      _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n          if (defaultType === void 0) { defaultType = 'any'; }\n          if (isPresent(t)) {\n              t.visitType(this, ctx);\n          }\n          else {\n              ctx.print(defaultType);\n          }\n      };\n      _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n          var value = ast.value;\n          if (isBlank(value) && ast.type != NULL_TYPE) {\n              ctx.print(\"(\" + value + \" as any)\");\n              return null;\n          }\n          return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n      };\n      // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n      // In SNC mode, [] have the type never[], so we cast here to any[].\n      // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n      // start with [].concat. see https://github.com/angular/angular/pull/11846\n      _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          if (ast.entries.length === 0) {\n              ctx.print('(');\n          }\n          var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n          if (ast.entries.length === 0) {\n              ctx.print(' as any[])');\n          }\n          return result;\n      };\n      _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          if (stmt.hasModifier(StmtModifier.Final)) {\n              ctx.print(\"const\");\n          }\n          else {\n              ctx.print(\"var\");\n          }\n          ctx.print(\" \" + stmt.name + \":\");\n          this.visitType(stmt.type, ctx);\n          ctx.print(\" = \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n          ctx.print(\"(<\");\n          ast.type.visitType(this, ctx);\n          ctx.print(\">\");\n          ast.value.visitExpression(this, ctx);\n          ctx.print(\")\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var _this = this;\n          ctx.pushClass(stmt);\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          ctx.print(\"class \" + stmt.name);\n          if (isPresent(stmt.parent)) {\n              ctx.print(\" extends \");\n              stmt.parent.visitExpression(this, ctx);\n          }\n          ctx.println(\" {\");\n          ctx.incIndent();\n          stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n          if (isPresent(stmt.constructorMethod)) {\n              this._visitClassConstructor(stmt, ctx);\n          }\n          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n          stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n          ctx.decIndent();\n          ctx.println(\"}\");\n          ctx.popClass();\n          return null;\n      };\n      _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n          if (field.hasModifier(StmtModifier.Private)) {\n              // comment out as a workaround for #10967\n              ctx.print(\"/*private*/ \");\n          }\n          ctx.print(field.name);\n          ctx.print(':');\n          this.visitType(field.type, ctx);\n          ctx.println(\";\");\n      };\n      _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n          if (getter.hasModifier(StmtModifier.Private)) {\n              ctx.print(\"private \");\n          }\n          ctx.print(\"get \" + getter.name + \"()\");\n          ctx.print(':');\n          this.visitType(getter.type, ctx);\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(getter.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n          ctx.print(\"constructor(\");\n          this._visitParams(stmt.constructorMethod.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.constructorMethod.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n          if (method.hasModifier(StmtModifier.Private)) {\n              ctx.print(\"private \");\n          }\n          ctx.print(method.name + \"(\");\n          this._visitParams(method.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(method.type, ctx, 'void');\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(method.body, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n          ctx.print(\"(\");\n          this._visitParams(ast.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(ast.type, ctx, 'void');\n          ctx.println(\" => {\");\n          ctx.incIndent();\n          this.visitAllStatements(ast.statements, ctx);\n          ctx.decIndent();\n          ctx.print(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          if (ctx.isExportedVar(stmt.name)) {\n              ctx.print(\"export \");\n          }\n          ctx.print(\"function \" + stmt.name + \"(\");\n          this._visitParams(stmt.params, ctx);\n          ctx.print(\"):\");\n          this.visitType(stmt.type, ctx, 'void');\n          ctx.println(\" {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.statements, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          ctx.println(\"try {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.bodyStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n          ctx.incIndent();\n          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n                  StmtModifier.Final\n              ])].concat(stmt.catchStmts);\n          this.visitAllStatements(catchStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n          var typeStr;\n          switch (type.name) {\n              case BuiltinTypeName.Bool:\n                  typeStr = 'boolean';\n                  break;\n              case BuiltinTypeName.Dynamic:\n                  typeStr = 'any';\n                  break;\n              case BuiltinTypeName.Function:\n                  typeStr = 'Function';\n                  break;\n              case BuiltinTypeName.Number:\n                  typeStr = 'number';\n                  break;\n              case BuiltinTypeName.Int:\n                  typeStr = 'number';\n                  break;\n              case BuiltinTypeName.String:\n                  typeStr = 'string';\n                  break;\n              default:\n                  throw new Error(\"Unsupported builtin type \" + type.name);\n          }\n          ctx.print(typeStr);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitExternalType = function (ast, ctx) {\n          this._visitIdentifier(ast.value, ast.typeParams, ctx);\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n          this.visitType(type.of, ctx);\n          ctx.print(\"[]\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n          ctx.print(\"{[key: string]:\");\n          this.visitType(type.valueType, ctx);\n          ctx.print(\"}\");\n          return null;\n      };\n      _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n          var name;\n          switch (method) {\n              case BuiltinMethod.ConcatArray:\n                  name = 'concat';\n                  break;\n              case BuiltinMethod.SubscribeObservable:\n                  name = 'subscribe';\n                  break;\n              case BuiltinMethod.Bind:\n                  name = 'bind';\n                  break;\n              default:\n                  throw new Error(\"Unknown builtin method: \" + method);\n          }\n          return name;\n      };\n      _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n          var _this = this;\n          this.visitAllObjects(function (param) {\n              ctx.print(param.name);\n              ctx.print(':');\n              _this.visitType(param.type, ctx);\n          }, params, ctx, ',');\n      };\n      _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n          var _this = this;\n          if (isBlank(value.name)) {\n              throw new Error(\"Internal error: unknown identifier \" + value);\n          }\n          if (isPresent(value.moduleUrl) && value.moduleUrl != this._moduleUrl) {\n              var prefix = this.importsWithPrefixes.get(value.moduleUrl);\n              if (isBlank(prefix)) {\n                  prefix = \"import\" + this.importsWithPrefixes.size;\n                  this.importsWithPrefixes.set(value.moduleUrl, prefix);\n              }\n              ctx.print(prefix + \".\");\n          }\n          if (value.reference && value.reference.members) {\n              ctx.print(value.reference.name);\n              ctx.print('.');\n              ctx.print(value.reference.members.join('.'));\n          }\n          else {\n              ctx.print(value.name);\n          }\n          if (isPresent(typeParams) && typeParams.length > 0) {\n              ctx.print(\"<\");\n              this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n              ctx.print(\">\");\n          }\n      };\n      return _TsEmitterVisitor;\n  }(AbstractEmitterVisitor));\n\n  function interpretStatements(statements, resultVar) {\n      var stmtsWithReturn = statements.concat([new ReturnStatement(variable(resultVar))]);\n      var ctx = new _ExecutionContext(null, null, null, new Map());\n      var visitor = new StatementInterpreter();\n      var result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n      return isPresent(result) ? result.value : null;\n  }\n  function _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n      var childCtx = ctx.createChildWihtLocalVars();\n      for (var i = 0; i < varNames.length; i++) {\n          childCtx.vars.set(varNames[i], varValues[i]);\n      }\n      var result = visitor.visitAllStatements(statements, childCtx);\n      return isPresent(result) ? result.value : null;\n  }\n  var _ExecutionContext = (function () {\n      function _ExecutionContext(parent, instance, className, vars) {\n          this.parent = parent;\n          this.instance = instance;\n          this.className = className;\n          this.vars = vars;\n      }\n      _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n          return new _ExecutionContext(this, this.instance, this.className, new Map());\n      };\n      return _ExecutionContext;\n  }());\n  var ReturnValue = (function () {\n      function ReturnValue(value) {\n          this.value = value;\n      }\n      return ReturnValue;\n  }());\n  function createDynamicClass(_classStmt, _ctx, _visitor) {\n      var propertyDescriptors = {};\n      _classStmt.getters.forEach(function (getter) {\n          // Note: use `function` instead of arrow function to capture `this`\n          propertyDescriptors[getter.name] = {\n              configurable: false,\n              get: function () {\n                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                  return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n              }\n          };\n      });\n      _classStmt.methods.forEach(function (method) {\n          var paramNames = method.params.map(function (param) { return param.name; });\n          // Note: use `function` instead of arrow function to capture `this`\n          propertyDescriptors[method.name] = {\n              writable: false,\n              configurable: false,\n              value: function () {\n                  var args = [];\n                  for (var _i = 0; _i < arguments.length; _i++) {\n                      args[_i - 0] = arguments[_i];\n                  }\n                  var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                  return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n              }\n          };\n      });\n      var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n      // Note: use `function` instead of arrow function to capture `this`\n      var ctor = function () {\n          var _this = this;\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i - 0] = arguments[_i];\n          }\n          var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n          _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n          _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n      };\n      var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n      ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n      return ctor;\n  }\n  var StatementInterpreter = (function () {\n      function StatementInterpreter() {\n      }\n      StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n      StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n          return null;\n      };\n      StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n          var value = expr.value.visitExpression(this, ctx);\n          var currCtx = ctx;\n          while (currCtx != null) {\n              if (currCtx.vars.has(expr.name)) {\n                  currCtx.vars.set(expr.name, value);\n                  return value;\n              }\n              currCtx = currCtx.parent;\n          }\n          throw new Error(\"Not declared variable \" + expr.name);\n      };\n      StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n          var varName = ast.name;\n          if (isPresent(ast.builtin)) {\n              switch (ast.builtin) {\n                  case BuiltinVar.Super:\n                      return ctx.instance.__proto__;\n                  case BuiltinVar.This:\n                      return ctx.instance;\n                  case BuiltinVar.CatchError:\n                      varName = CATCH_ERROR_VAR$1;\n                      break;\n                  case BuiltinVar.CatchStack:\n                      varName = CATCH_STACK_VAR$1;\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin variable \" + ast.builtin);\n              }\n          }\n          var currCtx = ctx;\n          while (currCtx != null) {\n              if (currCtx.vars.has(varName)) {\n                  return currCtx.vars.get(varName);\n              }\n              currCtx = currCtx.parent;\n          }\n          throw new Error(\"Not declared variable \" + varName);\n      };\n      StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var index = expr.index.visitExpression(this, ctx);\n          var value = expr.value.visitExpression(this, ctx);\n          receiver[index] = value;\n          return value;\n      };\n      StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var value = expr.value.visitExpression(this, ctx);\n          receiver[expr.name] = value;\n          return value;\n      };\n      StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n          var receiver = expr.receiver.visitExpression(this, ctx);\n          var args = this.visitAllExpressions(expr.args, ctx);\n          var result;\n          if (isPresent(expr.builtin)) {\n              switch (expr.builtin) {\n                  case BuiltinMethod.ConcatArray:\n                      result = receiver.concat.apply(receiver, args);\n                      break;\n                  case BuiltinMethod.SubscribeObservable:\n                      result = receiver.subscribe({ next: args[0] });\n                      break;\n                  case BuiltinMethod.Bind:\n                      result = receiver.bind.apply(receiver, args);\n                      break;\n                  default:\n                      throw new Error(\"Unknown builtin method \" + expr.builtin);\n              }\n          }\n          else {\n              result = receiver[expr.name].apply(receiver, args);\n          }\n          return result;\n      };\n      StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n          var args = this.visitAllExpressions(stmt.args, ctx);\n          var fnExpr = stmt.fn;\n          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n              ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n              return null;\n          }\n          else {\n              var fn = stmt.fn.visitExpression(this, ctx);\n              return fn.apply(null, args);\n          }\n      };\n      StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n          return new ReturnValue(stmt.value.visitExpression(this, ctx));\n      };\n      StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var clazz = createDynamicClass(stmt, ctx, this);\n          ctx.vars.set(stmt.name, clazz);\n          return null;\n      };\n      StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n          return stmt.expr.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n          var condition = stmt.condition.visitExpression(this, ctx);\n          if (condition) {\n              return this.visitAllStatements(stmt.trueCase, ctx);\n          }\n          else if (isPresent(stmt.falseCase)) {\n              return this.visitAllStatements(stmt.falseCase, ctx);\n          }\n          return null;\n      };\n      StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          try {\n              return this.visitAllStatements(stmt.bodyStmts, ctx);\n          }\n          catch (e) {\n              var childCtx = ctx.createChildWihtLocalVars();\n              childCtx.vars.set(CATCH_ERROR_VAR$1, e);\n              childCtx.vars.set(CATCH_STACK_VAR$1, e.stack);\n              return this.visitAllStatements(stmt.catchStmts, childCtx);\n          }\n      };\n      StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n          throw stmt.error.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n      StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n          var args = this.visitAllExpressions(ast.args, ctx);\n          var clazz = ast.classExpr.visitExpression(this, ctx);\n          return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n      };\n      StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n      StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n          return ast.value.reference;\n      };\n      StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n          if (ast.condition.visitExpression(this, ctx)) {\n              return ast.trueCase.visitExpression(this, ctx);\n          }\n          else if (isPresent(ast.falseCase)) {\n              return ast.falseCase.visitExpression(this, ctx);\n          }\n          return null;\n      };\n      StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n          return !ast.condition.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n          return ast.value.visitExpression(this, ctx);\n      };\n      StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n          var paramNames = ast.params.map(function (param) { return param.name; });\n          return _declareFn(paramNames, ast.statements, ctx, this);\n      };\n      StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          var paramNames = stmt.params.map(function (param) { return param.name; });\n          ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n          return null;\n      };\n      StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n          var _this = this;\n          var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n          var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n          switch (ast.operator) {\n              case BinaryOperator.Equals:\n                  return lhs() == rhs();\n              case BinaryOperator.Identical:\n                  return lhs() === rhs();\n              case BinaryOperator.NotEquals:\n                  return lhs() != rhs();\n              case BinaryOperator.NotIdentical:\n                  return lhs() !== rhs();\n              case BinaryOperator.And:\n                  return lhs() && rhs();\n              case BinaryOperator.Or:\n                  return lhs() || rhs();\n              case BinaryOperator.Plus:\n                  return lhs() + rhs();\n              case BinaryOperator.Minus:\n                  return lhs() - rhs();\n              case BinaryOperator.Divide:\n                  return lhs() / rhs();\n              case BinaryOperator.Multiply:\n                  return lhs() * rhs();\n              case BinaryOperator.Modulo:\n                  return lhs() % rhs();\n              case BinaryOperator.Lower:\n                  return lhs() < rhs();\n              case BinaryOperator.LowerEquals:\n                  return lhs() <= rhs();\n              case BinaryOperator.Bigger:\n                  return lhs() > rhs();\n              case BinaryOperator.BiggerEquals:\n                  return lhs() >= rhs();\n              default:\n                  throw new Error(\"Unknown operator \" + ast.operator);\n          }\n      };\n      StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n          var result;\n          var receiver = ast.receiver.visitExpression(this, ctx);\n          result = receiver[ast.name];\n          return result;\n      };\n      StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n          var receiver = ast.receiver.visitExpression(this, ctx);\n          var prop = ast.index.visitExpression(this, ctx);\n          return receiver[prop];\n      };\n      StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n          return this.visitAllExpressions(ast.entries, ctx);\n      };\n      StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n          var _this = this;\n          var result = {};\n          ast.entries.forEach(function (entry) { return result[entry[0]] =\n              entry[1].visitExpression(_this, ctx); });\n          return result;\n      };\n      StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n          var _this = this;\n          return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n      };\n      StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n          for (var i = 0; i < statements.length; i++) {\n              var stmt = statements[i];\n              var val = stmt.visitStatement(this, ctx);\n              if (val instanceof ReturnValue) {\n                  return val;\n              }\n          }\n          return null;\n      };\n      return StatementInterpreter;\n  }());\n  function _declareFn(varNames, statements, ctx, visitor) {\n      return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i - 0] = arguments[_i];\n          }\n          return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n      };\n  }\n  var CATCH_ERROR_VAR$1 = 'error';\n  var CATCH_STACK_VAR$1 = 'stack';\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$20 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var AbstractJsEmitterVisitor = (function (_super) {\n      __extends$20(AbstractJsEmitterVisitor, _super);\n      function AbstractJsEmitterVisitor() {\n          _super.call(this, false);\n      }\n      AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n          var _this = this;\n          ctx.pushClass(stmt);\n          this._visitClassConstructor(stmt, ctx);\n          if (isPresent(stmt.parent)) {\n              ctx.print(stmt.name + \".prototype = Object.create(\");\n              stmt.parent.visitExpression(this, ctx);\n              ctx.println(\".prototype);\");\n          }\n          stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n          stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n          ctx.popClass();\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n          ctx.print(\"function \" + stmt.name + \"(\");\n          if (isPresent(stmt.constructorMethod)) {\n              this._visitParams(stmt.constructorMethod.params, ctx);\n          }\n          ctx.println(\") {\");\n          ctx.incIndent();\n          if (isPresent(stmt.constructorMethod)) {\n              if (stmt.constructorMethod.body.length > 0) {\n                  ctx.println(\"var self = this;\");\n                  this.visitAllStatements(stmt.constructorMethod.body, ctx);\n              }\n          }\n          ctx.decIndent();\n          ctx.println(\"}\");\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n          ctx.println(\"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n          ctx.incIndent();\n          if (getter.body.length > 0) {\n              ctx.println(\"var self = this;\");\n              this.visitAllStatements(getter.body, ctx);\n          }\n          ctx.decIndent();\n          ctx.println(\"}});\");\n      };\n      AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n          ctx.print(stmt.name + \".prototype.\" + method.name + \" = function(\");\n          this._visitParams(method.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          if (method.body.length > 0) {\n              ctx.println(\"var self = this;\");\n              this.visitAllStatements(method.body, ctx);\n          }\n          ctx.decIndent();\n          ctx.println(\"};\");\n      };\n      AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n          if (ast.builtin === BuiltinVar.This) {\n              ctx.print('self');\n          }\n          else if (ast.builtin === BuiltinVar.Super) {\n              throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n          }\n          else {\n              _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n          }\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n          ctx.print(\"var \" + stmt.name + \" = \");\n          stmt.value.visitExpression(this, ctx);\n          ctx.println(\";\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n          ast.value.visitExpression(this, ctx);\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n          var fnExpr = expr.fn;\n          if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n              ctx.currentClass.parent.visitExpression(this, ctx);\n              ctx.print(\".call(this\");\n              if (expr.args.length > 0) {\n                  ctx.print(\", \");\n                  this.visitAllExpressions(expr.args, ctx, ',');\n              }\n              ctx.print(\")\");\n          }\n          else {\n              _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n          }\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n          ctx.print(\"function(\");\n          this._visitParams(ast.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(ast.statements, ctx);\n          ctx.decIndent();\n          ctx.print(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n          ctx.print(\"function \" + stmt.name + \"(\");\n          this._visitParams(stmt.params, ctx);\n          ctx.println(\") {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.statements, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n          ctx.println(\"try {\");\n          ctx.incIndent();\n          this.visitAllStatements(stmt.bodyStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"} catch (\" + CATCH_ERROR_VAR$2.name + \") {\");\n          ctx.incIndent();\n          var catchStmts = [CATCH_STACK_VAR$2.set(CATCH_ERROR_VAR$2.prop('stack')).toDeclStmt(null, [\n                  StmtModifier.Final\n              ])].concat(stmt.catchStmts);\n          this.visitAllStatements(catchStmts, ctx);\n          ctx.decIndent();\n          ctx.println(\"}\");\n          return null;\n      };\n      AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n          this.visitAllObjects(function (param) { return ctx.print(param.name); }, params, ctx, ',');\n      };\n      AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n          var name;\n          switch (method) {\n              case BuiltinMethod.ConcatArray:\n                  name = 'concat';\n                  break;\n              case BuiltinMethod.SubscribeObservable:\n                  name = 'subscribe';\n                  break;\n              case BuiltinMethod.Bind:\n                  name = 'bind';\n                  break;\n              default:\n                  throw new Error(\"Unknown builtin method: \" + method);\n          }\n          return name;\n      };\n      return AbstractJsEmitterVisitor;\n  }(AbstractEmitterVisitor));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$19 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  function evalExpression(sourceUrl, expr, declarations, vars) {\n      var fnBody = declarations + \"\\nreturn \" + expr + \"\\n//# sourceURL=\" + sourceUrl;\n      var fnArgNames = [];\n      var fnArgValues = [];\n      for (var argName in vars) {\n          fnArgNames.push(argName);\n          fnArgValues.push(vars[argName]);\n      }\n      return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n  }\n  function jitStatements(sourceUrl, statements, resultVar) {\n      var converter = new JitEmitterVisitor();\n      var ctx = EmitterVisitorContext.createRoot([resultVar]);\n      converter.visitAllStatements(statements, ctx);\n      return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n  }\n  var JitEmitterVisitor = (function (_super) {\n      __extends$19(JitEmitterVisitor, _super);\n      function JitEmitterVisitor() {\n          _super.apply(this, arguments);\n          this._evalArgNames = [];\n          this._evalArgValues = [];\n      }\n      JitEmitterVisitor.prototype.getArgs = function () {\n          var result = {};\n          for (var i = 0; i < this._evalArgNames.length; i++) {\n              result[this._evalArgNames[i]] = this._evalArgValues[i];\n          }\n          return result;\n      };\n      JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n          var value = ast.value.reference;\n          var id = this._evalArgValues.indexOf(value);\n          if (id === -1) {\n              id = this._evalArgValues.length;\n              this._evalArgValues.push(value);\n              var name_1 = isPresent(ast.value.name) ? sanitizeIdentifier(ast.value.name) : 'val';\n              this._evalArgNames.push(sanitizeIdentifier(\"jit_\" + name_1 + id));\n          }\n          ctx.print(this._evalArgNames[id]);\n          return null;\n      };\n      return JitEmitterVisitor;\n  }(AbstractJsEmitterVisitor));\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  /**\n   * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n   *\n   * Please make sure to keep to edits in sync with the source file.\n   *\n   * Source:\n   * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n   *\n   * The original file level comment is reproduced below\n   */\n  /*\n    This is a limited shim for ShadowDOM css styling.\n    https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n    The intention here is to support only the styling features which can be\n    relatively simply implemented. The goal is to allow users to avoid the\n    most obvious pitfalls and do so without compromising performance significantly.\n    For ShadowDOM styling that's not covered here, a set of best practices\n    can be provided that should allow users to accomplish more complex styling.\n\n    The following is a list of specific ShadowDOM styling features and a brief\n    discussion of the approach used to shim.\n\n    Shimmed features:\n\n    * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n    element using the :host rule. To shim this feature, the :host styles are\n    reformatted and prefixed with a given scope name and promoted to a\n    document level stylesheet.\n    For example, given a scope name of .foo, a rule like this:\n\n      :host {\n          background: red;\n        }\n      }\n\n    becomes:\n\n      .foo {\n        background: red;\n      }\n\n    * encapsulation: Styles defined within ShadowDOM, apply only to\n    dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n    this feature.\n\n    By default, rules are prefixed with the host element tag name\n    as a descendant selector. This ensures styling does not leak out of the 'top'\n    of the element's ShadowDOM. For example,\n\n    div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n    x-foo div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n\n    Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n    selectors are scoped by adding an attribute selector suffix to each\n    simple selector that contains the host element tag name. Each element\n    in the element's ShadowDOM template is also given the scope attribute.\n    Thus, these rules match only elements that have the scope attribute.\n    For example, given a scope name of x-foo, a rule like this:\n\n      div {\n        font-weight: bold;\n      }\n\n    becomes:\n\n      div[x-foo] {\n        font-weight: bold;\n      }\n\n    Note that elements that are dynamically added to a scope must have the scope\n    selector added to them manually.\n\n    * upper/lower bound encapsulation: Styles which are defined outside a\n    shadowRoot should not cross the ShadowDOM boundary and should not apply\n    inside a shadowRoot.\n\n    This styling behavior is not emulated. Some possible ways to do this that\n    were rejected due to complexity and/or performance concerns include: (1) reset\n    every possible property for every possible selector for a given scope name;\n    (2) re-implement css in javascript.\n\n    As an alternative, users should make sure to use selectors\n    specific to the scope in which they are working.\n\n    * ::distributed: This behavior is not emulated. It's often not necessary\n    to style the contents of a specific insertion point and instead, descendants\n    of the host element can be styled selectively. Users can also create an\n    extra node around an insertion point and style that node's contents\n    via descendent selectors. For example, with a shadowRoot like this:\n\n      <style>\n        ::content(div) {\n          background: red;\n        }\n      </style>\n      <content></content>\n\n    could become:\n\n      <style>\n        / *@polyfill .content-container div * /\n        ::content(div) {\n          background: red;\n        }\n      </style>\n      <div class=\"content-container\">\n        <content></content>\n      </div>\n\n    Note the use of @polyfill in the comment above a ShadowDOM specific style\n    declaration. This is a directive to the styling shim to use the selector\n    in comments in lieu of the next selector when running under polyfill.\n  */\n  var ShadowCss = (function () {\n      function ShadowCss() {\n          this.strictStyling = true;\n      }\n      /*\n      * Shim some cssText with the given selector. Returns cssText that can\n      * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n      *\n      * When strictStyling is true:\n      * - selector is the attribute added to all elements inside the host,\n      * - hostSelector is the attribute added to the host itself.\n      */\n      ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n          if (hostSelector === void 0) { hostSelector = ''; }\n          var sourceMappingUrl = extractSourceMappingUrl(cssText);\n          cssText = stripComments(cssText);\n          cssText = this._insertDirectives(cssText);\n          return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n      };\n      ShadowCss.prototype._insertDirectives = function (cssText) {\n          cssText = this._insertPolyfillDirectivesInCssText(cssText);\n          return this._insertPolyfillRulesInCssText(cssText);\n      };\n      /*\n       * Process styles to convert native ShadowDOM rules that will trip\n       * up the css parser; we rely on decorating the stylesheet with inert rules.\n       *\n       * For example, we convert this rule:\n       *\n       * polyfill-next-selector { content: ':host menu-item'; }\n       * ::content menu-item {\n       *\n       * to this:\n       *\n       * scopeName menu-item {\n       *\n      **/\n      ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          return cssText.replace(_cssContentNextSelectorRe, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              return m[2] + '{';\n          });\n      };\n      /*\n       * Process styles to add rules which will only apply under the polyfill\n       *\n       * For example, we convert this rule:\n       *\n       * polyfill-rule {\n       *   content: ':host menu-item';\n       * ...\n       * }\n       *\n       * to this:\n       *\n       * scopeName menu-item {...}\n       *\n      **/\n      ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          return cssText.replace(_cssContentRuleRe, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              var rule = m[0].replace(m[1], '').replace(m[2], '');\n              return m[4] + rule;\n          });\n      };\n      /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n       *\n       *  .foo {... }\n       *\n       *  and converts this to\n       *\n       *  scopeName .foo { ... }\n      */\n      ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n          var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n          // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n          cssText = this._insertPolyfillHostInCssText(cssText);\n          cssText = this._convertColonHost(cssText);\n          cssText = this._convertColonHostContext(cssText);\n          cssText = this._convertShadowDOMSelectors(cssText);\n          if (scopeSelector) {\n              cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n          }\n          cssText = cssText + '\\n' + unscopedRules;\n          return cssText.trim();\n      };\n      /*\n       * Process styles to add rules which will only apply under the polyfill\n       * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n       * occasions, e.g. -webkit-calc on Safari.)\n       * For example, we convert this rule:\n       *\n       * @polyfill-unscoped-rule {\n       *   content: 'menu-item';\n       * ... }\n       *\n       * to this:\n       *\n       * menu-item {...}\n       *\n      **/\n      ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n          // Difference with webcomponents.js: does not handle comments\n          var r = '';\n          var m;\n          _cssContentUnscopedRuleRe.lastIndex = 0;\n          while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n              var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n              r += rule + '\\n\\n';\n          }\n          return r;\n      };\n      /*\n       * convert a rule like :host(.foo) > .bar { }\n       *\n       * to\n       *\n       * .foo<scopeName> > .bar\n      */\n      ShadowCss.prototype._convertColonHost = function (cssText) {\n          return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n      };\n      /*\n       * convert a rule like :host-context(.foo) > .bar { }\n       *\n       * to\n       *\n       * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n       *\n       * and\n       *\n       * :host-context(.foo:host) .bar { ... }\n       *\n       * to\n       *\n       * .foo<scopeName> .bar { ... }\n      */\n      ShadowCss.prototype._convertColonHostContext = function (cssText) {\n          return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n      };\n      ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n          // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n          return cssText.replace(regExp, function () {\n              var m = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  m[_i - 0] = arguments[_i];\n              }\n              if (m[2]) {\n                  var parts = m[2].split(',');\n                  var r = [];\n                  for (var i = 0; i < parts.length; i++) {\n                      var p = parts[i].trim();\n                      if (!p)\n                          break;\n                      r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                  }\n                  return r.join(',');\n              }\n              else {\n                  return _polyfillHostNoCombinator + m[3];\n              }\n          });\n      };\n      ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n          if (part.indexOf(_polyfillHost) > -1) {\n              return this._colonHostPartReplacer(host, part, suffix);\n          }\n          else {\n              return host + part + suffix + ', ' + part + ' ' + host + suffix;\n          }\n      };\n      ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n          return host + part.replace(_polyfillHost, '') + suffix;\n      };\n      /*\n       * Convert combinators like ::shadow and pseudo-elements like ::content\n       * by replacing with space.\n      */\n      ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n          return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n      };\n      // change a selector like 'div' to 'name div'\n      ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n          var _this = this;\n          return processRules(cssText, function (rule) {\n              var selector = rule.selector;\n              var content = rule.content;\n              if (rule.selector[0] != '@') {\n                  selector =\n                      _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n              }\n              else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                  rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                  content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n              }\n              return new CssRule(selector, content);\n          });\n      };\n      ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n          var _this = this;\n          return selector.split(',')\n              .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n              .map(function (deepParts) {\n              var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n              var applyScope = function (shallowPart) {\n                  if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                      return strict ?\n                          _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                          _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                  }\n                  else {\n                      return shallowPart;\n                  }\n              };\n              return [applyScope(shallowPart)].concat(otherParts).join(' ');\n          })\n              .join(', ');\n      };\n      ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n          var re = this._makeScopeMatcher(scopeSelector);\n          return !re.test(selector);\n      };\n      ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n          var lre = /\\[/g;\n          var rre = /\\]/g;\n          scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n          return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n      };\n      ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n          // Difference from webcomponents.js: scopeSelector could not be an array\n          return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n      };\n      // scope via name and [is=name]\n      ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n          // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n          _polyfillHostRe.lastIndex = 0;\n          if (_polyfillHostRe.test(selector)) {\n              var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n              return selector\n                  .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                  return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                      return before + replaceBy_1 + colon + after;\n                  });\n              })\n                  .replace(_polyfillHostRe, replaceBy_1 + ' ');\n          }\n          return scopeSelector + ' ' + selector;\n      };\n      // return a selector with [name] suffix on each simple selector\n      // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n      ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n          var _this = this;\n          var isRe = /\\[is=([^\\]]*)\\]/g;\n          scopeSelector = scopeSelector.replace(isRe, function (_) {\n              var parts = [];\n              for (var _i = 1; _i < arguments.length; _i++) {\n                  parts[_i - 1] = arguments[_i];\n              }\n              return parts[0];\n          });\n          var attrName = '[' + scopeSelector + ']';\n          var _scopeSelectorPart = function (p) {\n              var scopedP = p.trim();\n              if (!scopedP) {\n                  return '';\n              }\n              if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                  scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n              }\n              else {\n                  // remove :host since it should be unnecessary\n                  var t = p.replace(_polyfillHostRe, '');\n                  if (t.length > 0) {\n                      var matches = t.match(/([^:]*)(:*)(.*)/);\n                      if (matches) {\n                          scopedP = matches[1] + attrName + matches[2] + matches[3];\n                      }\n                  }\n              }\n              return scopedP;\n          };\n          var safeContent = new SafeSelector(selector);\n          selector = safeContent.content();\n          var scopedSelector = '';\n          var startIndex = 0;\n          var res;\n          var sep = /( |>|\\+|~(?!=))\\s*/g;\n          var scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n          while ((res = sep.exec(selector)) !== null) {\n              var separator = res[1];\n              var part = selector.slice(startIndex, res.index).trim();\n              // if a selector appears before :host-context it should not be shimmed as it\n              // matches on ancestor elements and not on elements in the host's shadow\n              var scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n              scopedSelector += scopedPart + \" \" + separator + \" \";\n              startIndex = sep.lastIndex;\n          }\n          scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n          // replace the placeholders with their original values\n          return safeContent.restore(scopedSelector);\n      };\n      ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n          return selector.replace(_colonHostContextRe, _polyfillHostContext)\n              .replace(_colonHostRe, _polyfillHost);\n      };\n      return ShadowCss;\n  }());\n  var SafeSelector = (function () {\n      function SafeSelector(selector) {\n          var _this = this;\n          this.placeholders = [];\n          this.index = 0;\n          // Replaces attribute selectors with placeholders.\n          // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n          selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n              var replaceBy = \"__ph-\" + _this.index + \"__\";\n              _this.placeholders.push(keep);\n              _this.index++;\n              return replaceBy;\n          });\n          // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n          // WS and \"+\" would otherwise be interpreted as selector separators.\n          this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n              var replaceBy = \"__ph-\" + _this.index + \"__\";\n              _this.placeholders.push(exp);\n              _this.index++;\n              return pseudo + replaceBy;\n          });\n      }\n      ;\n      SafeSelector.prototype.restore = function (content) {\n          var _this = this;\n          return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n      };\n      SafeSelector.prototype.content = function () { return this._content; };\n      return SafeSelector;\n  }());\n  var _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\n  var _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n  var _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n  var _polyfillHost = '-shadowcsshost';\n  // note: :host-context pre-processed to -shadowcsshostcontext.\n  var _polyfillHostContext = '-shadowcsscontext';\n  var _parenSuffix = ')(?:\\\\((' +\n      '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n      ')\\\\))?([^,{]*)';\n  var _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n  var _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n  var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n  var _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\n  var _shadowDOMSelectorsRe = [\n      /::shadow/g,\n      /::content/g,\n      // Deprecated selectors\n      /\\/shadow-deep\\//g,\n      /\\/shadow\\//g,\n  ];\n  var _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)/g;\n  var _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\n  var _polyfillHostRe = /-shadowcsshost/gim;\n  var _colonHostRe = /:host/gim;\n  var _colonHostContextRe = /:host-context/gim;\n  var _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n  function stripComments(input) {\n      return input.replace(_commentRe, '');\n  }\n  // all comments except inline source mapping\n  var _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n  function extractSourceMappingUrl(input) {\n      var matcher = input.match(_sourceMappingUrlRe);\n      return matcher ? matcher[0] : '';\n  }\n  var _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\n  var _curlyRe = /([{}])/g;\n  var OPEN_CURLY = '{';\n  var CLOSE_CURLY = '}';\n  var BLOCK_PLACEHOLDER = '%BLOCK%';\n  var CssRule = (function () {\n      function CssRule(selector, content) {\n          this.selector = selector;\n          this.content = content;\n      }\n      return CssRule;\n  }());\n  function processRules(input, ruleCallback) {\n      var inputWithEscapedBlocks = escapeBlocks(input);\n      var nextBlockIndex = 0;\n      return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n          var m = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              m[_i - 0] = arguments[_i];\n          }\n          var selector = m[2];\n          var content = '';\n          var suffix = m[4];\n          var contentPrefix = '';\n          if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n              content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n              suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n              contentPrefix = '{';\n          }\n          var rule = ruleCallback(new CssRule(selector, content));\n          return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n      });\n  }\n  var StringWithEscapedBlocks = (function () {\n      function StringWithEscapedBlocks(escapedString, blocks) {\n          this.escapedString = escapedString;\n          this.blocks = blocks;\n      }\n      return StringWithEscapedBlocks;\n  }());\n  function escapeBlocks(input) {\n      var inputParts = input.split(_curlyRe);\n      var resultParts = [];\n      var escapedBlocks = [];\n      var bracketCount = 0;\n      var currentBlockParts = [];\n      for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n          var part = inputParts[partIndex];\n          if (part == CLOSE_CURLY) {\n              bracketCount--;\n          }\n          if (bracketCount > 0) {\n              currentBlockParts.push(part);\n          }\n          else {\n              if (currentBlockParts.length > 0) {\n                  escapedBlocks.push(currentBlockParts.join(''));\n                  resultParts.push(BLOCK_PLACEHOLDER);\n                  currentBlockParts = [];\n              }\n              resultParts.push(part);\n          }\n          if (part == OPEN_CURLY) {\n              bracketCount++;\n          }\n      }\n      if (currentBlockParts.length > 0) {\n          escapedBlocks.push(currentBlockParts.join(''));\n          resultParts.push(BLOCK_PLACEHOLDER);\n      }\n      return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n  }\n\n  var COMPONENT_VARIABLE = '%COMP%';\n  var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n  var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n  var StylesCompileDependency = (function () {\n      function StylesCompileDependency(moduleUrl, isShimmed, valuePlaceholder) {\n          this.moduleUrl = moduleUrl;\n          this.isShimmed = isShimmed;\n          this.valuePlaceholder = valuePlaceholder;\n      }\n      return StylesCompileDependency;\n  }());\n  var StylesCompileResult = (function () {\n      function StylesCompileResult(componentStylesheet, externalStylesheets) {\n          this.componentStylesheet = componentStylesheet;\n          this.externalStylesheets = externalStylesheets;\n      }\n      return StylesCompileResult;\n  }());\n  var CompiledStylesheet = (function () {\n      function CompiledStylesheet(statements, stylesVar, dependencies, isShimmed, meta) {\n          this.statements = statements;\n          this.stylesVar = stylesVar;\n          this.dependencies = dependencies;\n          this.isShimmed = isShimmed;\n          this.meta = meta;\n      }\n      return CompiledStylesheet;\n  }());\n  var StyleCompiler = (function () {\n      function StyleCompiler(_urlResolver) {\n          this._urlResolver = _urlResolver;\n          this._shadowCss = new ShadowCss();\n      }\n      StyleCompiler.prototype.compileComponent = function (comp) {\n          var _this = this;\n          var externalStylesheets = [];\n          var componentStylesheet = this._compileStyles(comp, new CompileStylesheetMetadata({\n              styles: comp.template.styles,\n              styleUrls: comp.template.styleUrls,\n              moduleUrl: comp.type.moduleUrl\n          }), true);\n          comp.template.externalStylesheets.forEach(function (stylesheetMeta) {\n              var compiledStylesheet = _this._compileStyles(comp, stylesheetMeta, false);\n              externalStylesheets.push(compiledStylesheet);\n          });\n          return new StylesCompileResult(componentStylesheet, externalStylesheets);\n      };\n      StyleCompiler.prototype._compileStyles = function (comp, stylesheet, isComponentStylesheet) {\n          var _this = this;\n          var shim = comp.template.encapsulation === _angular_core.ViewEncapsulation.Emulated;\n          var styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n          var dependencies = [];\n          for (var i = 0; i < stylesheet.styleUrls.length; i++) {\n              var identifier = new CompileIdentifierMetadata({ name: getStylesVarName(null) });\n              dependencies.push(new StylesCompileDependency(stylesheet.styleUrls[i], shim, identifier));\n              styleExpressions.push(new ExternalExpr(identifier));\n          }\n          // styles variable contains plain strings and arrays of other styles arrays (recursive),\n          // so we set its type to dynamic.\n          var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n          var stmt = variable(stylesVar)\n              .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n              .toDeclStmt(null, [StmtModifier.Final]);\n          return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n      };\n      StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n          return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n      };\n      StyleCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      StyleCompiler.ctorParameters = [\n          { type: UrlResolver, },\n      ];\n      return StyleCompiler;\n  }());\n  function getStylesVarName(component) {\n      var result = \"styles\";\n      if (component) {\n          result += \"_\" + component.type.name;\n      }\n      return result;\n  }\n\n  /**\n   * An internal module of the Angular compiler that begins with component types,\n   * extracts templates, and eventually produces a compiled version of the component\n   * ready for linking into an application.\n   *\n   * @security  When compiling templates at runtime, you must ensure that the entire template comes\n   * from a trusted source. Attacker-controlled data introduced by a template could expose your\n   * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n   */\n  var RuntimeCompiler = (function () {\n      function RuntimeCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _directiveWrapperCompiler, _compilerConfig, _animationParser) {\n          this._injector = _injector;\n          this._metadataResolver = _metadataResolver;\n          this._templateParser = _templateParser;\n          this._styleCompiler = _styleCompiler;\n          this._viewCompiler = _viewCompiler;\n          this._ngModuleCompiler = _ngModuleCompiler;\n          this._directiveWrapperCompiler = _directiveWrapperCompiler;\n          this._compilerConfig = _compilerConfig;\n          this._animationParser = _animationParser;\n          this._compiledTemplateCache = new Map();\n          this._compiledHostTemplateCache = new Map();\n          this._compiledDirectiveWrapperCache = new Map();\n          this._compiledNgModuleCache = new Map();\n          this._animationCompiler = new AnimationCompiler();\n      }\n      Object.defineProperty(RuntimeCompiler.prototype, \"injector\", {\n          get: function () { return this._injector; },\n          enumerable: true,\n          configurable: true\n      });\n      RuntimeCompiler.prototype.compileModuleSync = function (moduleType) {\n          return this._compileModuleAndComponents(moduleType, true).syncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAsync = function (moduleType) {\n          return this._compileModuleAndComponents(moduleType, false).asyncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n          return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n      };\n      RuntimeCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n          return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n      };\n      RuntimeCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n          var _this = this;\n          var loadingPromise = this._loadModules(moduleType, isSync);\n          var createResult = function () {\n              _this._compileComponents(moduleType, null);\n              return _this._compileModule(moduleType);\n          };\n          if (isSync) {\n              return new SyncAsyncResult(createResult());\n          }\n          else {\n              return new SyncAsyncResult(null, loadingPromise.then(createResult));\n          }\n      };\n      RuntimeCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n          var _this = this;\n          var loadingPromise = this._loadModules(moduleType, isSync);\n          var createResult = function () {\n              var componentFactories = [];\n              _this._compileComponents(moduleType, componentFactories);\n              return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n          };\n          if (isSync) {\n              return new SyncAsyncResult(createResult());\n          }\n          else {\n              return new SyncAsyncResult(null, loadingPromise.then(createResult));\n          }\n      };\n      RuntimeCompiler.prototype._loadModules = function (mainModule, isSync) {\n          var _this = this;\n          var loadingPromises = [];\n          var _a = this._metadataResolver.loadNgModuleMetadata(mainModule, isSync), ngModule = _a.ngModule, loading = _a.loading;\n          loadingPromises.push(loading);\n          // Note: the loadingPromise for a module only includes the loading of the exported directives\n          // of imported modules.\n          // However, for runtime compilation, we want to transitively compile all modules,\n          // so we also need to call loadNgModuleMetadata for all nested modules.\n          ngModule.transitiveModule.modules.forEach(function (localModuleMeta) {\n              loadingPromises.push(_this._metadataResolver.loadNgModuleMetadata(localModuleMeta.type.reference, isSync)\n                  .loading);\n          });\n          return Promise.all(loadingPromises);\n      };\n      RuntimeCompiler.prototype._compileModule = function (moduleType) {\n          var _this = this;\n          var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n          if (!ngModuleFactory) {\n              var moduleMeta_1 = this._metadataResolver.getNgModuleMetadata(moduleType);\n              // Always provide a bound Compiler\n              var extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n              var compileResult = this._ngModuleCompiler.compile(moduleMeta_1, extraProviders);\n              compileResult.dependencies.forEach(function (dep) {\n                  dep.placeholder.reference =\n                      _this._assertComponentKnown(dep.comp.reference, true).proxyComponentFactory;\n                  dep.placeholder.name = \"compFactory_\" + dep.comp.name;\n              });\n              if (!this._compilerConfig.useJit) {\n                  ngModuleFactory =\n                      interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n              }\n              else {\n                  ngModuleFactory = jitStatements(\"/\" + moduleMeta_1.type.name + \"/module.ngfactory.js\", compileResult.statements, compileResult.ngModuleFactoryVar);\n              }\n              this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n          }\n          return ngModuleFactory;\n      };\n      /**\n       * @internal\n       */\n      RuntimeCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n          var _this = this;\n          var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n          var moduleByDirective = new Map();\n          var templates = new Set();\n          ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n              var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.type.reference);\n              localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                  moduleByDirective.set(dirIdentifier.reference, localModuleMeta);\n                  var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n                  _this._compileDirectiveWrapper(dirMeta, localModuleMeta);\n                  if (dirMeta.isComponent) {\n                      templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                      if (allComponentFactories) {\n                          var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                          templates.add(template);\n                          allComponentFactories.push(template.proxyComponentFactory);\n                      }\n                  }\n              });\n          });\n          ngModule.transitiveModule.modules.forEach(function (localModuleSummary) {\n              var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localModuleSummary.type.reference);\n              localModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n                  var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirIdentifier.reference);\n                  if (dirMeta.isComponent) {\n                      dirMeta.entryComponents.forEach(function (entryComponentType) {\n                          var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n                          templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n                      });\n                  }\n              });\n              localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                  var moduleMeta = moduleByDirective.get(entryComponentType.reference);\n                  templates.add(_this._createCompiledHostTemplate(entryComponentType.reference, moduleMeta));\n              });\n          });\n          templates.forEach(function (template) { return _this._compileTemplate(template); });\n      };\n      RuntimeCompiler.prototype.clearCacheFor = function (type) {\n          this._compiledNgModuleCache.delete(type);\n          this._metadataResolver.clearCacheFor(type);\n          this._compiledHostTemplateCache.delete(type);\n          var compiledTemplate = this._compiledTemplateCache.get(type);\n          if (compiledTemplate) {\n              this._compiledTemplateCache.delete(type);\n          }\n      };\n      RuntimeCompiler.prototype.clearCache = function () {\n          this._metadataResolver.clearCache();\n          this._compiledTemplateCache.clear();\n          this._compiledHostTemplateCache.clear();\n          this._compiledNgModuleCache.clear();\n      };\n      RuntimeCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n          if (!ngModule) {\n              throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n          }\n          var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n          if (!compiledTemplate) {\n              var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n              assertComponent(compMeta);\n              var hostMeta = createHostComponentMeta(compMeta);\n              compiledTemplate = new CompiledTemplate(true, compMeta.selector, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n              this._compiledHostTemplateCache.set(compType, compiledTemplate);\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n          var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n          if (!compiledTemplate) {\n              assertComponent(compMeta);\n              compiledTemplate = new CompiledTemplate(false, compMeta.selector, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n              this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._assertComponentKnown = function (compType, isHost) {\n          var compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n              this._compiledTemplateCache.get(compType);\n          if (!compiledTemplate) {\n              throw new Error(\"Illegal state: Compiled view for component \" + stringify(compType) + \" (host: \" + isHost + \") does not exist!\");\n          }\n          return compiledTemplate;\n      };\n      RuntimeCompiler.prototype._assertDirectiveWrapper = function (dirType) {\n          var dirWrapper = this._compiledDirectiveWrapperCache.get(dirType);\n          if (!dirWrapper) {\n              throw new Error(\"Illegal state: Directive wrapper for \" + stringify(dirType) + \" has not been compiled!\");\n          }\n          return dirWrapper;\n      };\n      RuntimeCompiler.prototype._compileDirectiveWrapper = function (dirMeta, moduleMeta) {\n          var compileResult = this._directiveWrapperCompiler.compile(dirMeta);\n          var statements = compileResult.statements;\n          var directiveWrapperClass;\n          if (!this._compilerConfig.useJit) {\n              directiveWrapperClass = interpretStatements(statements, compileResult.dirWrapperClassVar);\n          }\n          else {\n              directiveWrapperClass = jitStatements(\"/\" + moduleMeta.type.name + \"/\" + dirMeta.type.name + \"/wrapper.ngfactory.js\", statements, compileResult.dirWrapperClassVar);\n          }\n          this._compiledDirectiveWrapperCache.set(dirMeta.type.reference, directiveWrapperClass);\n      };\n      RuntimeCompiler.prototype._compileTemplate = function (template) {\n          var _this = this;\n          if (template.isCompiled) {\n              return;\n          }\n          var compMeta = template.compMeta;\n          var externalStylesheetsByModuleUrl = new Map();\n          var stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n          stylesCompileResult.externalStylesheets.forEach(function (r) { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n          this._resolveStylesCompileResult(stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n          var parsedAnimations = this._animationParser.parseComponent(compMeta);\n          var directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n          var pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n          var parsedTemplate = this._templateParser.parse(compMeta, compMeta.template.template, directives, pipes, template.ngModule.schemas, compMeta.type.name);\n          var compiledAnimations = this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n          var compileResult = this._viewCompiler.compileComponent(compMeta, parsedTemplate, variable(stylesCompileResult.componentStylesheet.stylesVar), pipes, compiledAnimations);\n          compileResult.dependencies.forEach(function (dep) {\n              var depTemplate;\n              if (dep instanceof ViewClassDependency) {\n                  var vfd = dep;\n                  depTemplate = _this._assertComponentKnown(vfd.comp.reference, false);\n                  vfd.placeholder.reference = depTemplate.proxyViewClass;\n                  vfd.placeholder.name = \"View_\" + vfd.comp.name;\n              }\n              else if (dep instanceof ComponentFactoryDependency) {\n                  var cfd = dep;\n                  depTemplate = _this._assertComponentKnown(cfd.comp.reference, true);\n                  cfd.placeholder.reference = depTemplate.proxyComponentFactory;\n                  cfd.placeholder.name = \"compFactory_\" + cfd.comp.name;\n              }\n              else if (dep instanceof DirectiveWrapperDependency) {\n                  var dwd = dep;\n                  dwd.placeholder.reference = _this._assertDirectiveWrapper(dwd.dir.reference);\n              }\n          });\n          var statements = (_a = stylesCompileResult.componentStylesheet.statements).concat.apply(_a, compiledAnimations.map(function (ca) { return ca.statements; }))\n              .concat(compileResult.statements);\n          var viewClass;\n          if (!this._compilerConfig.useJit) {\n              viewClass = interpretStatements(statements, compileResult.viewClassVar);\n          }\n          else {\n              viewClass = jitStatements(\"/\" + template.ngModule.type.name + \"/\" + template.compType.name + \"/\" + (template.isHost ? 'host' : 'component') + \".ngfactory.js\", statements, compileResult.viewClassVar);\n          }\n          template.compiled(viewClass);\n          var _a;\n      };\n      RuntimeCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n          var _this = this;\n          result.dependencies.forEach(function (dep, i) {\n              var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n              var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n              dep.valuePlaceholder.reference = nestedStylesArr;\n              dep.valuePlaceholder.name = \"importedStyles\" + i;\n          });\n      };\n      RuntimeCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n          this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n          if (!this._compilerConfig.useJit) {\n              return interpretStatements(result.statements, result.stylesVar);\n          }\n          else {\n              return jitStatements(\"/\" + result.meta.moduleUrl + \".css.js\", result.statements, result.stylesVar);\n          }\n      };\n      RuntimeCompiler.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      RuntimeCompiler.ctorParameters = [\n          { type: _angular_core.Injector, },\n          { type: CompileMetadataResolver, },\n          { type: TemplateParser, },\n          { type: StyleCompiler, },\n          { type: ViewCompiler, },\n          { type: NgModuleCompiler, },\n          { type: DirectiveWrapperCompiler, },\n          { type: CompilerConfig, },\n          { type: AnimationParser, },\n      ];\n      return RuntimeCompiler;\n  }());\n  var CompiledTemplate = (function () {\n      function CompiledTemplate(isHost, selector, compType, compMeta, ngModule, directives) {\n          this.isHost = isHost;\n          this.compType = compType;\n          this.compMeta = compMeta;\n          this.ngModule = ngModule;\n          this.directives = directives;\n          this._viewClass = null;\n          this.isCompiled = false;\n          var self = this;\n          this.proxyViewClass = function () {\n              if (!self._viewClass) {\n                  throw new Error(\"Illegal state: CompiledTemplate for \" + stringify(self.compType) + \" is not compiled yet!\");\n              }\n              return self._viewClass.apply(this, arguments);\n          };\n          this.proxyComponentFactory = isHost ?\n              new _angular_core.ComponentFactory(selector, this.proxyViewClass, compType.reference) :\n              null;\n      }\n      CompiledTemplate.prototype.compiled = function (viewClass) {\n          this._viewClass = viewClass;\n          this.proxyViewClass.prototype = viewClass.prototype;\n          this.isCompiled = true;\n      };\n      return CompiledTemplate;\n  }());\n  function assertComponent(meta) {\n      if (!meta.isComponent) {\n          throw new Error(\"Could not compile '\" + meta.type.name + \"' because it is not a component.\");\n      }\n  }\n  /**\n   * Implements `Compiler` by delegating to the RuntimeCompiler using a known module.\n   */\n  var ModuleBoundCompiler = (function () {\n      function ModuleBoundCompiler(_delegate, _ngModule) {\n          this._delegate = _delegate;\n          this._ngModule = _ngModule;\n      }\n      Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n          get: function () { return this._delegate.injector; },\n          enumerable: true,\n          configurable: true\n      });\n      ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n          return this._delegate.compileModuleSync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n          return this._delegate.compileModuleAsync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n          return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n      };\n      ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n          return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n      };\n      /**\n       * Clears all caches\n       */\n      ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n      /**\n       * Clears the cache for the given component/ngModule.\n       */\n      ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n      return ModuleBoundCompiler;\n  }());\n\n  // =================================================================================================\n  // =================================================================================================\n  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n  // =================================================================================================\n  // =================================================================================================\n  //\n  //        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n  //                               Reach out to mprobst for details.\n  //\n  // =================================================================================================\n  /** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\n  var SECURITY_SCHEMA = {};\n  function registerContext(ctx, specs) {\n      for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n          var spec = specs_1[_i];\n          SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n      }\n  }\n  // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n  registerContext(_angular_core.SecurityContext.HTML, [\n      'iframe|srcdoc',\n      '*|innerHTML',\n      '*|outerHTML',\n  ]);\n  registerContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n  // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n  registerContext(_angular_core.SecurityContext.URL, [\n      '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n      'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n      'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n      'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n  ]);\n  registerContext(_angular_core.SecurityContext.RESOURCE_URL, [\n      'applet|code',\n      'applet|codebase',\n      'base|href',\n      'embed|src',\n      'frame|src',\n      'head|profile',\n      'html|manifest',\n      'iframe|src',\n      'link|href',\n      'media|src',\n      'object|codebase',\n      'object|data',\n      'script|src',\n  ]);\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  var __extends$21 = (this && this.__extends) || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n  var BOOLEAN = 'boolean';\n  var NUMBER = 'number';\n  var STRING = 'string';\n  var OBJECT = 'object';\n  /**\n   * This array represents the DOM schema. It encodes inheritance, properties, and events.\n   *\n   * ## Overview\n   *\n   * Each line represents one kind of element. The `element_inheritance` and properties are joined\n   * using `element_inheritance|properties` syntax.\n   *\n   * ## Element Inheritance\n   *\n   * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n   * Here the individual elements are separated by `,` (commas). Every element in the list\n   * has identical properties.\n   *\n   * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n   * specified then `\"\"` (blank) element is assumed.\n   *\n   * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n   * elements.\n   *\n   * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n   *\n   * ## Properties\n   *\n   * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n   * by a special character designating its type:\n   *\n   * - (no prefix): property is a string.\n   * - `*`: property represents an event.\n   * - `!`: property is a boolean.\n   * - `#`: property is a number.\n   * - `%`: property is an object.\n   *\n   * ## Query\n   *\n   * The class creates an internal squas representation which allows to easily answer the query of\n   * if a given property exist on a given element.\n   *\n   * NOTE: We don't yet support querying for types or events.\n   * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n   *       see dom_element_schema_registry_spec.ts\n   */\n  // =================================================================================================\n  // =================================================================================================\n  // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n  // =================================================================================================\n  // =================================================================================================\n  //\n  //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n  //\n  // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n  // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n  //\n  // =================================================================================================\n  var SCHEMA = [\n      '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop',\n      '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n      'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*beforecopy,*beforecut,*beforepaste,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*message,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*paste,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*search,*seeked,*seeking,*select,*selectstart,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n      'media^[HTMLElement]|!autoplay,!controls,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,#playbackRate,preload,src,%srcObject,#volume',\n      ':svg:^[HTMLElement]|*abort,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n      ':svg:graphics^:svg:|',\n      ':svg:animation^:svg:|*begin,*end,*repeat',\n      ':svg:geometry^:svg:|',\n      ':svg:componentTransferFunction^:svg:|',\n      ':svg:gradient^:svg:|',\n      ':svg:textContent^:svg:graphics|',\n      ':svg:textPositioning^:svg:textContent|',\n      'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n      'area^[HTMLElement]|alt,coords,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,search,shape,target,username',\n      'audio^media|',\n      'br^[HTMLElement]|clear',\n      'base^[HTMLElement]|href,target',\n      'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n      'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n      'canvas^[HTMLElement]|#height,#width',\n      'content^[HTMLElement]|select',\n      'dl^[HTMLElement]|!compact',\n      'datalist^[HTMLElement]|',\n      'details^[HTMLElement]|!open',\n      'dialog^[HTMLElement]|!open,returnValue',\n      'dir^[HTMLElement]|!compact',\n      'div^[HTMLElement]|align',\n      'embed^[HTMLElement]|align,height,name,src,type,width',\n      'fieldset^[HTMLElement]|!disabled,name',\n      'font^[HTMLElement]|color,face,size',\n      'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n      'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n      'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n      'hr^[HTMLElement]|align,color,!noShade,size,width',\n      'head^[HTMLElement]|',\n      'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n      'html^[HTMLElement]|version',\n      'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n      'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n      'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n      'keygen^[HTMLElement]|!autofocus,challenge,!disabled,keytype,name',\n      'li^[HTMLElement]|type,#value',\n      'label^[HTMLElement]|htmlFor',\n      'legend^[HTMLElement]|align',\n      'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,rel,%relList,rev,%sizes,target,type',\n      'map^[HTMLElement]|name',\n      'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n      'menu^[HTMLElement]|!compact',\n      'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n      'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n      'ins,del^[HTMLElement]|cite,dateTime',\n      'ol^[HTMLElement]|!compact,!reversed,#start,type',\n      'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n      'optgroup^[HTMLElement]|!disabled,label',\n      'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n      'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n      'p^[HTMLElement]|align',\n      'param^[HTMLElement]|name,type,value,valueType',\n      'picture^[HTMLElement]|',\n      'pre^[HTMLElement]|#width',\n      'progress^[HTMLElement]|#max,#value',\n      'q,blockquote,cite^[HTMLElement]|',\n      'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n      'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n      'shadow^[HTMLElement]|',\n      'source^[HTMLElement]|media,sizes,src,srcset,type',\n      'span^[HTMLElement]|',\n      'style^[HTMLElement]|!disabled,media,type',\n      'caption^[HTMLElement]|align',\n      'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n      'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n      'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n      'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n      'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n      'template^[HTMLElement]|',\n      'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n      'title^[HTMLElement]|text',\n      'track^[HTMLElement]|!default,kind,label,src,srclang',\n      'ul^[HTMLElement]|!compact,type',\n      'unknown^[HTMLElement]|',\n      'video^media|#height,poster,#width',\n      ':svg:a^:svg:graphics|',\n      ':svg:animate^:svg:animation|',\n      ':svg:animateMotion^:svg:animation|',\n      ':svg:animateTransform^:svg:animation|',\n      ':svg:circle^:svg:geometry|',\n      ':svg:clipPath^:svg:graphics|',\n      ':svg:cursor^:svg:|',\n      ':svg:defs^:svg:graphics|',\n      ':svg:desc^:svg:|',\n      ':svg:discard^:svg:|',\n      ':svg:ellipse^:svg:geometry|',\n      ':svg:feBlend^:svg:|',\n      ':svg:feColorMatrix^:svg:|',\n      ':svg:feComponentTransfer^:svg:|',\n      ':svg:feComposite^:svg:|',\n      ':svg:feConvolveMatrix^:svg:|',\n      ':svg:feDiffuseLighting^:svg:|',\n      ':svg:feDisplacementMap^:svg:|',\n      ':svg:feDistantLight^:svg:|',\n      ':svg:feDropShadow^:svg:|',\n      ':svg:feFlood^:svg:|',\n      ':svg:feFuncA^:svg:componentTransferFunction|',\n      ':svg:feFuncB^:svg:componentTransferFunction|',\n      ':svg:feFuncG^:svg:componentTransferFunction|',\n      ':svg:feFuncR^:svg:componentTransferFunction|',\n      ':svg:feGaussianBlur^:svg:|',\n      ':svg:feImage^:svg:|',\n      ':svg:feMerge^:svg:|',\n      ':svg:feMergeNode^:svg:|',\n      ':svg:feMorphology^:svg:|',\n      ':svg:feOffset^:svg:|',\n      ':svg:fePointLight^:svg:|',\n      ':svg:feSpecularLighting^:svg:|',\n      ':svg:feSpotLight^:svg:|',\n      ':svg:feTile^:svg:|',\n      ':svg:feTurbulence^:svg:|',\n      ':svg:filter^:svg:|',\n      ':svg:foreignObject^:svg:graphics|',\n      ':svg:g^:svg:graphics|',\n      ':svg:image^:svg:graphics|',\n      ':svg:line^:svg:geometry|',\n      ':svg:linearGradient^:svg:gradient|',\n      ':svg:mpath^:svg:|',\n      ':svg:marker^:svg:|',\n      ':svg:mask^:svg:|',\n      ':svg:metadata^:svg:|',\n      ':svg:path^:svg:geometry|',\n      ':svg:pattern^:svg:|',\n      ':svg:polygon^:svg:geometry|',\n      ':svg:polyline^:svg:geometry|',\n      ':svg:radialGradient^:svg:gradient|',\n      ':svg:rect^:svg:geometry|',\n      ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n      ':svg:script^:svg:|type',\n      ':svg:set^:svg:animation|',\n      ':svg:stop^:svg:|',\n      ':svg:style^:svg:|!disabled,media,title,type',\n      ':svg:switch^:svg:graphics|',\n      ':svg:symbol^:svg:|',\n      ':svg:tspan^:svg:textPositioning|',\n      ':svg:text^:svg:textPositioning|',\n      ':svg:textPath^:svg:textContent|',\n      ':svg:title^:svg:|',\n      ':svg:use^:svg:graphics|',\n      ':svg:view^:svg:|#zoomAndPan',\n      'data^[HTMLElement]|value',\n      'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n      'summary^[HTMLElement]|',\n      'time^[HTMLElement]|dateTime',\n  ];\n  var _ATTR_TO_PROP = {\n      'class': 'className',\n      'for': 'htmlFor',\n      'formaction': 'formAction',\n      'innerHtml': 'innerHTML',\n      'readonly': 'readOnly',\n      'tabindex': 'tabIndex',\n  };\n  var DomElementSchemaRegistry = (function (_super) {\n      __extends$21(DomElementSchemaRegistry, _super);\n      function DomElementSchemaRegistry() {\n          var _this = this;\n          _super.call(this);\n          this._schema = {};\n          SCHEMA.forEach(function (encodedType) {\n              var type = {};\n              var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n              var properties = strProperties.split(',');\n              var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n              typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n              var superType = superName && _this._schema[superName.toLowerCase()];\n              if (superType) {\n                  Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n              }\n              properties.forEach(function (property) {\n                  if (property.length > 0) {\n                      switch (property[0]) {\n                          case '*':\n                              // We don't yet support events.\n                              // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                              // will\n                              // almost certainly introduce bad XSS vulnerabilities.\n                              // type[property.substring(1)] = EVENT;\n                              break;\n                          case '!':\n                              type[property.substring(1)] = BOOLEAN;\n                              break;\n                          case '#':\n                              type[property.substring(1)] = NUMBER;\n                              break;\n                          case '%':\n                              type[property.substring(1)] = OBJECT;\n                              break;\n                          default:\n                              type[property] = STRING;\n                      }\n                  }\n              });\n          });\n      }\n      DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n              return true;\n          }\n          if (tagName.indexOf('-') > -1) {\n              if (tagName === 'ng-container' || tagName === 'ng-content') {\n                  return false;\n              }\n              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                  // Can't tell now as we don't know which properties a custom element will get\n                  // once it is instantiated\n                  return true;\n              }\n          }\n          var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n          return !!elementProperties[propName];\n      };\n      DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n          if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n              return true;\n          }\n          if (tagName.indexOf('-') > -1) {\n              if (tagName === 'ng-container' || tagName === 'ng-content') {\n                  return true;\n              }\n              if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                  // Allow any custom elements\n                  return true;\n              }\n          }\n          return !!this._schema[tagName.toLowerCase()];\n      };\n      /**\n       * securityContext returns the security context for the given property on the given DOM tag.\n       *\n       * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n       * possible to bind a value into a changing attribute or tag name.\n       *\n       * The filtering is white list based. All attributes in the schema above are assumed to have the\n       * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n       * attack vectors are assigned their appropriate context.\n       */\n      DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n          if (isAttribute) {\n              // NB: For security purposes, use the mapped property name, not the attribute name.\n              propName = this.getMappedPropName(propName);\n          }\n          // Make sure comparisons are case insensitive, so that case differences between attribute and\n          // property names do not have a security impact.\n          tagName = tagName.toLowerCase();\n          propName = propName.toLowerCase();\n          var ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n          if (ctx) {\n              return ctx;\n          }\n          ctx = SECURITY_SCHEMA['*|' + propName];\n          return ctx ? ctx : _angular_core.SecurityContext.NONE;\n      };\n      DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n      DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n      DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n          if (name.toLowerCase().startsWith('on')) {\n              var msg = (\"Binding to event property '\" + name + \"' is disallowed for security reasons, \") +\n                  (\"please use (\" + name.slice(2) + \")=...\") +\n                  (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                  \" current module.\";\n              return { error: true, msg: msg };\n          }\n          else {\n              return { error: false };\n          }\n      };\n      DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n          if (name.toLowerCase().startsWith('on')) {\n              var msg = (\"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \") +\n                  (\"please use (\" + name.slice(2) + \")=...\");\n              return { error: true, msg: msg };\n          }\n          else {\n              return { error: false };\n          }\n      };\n      DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n      DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n          return dashCaseToCamelCase(propName);\n      };\n      DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n          var unit = '';\n          var strVal = val.toString().trim();\n          var errorMsg = null;\n          if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n              if (typeof val === 'number') {\n                  unit = 'px';\n              }\n              else {\n                  var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                  if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                      errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                  }\n              }\n          }\n          return { error: errorMsg, value: strVal + unit };\n      };\n      DomElementSchemaRegistry.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      DomElementSchemaRegistry.ctorParameters = [];\n      return DomElementSchemaRegistry;\n  }(ElementSchemaRegistry));\n  function _isPixelDimensionStyle(prop) {\n      switch (prop) {\n          case 'width':\n          case 'height':\n          case 'minWidth':\n          case 'minHeight':\n          case 'maxWidth':\n          case 'maxHeight':\n          case 'left':\n          case 'top':\n          case 'bottom':\n          case 'right':\n          case 'fontSize':\n          case 'outlineWidth':\n          case 'outlineOffset':\n          case 'paddingTop':\n          case 'paddingLeft':\n          case 'paddingBottom':\n          case 'paddingRight':\n          case 'marginTop':\n          case 'marginLeft':\n          case 'marginBottom':\n          case 'marginRight':\n          case 'borderRadius':\n          case 'borderWidth':\n          case 'borderTopWidth':\n          case 'borderLeftWidth':\n          case 'borderRightWidth':\n          case 'borderBottomWidth':\n          case 'textIndent':\n              return true;\n          default:\n              return false;\n      }\n  }\n\n  var _NO_RESOURCE_LOADER = {\n      get: function (url) {\n          throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n      }\n  };\n  /**\n   * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\n   * template compilation.\n   */\n  var COMPILER_PROVIDERS = [\n      { provide: Reflector, useValue: reflector },\n      { provide: ReflectorReader, useExisting: Reflector },\n      { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n      Console,\n      Lexer,\n      Parser,\n      HtmlParser,\n      {\n          provide: I18NHtmlParser,\n          useFactory: function (parser, translations, format) {\n              return new I18NHtmlParser(parser, translations, format);\n          },\n          deps: [\n              HtmlParser,\n              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n              [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n          ]\n      },\n      TemplateParser,\n      DirectiveNormalizer,\n      CompileMetadataResolver,\n      DEFAULT_PACKAGE_URL_PROVIDER,\n      StyleCompiler,\n      ViewCompiler,\n      NgModuleCompiler,\n      DirectiveWrapperCompiler,\n      { provide: CompilerConfig, useValue: new CompilerConfig() },\n      RuntimeCompiler,\n      { provide: _angular_core.Compiler, useExisting: RuntimeCompiler },\n      DomElementSchemaRegistry,\n      { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n      UrlResolver,\n      DirectiveResolver,\n      PipeResolver,\n      NgModuleResolver,\n      AnimationParser\n  ];\n  var RuntimeCompilerFactory = (function () {\n      function RuntimeCompilerFactory(defaultOptions) {\n          this._defaultOptions = [{\n                  useDebug: _angular_core.isDevMode(),\n                  useJit: true,\n                  defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated\n              }].concat(defaultOptions);\n      }\n      RuntimeCompilerFactory.prototype.createCompiler = function (options) {\n          if (options === void 0) { options = []; }\n          var mergedOptions = _mergeOptions(this._defaultOptions.concat(options));\n          var injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n              COMPILER_PROVIDERS, {\n                  provide: CompilerConfig,\n                  useFactory: function () {\n                      return new CompilerConfig({\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers. E.g. important for the testing platform.\n                          genDebugInfo: mergedOptions.useDebug,\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers\n                          useJit: mergedOptions.useJit,\n                          // let explicit values from the compiler options overwrite options\n                          // from the app providers\n                          defaultEncapsulation: mergedOptions.defaultEncapsulation,\n                          logBindingUpdate: mergedOptions.useDebug\n                      });\n                  },\n                  deps: []\n              },\n              mergedOptions.providers\n          ]);\n          return injector.get(_angular_core.Compiler);\n      };\n      RuntimeCompilerFactory.decorators = [\n          { type: _angular_core.Injectable },\n      ];\n      /** @nocollapse */\n      RuntimeCompilerFactory.ctorParameters = [\n          { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n      ];\n      return RuntimeCompilerFactory;\n  }());\n  function _initReflector() {\n      reflector.reflectionCapabilities = new ReflectionCapabilities();\n  }\n  /**\n   * A platform that included corePlatform and the compiler.\n   *\n   * @experimental\n   */\n  var platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n      { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n      { provide: _angular_core.CompilerFactory, useClass: RuntimeCompilerFactory },\n      { provide: _angular_core.PLATFORM_INITIALIZER, useValue: _initReflector, multi: true },\n  ]);\n  function _mergeOptions(optionsArr) {\n      return {\n          useDebug: _lastDefined(optionsArr.map(function (options) { return options.useDebug; })),\n          useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n          defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n          providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; }))\n      };\n  }\n  function _lastDefined(args) {\n      for (var i = args.length - 1; i >= 0; i--) {\n          if (args[i] !== undefined) {\n              return args[i];\n          }\n      }\n      return undefined;\n  }\n  function _mergeArrays(parts) {\n      var result = [];\n      parts.forEach(function (part) { return part && result.push.apply(result, part); });\n      return result;\n  }\n\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  // asset:<package-name>/<realm>/<path-to-module>\n  var _ASSET_URL_RE = /asset:([^\\/]+)\\/([^\\/]+)\\/(.+)/;\n  /**\n   * Interface that defines how import statements should be generated.\n   */\n  var ImportGenerator = (function () {\n      function ImportGenerator() {\n      }\n      ImportGenerator.parseAssetUrl = function (url) { return AssetUrl.parse(url); };\n      return ImportGenerator;\n  }());\n  var AssetUrl = (function () {\n      function AssetUrl(packageName, firstLevelDir, modulePath) {\n          this.packageName = packageName;\n          this.firstLevelDir = firstLevelDir;\n          this.modulePath = modulePath;\n      }\n      AssetUrl.parse = function (url, allowNonMatching) {\n          if (allowNonMatching === void 0) { allowNonMatching = true; }\n          var match = url.match(_ASSET_URL_RE);\n          if (match !== null) {\n              return new AssetUrl(match[1], match[2], match[3]);\n          }\n          if (allowNonMatching) {\n              return null;\n          }\n          throw new Error(\"Url \" + url + \" is not a valid asset: url\");\n      };\n      return AssetUrl;\n  }());\n\n  exports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\n  exports.CompilerConfig = CompilerConfig;\n  exports.RenderTypes = RenderTypes;\n  exports.RuntimeCompiler = RuntimeCompiler;\n  exports.DirectiveResolver = DirectiveResolver;\n  exports.PipeResolver = PipeResolver;\n  exports.NgModuleResolver = NgModuleResolver;\n  exports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\n  exports.InterpolationConfig = InterpolationConfig;\n  exports.NgModuleCompiler = NgModuleCompiler;\n  exports.DirectiveWrapperCompiler = DirectiveWrapperCompiler;\n  exports.ViewCompiler = ViewCompiler;\n  exports.AnimationParser = AnimationParser;\n  exports.TextAst = TextAst;\n  exports.BoundTextAst = BoundTextAst;\n  exports.AttrAst = AttrAst;\n  exports.BoundElementPropertyAst = BoundElementPropertyAst;\n  exports.BoundEventAst = BoundEventAst;\n  exports.ReferenceAst = ReferenceAst;\n  exports.VariableAst = VariableAst;\n  exports.ElementAst = ElementAst;\n  exports.EmbeddedTemplateAst = EmbeddedTemplateAst;\n  exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\n  exports.DirectiveAst = DirectiveAst;\n  exports.ProviderAst = ProviderAst;\n  exports.NgContentAst = NgContentAst;\n  exports.templateVisitAll = templateVisitAll;\n  exports.CompileMetadataWithIdentifier = CompileMetadataWithIdentifier;\n  exports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\n  exports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\n  exports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\n  exports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\n  exports.CompileAnimationMetadata = CompileAnimationMetadata;\n  exports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\n  exports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\n  exports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\n  exports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\n  exports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\n  exports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\n  exports.CompileIdentifierMetadata = CompileIdentifierMetadata;\n  exports.CompileDiDependencyMetadata = CompileDiDependencyMetadata;\n  exports.CompileProviderMetadata = CompileProviderMetadata;\n  exports.CompileFactoryMetadata = CompileFactoryMetadata;\n  exports.CompileTokenMetadata = CompileTokenMetadata;\n  exports.CompileTypeMetadata = CompileTypeMetadata;\n  exports.CompileQueryMetadata = CompileQueryMetadata;\n  exports.CompileStylesheetMetadata = CompileStylesheetMetadata;\n  exports.CompileTemplateMetadata = CompileTemplateMetadata;\n  exports.CompileDirectiveMetadata = CompileDirectiveMetadata;\n  exports.createHostComponentMeta = createHostComponentMeta;\n  exports.CompilePipeMetadata = CompilePipeMetadata;\n  exports.CompileNgModuleMetadata = CompileNgModuleMetadata;\n  exports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\n  exports.removeIdentifierDuplicates = removeIdentifierDuplicates;\n  exports.isStaticSymbol = isStaticSymbol;\n  exports.ProviderMeta = ProviderMeta;\n  exports.SourceModule = SourceModule;\n  exports.analyzeNgModules = analyzeNgModules;\n  exports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\n  exports.loadNgModuleDirectives = loadNgModuleDirectives;\n  exports.OfflineCompiler = OfflineCompiler;\n  exports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\n  exports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\n  exports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\n  exports.UrlResolver = UrlResolver;\n  exports.getUrlScheme = getUrlScheme;\n  exports.ResourceLoader = ResourceLoader;\n  exports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\n  exports.RuntimeCompilerFactory = RuntimeCompilerFactory;\n  exports.platformCoreDynamic = platformCoreDynamic;\n  exports.ElementSchemaRegistry = ElementSchemaRegistry;\n  exports.I18NHtmlParser = I18NHtmlParser;\n  exports.MessageBundle = MessageBundle;\n  exports.Xliff = Xliff;\n  exports.Xmb = Xmb;\n  exports.Xtb = Xtb;\n  exports.DirectiveNormalizer = DirectiveNormalizer;\n  exports.Lexer = Lexer;\n  exports.Token = Token;\n  exports.EOF = EOF;\n  exports.isIdentifier = isIdentifier;\n  exports.isQuote = isQuote;\n  exports.SplitInterpolation = SplitInterpolation;\n  exports.TemplateBindingParseResult = TemplateBindingParseResult;\n  exports.Parser = Parser;\n  exports._ParseAST = _ParseAST;\n  exports.CompileMetadataResolver = CompileMetadataResolver;\n  exports.HtmlParser = HtmlParser;\n  exports.ParseTreeResult = ParseTreeResult;\n  exports.TreeError = TreeError;\n  exports.ImportGenerator = ImportGenerator;\n  exports.AssetUrl = AssetUrl;\n  exports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\n  exports.TypeScriptEmitter = TypeScriptEmitter;\n  exports.ParseLocation = ParseLocation;\n  exports.ParseSourceFile = ParseSourceFile;\n  exports.ParseSourceSpan = ParseSourceSpan;\n  exports.ParseError = ParseError;\n  exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n  exports.CssSelector = CssSelector;\n  exports.SelectorMatcher = SelectorMatcher;\n  exports.SelectorListContext = SelectorListContext;\n  exports.SelectorContext = SelectorContext;\n  exports.StylesCompileDependency = StylesCompileDependency;\n  exports.StylesCompileResult = StylesCompileResult;\n  exports.CompiledStylesheet = CompiledStylesheet;\n  exports.StyleCompiler = StyleCompiler;\n  exports.TemplateParseError = TemplateParseError;\n  exports.TemplateParseResult = TemplateParseResult;\n  exports.TemplateParser = TemplateParser;\n  exports.splitClasses = splitClasses;\n  exports.removeSummaryDuplicates = removeSummaryDuplicates;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/compiler/bundles/compiler.umd.js\n// module id = 108\n// module chunks = 1","/**\n * @license Angular v2.2.4\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('@angular/core'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/compiler', '@angular/core', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}),global.ng.compiler,global.ng.core,global.ng.platformBrowser));\n}(this, function (exports,_angular_compiler,_angular_core,_angular_platformBrowser) { 'use strict';\n\n    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = _angular_platformBrowser.__platform_browser_private__.INTERNAL_BROWSER_PLATFORM_PROVIDERS;\n\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var ResourceLoaderImpl = (function (_super) {\n        __extends(ResourceLoaderImpl, _super);\n        function ResourceLoaderImpl() {\n            _super.apply(this, arguments);\n        }\n        ResourceLoaderImpl.prototype.get = function (url) {\n            var resolve;\n            var reject;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, true);\n            xhr.responseType = 'text';\n            xhr.onload = function () {\n                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n                // by IE10)\n                var response = xhr.response || xhr.responseText;\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = xhr.status === 1223 ? 204 : xhr.status;\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (200 <= status && status <= 300) {\n                    resolve(response);\n                }\n                else {\n                    reject(\"Failed to load \" + url);\n                }\n            };\n            xhr.onerror = function () { reject(\"Failed to load \" + url); };\n            xhr.send();\n            return promise;\n        };\n        ResourceLoaderImpl.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        ResourceLoaderImpl.ctorParameters = [];\n        return ResourceLoaderImpl;\n    }(_angular_compiler.ResourceLoader));\n\n    var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n        INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n        {\n            provide: _angular_core.COMPILER_OPTIONS,\n            useValue: { providers: [{ provide: _angular_compiler.ResourceLoader, useClass: ResourceLoaderImpl }] },\n            multi: true\n        },\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var _global = globalScope;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n     * ResourceLoader.\n     *\n     * The template cache needs to be built and loaded into window.$templateCache\n     * via a separate mechanism.\n     */\n    var CachedResourceLoader = (function (_super) {\n        __extends$1(CachedResourceLoader, _super);\n        function CachedResourceLoader() {\n            _super.call(this);\n            this._cache = _global.$templateCache;\n            if (this._cache == null) {\n                throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n            }\n        }\n        CachedResourceLoader.prototype.get = function (url) {\n            if (this._cache.hasOwnProperty(url)) {\n                return Promise.resolve(this._cache[url]);\n            }\n            else {\n                return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n            }\n        };\n        return CachedResourceLoader;\n    }(_angular_compiler.ResourceLoader));\n\n    var __platform_browser_dynamic_private__ = {\n        INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS,\n        ResourceLoaderImpl: ResourceLoaderImpl\n    };\n\n    /**\n     * @experimental\n     */\n    var RESOURCE_CACHE_PROVIDER = [{ provide: _angular_compiler.ResourceLoader, useClass: CachedResourceLoader }];\n    /**\n     * @stable\n     */\n    var platformBrowserDynamic = _angular_core.createPlatformFactory(_angular_compiler.platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n    exports.RESOURCE_CACHE_PROVIDER = RESOURCE_CACHE_PROVIDER;\n    exports.platformBrowserDynamic = platformBrowserDynamic;\n    exports.__platform_browser_dynamic_private__ = __platform_browser_dynamic_private__;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js\n// module id = 109\n// module chunks = 1","\"use strict\";\nvar core_1 = require('@angular/core');\n/* tslint:disable-next-line */\nvar BaseChartDirective = (function () {\n    function BaseChartDirective(element) {\n        this.labels = [];\n        this.options = {};\n        this.chartClick = new core_1.EventEmitter();\n        this.chartHover = new core_1.EventEmitter();\n        this.initFlag = false;\n        this.element = element;\n    }\n    BaseChartDirective.prototype.ngOnInit = function () {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n        if (this.data || this.datasets) {\n            this.refresh();\n        }\n    };\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag) {\n            // Check if the changes are in the data or datasets\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n                this.chart.data.datasets = this.getDatasets();\n                if (changes.hasOwnProperty('labels')) {\n                    this.chart.data.labels = this.labels;\n                }\n                this.chart.update();\n            }\n            else {\n                this.refresh();\n            }\n        }\n    };\n    BaseChartDirective.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n    };\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n        var _this = this;\n        var datasets = this.getDatasets();\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hock for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = function (active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ active: active });\n            };\n        }\n        if (!options.onClick) {\n            options.onClick = function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            };\n        }\n        var opts = {\n            type: this.chartType,\n            data: {\n                labels: this.labels,\n                datasets: datasets\n            },\n            options: options\n        };\n        if (typeof Chart === 'undefined') {\n            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\n        }\n        return new Chart(ctx, opts);\n    };\n    BaseChartDirective.prototype.getDatasets = function () {\n        var _this = this;\n        var datasets = void 0;\n        // in case if datasets is not provided, but data is present\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n            if (Array.isArray(this.data[0])) {\n                datasets = this.data.map(function (data, index) {\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n                });\n            }\n            else {\n                datasets = [{ data: this.data, label: \"Label 0\" }];\n            }\n        }\n        if (this.datasets && this.datasets.length ||\n            (datasets && datasets.length)) {\n            datasets = (this.datasets || datasets)\n                .map(function (elm, index) {\n                var newElm = Object.assign({}, elm);\n                if (_this.colors && _this.colors.length) {\n                    Object.assign(newElm, _this.colors[index]);\n                }\n                else {\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n                }\n                return newElm;\n            });\n        }\n        if (!datasets) {\n            throw new Error(\"ng-charts configuration error, \\n      data or datasets field are required to render char \" + this.chartType);\n        }\n        return datasets;\n    };\n    BaseChartDirective.prototype.refresh = function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        this.ngOnDestroy();\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n    };\n    BaseChartDirective.defaultColors = [\n        [255, 99, 132],\n        [54, 162, 235],\n        [255, 206, 86],\n        [231, 233, 237],\n        [75, 192, 192],\n        [151, 187, 205],\n        [220, 220, 220],\n        [247, 70, 74],\n        [70, 191, 189],\n        [253, 180, 92],\n        [148, 159, 177],\n        [77, 83, 96]\n    ];\n    BaseChartDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'canvas[baseChart]' },] },\n    ];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = [\n        { type: core_1.ElementRef, },\n    ];\n    BaseChartDirective.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'datasets': [{ type: core_1.Input },],\n        'labels': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'chartType': [{ type: core_1.Input },],\n        'colors': [{ type: core_1.Input },],\n        'legend': [{ type: core_1.Input },],\n        'chartClick': [{ type: core_1.Output },],\n        'chartHover': [{ type: core_1.Output },],\n    };\n    return BaseChartDirective;\n}());\nexports.BaseChartDirective = BaseChartDirective;\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function () { return '#fff'; }),\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointBorderColor: colors.map(function () { return '#fff'; }),\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index) {\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count) {\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    return generateColor(index);\n}\nvar ChartsModule = (function () {\n    function ChartsModule() {\n    }\n    ChartsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        BaseChartDirective\n                    ],\n                    exports: [\n                        BaseChartDirective\n                    ],\n                    imports: []\n                },] },\n    ];\n    /** @nocollapse */\n    ChartsModule.ctorParameters = [];\n    return ChartsModule;\n}());\nexports.ChartsModule = ChartsModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/components/charts/charts.js\n// module id = 111\n// module chunks = 1","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./components/charts/charts'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/ng2-charts.js\n// module id = 112\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/livesearch/css/livesearch.component.css\n// module id = 113\n// module chunks = 1","module.exports = \"<div>\\n    <input type=\\\"text\\\" #term (keyup)=\\\"search(term)\\\">\\n    <ul *ngIf=\\\"items\\\">\\n       <li *ngFor=\\\"let item of items\\\" (click)=\\\"select(item)\\\">\\n           item\\n       </li>\\n    </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/livesearch/html/livesearch.component.html\n// module id = 114\n// module chunks = 1","module.exports = \".loader{\\n    margin: 0 0 2em;\\n    height: 500px;\\n    width: 100%;\\n    text-align: center;\\n    padding: 1em;\\n    margin: 0 auto 1em;\\n    display: inline-block;\\n    vertical-align: top;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/loading-indicator/css/loading-indicator.css\n// module id = 115\n// module chunks = 1","module.exports = \"<div class=\\\"loader loader--style2\\\" title=\\\"1\\\">\\n    <svg version=\\\"1.1\\\" id=\\\"loader-1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n     width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 50 50\\\" style=\\\"enable-background:new 0 0 50 50;\\\" xml:space=\\\"preserve\\\">\\n  <path fill=\\\"#000\\\" d=\\\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\\\">\\n    <animateTransform attributeType=\\\"xml\\\"\\n      attributeName=\\\"transform\\\"\\n      type=\\\"rotate\\\"\\n      from=\\\"0 25 25\\\"\\n      to=\\\"360 25 25\\\"\\n      dur=\\\"0.6s\\\"\\n      repeatCount=\\\"indefinite\\\"/>\\n    </path>\\n  </svg>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/loading-indicator/html/loading-indicator.html\n// module id = 116\n// module chunks = 1","module.exports = \"h2,h3,h4{\\n    display: block;\\n    width: 100%;\\n    color: #ffffff;\\n    font-size: 4rem;\\n    font-weight: lighter;\\n    text-align: center;\\n    padding: 0 2rem 0 2rem;\\n}\\nh3{\\n    display: inline-block;\\n    color:#262626;\\n    font-size: 3rem;\\n    padding: 0.5rem;\\n    text-align: left;\\n}\\nh4{\\n    font-size: 2.5rem;\\n    color:#262626;\\n    text-align: left;\\n    margin: 1rem;\\n}\\n.detail h4{\\n    display: inline-block;\\n    text-align: center;\\n    width: 100%;\\n    float: left;\\n    margin-bottom: 2rem;\\n}\\n.detail{\\n    background-color: rgba(255,255,255,0.8);\\n    padding:1rem;\\n    height: auto;\\n\\n}\\n.detail div{\\n    width: 48%;\\n    float: left;\\n}\\n.detail ul{\\n    width: 80%;\\n    float: left;\\n    font-size: 2rem;\\n}\\n\\n.detail li{\\n    text-align: center;\\n    display: block;\\n    color:#ffffff;\\n    background-color: #1565c0;\\n    margin: 0.5rem;\\n    padding: 0.5rem;\\n    width: 100%;\\n}\\n.addstudent{\\n    background-color: rgba(0,0,0,0.3) !important;\\n}\\nbutton {\\n    background-color: #1565c0;\\n    color:#ffffff;\\n    font-size: 2rem;\\n    float: right;\\n    margin: 1rem;\\n    padding: 0.5rem;\\n}\\n.addstudent button {\\n    width: 100%;\\n    padding: 0;\\n    margin: 0 auto;\\n}\\n.tiles{\\n    width:100%;\\n}\\n.tile{\\n\\n    width: 100%;\\n    margin-bottom:0.5rem;\\n    display: inline-block;\\n    background-color: rgba(255,255,255,0.8);\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n}\\n\\n.addgroup{\\n    width: 49%;\\n    height: 100%;\\n    font-size: 3rem;\\n    padding: 0;\\n    margin: 0;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/class.component.css\n// module id = 117\n// module chunks = 1","module.exports = \"\\nh2,h3,h4{\\n    display: block;\\n    width: 100%;\\n    color: #ffffff;\\n    font-size: 4rem;\\n    font-weight: lighter;\\n    text-align: center;\\n    padding: 0;\\n    padding: 0 2rem 0 2rem;\\n}\\nh3{\\n    font-size: 2rem;\\n    text-align: left;\\n}\\nh4{\\n    font-size: 2.5rem;\\n    color:#262626;\\n    text-align: left;\\n    margin: 1rem;\\n}\\nbutton {\\n    background-color: #1565c0;\\n    color:#ffffff;\\n    font-size: 2rem;\\n    float: right;\\n    width: 30%;\\n    height: 20%;\\n    margin: 1rem;\\n    padding: 0.5rem;\\n}\\n.chart{\\n    background-color: rgba(255,255,255,0.8);\\n    padding: 1rem;\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n}\\n.tiles{\\n    width:150%;\\n    margin-left: -17%;\\n}\\n.tile{\\n\\n    width: 45%;\\n    margin:2% 1% 2% 1%;\\n    padding: 0.5rem;\\n    display: inline-block;\\n    background-color: rgba(255,255,255,0.8);\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n}\\n\\n.tile ul{\\n    width: 40%;\\n    height: 50%;\\n    margin: 0;\\n    padding: 0;\\n    margin-top: 5%;\\n}\\n.tile li{\\n    padding: 0.5rem;\\n    margin: 0;\\n    width: 100%;\\n    height: 50%;\\n    display: block;\\n    font-size: 2rem;\\n    float: left;\\n    background-color: rgba(0,0,0,0.5);\\n    color: #ffffff;\\n}\\n.tile li > span {\\n    color: #1565c0;\\n    text-align: right;\\n    width: 30%;\\n\\n}\\n\\n.progressTitle{\\n    width: 100%;\\n    margin:2% 1% 2% 1%;\\n    padding: 0.5rem;\\n    display: inline-block;\\n    background-color: #CFD8DC;\\n    border: none;\\n    font-size: 2.5rem;\\n    color:#262626;\\n    text-align: left;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/dashboard.component.css\n// module id = 118\n// module chunks = 1","module.exports = \"/*--- Start excercise ---*/\\n/* Common */\\n.startformElement{\\n    display: block;\\n    float: left;\\n    width: 100%;\\n    margin-left: 2rem;\\n    margin-right: 2rem;\\n    margin-top: 2rem;\\n}\\n/* Amount */\\n#labelAmount, #labelLanguages{\\n    display: block;\\n    float: left;\\n    font-size: 2rem;\\n    width: 50%;\\n    text-align: center;\\n    color: #262626;\\n    margin-top: 1rem;\\n}\\n#inputAmount, #languages{\\n    display: block;\\n    width: 30%;\\n    height: 4rem;\\n    font-size: 2.5rem;\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n    padding-left: 1rem;\\n    color: #262626;\\n}\\n/* Start Button */\\n.startBtn{\\n    display: block;\\n    float: right;\\n    border: none;\\n    background-color: #1565c0;\\n    color: #ffffff;\\n    width: 20rem;\\n    height: 4rem;\\n    font-size: 3rem;\\n    font-weight: lighter;\\n    margin: 1rem;\\n    margin-top: 2rem;\\n}\\n/*--- Exercise ---*/\\n/* Wrapper */\\n.innerWrapper{\\n    display: block;\\n    width: 64rem;\\n    margin: 0 auto;\\n}\\n/* Title */\\nh2,h3{\\n    display: block;\\n    width: 100%;\\n    color: #ffffff;\\n    font-size: 4rem;\\n    font-weight: lighter;\\n    text-align: center;\\n}\\nh3{\\n    color: #262626;\\n}\\n/* Content */\\n.formContent{\\n    display: block;\\n    width: 100%;\\n    margin: 0 auto;\\n    height: 20rem;\\n    background-color: rgba(255,255,255,0.8);\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n    margin-bottom: 4rem;\\n}\\n.formElement{\\n    display: block;\\n    float: left;\\n    width: 35%;\\n    margin-left: 2rem;\\n    margin-right: 2rem;\\n    margin-top: 4rem;\\n    margin-bottom: 2rem;\\n}\\n.rightForm{\\n    margin-left: 5rem;\\n}\\n.formElement input{\\n    display: block;\\n    width: 100%;\\n    height: 4rem;\\n    font-size: 2.5rem;\\n    border: none;\\n    border-left: solid;\\n    border-width: thick;\\n    border-left-color: #1565c0;\\n    padding-left: 1rem;\\n    color: #262626;\\n}\\n#labelvertaling, #labelword{\\n    display: block;\\n    font-size: 2rem;\\n    text-transform: uppercase;\\n    text-align: left;\\n    width: 100%;\\n    float: left;\\n    margin-bottom: 1rem;\\n    color: #262626;\\n}\\n/* Next Button */\\n.nextBtn{\\n    display: block;\\n    float: right;\\n    border: none;\\n    background-color: #1565c0;\\n    color: #ffffff;\\n    width: 20rem;\\n    height: 4rem;\\n    font-size: 3rem;\\n    font-weight: lighter;\\n    margin: 1rem;\\n}\\n/* Reset Button */\\n.resetBtn{\\n    float: right;\\n    display: block;\\n    border:none;\\n    background-color: #262626;\\n    color: #CFD8DC;\\n    width: 20rem;\\n    height: 4rem;\\n    font-size: 3rem;\\n    font-weight: lighter;\\n    margin-bottom: 5rem;\\n    margin-right: 1rem;\\n}\\n.endBtn{\\n    float: right;\\n    display: block;\\n    border:none;\\n    background-color: #1565c0;\\n    color: #ffffff;\\n    width: 46%;\\n    margin: 1rem;\\n    height: 4rem;\\n    font-size: 3rem;\\n    font-weight: lighter;\\n    margin-bottom: 5rem;\\n    margin-right: 1rem;\\n}\\n/* Progress */\\n.progress, #labelAmount{\\n    display: block;\\n    float: left;\\n    font-size: 2rem;\\n    width: 50%;\\n    text-align: center;\\n    color: #262626;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/exercise.component.css\n// module id = 119\n// module chunks = 1","module.exports = \"<div class=\\\"outerWrapper\\\">\\n    <header class=\\\"header clearfix\\\">\\n        <div class=\\\"wrapper headerwrap\\\">\\n            <h1 class=\\\"logo\\\"><a href=\\\"/\\\">TM</a></h1>\\n            <nav-menu></nav-menu>\\n        </div>\\n    </header>\\n    <div class=\\\"wrapper centerwrapper\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n    <footer class=\\\"footer clearfix\\\">\\n    </footer>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/templates/app.component.html\n// module id = 120\n// module chunks = 1","module.exports = \"<div class=\\\"contentWrapper clearfix\\\">\\n    <h2>{{username}}'s classes</h2>\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\">\\n            <div [ngSwitch]=\\\"teacher\\\">\\n                <div *ngSwitchCase=\\\"true\\\">\\n                    <div *ngIf=\\\"detail\\\" class=\\\"detail clearfix\\\">\\n                        <h3>{{detail.name}}</h3>\\n                        <div>\\n                            <h4>students</h4>\\n                            <ul>\\n                                <li *ngFor=\\\"let student of students\\\">{{student.name}}</li>\\n                                <li class=\\\"addstudent\\\">\\n                                    <livesearch (selectEvent) = addStudent(newstudent)></livesearch>\\n                                    <button (click)=\\\"addStudents()\\\">Add new students</button>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div>\\n                            <h4>Tests</h4>\\n                            <ul>\\n                                <li *ngFor=\\\"let test of tests\\\">{{test.name}}</li>\\n                                <li class=\\\"addstudent\\\">\\n                                    <button (click)=\\\"addTest()\\\">Add test</button>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"tiles\\\">\\n                        <ul>\\n                            <li *ngFor=\\\"let class of classes\\\" class=\\\"tile\\\">\\n                                <h3 class=\\\"addgroup\\\" >{{class.name}}</h3>\\n                                <button class=\\\"addgroup\\\" (click)=\\\"viewDetails(class)\\\">View Details</button>\\n                            </li>\\n                            <li class=\\\"tile\\\">\\n                                <input class=\\\"addgroup\\\" #groupname type=\\\"text\\\" placeholder=\\\"groupname\\\">\\n                                <button class=\\\"addgroup\\\" (click)=\\\"addGroup(groupname.value); groupname.value=''\\\">Add group</button>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n                <div *ngSwitchCase=\\\"false\\\">\\n                    <div class=\\\"tiles\\\">\\n                        <ul>\\n                            <li *ngFor=\\\"let class of classes\\\" class=\\\"tile\\\">\\n                                <h3>{{class.name}}</h3>\\n                                <div *ngIf=\\\"tests\\\">\\n                                    <h4>open tests</h4>\\n                                    <ul>\\n                                        <li *ngFor=\\\"let test of tests\\\">\\n                                            <p>test.title</p>\\n                                            <button (click)=\\\"startTest(test)\\\">Start Test</button>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/templates/class.component.html\n// module id = 121\n// module chunks = 1","module.exports = \"\\n<div class=\\\"contentWrapper clearfix\\\">\\n    <h2>{{username}}'s dashboard</h2>\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\" class=\\\"clearfix\\\">\\n            <div class=\\\"chart\\\">\\n                <canvas baseChart\\n                        [datasets]=\\\"graphdata\\\"\\n                        [labels]=\\\"labels\\\"\\n                        [options]=\\\"lineChartOptions\\\"\\n                        [legend]=\\\"ChartLegend\\\"\\n                        [chartType]=\\\"ChartType\\\">\\n                </canvas>\\n            </div>\\n            <div class=\\\"tiles\\\">\\n                <ul>\\n                    <li *ngFor=\\\"let item of items\\\" class=\\\"tile\\\">\\n                        <h4>{{item.title}}</h4>\\n                        <div>\\n                            <ul>\\n                                <li class=\\\"completed\\\">Completed: <span>{{item.completed}}</span></li>\\n                                <li class=\\\"average\\\">Average: <span>{{item.avarage}}/10</span></li>\\n                            </ul>\\n                        </div>\\n                        <button (click)=\\\"startNew()\\\" class=\\\"startBtn\\\">Start new test</button>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/templates/dashboard.component.html\n// module id = 122\n// module chunks = 1","module.exports = \"<div class=\\\"innerWrapper\\\">\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\">\\n            <div *ngIf=\\\"setup\\\">\\n                <h2>Create new exercise</h2>\\n                <div class =\\\"formContent\\\">\\n                    <section class=\\\"startformElement\\\">\\n                        <label id=\\\"labelAmount\\\" for=\\\"inputAmount\\\">Amount of words in the excercise:</label>\\n                        <input #length type=\\\"number\\\" min=\\\"10\\\" max=\\\"300\\\" value=\\\"10\\\" class=\\\"amount\\\" id=\\\"inputAmount\\\">\\n                    </section>\\n                    <section class=\\\"startformElement\\\">\\n                        <label id=\\\"labelLanguages\\\" class=\\\"labelLanguages\\\" for=\\\"languages\\\">What do you want to practise?</label>\\n                        <select #ln [(ngModel)]=\\\"selectedValue\\\" name=\\\"languages\\\" id=\\\"languages\\\">\\n                            <option *ngFor=\\\"let l of languages\\\" [ngValue]=\\\"l\\\">{{l}}</option>\\n                        </select>\\n                    </section>\\n                    <button (click)=\\\"startExercise(length,ln)\\\" class=\\\"startBtn\\\">Start exercise</button>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"curEntry\\\">\\n                <h2>Test your knowledge [EN-NL]</h2>\\n                <div class=\\\"formContent\\\" >\\n                    <section class=\\\"leftForm formElement\\\">\\n                        <label id=\\\"labelword\\\" for=\\\"inputword\\\">{{curEntry.languages[0]}}</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputword\\\" value=\\\"{{curEntry.word}}\\\" disabled>\\n                    </section>\\n                    <section class=\\\"rightForm formElement\\\">\\n                        <label id=\\\"labelvertaling\\\" for=\\\"inputvertaling\\\">{{curEntry.languages[1]}}</label>\\n                        <input #answer type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputvertaling\\\" placeholder=\\\"Answer\\\" value=\\\"{{curEntry.translation}}\\\">\\n                    </section>\\n                    <p class=\\\"progress\\\" id=\\\"progress\\\">Progress: <span>{{ count }}</span>/{{entries.length}}</p>\\n                    <button (click)=\\\"next(answer.value)\\\"  (keyup.enter)=\\\"next(answer.value); answer.value='';\\\" id=\\\"btn\\\" class=\\\"nextBtn\\\">Next</button>\\n                </div>\\n                <button (click)=\\\"getScore()\\\" class=\\\"resetBtn\\\">Stop test</button>\\n\\n            </div>\\n            <div *ngIf=\\\"score != -1\\\">\\n                <h2>Test completed!</h2>\\n                <div class=\\\"formContent\\\">\\n                    <h3>Your score is: {{score}}</h3>\\n                    <button (click)=\\\"startNewTest()\\\" class=\\\"endBtn\\\">Start new test</button>\\n                    <button (click)=\\\"goBack()\\\" class=\\\"endBtn\\\">Back to Dashboard</button>\\n                </div>\\n\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/templates/exercise.component.html\n// module id = 123\n// module chunks = 1","module.exports = \"\\n<div class=\\\"contentWrapper\\\">\\n    <h2>Login</h2>\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\">\\n            <div ngForm class=\\\"innerForm\\\">\\n                <input type=\\\"text\\\" #username class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n                <input type=\\\"password\\\" #password class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\n                <button (click)=\\\"onSubmit($event,username.value,password.value)\\\" class=\\\"loginBtn\\\">Login</button>\\n                <a [routerLink]=\\\"['/Register']\\\" class=\\\"register\\\">If you don't have an account signup <span>here</span></a>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/templates/login.component.html\n// module id = 124\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"showMenu\\\" class=\\\"navwrapper\\\">\\n    <nav class=\\\"navbar\\\">\\n        <ul>\\n            <li><a [routerLink]=\\\"['Dashboard']\\\">Dashboard</a></li>\\n            <li><a [routerLink]=\\\"['Exercise']\\\">Start Test</a></li>\\n            <li><a [routerLink]=\\\"['Classes']\\\">Classes</a></li>\\n        </ul>\\n    </nav>\\n    <div class=\\\"login\\\">\\n        <p class=\\\"loginElement\\\">Hello {{username}}</p>\\n        <button type=\\\"button\\\" class=\\\"loginElement\\\" (click)=\\\"logout()\\\"><a href=\\\"/\\\">Logout</a></button>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/templates/nav.component.html\n// module id = 125\n// module chunks = 1","module.exports = \"\\n<div class=\\\"contentWrapper\\\">\\n    <h2>Register</h2>\\n    <div [ngSwitch]=\\\"loading\\\">\\n        <div *ngSwitchCase=\\\"false\\\">\\n            <div ngForm class=\\\"innerForm\\\">\\n                <input type=\\\"text\\\" #username class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n                <input type=\\\"password\\\" #password class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\n                <input type=\\\"password\\\" #confirmpass class=\\\"form-control\\\" id=\\\"confirmpass\\\" placeholder=\\\"Confirm Password\\\">\\n                <button (click)=\\\"onSubmit($event,username.value,password.value,confirmpass.value)\\\" class=\\\"loginBtn\\\">Register</button>\\n                <a [routerLink]=\\\"['/Login']\\\" class=\\\"loginLink\\\">If you already have an account <span>login</span>.</a>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"loadingwrapper\\\">\\n            <loading-indicator></loading-indicator>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/templates/register.component.html\n// module id = 126\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { HttpModule,JsonpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule }   from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\nimport { GlobalEventsManager } from './GlobalEventsManager';\n\nimport {\n    AppComponent,\n    LoginComponent,\n    ExerciseComponent,\n    LoadingIndicator,\n    RegisterComponent,\n    DashboardComponent,\n    NavComponent\n} from './components';\n\nimport { routes } from './app.routes';\n\n//services\n\nimport {\n    EntryService,\n    CookieService,\n    UserService,\n    LoggedInGuard,\n    ExtractService,\n    ScoreService,\n    SearchService\n} from './services'\nimport {ClassComponent} from \"./components/class.component\";\nimport {LiveSearch} from \"./components/livesearch/livesearch.component\";\nimport {ClassService} from \"./services/class.service\";\n\n\n@NgModule({\n    bootstrap: [ AppComponent ],\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        ExerciseComponent,\n        LoadingIndicator,\n        RegisterComponent,\n        DashboardComponent,\n        NavComponent,\n        ClassComponent,\n        LiveSearch\n    ],\n    imports: [\n        BrowserModule,\n        HttpModule,\n        FormsModule,\n        RouterModule.forRoot(routes),\n        JsonpModule,\n        ChartsModule\n    ],\n    providers: [\n        UserService,\n        LoggedInGuard,\n        EntryService,\n        CookieService,\n        ExtractService,\n        ScoreService,\n        ClassService,\n        SearchService,\n        GlobalEventsManager\n    ]\n})\nexport class AppModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app.module.ts","import { LoginComponent } from './components/login.component'\n\nimport { LoggedInGuard } from './services/logged-in.guard';\nimport {ExerciseComponent} from \"./components/exercise.component\";\nimport {RegisterComponent} from \"./components/register.componet\";\nimport {DashboardComponent} from \"./components/dashboard.componet\";\nimport { ClassComponent } from './components/class.component';\n\nexport const routes = [\n    { path: '', redirectTo: 'Login', pathMatch: 'full' },\n    { path: 'Login', component: LoginComponent },\n    { path: 'Register', component: RegisterComponent},\n    { path: 'Dashboard', component: DashboardComponent,canActivate: [LoggedInGuard]},\n    { path: 'Exercise', component: ExerciseComponent, canActivate: [LoggedInGuard] },\n    { path: 'Classes', component: ClassComponent, canActivate: [LoggedInGuard] }\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app.routes.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./src/bootstrap.ts","import { Component ,OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport './rxjs-operators';\nimport { UserService } from '../services/user.service';\n\nimport { GlobalEventsManager } from './../GlobalEventsManager'\n\n@Component({\n    selector: 'app',\n    template: require('./templates/app.component.html'),\n    styles: [ require('./styles/app.component.css') ]\n})\nexport class AppComponent implements OnInit{\n\n    constructor(private  userService : UserService,private router: Router,private eventEmitter: GlobalEventsManager){}\n\n    ngOnInit(){\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/app.component.ts","export * from './app.component';\nexport * from './login.component';\nexport * from './exercise.component';\nexport * from './loading-indicator';\nexport * from './register.componet';\nexport * from './dashboard.componet';\nexport * from './nav.component';\nexport * from './class.component';\nexport * from './livesearch/livesearch.component'\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/index.ts","export * from './loading-indicator';\n\n\n// WEBPACK FOOTER //\n// ./src/components/loading-indicator/index.ts","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {GlobalEventsManager} from './../GlobalEventsManager';\n\n//services\nimport { UserService } from './../services'\n\n@Component({\n    selector: 'nav-menu',\n    encapsulation: ViewEncapsulation.None,\n    styles: [require('./styles/app.component.css')],\n    directives: [],\n    template: require('./templates/nav.component.html')\n})\nexport class NavComponent implements OnInit {\n    public showMenu : boolean;\n    username:string;\n    constructor(private eventEmitter: GlobalEventsManager,private userService:UserService,private router: Router) {\n        this.eventEmitter.showNavBar.subscribe((mode : boolean) =>{\n            this.showMenu = mode;\n            if(mode) this.username=localStorage.getItem('username')\n        });\n\n    }\n\n    ngOnInit() { }\n\n    logout(){\n        this.userService.logout();\n        localStorage.removeItem('username');\n        this.eventEmitter.showNavBar.emit(false);\n        this.router.navigate(['Login']);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/nav.component.ts","// import 'rxjs/Rx'; // adds ALL RxJS statics & operators to Observable\n\n// See node_module/rxjs/Rxjs.js\n// Import just the rxjs statics and operators needed for THIS app.\n\n// Statics\nimport 'rxjs/add/observable/throw';\n\n// Operators\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/rxjs-operators.ts"],"sourceRoot":""}